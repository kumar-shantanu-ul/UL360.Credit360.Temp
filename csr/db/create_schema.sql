--
-- Created with csr/db/utils/makeCreateSchema
--

-- seems to still be used in client code
CREATE SEQUENCE CSR.FLOW_ITEM_ALERT_ID_SEQ;

CREATE TABLE CSR.ACCURACY_TYPE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACCURACY_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL               VARCHAR2(255)    NOT NULL,
    Q_OR_C              CHAR             DEFAULT 'Q' NOT NULL,
    MAX_SCORE           NUMBER(10, 0)    DEFAULT 10 NOT NULL,
    CONSTRAINT PK_ACCURACY_TYPE PRIMARY KEY (APP_SID, ACCURACY_TYPE_ID)
)
;

CREATE SEQUENCE CSR.ACCURACY_TYPE_ID_SEQ CACHE 5;

CREATE TABLE CSR.ACCURACY_TYPE_OPTION(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACCURACY_TYPE_OPTION_ID    NUMBER(10, 0)    NOT NULL,
    ACCURACY_TYPE_ID           NUMBER(10, 0)    NOT NULL,
    LABEL                      VARCHAR2(255)    NOT NULL,
    ACCURACY_WEIGHTING         NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    CONSTRAINT PK_ACCURACY_TYPE_OPTION PRIMARY KEY (APP_SID, ACCURACY_TYPE_OPTION_ID),
    CONSTRAINT UK_AT_ID_LABEL UNIQUE (APP_SID, ACCURACY_TYPE_ID, LABEL)
)
;

CREATE SEQUENCE CSR.ACCURACY_TYPE_OPTION_ID_SEQ CACHE 5;

CREATE TABLE CSR.ACTIVITY(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_ID              NUMBER(10, 0)     NOT NULL,
    REGION_SID               NUMBER(10, 0)     NOT NULL,
    FLOW_ITEM_ID             NUMBER(10, 0)     NOT NULL,
    ACTIVITY_TYPE_ID         NUMBER(10, 0)     NOT NULL,
    ACTIVITY_SUB_TYPE_ID     NUMBER(10, 0),
    LABEL                    VARCHAR2(255)     NOT NULL,
    SHORT_LABEL              VARCHAR2(255)     NOT NULL,
    DESCRIPTION              CLOB,
    CREATED_BY_SID           NUMBER(10, 0)     NOT NULL,
    CREATED_DTM              DATE              DEFAULT SYSDATE NOT NULL,
    START_DTM                DATE,
    END_DTM                  DATE,
    OPEN_DTM                 DATE,
    CLOSE_DTM                DATE,
    ACTIVE                   NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    IS_MEMBERS_ONLY          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IMG_DATA                 BLOB,
    IMG_SHA1                 RAW(20),
    IMG_LAST_MODIFIED_DTM    DATE,
    IMG_MIME_TYPE            VARCHAR2(2000),
    CONSTRAINT CK_ACTIVITY_OPEN_DTM CHECK (OPEN_DTM IS NULL OR CLOSE_DTM IS NULL OR CLOSE_DTM > OPEN_DTM),
    CONSTRAINT CK_ACTIVITY_START_DTM CHECK (START_DTM IS NULL OR END_DTM IS NULL OR END_DTM > START_DTM),
    CONSTRAINT CK_ACTIVITY_MEM_ONLY CHECK (IS_MEMBERS_ONLY IN (0,1)),
    CONSTRAINT CK_ACTIVITY_ACTIVE CHECK (ACTIVE IN (0,1)),
    CONSTRAINT CK_ACTIVITY_IMG CHECK ((IMG_DATA IS NULL AND IMG_SHA1 IS NULL AND IMG_LAST_MODIFIED_DTM IS NULL AND IMG_MIME_TYPE IS NULL) OR (IMG_DATA IS NOT NULL AND IMG_SHA1 IS NOT NULL AND IMG_LAST_MODIFIED_DTM IS NOT NULL AND IMG_MIME_TYPE IS NOT NULL)),
    CONSTRAINT PK_ACTIVITY PRIMARY KEY (APP_SID, ACTIVITY_ID)
)
;

CREATE SEQUENCE CSR.ACTIVITY_ID_SEQ CACHE 5;

CREATE TABLE CSR.ACTIVITY_FOLLOWER(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_ID     NUMBER(10, 0)    NOT NULL,
    FOLLOWER_SID    NUMBER(10, 0)    NOT NULL,
    FOLLOWED_DTM    DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_ACTIVITY_FOLLOWER PRIMARY KEY (APP_SID, ACTIVITY_ID, FOLLOWER_SID)
)
;

CREATE INDEX CSR.IX_ACTIVITY_FOLLOWER_1 ON CSR.ACTIVITY_FOLLOWER(APP_SID, FOLLOWER_SID)
;

CREATE INDEX CSR.IX_ACTIVITY_FOLLOWER_2 ON CSR.ACTIVITY_FOLLOWER(APP_SID, ACTIVITY_ID)
;

CREATE TABLE CSR.ACTIVITY_LIKE(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_ID          NUMBER(10, 0)    NOT NULL,
    LIKED_BY_USER_SID    NUMBER(10, 0)    NOT NULL,
    LIKED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_ACTIVITY_LIKE PRIMARY KEY (APP_SID, ACTIVITY_ID, LIKED_BY_USER_SID)
)
;

CREATE TABLE CSR.ACTIVITY_MEMBER(
    APP_SID         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_ID     NUMBER(10, 0)     NOT NULL,
    USER_SID        NUMBER(10, 0)     NOT NULL,
    STATUS_LABEL    VARCHAR2(1024),
    IS_OWNER        NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ACTIVE          NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    COMPLETED       NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    JOINED_DTM      DATE,
    CONSTRAINT CK_ACT_MEMBER_OWNER CHECK (IS_OWNER IN (0,1)),
    CONSTRAINT CK_ACT_MEMBER_ACTIVE CHECK (ACTIVE IN (0,1)),
    CONSTRAINT CK_ACT_MEMBER_COMPLETED CHECK (COMPLETED IN (0,1)),
    CONSTRAINT PK_ACTIVITY_MEMBER PRIMARY KEY (APP_SID, ACTIVITY_ID, USER_SID)
)
;

CREATE TABLE CSR.ACTIVITY_MEMBER_TIME(
    APP_SID                    NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_MEMBER_TIME_ID    NUMBER(10, 0)     NOT NULL,
    ACTIVITY_ID                NUMBER(10, 0)     NOT NULL,
    USER_SID                   NUMBER(10, 0)     NOT NULL,
    DESCRIPTION                VARCHAR2(1024)    NOT NULL,
    HOURS                      NUMBER(10, 2)     NOT NULL,
    DTM                        DATE              NOT NULL,
    CONSTRAINT PK_ACTIVITY_MEMBER_TIME PRIMARY KEY (APP_SID, ACTIVITY_MEMBER_TIME_ID)
)
;

CREATE SEQUENCE CSR.ACTIVITY_MEMBER_TIME_ID_SEQ CACHE 5;

CREATE TABLE CSR.ACTIVITY_MONEY(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_MONEY_ID    NUMBER(10, 0)     NOT NULL,
    ACTIVITY_ID          NUMBER(10, 0)     NOT NULL,
    USER_SID             NUMBER(10, 0)     NOT NULL,
    DESCRIPTION          VARCHAR2(1024)    NOT NULL,
    AMOUNT               NUMBER(24, 2)     NOT NULL,
    CURRENCY_CODE        VARCHAR2(10)      NOT NULL,
    IS_ANONYMOUS         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DTM                  DATE              NOT NULL,
    CSR_USER_SID         NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_ACTIVITY_MONEY PRIMARY KEY (APP_SID, ACTIVITY_MONEY_ID)
)
;

CREATE SEQUENCE CSR.ACTIVITY_MONEY_ID_SEQ CACHE 5;

CREATE TABLE CSR.ACTIVITY_POST(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_POST_ID    NUMBER(10, 0)    NOT NULL,
    ACTIVITY_ID         NUMBER(10, 0)    NOT NULL,
    USER_SID            NUMBER(10, 0)    NOT NULL,
    POST_TEXT           CLOB             NOT NULL,
    POST_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_ACTIVITY_POST PRIMARY KEY (APP_SID, ACTIVITY_POST_ID)
)
;

CREATE SEQUENCE CSR.ACTIVITY_POST_ID_SEQ CACHE 5;

CREATE TABLE CSR.ACTIVITY_POST_FILE(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_POST_FILE_ID    NUMBER(10, 0)     NOT NULL,
    ACTIVITY_POST_ID         NUMBER(10, 0)     NOT NULL,
    FILENAME                 VARCHAR2(2000)    NOT NULL,
    DATA                     BLOB              NOT NULL,
    SHA1                     RAW(20)           NOT NULL,
    MIME_TYPE                VARCHAR2(2000)    NOT NULL,
    CONSTRAINT PK_ACTIVITY_POST_FILE PRIMARY KEY (APP_SID, ACTIVITY_POST_FILE_ID)
)
;

CREATE SEQUENCE CSR.ACTIVITY_POST_FILE_ID_SEQ CACHE 5;

CREATE TABLE CSR.ACTIVITY_POST_LIKE(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_POST_ID     NUMBER(10, 0)    NOT NULL,
    LIKED_BY_USER_SID    NUMBER(10, 0)    NOT NULL,
    LIKED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_ACTIVITY_POST_LIKE PRIMARY KEY (APP_SID, ACTIVITY_POST_ID, LIKED_BY_USER_SID)
)
;

CREATE TABLE CSR.ACTIVITY_SHOWCASE(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ACT_SHOWCASE PRIMARY KEY (APP_SID, ACTIVITY_ID)
)
;

CREATE TABLE CSR.ACTIVITY_SUB_TYPE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_SUB_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    ACTIVITY_TYPE_ID        NUMBER(10, 0)    NOT NULL,
    LABEL                   VARCHAR2(255)    NOT NULL,
    BASE_CSS_CLASS          VARCHAR2(255)    NOT NULL,
    HIDDEN                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CK_ACT_SUB_TYPE_HIDDEN CHECK (HIDDEN IN (0,1)),
    CONSTRAINT PK_ACTIVITY_SUB_TYPE PRIMARY KEY (APP_SID, ACTIVITY_SUB_TYPE_ID),
    CONSTRAINT UK_ACTIVITY_SUB_TYPE UNIQUE (APP_SID, ACTIVITY_TYPE_ID, ACTIVITY_SUB_TYPE_ID)
)
;

CREATE SEQUENCE CSR.ACTIVITY_SUB_TYPE_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.IX_ACTIVITY_SUB_TYPE_1 ON CSR.ACTIVITY_SUB_TYPE(APP_SID, ACTIVITY_TYPE_ID, LOWER(LABEL))
;

CREATE TABLE CSR.ACTIVITY_TYPE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACTIVITY_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    USE_FLOW_SID                NUMBER(10, 0)    NOT NULL,
    LABEL                       VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY                  VARCHAR2(255),
    BASE_CSS_CLASS              VARCHAR2(255)    NOT NULL,
    HIDDEN                      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TRACK_TIME                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TRACK_MONEY                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    MATCHED_GIVING_POLICY_ID    NUMBER(10, 0),
    CONSTRAINT CK_ACT_TYPE_TIME CHECK (TRACK_TIME IN (0,1)),
    CONSTRAINT CK_ACT_TYPE_MONEY CHECK (TRACK_MONEY IN (0,1)),
    CONSTRAINT CK_ACT_TYPE_HIDDEN CHECK (HIDDEN IN (0,1)),
    CONSTRAINT CK_ACT_TYPE_MATCHED CHECK (TRACK_MONEY = 1 OR (TRACK_MONEY = 0 AND MATCHED_GIVING_POLICY_ID IS NULL)),
    CONSTRAINT PK_ACTIVITY_TYPE PRIMARY KEY (APP_SID, ACTIVITY_TYPE_ID)
)
;

CREATE SEQUENCE CSR.ACTIVITY_TYPE_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.IX_ACTIVITY_TYPE_1 ON CSR.ACTIVITY_TYPE(APP_SID, LOWER(LABEL))
;

CREATE UNIQUE INDEX CSR.IX_ACTIVITY_TYPE_2 ON CSR.ACTIVITY_TYPE(APP_SID, LOWER(LOOKUP_KEY))
;

CREATE TABLE CSR.AGGR_REGION(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID         NUMBER(10, 0)    NOT NULL,
    AGGR_REGION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_AGGR_REGION PRIMARY KEY (APP_SID, REGION_SID)
)
;

CREATE TABLE CSR.AGGR_TAG_GROUP(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AGGR_TAG_GROUP_ID    NUMBER(10, 0)     NOT NULL,
    LOOKUP_KEY           VARCHAR2(256)     NOT NULL,
    LABEL                VARCHAR2(1024)    NOT NULL,
    COUNT_IND_SID        NUMBER(10, 0),
    CONSTRAINT PK_AGGR_TAG_GROUP PRIMARY KEY (APP_SID, AGGR_TAG_GROUP_ID)
)
;

CREATE SEQUENCE CSR.AGGR_TAG_GROUP_ID_SEQ;

CREATE TABLE CSR.AGGR_TAG_GROUP_MEMBER(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AGGR_TAG_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    TAG_ID               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_AGGR_TAG_GROUP_MEMBER PRIMARY KEY (APP_SID, AGGR_TAG_GROUP_ID, TAG_ID)
)
;

CREATE TABLE CSR.AGGREGATE_IND_CALC_JOB(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AGGREGATE_IND_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM                 DATE             NOT NULL,
    END_DTM                   DATE             NOT NULL,
    CONSTRAINT CK_AGG_CALC_JOB_DATES CHECK (END_DTM > START_DTM AND TRUNC(END_DTM,'DD')=END_DTM AND TRUNC(START_DTM,'DD')=START_DTM),
    CONSTRAINT PK_AGG_IND_RECALC_JOB PRIMARY KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
)
;

CREATE TABLE CSR.AGGREGATE_IND_GROUP(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AGGREGATE_IND_GROUP_ID    NUMBER(10, 0)     NOT NULL,
    HELPER_PROC               VARCHAR2(255)     NOT NULL,
    NAME                      VARCHAR2(64),
    JS_INCLUDE                VARCHAR2(255),
    RUN_DAILY                 NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    LABEL                     VARCHAR2(1024)    NOT NULL,
    HELPER_PROC_ARGS          VARCHAR2(4000)    DEFAULT 'vals' NOT NULL,
    SOURCE_URL                VARCHAR2(1027),
    RUN_FOR_CURRENT_MONTH     NUMBER(1)         DEFAULT 0 NOT NULL,
    LOOKUP_KEY                VARCHAR2(255),
    DATA_BUCKET_SID           NUMBER(10, 0),
    DATA_BUCKET_FETCH_SP      VARCHAR2(255),
    CONSTRAINT CHK_AGGR_IND_GRP_RUN_DAILY CHECK (RUN_DAILY IN (0,1)),
    CONSTRAINT CK_AGG_IND_GROUP_MONTHLY CHECK (RUN_FOR_CURRENT_MONTH IN (0, 1)),
    CONSTRAINT PK_AGGREGATE_IND_GROUP PRIMARY KEY (APP_SID, AGGREGATE_IND_GROUP_ID),
	CONSTRAINT CK_AGG_IND_GRP_FETCH_SP CHECK (
		(DATA_BUCKET_FETCH_SP IS NULL AND DATA_BUCKET_SID IS NULL) OR 
		(DATA_BUCKET_FETCH_SP IS NOT NULL AND DATA_BUCKET_SID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.AGGREGATE_IND_GROUP_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.UK_AGGR_IND_GROUP ON CSR.AGGREGATE_IND_GROUP(APP_SID, UPPER(NAME))
;

CREATE UNIQUE INDEX CSR.UK_AGGR_IND_GROUP_LOOKUP_KEY ON CSR.AGGREGATE_IND_GROUP(APP_SID, NVL(UPPER(LOOKUP_KEY), TO_CHAR(AGGREGATE_IND_GROUP_ID)))
;

CREATE UNIQUE INDEX CSR.IK_AGG_IND_GRP_DATA_BUCKET ON CSR.AGGREGATE_IND_GROUP(APP_SID, NVL(DATA_BUCKET_SID, AGGREGATE_IND_GROUP_ID))
;

CREATE TABLE CSR.AGGREGATE_IND_GROUP_MEMBER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AGGREGATE_IND_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    IND_SID                   NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_AGGREGATE_IND_GROUP_MEMBER PRIMARY KEY (APP_SID, AGGREGATE_IND_GROUP_ID, IND_SID),
    CONSTRAINT UC_AGG_IND_GRP_MBR_IND UNIQUE (APP_SID, IND_SID)
)
;

CREATE TABLE CSR.AGGREGATE_IND_GROUP_AUDIT_LOG (
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AGGREGATE_IND_GROUP_ID    NUMBER(10, 0)     NOT NULL,
    CHANGE_DTM                DATE              NOT NULL,
    CHANGE_DESCRIPTION        VARCHAR2(4000)    NOT NULL,
    CHANGED_BY_USER_SID       NUMBER(10, 0)     NOT NULL
);

CREATE INDEX CSR.IX_AGG_IND_GRP_LOG ON CSR.AGGREGATE_IND_GROUP_AUDIT_LOG(APP_SID, AGGREGATE_IND_GROUP_ID)
;

CREATE TABLE CSR.AGGREGATE_IND_VAL_DETAIL(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AGGREGATE_IND_GROUP_ID    NUMBER(10, 0)     NOT NULL,
    REGION_SID                NUMBER(10, 0)     NOT NULL,
    IND_SID                   NUMBER(10, 0)     NOT NULL,
    PERIOD_START_DTM          DATE              NOT NULL,
    PERIOD_END_DTM            DATE              NOT NULL,
    SRC_ID                    NUMBER(10, 0)     NOT NULL,
    DESCRIPTION               VARCHAR2(4000)    NOT NULL,
    DTM                       DATE,
    LINK_URL                  VARCHAR2(256)
)
;

CREATE TABLE CSR.AGGREGATION_PERIOD(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AGGREGATION_PERIOD_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                    VARCHAR2(100)    NOT NULL,
    NO_OF_MONTHS             NUMBER(2, 0)     NOT NULL,
    CONSTRAINT PK_AGGREGATION_PERIOD PRIMARY KEY (APP_SID, AGGREGATION_PERIOD_ID)
)
;

CREATE TABLE CSR.ALERT(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ALERT_ID            RAW(16)           NOT NULL,
    TO_USER_SID         NUMBER(10, 0),
    TO_EMAIL_ADDRESS    VARCHAR2(255)     NOT NULL,
    SENT_DTM            DATE              DEFAULT SYSDATE NOT NULL,
    SUBJECT             VARCHAR2(4000),
    MESSAGE             BLOB              NOT NULL,
    CONSTRAINT PK_ALERT PRIMARY KEY (APP_SID, ALERT_ID)
)
;

CREATE SEQUENCE CSR.ALERT_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.UK_ALERT_ALERT_ID ON CSR.ALERT(ALERT_ID)
;

CREATE TABLE CSR.ALERT_BATCH_RUN(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID              NUMBER(10, 0)    NOT NULL,
    PREV_FIRE_TIME            TIMESTAMP(6),
    NEXT_FIRE_TIME            TIMESTAMP(6)     NOT NULL,
    CONSTRAINT PK_ALERT_BATCH_RUN PRIMARY KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID, CSR_USER_SID)
)
;

CREATE TABLE CSR.ALERT_BOUNCE(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ALERT_BOUNCE_ID    NUMBER(10, 0)    NOT NULL,
    ALERT_ID           RAW(16)          NOT NULL,
    RECEIVED_DTM       DATE             DEFAULT SYSDATE NOT NULL,
    MESSAGE            BLOB             NOT NULL,
    CONSTRAINT PK_ALERT_BOUNCE PRIMARY KEY (APP_SID, ALERT_BOUNCE_ID)
)
;

CREATE SEQUENCE CSR.ALERT_BOUNCE_ID_SEQ;

CREATE TABLE CSR.ALERT_FRAME(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ALERT_FRAME_ID    NUMBER(10, 0)     NOT NULL,
    NAME              VARCHAR2(1000)    NOT NULL,
    CONSTRAINT PK_ALERT_FRAME PRIMARY KEY (APP_SID, ALERT_FRAME_ID)
)
;

CREATE SEQUENCE CSR.ALERT_FRAME_ID_SEQ;

CREATE TABLE CSR.ALERT_FRAME_BODY(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ALERT_FRAME_ID    NUMBER(10, 0)    NOT NULL,
    LANG              VARCHAR2(10)     NOT NULL,
    HTML              CLOB             NOT NULL,
    CONSTRAINT PK_ALERT_FRAME_BODY PRIMARY KEY (APP_SID, ALERT_FRAME_ID, LANG)
)
;

CREATE TABLE CSR.ALERT_IMAGE(
    APP_SID     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PASS_KEY    VARCHAR2(22)     NOT NULL,
    IMAGE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ALERT_IMAGE PRIMARY KEY (APP_SID, PASS_KEY)
)
;

CREATE TABLE CSR.ALERT_MAIL(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ALERT_MAIL_ID        NUMBER(10, 0)    NOT NULL,
    STD_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    MESSAGE              BLOB             NOT NULL,
    CONSTRAINT PK_ALERT_MAIL PRIMARY KEY (APP_SID, ALERT_MAIL_ID)
)
;

CREATE SEQUENCE CSR.ALERT_MAIL_ID_SEQ;

CREATE INDEX CSR.IX_ALERT_MAIL_ALERT_TYPE ON CSR.ALERT_MAIL(STD_ALERT_TYPE_ID)
;

CREATE TABLE CSR.ALERT_TEMPLATE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    ALERT_FRAME_ID            NUMBER(10, 0)    NOT NULL,
    SEND_TYPE                 VARCHAR2(10)     NOT NULL,
    REPLY_TO_NAME             VARCHAR2(255),
    REPLY_TO_EMAIL            VARCHAR2(255),
    FROM_NAME                 VARCHAR2(255),
    FROM_EMAIL                VARCHAR2(255),
    SAVE_IN_SENT_ALERTS       NUMBER(1)        DEFAULT 1 NOT NULL,
    CONSTRAINT CK_ALERT_TEMPLATE_SEND_TYPE CHECK (SEND_TYPE IN ('manual', 'automatic', 'inactive')),
    CONSTRAINT CK_SAVE_IN_SENT_ALERTS CHECK (SAVE_IN_SENT_ALERTS IN (0,1)),
    CONSTRAINT PK_ALERT_TEMPLATE PRIMARY KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
)
;

CREATE TABLE CSR.ALERT_TEMPLATE_BODY(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LANG                      VARCHAR2(10)     NOT NULL,
    SUBJECT                   CLOB             NOT NULL,
    BODY_HTML                 CLOB             NOT NULL,
    ITEM_HTML                 CLOB             NOT NULL,
    CONSTRAINT PK_ALERT_TEMPLATE_BODY PRIMARY KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID, LANG),
    CONSTRAINT CHK_SUBJECT_NOT_EMPTY CHECK (
        EXTRACT(XMLTYPE(SUBJECT),'/template/text()') IS NOT NULL OR
        EXTRACT(XMLTYPE(SUBJECT),'/template/*') IS NOT NULL),
    CONSTRAINT CHK_BODY_NOT_EMPTY CHECK (EXTRACT(XMLTYPE(BODY_HTML),'/template/text()') IS NOT NULL OR EXTRACT(XMLTYPE(BODY_HTML),'/template/*') IS NOT NULL)
)
;

CREATE TABLE CSR.ALL_METER(
	APP_SID                           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	REGION_SID                        NUMBER(10, 0)     NOT NULL,
	METER_TYPE_ID                     NUMBER(10, 0),
	METER_SOURCE_TYPE_ID              NUMBER(10, 0)     NOT NULL,
	DAYS_MEASURE_CONVERSION_ID        NUMBER(10, 0),
	COSTDAYS_MEASURE_CONVERSION_ID    NUMBER(10, 0),
	APPROVED_BY_SID                   NUMBER(10, 0),
	REFERENCE                         VARCHAR2(256),
	NOTE                              VARCHAR2(4000),
	EXPORT_LIVE_DATA_AFTER_DTM        DATE,
	APPROVED_DTM                      DATE,
	ACTIVE                            NUMBER(1, 0)      NOT NULL,
	CRC_METER                         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
	IS_CORE                           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
	URJANET_METER_ID                  VARCHAR2(256),
	METERING_VERSION                  NUMBER(10, 0)     DEFAULT 2,
	LOWER_THRESHOLD_PERCENTAGE        NUMBER(10, 2),
	UPPER_THRESHOLD_PERCENTAGE        NUMBER(10, 2),
	MANUAL_DATA_ENTRY				NUMBER(1) DEFAULT 1 NOT NULL,
	CHECK (CRC_METER IN (0,1)),
	CHECK (ACTIVE IN (0, 1)),
	CONSTRAINT CHK_MANUAL_DATA_ENTRY_1_0 CHECK (MANUAL_DATA_ENTRY IN (1,0)),
	CONSTRAINT CK_ALL_METER_IS_CORE CHECK (IS_CORE IN (0,1)),
	CONSTRAINT PK_ALL_METER PRIMARY KEY (APP_SID, REGION_SID),
	CONSTRAINT CONS_ALL_METER_TYPE UNIQUE (APP_SID, REGION_SID, METER_TYPE_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_ALL_METER_URJANET_ID ON CSR.ALL_METER(APP_SID, NVL(LOWER(URJANET_METER_ID), REGION_SID))
;

CREATE TABLE CSR.ALL_PROPERTY(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID                 NUMBER(10, 0)    NOT NULL,
    FLOW_ITEM_ID               NUMBER(10, 0),
    STREET_ADDR_1              VARCHAR2(200),
    STREET_ADDR_2              VARCHAR2(200),
    CITY                       VARCHAR2(200),
    STATE                      VARCHAR2(200),
    POSTCODE                   VARCHAR2(200),
    COMPANY_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY'),
    PROPERTY_TYPE_ID           NUMBER(10, 0)    NOT NULL,
    PROPERTY_SUB_TYPE_ID       NUMBER(10, 0),
    OBSOLETE_FUND_ID           NUMBER(10, 0),
    MGMT_COMPANY_ID            NUMBER(10, 0),
    MGMT_COMPANY_OTHER         VARCHAR2(255),
    PM_BUILDING_ID             VARCHAR2(256),
    CURRENT_LEASE_ID           NUMBER(10, 0),
    ENERGY_STAR_SYNC           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ENERGY_STAR_PUSH           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    MGMT_COMPANY_CONTACT_ID    NUMBER(10, 0),
    CONSTRAINT CONS_PROP_MGMT_COMPANY CHECK ((MGMT_COMPANY_ID IS NOT NULL AND MGMT_COMPANY_OTHER IS NULL) OR MGMT_COMPANY_ID IS NULL),
    CHECK (ENERGY_STAR_SYNC IN(0,1)),
    CHECK (ENERGY_STAR_PUSH IN(0,1)),
    CONSTRAINT PK_PROPERTY PRIMARY KEY (APP_SID, REGION_SID),
    CONSTRAINT UK_PROPERTY UNIQUE (APP_SID, REGION_SID, PROPERTY_TYPE_ID),
    CONSTRAINT UC_PROPERTY_FLOW_ITEM UNIQUE (FLOW_ITEM_ID)
)
;

CREATE TABLE CSR.ALL_SPACE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID             NUMBER(10, 0)    NOT NULL,
    SPACE_TYPE_ID          NUMBER(10, 0)    NOT NULL,
    PROPERTY_REGION_SID    NUMBER(10, 0)    NOT NULL,
    PROPERTY_TYPE_ID       NUMBER(10, 0)    NOT NULL,
    CURRENT_LEASE_ID       NUMBER(10, 0),
    CONSTRAINT PK_SPACE PRIMARY KEY (APP_SID, REGION_SID),
    CONSTRAINT UK_SPACE UNIQUE (APP_SID, REGION_SID, PROPERTY_REGION_SID)
)
;

CREATE TABLE CSR.ALLOWED_SSO_LOGIN_REDIRECT(
    URL             VARCHAR2(256)    NOT NULL,
    DISPLAY_NAME    VARCHAR2(256)    NOT NULL,
    ID              NUMBER(10, 0)    PRIMARY KEY
)
;

CREATE TABLE CSR.APPROVAL_DASHBOARD(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_DASHBOARD_SID            NUMBER(10, 0)    NOT NULL,
    LABEL                             VARCHAR2(255)    NOT NULL,
    FLOW_SID                          NUMBER(10, 0),
    TPL_REPORT_SID                    NUMBER(10, 0),
    IS_MULTI_REGION                   NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    START_DTM                         DATE             DEFAULT '01-JAN-15' NOT NULL,
    END_DTM                           DATE             DEFAULT '01-JAN-16' NOT NULL,
    ACTIVE_PERIOD_SCENARIO_RUN_SID    NUMBER(10, 0),
    SIGNED_OFF_SCENARIO_RUN_SID       NUMBER(10, 0),
    INSTANCE_CREATION_SCHEDULE        SYS.XMLType,
    PERIOD_SET_ID                     NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID                NUMBER(10, 0)    NOT NULL,
    PUBLISH_DOC_FOLDER_SID            NUMBER(10, 0),
    SOURCE_SCENARIO_RUN_SID           NUMBER(10, 0),
    CONSTRAINT CHK_APPR_DASH_MULTI_REG CHECK (IS_MULTI_REGION IN (0,1)),
    CONSTRAINT PK_APPROVAL_DASHBOARD PRIMARY KEY (APP_SID, APPROVAL_DASHBOARD_SID),
    CONSTRAINT UK_FL_APPROVAL_DASHBOARD UNIQUE (APP_SID, APPROVAL_DASHBOARD_SID, FLOW_SID),
    CONSTRAINT UK_TPL_APPROVAL_DASHBOARD UNIQUE (APP_SID, APPROVAL_DASHBOARD_SID, TPL_REPORT_SID)
)
;

CREATE TABLE CSR.APPROVAL_DASHBOARD_ALERT_TYPE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_SID                  NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_APPR_DASH_ALERT_TYPE PRIMARY KEY (APP_SID, APPROVAL_DASHBOARD_SID, CUSTOMER_ALERT_TYPE_ID, FLOW_SID)
)
;

CREATE TABLE CSR.APPROVAL_DASHBOARD_IND(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID                   NUMBER(10, 0)    NOT NULL,
    DEACTIVATED_DTM           DATE,
    ALLOW_ESTIMATED_DATA      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_HIDDEN                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    POS                       NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_APPROVAL_DASHBOARD_IND PRIMARY KEY (APP_SID, APPROVAL_DASHBOARD_SID, IND_SID)
)
;

CREATE TABLE CSR.APPROVAL_DASHBOARD_INSTANCE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DASHBOARD_INSTANCE_ID     NUMBER(10, 0)    NOT NULL,
    APPROVAL_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID                NUMBER(10, 0)    NOT NULL,
    START_DTM                 DATE             NOT NULL,
    END_DTM                   DATE             NOT NULL,
    TPL_REPORT_SID            NUMBER(10, 0),
    LAST_REFRESHED_DTM        DATE,
    IS_LOCKED                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_SIGNED_OFF             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_APPR_DASH_INST_LOCK CHECK (IS_LOCKED IN (0,1)),
    CONSTRAINT PK_APPROVAL_DASHBOARD_INSTANCE PRIMARY KEY (APP_SID, DASHBOARD_INSTANCE_ID),
    CONSTRAINT UK_APPR_DASHBOARD_INSTANCE UNIQUE (APP_SID, APPROVAL_DASHBOARD_SID, REGION_SID, START_DTM, END_DTM),
    CONSTRAINT UK_TPL_APPR_DASHBD_INSTANCE UNIQUE (APP_SID, DASHBOARD_INSTANCE_ID, TPL_REPORT_SID),
    CONSTRAINT UK_APPR_DASH_INSTANCE_2 UNIQUE (APP_SID, DASHBOARD_INSTANCE_ID, APPROVAL_DASHBOARD_SID)
)
;

CREATE SEQUENCE CSR.DASHBOARD_INSTANCE_ID_SEQ;

CREATE TABLE CSR.APPROVAL_DASHBOARD_REGION(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID                NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_APPROVAL_DASHBOARD_REGION PRIMARY KEY (APP_SID, APPROVAL_DASHBOARD_SID, REGION_SID)
)
;

CREATE TABLE CSR.APPROVAL_DASHBOARD_TAB(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    TAB_ID                    NUMBER(10, 0)    NOT NULL,
    POS                       NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    CONSTRAINT PK_APPROVAL_DASHBOARD_TAB PRIMARY KEY (APP_SID, APPROVAL_DASHBOARD_SID, TAB_ID)
)
;

CREATE TABLE CSR.APPROVAL_DASHBOARD_TPL_TAG(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DASHBOARD_INSTANCE_ID    NUMBER(10, 0)    NOT NULL,
    TPL_REPORT_SID           NUMBER(10, 0)    NOT NULL,
    TAG                      VARCHAR2(255)    NOT NULL,
    NOTE                     CLOB,
    CONSTRAINT PK_APPR_DASHBD_TPL_TAG PRIMARY KEY (APP_SID, DASHBOARD_INSTANCE_ID, TPL_REPORT_SID, TAG)
)
;

CREATE TABLE CSR.APPROVAL_DASHBOARD_VAL(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_DASHBOARD_VAL_ID    NUMBER(10, 0)     NOT NULL,
    APPROVAL_DASHBOARD_SID       NUMBER(10, 0)     NOT NULL,
    DASHBOARD_INSTANCE_ID        NUMBER(10, 0)     NOT NULL,
    IND_SID                      NUMBER(10, 0)     NOT NULL,
    START_DTM                    DATE              NOT NULL,
    END_DTM                      DATE              NOT NULL,
    VAL_NUMBER                   NUMBER(24, 10)    NOT NULL,
    YTD_VAL_NUMBER               NUMBER(24, 10)    NOT NULL,
    NOTE                         VARCHAR2(2048),
    NOTE_ADDED_BY_SID            NUMBER(10, 0),
    NOTE_ADDED_DTM               DATE,
    IS_ESTIMATED_DATA            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_APPROVAL_DASHBOARD_VAL PRIMARY KEY (APP_SID, APPROVAL_DASHBOARD_VAL_ID)
)
;

CREATE SEQUENCE CSR.APPROVAL_DASHBOARD_VAL_ID_SEQ;

CREATE UNIQUE INDEX CSR.AK_APPROVAL_DASHBOARD_VAL ON CSR.APPROVAL_DASHBOARD_VAL(APP_SID, DASHBOARD_INSTANCE_ID, START_DTM, IND_SID)
;

CREATE TABLE CSR.APPROVAL_DASHBOARD_VAL_SRC(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_DASHBOARD_VAL_ID    NUMBER(10, 0)     NOT NULL,
    ID                           NUMBER(10, 0)     NOT NULL,
    DESCRIPTION                  VARCHAR2(1024),
    SOURCE_DETAIL                VARCHAR2(1024),
    CONSTRAINT PK_APPROVAL_DASHBOARD_VAL_SRC PRIMARY KEY (APP_SID, APPROVAL_DASHBOARD_VAL_ID, ID)
)
;

CREATE TABLE CSR.APPROVAL_NOTE_PORTLET_NOTE(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VERSION                   NUMBER(10, 0)     NOT NULL,
    TAB_PORTLET_ID            NUMBER(10, 0)     NOT NULL,
    APPROVAL_DASHBOARD_SID    NUMBER(10, 0)     NOT NULL,
    DASHBOARD_INSTANCE_ID     NUMBER(10, 0)     NOT NULL,
    REGION_SID                NUMBER(10, 0)     NOT NULL,
    NOTE                      VARCHAR2(1024),
    ADDED_DTM                 DATE,
    ADDED_BY_SID              NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_APPROVAL_NOTE_PORTLET_NOTE PRIMARY KEY (APP_SID, VERSION, TAB_PORTLET_ID, APPROVAL_DASHBOARD_SID, DASHBOARD_INSTANCE_ID, REGION_SID)
)
;

CREATE TABLE CSR.APPROVAL_STEP(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID               NUMBER(10, 0)    NOT NULL,
    PARENT_STEP_ID                 NUMBER(10, 0),
    PENDING_DATASET_ID             NUMBER(10, 0)    NOT NULL,
    BASED_ON_STEP_ID               NUMBER(10, 0),
    LABEL                          VARCHAR2(255)    NOT NULL,
    LAYOUT_TYPE                    NUMBER(10, 0)    NOT NULL,
    MAX_SHEET_VALUE_COUNT          NUMBER(10, 0)    NOT NULL,
    WORKING_DAY_OFFSET_FROM_DUE    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_APPROVAL_STEP PRIMARY KEY (APP_SID, APPROVAL_STEP_ID)
)
;

CREATE INDEX CSR.IDX_APPROVAL_STEP_DATASET ON CSR.APPROVAL_STEP(APP_SID, PENDING_DATASET_ID)
;

CREATE TABLE CSR.APPROVAL_STEP_IND(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    PENDING_IND_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_APPROVAL_STEP_IND PRIMARY KEY (APP_SID, APPROVAL_STEP_ID, PENDING_IND_ID)
)
;

CREATE TABLE CSR.APPROVAL_STEP_MODEL(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    MODEL_SID           NUMBER(10, 0)    NOT NULL,
    SUBDELEGATIONS      VARCHAR2(1)      DEFAULT 'Y' NOT NULL,
    LINK_DESCRIPTION    VARCHAR2(50)     NOT NULL,
    ICON_CLS            VARCHAR2(50),
    CONSTRAINT CK_ASM_SUBDELEGATIONS CHECK (SUBDELEGATIONS IN ('Y','N')),
    CONSTRAINT PK_APPROVAL_STEP_MODEL PRIMARY KEY (APP_SID, APPROVAL_STEP_ID, MODEL_SID)
)
;

CREATE TABLE CSR.APPROVAL_STEP_REGION(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID         NUMBER(10, 0)    NOT NULL,
    ROLLS_UP_TO_REGION_ID    NUMBER(10, 0),
    PENDING_REGION_ID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_APPROVAL_STEP_REGION PRIMARY KEY (APP_SID, APPROVAL_STEP_ID, PENDING_REGION_ID)
)
;

CREATE TABLE CSR.APPROVAL_STEP_ROLE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_APPROVAL_STEP_ROLE PRIMARY KEY (APP_SID, APPROVAL_STEP_ID, ROLE_SID)
)
;

CREATE TABLE CSR.APPROVAL_STEP_SHEET(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID             NUMBER(10, 0)     NOT NULL,
    SHEET_KEY                    VARCHAR2(255)     NOT NULL,
    LABEL                        VARCHAR2(1204)    NOT NULL,
    PENDING_PERIOD_ID            NUMBER(10, 0),
    PENDING_IND_ID               NUMBER(10, 0),
    PENDING_REGION_ID            NUMBER(10, 0),
    SUBMITTED_VALUE_COUNT        NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    SUBMIT_BLOCKED               NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    VISIBLE                      NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    DUE_DTM                      DATE,
    REMINDER_DTM                 DATE              NOT NULL,
    APPROVER_RESPONSE_DUE_DTM    DATE,
    CONSTRAINT PK_APPROVAL_STEP_SHEET PRIMARY KEY (APP_SID, APPROVAL_STEP_ID, SHEET_KEY)
)
;

CREATE TABLE CSR.APPROVAL_STEP_SHEET_ALERT(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID     NUMBER(10, 0)    NOT NULL,
    SHEET_KEY            VARCHAR2(255)    NOT NULL,
    USER_SID             NUMBER(10, 0)    NOT NULL,
    REMINDER_SENT_DTM    DATE,
    OVERDUE_SENT_DTM     DATE,
    CONSTRAINT PK_APPROVAL_STEP_SHEET_ALERT PRIMARY KEY (APP_SID, APPROVAL_STEP_ID, SHEET_KEY, USER_SID)
)
;

CREATE TABLE CSR.APPROVAL_STEP_SHEET_LOG(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    SHEET_KEY           VARCHAR2(255)    NOT NULL,
    DTM                 DATE             DEFAULT SYSDATE NOT NULL,
    BY_USER_SID         NUMBER(10, 0)    NOT NULL,
    UP_OR_DOWN          NUMBER(1, 0)     NOT NULL,
    NOTE                CLOB
)
;

CREATE TABLE CSR.APPROVAL_STEP_TEMPLATE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID           NUMBER(10, 0)    NOT NULL,
    LABEL                      VARCHAR2(255)    NOT NULL,
    PARENT_STEP_ID             NUMBER(10, 0),
    PENDING_REGION_ID          NUMBER(10, 0),
    DUE_WORKING_DAYS_OFFSET    NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_APPROVAL_STEP_TEMPLATE PRIMARY KEY (APP_SID, APPROVAL_STEP_ID)
)
;

CREATE TABLE CSR.APPROVAL_STEP_USER(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID     NUMBER(10, 0)    NOT NULL,
    USER_SID             NUMBER(10, 0)    NOT NULL,
    FALLBACK_USER_SID    NUMBER(10, 0),
    READ_ONLY            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_LURKER            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_APPROVAL_STEP_USER PRIMARY KEY (APP_SID, APPROVAL_STEP_ID, USER_SID)
)
;

CREATE TABLE CSR.APPROVAL_STEP_USER_TEMPLATE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_APPROVAL_STEP_USER_TPL PRIMARY KEY (APP_SID, APPROVAL_STEP_ID, USER_SID)
)
;

CREATE TABLE CSR.APP_DASH_SUP_REPORT_PORTLET(
    PORTLET_TYPE        VARCHAR2(255)    NOT NULL,
    MAPS_TO_TAG_TYPE    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_APP_DASH_SUP_REPORT_PORTLET PRIMARY KEY (PORTLET_TYPE)
)
;

CREATE TABLE CSR.APP_LOCK(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LOCK_TYPE    NUMBER(10, 0)    NOT NULL,
    DUMMY        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_APP_LOCK PRIMARY KEY (APP_SID, LOCK_TYPE)
)
;

CREATE TABLE CSR.ATTACHMENT(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ATTACHMENT_ID                 NUMBER(10, 0)     NOT NULL,
    FILENAME                      VARCHAR2(1024)    NOT NULL,
    MIME_TYPE                     VARCHAR2(255)     NOT NULL,
    DATA                          BLOB,
    EMBED                         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DATAVIEW_SID                  NUMBER(10, 0),
    LAST_UPDATED_FROM_DATAVIEW    DATE,
    VIEW_AS_TABLE                 NUMBER(1, 0),
    INDICATOR_SID                 NUMBER(10, 0),
    DOC_ID                        NUMBER(10, 0),
    URL                           VARCHAR2(1023),
    CONSTRAINT PK_ATTACHMENT PRIMARY KEY (APP_SID, ATTACHMENT_ID)
)
;

CREATE SEQUENCE CSR.ATTACHMENT_ID_SEQ;

CREATE TABLE CSR.ATTACHMENT_HISTORY(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_SID       NUMBER(10, 0)    NOT NULL,
    VERSION_NUMBER    NUMBER(10, 0)    NOT NULL,
    ATTACHMENT_ID     NUMBER(10, 0)    NOT NULL,
    ATTACH_NAME       VARCHAR2(255),
    PG_NUM            VARCHAR2(255),
    ATTACH_COMMENT    CLOB,
    CONSTRAINT PK_ATTACHMENT_HISTORY PRIMARY KEY (APP_SID, SECTION_SID, VERSION_NUMBER, ATTACHMENT_ID)
)
;

CREATE SEQUENCE csr.audit_migration_fail_seq;

CREATE TABLE csr.audit_migration_failure(
	APP_SID						NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	AUDIT_MIGRATION_FAILURE_ID 	NUMBER(10, 0) 	NOT NULL,
	OBJECT_SID					NUMBER(10, 0) 	NOT NULL,
	GRANTEE_SID					NUMBER(10, 0),
	VALIDATION_TYPE_ID			NUMBER(1) 		NOT NULL,	
	MESSAGE						VARCHAR(128),
	CONSTRAINT PK_AUDIT_MIGRATION_FAILURE PRIMARY KEY (APP_SID, AUDIT_MIGRATION_FAILURE_ID)
);

CREATE TABLE CSR.AUDIT_ALERT(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_SID    NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID          NUMBER(10, 0)    NOT NULL,
    REMINDER_SENT_DTM     DATE,
    OVERDUE_SENT_DTM      DATE,
    CONSTRAINT PK_AUDIT_ALERT PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID, CSR_USER_SID)
)
;

CREATE INDEX CSR.IX_AUDIT_ALERT_AUDIT ON CSR.AUDIT_ALERT(APP_SID, INTERNAL_AUDIT_SID)
;

CREATE INDEX CSR.IX_AUDIT_ALERT_USER ON CSR.AUDIT_ALERT(APP_SID, CSR_USER_SID)
;

CREATE TABLE CSR.AUDIT_CLOSURE_TYPE(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUDIT_CLOSURE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                    VARCHAR2(255)    NOT NULL,
    ICON_IMAGE               BLOB,
    ICON_IMAGE_FILENAME      VARCHAR2(255),
    ICON_IMAGE_MIME_TYPE     VARCHAR2(255),
    ICON_IMAGE_SHA1          RAW(20),
    IS_FAILURE               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    LOOKUP_KEY               VARCHAR2(255),
    CONSTRAINT CHK_ADT_CLSRE_TYP_IS_FAIL_1_0 CHECK (IS_FAILURE IN (1, 0)),
    CONSTRAINT PK_AUDIT_CLOSURE_TYPE PRIMARY KEY (APP_SID, AUDIT_CLOSURE_TYPE_ID)
)
;

CREATE SEQUENCE CSR.AUDIT_CLOSURE_TYPE_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_AUDIT_CLOS_TYPE_LKUP_KEY ON CSR.AUDIT_CLOSURE_TYPE(APP_SID, NVL(UPPER(LOOKUP_KEY), TO_CHAR(AUDIT_CLOSURE_TYPE_ID)))
;

CREATE UNIQUE INDEX CSR.UX_AUDIT_CLOSURE_TYPE_LABEL ON CSR.AUDIT_CLOSURE_TYPE(APP_SID, LABEL)
;

CREATE TABLE CSR.AUDIT_ISS_ALL_CLOSED_ALERT(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_SID    NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID          NUMBER(10, 0)    NOT NULL,
    ALERT_SENT_DTM        DATE             NOT NULL,
    CONSTRAINT PK_AUDIT_ISS_ALL_CLOSED_ALERT PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID, CSR_USER_SID, ALERT_SENT_DTM)
)
;

CREATE TABLE CSR.AUDIT_LOG(
    AUDIT_DATE           DATE              DEFAULT SYSDATE NOT NULL,
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUDIT_TYPE_ID        NUMBER(10, 0)     NOT NULL,
    OBJECT_SID           NUMBER(10, 0),
    USER_SID             NUMBER(10, 0)     NOT NULL,
    DESCRIPTION          VARCHAR2(1023),
    PARAM_1              VARCHAR2(2048),
    PARAM_2              VARCHAR2(2048),
    PARAM_3              VARCHAR2(2048),
    SUB_OBJECT_ID        NUMBER(10, 0),
    REMOTE_ADDR          VARCHAR2(40)      DEFAULT SYS_CONTEXT('SECURITY', 'REMOTE_ADDR'),
    ORIGINAL_USER_SID    NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'ORIGINAL_LOGIN_SID')
)
;

CREATE INDEX CSR.IDX_AUDIT_LOG_APP_SID ON CSR.AUDIT_LOG(APP_SID)
;

CREATE INDEX CSR.IDX_AUDIT_LOG_DATE_APP_USER ON CSR.AUDIT_LOG(APP_SID, USER_SID, AUDIT_DATE DESC)
;

CREATE INDEX CSR.IDX_AUDIT_LOG_OBJECT_SID ON CSR.AUDIT_LOG(APP_SID, OBJECT_SID)
;

CREATE INDEX CSR.IDX_AUDIT_LOG_SUB_OBJECT_ID ON CSR.AUDIT_LOG(APP_SID, SUB_OBJECT_ID)
;

CREATE TABLE CSR.AUDIT_NON_COMPLIANCE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_SID         NUMBER(10, 0)    NOT NULL,
    NON_COMPLIANCE_ID          NUMBER(10, 0)    NOT NULL,
    AUDIT_NON_COMPLIANCE_ID    NUMBER(10, 0)    NOT NULL,
    REPEAT_OF_AUDIT_NC_ID      NUMBER(10, 0),
	ATTACHED_TO_PRIMARY_SURVEY			NUMBER(1, 0) DEFAULT 0 NOT NULL,
	INTERNAL_AUDIT_TYPE_SURVEY_ID		NUMBER(10, 0),
    CONSTRAINT PK_AUDIT_NON_COMPLIANCE PRIMARY KEY (APP_SID, AUDIT_NON_COMPLIANCE_ID),
	CONSTRAINT CK_ANC_SURVEY CHECK (
		ATTACHED_TO_PRIMARY_SURVEY = 0 OR
		(ATTACHED_TO_PRIMARY_SURVEY = 1 AND INTERNAL_AUDIT_TYPE_SURVEY_ID IS NULL)
	)
)
;

CREATE SEQUENCE CSR.AUDIT_NON_COMPLIANCE_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.IX_AUDIT_NON_COMPLIANCE ON CSR.AUDIT_NON_COMPLIANCE(APP_SID, INTERNAL_AUDIT_SID, NON_COMPLIANCE_ID)
;

CREATE INDEX CSR.IX_AUD_NC_AUD ON CSR.AUDIT_NON_COMPLIANCE(APP_SID, INTERNAL_AUDIT_SID)
;

CREATE INDEX CSR.IX_AUD_NC_NC ON CSR.AUDIT_NON_COMPLIANCE(APP_SID, NON_COMPLIANCE_ID)
;

CREATE TABLE CSR.AUDIT_TYPE(
    AUDIT_TYPE_ID          NUMBER(10, 0)    NOT NULL,
    LABEL                  VARCHAR2(255)    NOT NULL,
    AUDIT_TYPE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK200 PRIMARY KEY (AUDIT_TYPE_ID)
)
;

CREATE TABLE CSR.AUDIT_TYPE_CLOSURE_TYPE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    AUDIT_CLOSURE_TYPE_ID      NUMBER(10, 0)    NOT NULL,
    RE_AUDIT_DUE_AFTER         NUMBER(10, 0),
    MANUAL_EXPIRY_DATE         NUMBER(1)        DEFAULT 0 NOT NULL,
    RE_AUDIT_DUE_AFTER_TYPE    CHAR,
    REMINDER_OFFSET_DAYS       NUMBER(10, 0),
    REPORTABLE_FOR_MONTHS      NUMBER(10, 0),
    IND_SID                    NUMBER(10, 0),
    CONSTRAINT CHK_CHK_DUE_AFTER_VALID CHECK ((RE_AUDIT_DUE_AFTER IS NULL AND RE_AUDIT_DUE_AFTER_TYPE IS NULL) OR (RE_AUDIT_DUE_AFTER IS NOT NULL AND RE_AUDIT_DUE_AFTER_TYPE IS NOT NULL)),
    CONSTRAINT CHK_DUE_AFTER_TYPE_VLD CHECK (RE_AUDIT_DUE_AFTER_TYPE IN ('d','w','m','y')),
    CONSTRAINT CHK_RPRTBLE_MNTHS_POS CHECK (REPORTABLE_FOR_MONTHS > 0),
    CONSTRAINT PK_AUDIT_TYPE_CLOSURE_TYPE PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID, AUDIT_CLOSURE_TYPE_ID)
)
;

CREATE TABLE CSR.AUDIT_TYPE_EXPIRY_ALERT_ROLE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID                  NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ADT_TYP_EXP_ALERT_ROLE PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID, ROLE_SID)
)
;

CREATE TABLE CSR.AUDIT_TYPE_FLOW_INV_TYPE(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUDIT_TYPE_FLOW_INV_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_INVOLVEMENT_TYPE_ID       NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_TYPE_ID         NUMBER(10, 0)    NOT NULL,
    MIN_USERS                      NUMBER(10, 0)    NOT NULL,
    MAX_USERS                      NUMBER(10, 0),
    USERS_ROLE_OR_GROUP_SID        NUMBER(10, 0),
    CONSTRAINT PK_AUDIT_TYPE_FLOW_INV_TYPE PRIMARY KEY (APP_SID, AUDIT_TYPE_FLOW_INV_TYPE_ID),
    CONSTRAINT UK_AUDIT_TYPE_FLOW_INV_TYPE UNIQUE (APP_SID, FLOW_INVOLVEMENT_TYPE_ID, INTERNAL_AUDIT_TYPE_ID),
    CONSTRAINT CHK_ATFIT_MIN_MAX CHECK ((0 = MIN_USERS AND (MAX_USERS IS NULL OR MAX_USERS > 0)) OR (0 < MIN_USERS AND (MAX_USERS IS NULL OR MIN_USERS <= MAX_USERS)))
)
;

CREATE SEQUENCE CSR.AUDIT_TYPE_FLW_INV_TYPE_ID_SEQ;

CREATE TABLE CSR.AUDIT_TYPE_GROUP(
    AUDIT_TYPE_GROUP_ID    NUMBER(10, 0)     NOT NULL,
    DESCRIPTION            VARCHAR2(1024),
    CONSTRAINT AUDIT_TYPE_OBJECT_CLASS_PK PRIMARY KEY (AUDIT_TYPE_GROUP_ID)
)
;

CREATE TABLE CSR.AUDIT_TYPE_HEADER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    PLUGIN_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID                 NUMBER(10, 0)    NOT NULL,
    POS                       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_AUDIT_TYPE_HEADER PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID, PLUGIN_ID),
    CONSTRAINT CHK_AUDIT_TYPE_HEAD_PLUGIN_TYP CHECK (PLUGIN_TYPE_ID = 14)
)
;

CREATE TABLE CSR.AUDIT_TYPE_NON_COMP_DEFAULT(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    NON_COMP_DEFAULT_ID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_AUDIT_TYPE_NON_COMP_DEFAULT PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID, NON_COMP_DEFAULT_ID)
)
;

CREATE TABLE CSR.AUDIT_TYPE_TAB(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    PLUGIN_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID                 NUMBER(10, 0)    NOT NULL,
    POS                       NUMBER(10, 0)    NOT NULL,
    TAB_LABEL                 VARCHAR2(255),
    FLOW_CAPABILITY_ID        NUMBER(10, 0),
    CONSTRAINT PK_AUDIT_TYPE_TAB PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID, PLUGIN_ID),
    CONSTRAINT CHK_AUDIT_TYPE_TAB_PLUGIN_TYP CHECK (PLUGIN_TYPE_ID = 13)
)
;

CREATE TABLE CSR.AUDIT_USER_COVER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_COVER_ID             NUMBER(10, 0)    NOT NULL,
    USER_GIVING_COVER_SID     NUMBER(10, 0)    NOT NULL,
    USER_BEING_COVERED_SID    NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_AUDIT_USER_COVER PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID, USER_COVER_ID)
)
;

CREATE INDEX CSR.IX_AUD_USR_CVR_USRG ON CSR.AUDIT_USER_COVER(APP_SID, USER_GIVING_COVER_SID)
;

CREATE INDEX CSR.IX_AUD_USR_CVR_USRR ON CSR.AUDIT_USER_COVER(APP_SID, USER_BEING_COVERED_SID)
;

CREATE TABLE CSR.AUTO_EXP_BATCHED_EXP_SETTINGS (
	APP_SID							NUMBER(10)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AUTOMATED_EXPORT_CLASS_SID		NUMBER(10)	NOT NULL,
	BATCHED_EXPORT_TYPE_ID			NUMBER(10)	NOT NULL,
	SETTINGS_XML					XMLTYPE		NOT NULL,
	CONVERT_TO_DSV					NUMBER(1) DEFAULT 0 NOT NULL,
	PRIMARY_DELIMITER				VARCHAR2(1) DEFAULT ',' NOT NULL,
	SECONDARY_DELIMITER				VARCHAR2(1) DEFAULT '|' NOT NULL,
	INCLUDE_FIRST_ROW 				NUMBER(1,0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_AUTO_EXP_BATCH_EXP_SETTINGS PRIMARY KEY (APP_SID, AUTOMATED_EXPORT_CLASS_SID),
	CONSTRAINT CK_AUTO_EXP_BATCH_EXP_CONV_DSV CHECK (CONVERT_TO_DSV IN (0, 1)),
	CONSTRAINT CK_AUTO_EXP_BATCH_EXP_INC_F_R CHECK (INCLUDE_FIRST_ROW IN (0, 1))
)
;


CREATE TABLE CSR.AUTO_EXP_EXPORTER_PLUGIN_TYPE(
	PLUGIN_TYPE_ID	NUMBER NOT NULL,
	LABEL			VARCHAR2(255),
	CONSTRAINT PK_AEEPT_PLUGIN_TYPE_ID PRIMARY KEY (PLUGIN_TYPE_ID),
	CONSTRAINT UK_AEEPT_PLUGIN_LABEL UNIQUE (LABEL)
);

CREATE TABLE CSR.AUTO_EXP_EXPORTER_PLUGIN(
	PLUGIN_ID				NUMBER			NOT NULL,
	LABEL					VARCHAR2(128)	NOT NULL,
	EXPORTER_ASSEMBLY		VARCHAR2(255)	NOT NULL,
	OUTPUTTER_ASSEMBLY		VARCHAR2(255)	NOT NULL,
	DSV_OUTPUTTER			NUMBER(1)		DEFAULT 0 NOT NULL,
	PLUGIN_TYPE_ID			NUMBER,
	CONSTRAINT PK_AUTO_EXP_EXPORTER_PLUGIN_ID PRIMARY KEY (PLUGIN_ID),
	CONSTRAINT UK_AUTO_EXP_EXPORTER_LABEL UNIQUE (LABEL),
	CONSTRAINT UK_AUTO_EXP_EXPORTER_ASSEMBLY UNIQUE (EXPORTER_ASSEMBLY, OUTPUTTER_ASSEMBLY),
	CONSTRAINT CK_AUTO_EXP_EXPORTER_DSV_OUTP CHECK (DSV_OUTPUTTER IN (0, 1)),
	CONSTRAINT FK_AEE_PLUGIN_TYPE_ID
		FOREIGN KEY (PLUGIN_TYPE_ID)
		REFERENCES CSR.AUTO_EXP_EXPORTER_PLUGIN_TYPE (PLUGIN_TYPE_ID)
)
;

CREATE TABLE CSR.AUTO_EXP_FILE_WRTR_PLUGIN_TYPE(
	PLUGIN_TYPE_ID	NUMBER NOT NULL,
	LABEL			VARCHAR2(255),
	CONSTRAINT PK_AEFWPT_PLUGIN_TYPE_ID PRIMARY KEY (PLUGIN_TYPE_ID),
	CONSTRAINT UK_AEFWPT_PLUGIN_LABEL UNIQUE (LABEL)
);

CREATE TABLE CSR.AUTO_EXP_FILE_WRITER_PLUGIN(
	PLUGIN_ID		NUMBER			NOT NULL,
	LABEL			VARCHAR2(128)	NOT NULL,
	ASSEMBLY		VARCHAR2(255)	NOT NULL,
	PLUGIN_TYPE_ID	NUMBER			NOT NULL,
	CONSTRAINT PK_AUTO_EXP_FILE_WRI_PLUGIN_ID PRIMARY KEY (PLUGIN_ID),
	CONSTRAINT UK_AUTO_EXP_FILE_WRI_LABEL UNIQUE (LABEL),
	CONSTRAINT UK_AUTO_EXP_FILE_WRI_ASSEMBLY UNIQUE (ASSEMBLY),
	CONSTRAINT FK_AEFWP_PLUGIN_TYPE_ID
		FOREIGN KEY (PLUGIN_TYPE_ID)
		REFERENCES CSR.AUTO_EXP_FILE_WRTR_PLUGIN_TYPE (PLUGIN_TYPE_ID)
);

CREATE TABLE CSR.AUTO_EXP_FILECREATE_DSV(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_EXP_FILECREATE_DSV_ID    NUMBER(10, 0)    NOT NULL,
    DELIMITER_ID                  NUMBER(10, 0)    NOT NULL,
    SECONDARY_DELIMITER_ID        NUMBER(10, 0),
    ENCODING_NAME                 VARCHAR(255),
    ENCODE_NEWLINE                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_AUTO_EXP_FILECREATE_DSV PRIMARY KEY (APP_SID, AUTO_EXP_FILECREATE_DSV_ID),
    CONSTRAINT CK_AUTO_EXP_FILECREATE_DSV_ENCODE_NEWLINE CHECK (ENCODE_NEWLINE IN (0, 1, 2))
)
;

CREATE SEQUENCE CSR.AUTO_EXP_FILECRE_DSV_ID_SEQ;

CREATE TABLE CSR.AUTO_EXP_FILEWRITE_FTP(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_EXP_FILEWRITE_FTP_ID    NUMBER(10, 0)    NOT NULL,
    FTP_PROFILE_ID               NUMBER(10, 0)    NOT NULL,
    OUTPUT_PATH                  VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_AUTO_EXP_FILEWRITE_FTP PRIMARY KEY (APP_SID, AUTO_EXP_FILEWRITE_FTP_ID)
)
;

CREATE SEQUENCE CSR.AUTO_EXP_FILECRE_FTP_ID_SEQ;

CREATE TABLE CSR.AUTO_EXP_IMP_DSV_DELIMITERS(
    DELIMITER_ID    NUMBER(10, 0)    NOT NULL,
    LABEL           VARCHAR2(32),
    CONSTRAINT PK_AUTO_EXP_IMP_DSV_DELIM PRIMARY KEY (DELIMITER_ID),
    CONSTRAINT UK_AUTO_EXP_IMP_DSV_DELIM UNIQUE (LABEL)
)
;

CREATE TABLE CSR.AUTO_EXP_RETRIEVAL_DATAVIEW(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_EXP_RETRIEVAL_DATAVIEW_ID    NUMBER(10, 0)    NOT NULL,
    DATAVIEW_SID                      NUMBER(10, 0)    NOT NULL,
    IGNORE_NULL_VALUES                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    MAPPING_XML                       SYS.XMLType,
    PERIOD_SPAN_PATTERN_ID            NUMBER(10, 0)    NOT NULL,
    REGION_SELECTION_TYPE_ID          NUMBER(10, 0)    DEFAULT 6 NOT NULL,
    TAG_ID                            NUMBER(10, 0),
    IND_SELECTION_TYPE_ID             NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_AUTO_EXP_RETRIEVAL_DATAVIEW PRIMARY KEY (APP_SID, AUTO_EXP_RETRIEVAL_DATAVIEW_ID),
    CONSTRAINT CK_AUTO_EXP_RTRVL_IGNORE_NA CHECK (IGNORE_NULL_VALUES IN (0, 1))
)
;

CREATE SEQUENCE CSR.AUTO_EXP_RTRVL_DATAVIEW_ID_SEQ;

CREATE TABLE CSR.AUTO_EXP_RETRIEVAL_SP(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_EXP_RETRIEVAL_SP_ID          NUMBER(10, 0)    NOT NULL,
    STORED_PROCEDURE                  VARCHAR2(255)    NOT NULL,
    STRIP_UNDERSCORES_FROM_HEADERS    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_AUTO_EXP_RETRIEVAL_SP PRIMARY KEY (APP_SID, AUTO_EXP_RETRIEVAL_SP_ID),
    CONSTRAINT CK_AUTO_EXP_RTRVL_STRIP CHECK (STRIP_UNDERSCORES_FROM_HEADERS IN (0, 1))
)
;

CREATE SEQUENCE CSR.AUTO_EXP_RTRVL_SP_ID_SEQ;

CREATE TABLE CSR.AUTO_EXPORT_MESSAGE_MAP(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    EXPORT_INSTANCE_ID    NUMBER(10, 0)    NOT NULL,
    MESSAGE_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_AUTO_EXPORT_MES_MAP PRIMARY KEY (APP_SID, MESSAGE_ID)
)
;

CREATE SEQUENCE CSR.AUT_EXPORT_MESSAGE_ID_SEQ;

CREATE TABLE csr.auto_exp_class_qc_settings (
    app_sid                         NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    automated_export_class_sid      NUMBER(10, 0)   NOT NULL,
	saved_filter_sid				NUMBER(10, 0)   NOT NULL,
	encoding_name 					VARCHAR2(255),
    CONSTRAINT pk_auto_exp_class_qc_settings PRIMARY KEY (app_sid, automated_export_class_sid)
);

CREATE TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS(
    APP_SID                           NUMBER(10)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_IMP_CORE_DATA_SETTINGS_ID    NUMBER(10)     NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID        NUMBER(10)     NOT NULL,
    STEP_NUMBER                       NUMBER(10)     NOT NULL,
    MAPPING_XML                       SYS.XMLTYPE    NOT NULL,
    AUTOMATED_IMPORT_FILE_TYPE_ID     NUMBER(10)     NOT NULL,
    DSV_SEPARATOR                     CHAR,
    DSV_QUOTES_AS_LITERALS            NUMBER(1),
    EXCEL_WORKSHEET_INDEX             NUMBER(10),
    ALL_OR_NOTHING                    NUMBER(1),
    HAS_HEADINGS                      NUMBER(1)      DEFAULT 1 NOT NULL,
    IND_MAPPING_TYPE_ID               NUMBER(2)      NOT NULL,
    REGION_MAPPING_TYPE_ID            NUMBER(2)      NOT NULL,
    UNIT_MAPPING_TYPE_ID              NUMBER(2)      NOT NULL,
    REQUIRES_VALIDATION_STEP          NUMBER(1)      DEFAULT 0 NOT NULL,
    DATE_FORMAT_TYPE_ID               NUMBER(2)      NOT NULL,
    FIRST_COL_DATE_FORMAT_ID          NUMBER(2),
    SECOND_COL_DATE_FORMAT_ID         NUMBER(2),
	DATE_STRING_EXACT_PARSE_FORMAT    VARCHAR2(255),
    ZERO_INDEXED_MONTH_INDICES        NUMBER(1)      DEFAULT 1 NOT NULL,
	FINANCIAL_YEAR_START_MONTH 		  NUMBER(2) 	 DEFAULT 4 NOT NULL,
	OVERLAP_ACTION 					  VARCHAR(10) 	 DEFAULT 'ERROR' NOT NULL,
    CONSTRAINT PK_AUTO_IMP_CORE_DATA_SETTINGS PRIMARY KEY (APP_SID, AUTO_IMP_CORE_DATA_SETTINGS_ID),
    CONSTRAINT CK_AUTO_IMP_CORE_SET_QUO CHECK (dsv_quotes_as_literals IN (0,1) OR dsv_quotes_as_literals IS NULL),
    CONSTRAINT CK_AUTO_IMP_CORE_SET_ALLORNO CHECK (all_or_nothing IN (0,1) OR all_or_nothing IS NULL),
    CONSTRAINT CK_AUTO_IMP_CORE_SET_HASHEADS CHECK (has_headings IN (0,1)),
    CONSTRAINT CK_AUTO_IMP_CORE_SET_REQVALID CHECK (requires_validation_step IN (0,1)),
    CONSTRAINT CK_AUTO_IMP_CORE_SET_ZEROIND CHECK (zero_indexed_month_indices IN (0,1)),
	CONSTRAINT CK_AUTO_IMP_COR_DATA_SET_OLAP CHECK (OVERLAP_ACTION IN ('ERROR', 'SUM')),
    CONSTRAINT UK_AUTO_IMP_CORE_SET_STEP UNIQUE (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
)
;

CREATE SEQUENCE CSR.AUTO_IMP_COREDTA_SETNGS_ID_SEQ;

CREATE TABLE CSR.AUTO_IMP_CORE_DATA_VAL(
    APP_SID                  NUMBER(10)        DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    VAL_ID                   NUMBER(10)        NOT NULL,
    INSTANCE_ID              NUMBER(10)        NOT NULL,
    INSTANCE_STEP_ID         NUMBER(10)        NOT NULL,
    IND_SID                  NUMBER(10)        NOT NULL,
    REGION_SID               NUMBER(10)        NOT NULL,
    START_DTM                DATE              NOT NULL,
    END_DTM                  DATE              NOT NULL,
    VAL_NUMBER               NUMBER(24, 10),
    MEASURE_CONVERSION_ID    NUMBER(10),
    ENTRY_VAL_NUMBER         NUMBER(24, 10),
    NOTE                     CLOB,
    SOURCE_FILE_REF          VARCHAR2(4000),
    CONSTRAINT PK_AUTO_IMP_CORE_DATA_VAL PRIMARY KEY (APP_SID, VAL_ID),
    CONSTRAINT UK_AUTO_IMP_CORE_DATA_VAL UNIQUE (APP_SID, IND_SID, REGION_SID, START_DTM, END_DTM, INSTANCE_STEP_ID)
)
;

CREATE SEQUENCE CSR.AUTO_IMP_CORE_DATA_VAL_ID_SEQ;

CREATE TABLE CSR.AUTO_IMP_CORE_DATA_VAL_FAIL (
	APP_SID						NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	VAL_ID						NUMBER(10) NOT NULL,
	INSTANCE_ID					NUMBER(10) NOT NULL,
	INSTANCE_STEP_ID			NUMBER(10) NOT NULL,
	IND_SID						NUMBER(10),
	IND_TEXT					VARCHAR2(1024) NOT NULL,
	REGION_SID					NUMBER(10),
	REGION_TEXT					VARCHAR2(1024) NOT NULL,
	MEASURE_CONVERSION_ID		NUMBER(10),
	MEASURE_TEXT				VARCHAR2(1024),
	VAL_NUMBER					NUMBER(24, 10),
	NOTE						CLOB,
	SOURCE_FILE_REF				VARCHAR2(4000),
	START_DTM					DATE NOT NULL,
	END_DTM						DATE NOT NULL,
	CONSTRAINT PK_AUTO_IMP_CORE_DATA_VAL_FAIL PRIMARY KEY (APP_SID, VAL_ID)
)
;

CREATE TABLE CSR.AUTO_IMP_FILEREAD_DB(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_IMP_FILEREAD_DB_ID    NUMBER(10, 0)    NOT NULL,
    FILEDATA_SP                VARCHAR2(255),
    CONSTRAINT PK_AUTO_IMP_FILEREAD_DB PRIMARY KEY (APP_SID, AUTO_IMP_FILEREAD_DB_ID)
)
;

CREATE TABLE CSR.AUTO_IMP_DATE_COL_TYPE(
    DATE_COL_TYPE_ID    NUMBER(2)        NOT NULL,
    NAME                VARCHAR2(255),
    CONSTRAINT PK_AUTO_IMP_DATE_COL_TYPE PRIMARY KEY (DATE_COL_TYPE_ID)
)
;

CREATE TABLE CSR.AUTO_IMP_DATE_TYPE(
    DATE_TYPE_ID    NUMBER(2)        NOT NULL,
    NAME            VARCHAR2(255),
    CONSTRAINT PK_AUTO_IMP_DATE_TYPE PRIMARY KEY (DATE_TYPE_ID)
)
;

CREATE SEQUENCE CSR.AUTO_IMP_FILEREAD_DB_ID_SEQ;

CREATE TABLE CSR.AUTO_IMP_FILEREAD_FTP(
    APP_SID                     NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_IMP_FILEREAD_FTP_ID    NUMBER(10, 0)     NOT NULL,
    FTP_PROFILE_ID              NUMBER(10, 0)     NOT NULL,
    PAYLOAD_PATH                VARCHAR2(255)     NOT NULL,
    FILE_MASK                   VARCHAR2(255),
    SORT_BY                     VARCHAR2(10),
    SORT_BY_DIRECTION           VARCHAR2(10),
    MOVE_TO_PATH_ON_SUCCESS     VARCHAR2(1024),
    MOVE_TO_PATH_ON_ERROR       VARCHAR2(1024),
    DELETE_ON_SUCCESS           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DELETE_ON_ERROR             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_AUTO_IMP_FILEREAD_FTP PRIMARY KEY (APP_SID, AUTO_IMP_FILEREAD_FTP_ID),
    CONSTRAINT CK_AUTO_IMP_FILEREAD_FTP_SORT CHECK (SORT_BY IN ('DATE','FILENAME') OR SORT_BY IS NULL),
    CONSTRAINT CK_AUTO_IMP_FILEREAD_FTP_DIR CHECK (SORT_BY_DIRECTION IN ('ASC','DESC') OR SORT_BY_DIRECTION IS NULL),
    CONSTRAINT CK_AUTO_IMP_FILEREAD_FTP_DLSUC CHECK (DELETE_ON_SUCCESS IN (0, 1)),
    CONSTRAINT CK_AUTO_IMP_FILEREAD_FTP_DLERR CHECK (DELETE_ON_ERROR IN (0, 1))
)
;

CREATE SEQUENCE CSR.AUTO_IMP_FILEREAD_FTP_ID_SEQ;

CREATE TABLE CSR.AUTO_IMP_FILEREAD_PLUGIN(
    PLUGIN_ID            NUMBER           NOT NULL,
    LABEL                VARCHAR2(128)    NOT NULL,
    FILEREAD_ASSEMBLY    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_AUTO_IMP_FILEREAD_PLUGIN_ID PRIMARY KEY (PLUGIN_ID),
    CONSTRAINT UK_AUTO_IMP_FILEREAD_LABEL UNIQUE (LABEL),
    CONSTRAINT UK_AUTO_IMP_FILEREAD_ASSEMBLY UNIQUE (FILEREAD_ASSEMBLY)
)
;

CREATE TABLE CSR.AUTO_IMP_IMPORTER_CMS(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_IMP_IMPORTER_CMS_ID    NUMBER(10, 0)    NOT NULL,
    TAB_SID                     NUMBER(10, 0),
    MAPPING_XML                 SYS.XMLType      NOT NULL,
    CMS_IMP_FILE_TYPE_ID        NUMBER(10, 0)    NOT NULL,
    DSV_SEPARATOR               VARCHAR2(32),
    DSV_QUOTES_AS_LITERALS      NUMBER(1, 0),
    EXCEL_WORKSHEET_INDEX       NUMBER(10, 0),
    ALL_OR_NOTHING              NUMBER(1, 0),
    HEADER_ROW                  NUMBER(10, 0)    DEFAULT 0,
    CONSTRAINT PK_AUTO_IMP_IMPORTER_CMS PRIMARY KEY (APP_SID, AUTO_IMP_IMPORTER_CMS_ID),
    CONSTRAINT CK_AUTO_IMP_IMPORTER_SEP CHECK (DSV_SEPARATOR IN ('PIPE','TAB','COMMA','SEMICOLON') OR DSV_SEPARATOR IS NULL),
    CONSTRAINT CK_AUTO_IMP_IMPORTER_QUO CHECK (DSV_QUOTES_AS_LITERALS IN (0,1) OR DSV_QUOTES_AS_LITERALS IS NULL),
    CONSTRAINT CK_AUTO_IMP_IMPORTER_ALLORNO CHECK (ALL_OR_NOTHING IN (0,1) OR ALL_OR_NOTHING IS NULL)
)
;

CREATE SEQUENCE CSR.AUTO_IMP_IMPORTER_CMS_ID_SEQ;

CREATE TABLE CSR.AUTO_IMP_IMPORTER_PLUGIN(
    PLUGIN_ID            NUMBER           NOT NULL,
    LABEL                VARCHAR2(128)    NOT NULL,
    IMPORTER_ASSEMBLY    VARCHAR2(255)    NOT NULL,
	CONTAINS_PII 		 NUMBER(1,0) 	  DEFAULT 0 NOT NULL,
	ALLOW_MANUAL		 NUMBER(1,0)	  DEFAULT 1 NOT NULL,
    CONSTRAINT PK_AUTO_IMP_IMPORTER_PLUGIN_ID PRIMARY KEY (PLUGIN_ID),
    CONSTRAINT UK_AUTO_IMP_IMPRTR_PLGN_LABEL UNIQUE (LABEL),
    CONSTRAINT UK_AUTO_IMP_IMPRTR_PLGN_ASSMB UNIQUE (IMPORTER_ASSEMBLY),
	CONSTRAINT CK_AUTO_IMP_IMPRTR_PLGN_MAN CHECK (ALLOW_MANUAL IN (0,1))
)
;

CREATE TABLE CSR.AUTO_IMP_IMPORTER_SETTINGS(
    APP_SID                          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTO_IMP_IMPORTER_SETTINGS_ID    NUMBER(10, 0)    NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID       NUMBER(10, 0)    NOT NULL,
    STEP_NUMBER                      NUMBER(10, 0)    NOT NULL,
    MAPPING_XML                      SYS.XMLType      NOT NULL,
    AUTOMATED_IMPORT_FILE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DSV_SEPARATOR                    CHAR,
    DSV_QUOTES_AS_LITERALS           NUMBER(1, 0),
    EXCEL_WORKSHEET_INDEX            NUMBER(10, 0),
    EXCEL_ROW_INDEX                  NUMBER(10, 0),
    DATA_TYPE                        VARCHAR2(256),
    ALL_OR_NOTHING                   NUMBER(1, 0),
    CONSTRAINT PK_AUTO_IMP_IMPORTER_SETTINGS PRIMARY KEY (APP_SID, AUTO_IMP_IMPORTER_SETTINGS_ID),
    CONSTRAINT CK_AUTO_IMP_SETTINGS_QUO CHECK (DSV_QUOTES_AS_LITERALS IN (0,1) OR DSV_QUOTES_AS_LITERALS IS NULL),
    CONSTRAINT CK_AUTO_IMP_SETTINGS_ALLORNO CHECK (ALL_OR_NOTHING IN (0,1) OR ALL_OR_NOTHING IS NULL),
    CONSTRAINT UK_AUTO_IMP_SETTINGS_STEP UNIQUE (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
)
;

CREATE SEQUENCE CSR.AUTO_IMPORTER_SETTINGS_ID_SEQ;

CREATE TABLE CSR.AUTO_IMP_INDICATOR_MAP(
    APP_SID                       NUMBER(10)        DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID    NUMBER(10)        NOT NULL,
    SOURCE_TEXT                   VARCHAR2(1024),
    IND_SID                       NUMBER(10),
    CONSTRAINT PK_AUTO_IMP_INDICATOR_MAP PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, SOURCE_TEXT)
)
;

CREATE TABLE CSR.AUTO_IMP_MAPPING_TYPE(
    MAPPING_TYPE_ID    NUMBER(2)        NOT NULL,
    NAME               VARCHAR2(255),
    CONSTRAINT PK_AUTO_IMP_MAP_TYPE PRIMARY KEY (MAPPING_TYPE_ID)
)
;

CREATE SEQUENCE CSR.AUTO_IMP_PRODUCT_SETTINGS_SEQ;

CREATE TABLE CSR.AUTO_IMP_PRODUCT_SETTINGS (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AUTO_IMP_PRODUCT_SETTINGS_ID	NUMBER(10) NOT NULL,
	AUTOMATED_IMPORT_CLASS_SID		NUMBER(10) NOT NULL,
	STEP_NUMBER						NUMBER(10) NOT NULL,
	MAPPING_XML						SYS.XMLTYPE NOT NULL,
	AUTOMATED_IMPORT_FILE_TYPE_ID	NUMBER(10) NOT NULL,
	DSV_SEPARATOR					CHAR,
	DSV_QUOTES_AS_LITERALS			NUMBER(1),
	EXCEL_WORKSHEET_INDEX			NUMBER(10),
	ALL_OR_NOTHING					NUMBER(1),
	HEADER_ROW						NUMBER(10),
	CONCATENATOR					CHAR,
	DEFAULT_COMPANY_SID				NUMBER(10),
	COMPANY_MAPPING_TYPE_ID			NUMBER(10),
	PRODUCT_MAPPING_TYPE_ID			NUMBER(10) NOT NULL,
	PRODUCT_TYPE_MAPPING_TYPE_ID	NUMBER(10) NOT NULL,
	CMS_MAPPING_XML					SYS.XMLTYPE,
	TAB_SID							NUMBER(10),
	CONSTRAINT PK_AUTO_IMP_PRODUCT_SETTINGS PRIMARY KEY (AUTO_IMP_PRODUCT_SETTINGS_ID),
	CONSTRAINT UK_AUTO_IMP_PRODUCT_SETTINGS UNIQUE (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER),
	CONSTRAINT CK_AUTO_IMP_PRODUCT_SETTINGS CHECK (
		(COMPANY_MAPPING_TYPE_ID IS NULL AND DEFAULT_COMPANY_SID IS NOT NULL)
		OR COMPANY_MAPPING_TYPE_ID IS NOT NULL),
	CONSTRAINT CK_AUTO_IMP_PRODUCT_CMS CHECK (
		(CMS_MAPPING_XML IS NULL AND TAB_SID IS NULL)
		OR (CMS_MAPPING_XML IS NOT NULL AND TAB_SID IS NOT NULL))
);

CREATE TABLE CSR.AUTO_IMP_REGION_MAP(
    APP_SID                       NUMBER(10)        DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID    NUMBER(10)        NOT NULL,
    SOURCE_TEXT                   VARCHAR2(1024),
    REGION_SID                    NUMBER(10),
    CONSTRAINT PK_AUTO_IMP_REGION_MAP PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, SOURCE_TEXT)
)
;

CREATE TABLE CSR.AUTO_IMP_UNIT_MAP(
    APP_SID                       NUMBER(10)        DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID    NUMBER(10)        NOT NULL,
    SOURCE_TEXT                   VARCHAR2(1024),
    MEASURE_CONVERSION_ID         NUMBER(10),
    CONSTRAINT PK_AUTO_IMP_CORE_DATA_UNIT_MAP PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, SOURCE_TEXT)
)
;

CREATE TABLE CSR.AUTO_IMP_MAILBOX (
	APP_SID								NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ADDRESS								VARCHAR2(255) NOT NULL,
	MAILBOX_SID							NUMBER(10) NOT NULL,
	BODY_VALIDATOR_PLUGIN				VARCHAR2(1024),
	USE_FULL_MAIL_LOGGING				NUMBER(1) DEFAULT 0 NOT NULL,
	MATCHED_IMP_CLASS_SID_FOR_BODY		NUMBER(10),
	DEACTIVATED_DTM						DATE,
	CONSTRAINT PK_AUTO_IMP_MAILBOX PRIMARY KEY (APP_SID, MAILBOX_SID),
	CONSTRAINT CK_AUTO_IMP_MAILBOX_LOGGING CHECK (USE_FULL_MAIL_LOGGING IN (0, 1))
)
;

CREATE TABLE CSR.AUTO_IMP_MAIL_SENDER_FILTER (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MAILBOX_SID					NUMBER(10) NOT NULL,
	FILTER_STRING				VARCHAR2(1024) NOT NULL,
	IS_WILDCARD					NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_AUTO_IMP_MAIL_SNDR_FILTER PRIMARY KEY (APP_SID, MAILBOX_SID, FILTER_STRING),
	CONSTRAINT CK_AUTO_IMP_MAIL_SNDR_FLTR_WC CHECK (IS_WILDCARD IN (0, 1))
)
;

CREATE TABLE CSR.AUTO_IMP_MAIL_SUBJECT_FILTER (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MAILBOX_SID					NUMBER(10) NOT NULL,
	FILTER_STRING				VARCHAR2(1024) NOT NULL,
	IS_WILDCARD					NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_AUTO_IMP_MAIL_SBJECT_FILTER PRIMARY KEY (APP_SID, MAILBOX_SID, FILTER_STRING),
	CONSTRAINT CK_AUTO_IMP_MAIL_SBJCT_FLTR_WC CHECK (IS_WILDCARD IN (0, 1))
)
;

CREATE TABLE CSR.AUTO_IMP_MAIL_ATTACH_FILTER (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MAILBOX_SID						NUMBER(10) NOT NULL,
	FILTER_STRING					VARCHAR2(1024) NOT NULL,
	IS_WILDCARD						NUMBER(1) DEFAULT 0 NOT NULL,
	POS								NUMBER(2) NOT NULL,
	MATCHED_IMPORT_CLASS_SID		NUMBER(10) NOT NULL,
	REQUIRED_MIMETYPE				VARCHAR2(1024),
	ATTACHMENT_VALIDATOR_PLUGIN		VARCHAR2(1024),
	CONSTRAINT PK_AUTO_IMP_MAIL_ATTACH_FILTER PRIMARY KEY (APP_SID, MAILBOX_SID, POS),
	CONSTRAINT CK_AUTO_IMP_MAIL_ATT_FLTR_WC CHECK (IS_WILDCARD IN (0, 1))
)
;

CREATE TABLE CSR.AUTO_IMP_MAIL (
	APP_SID					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MAILBOX_SID				NUMBER(10) NOT NULL,
	MAIL_MESSAGE_UID		NUMBER(10) NOT NULL,
	SUBJECT					VARCHAR2(4000),
	RECIEVED_DTM			DATE,
	SENDER_ADDRESS			VARCHAR2(255) NOT NULL,
	SENDER_NAME				VARCHAR2(255),
	NUMBER_ATTACHMENTS		NUMBER(10) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_AUTO_IMP_MAIL PRIMARY KEY (APP_SID, MAILBOX_SID, MAIL_MESSAGE_UID)
)
;

CREATE TABLE CSR.AUTO_IMP_MAIL_FILE (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MAILBOX_SID						NUMBER(10) NOT NULL,
	MAIL_MESSAGE_UID				NUMBER(10) NOT NULL,
	FILE_BLOB						BLOB NOT NULL,
	FILE_NAME						VARCHAR2(255) NOT NULL,
	MADE_FROM_BODY					NUMBER(1) DEFAULT 0 NOT NULL,
	AUTOMATED_IMPORT_INSTANCE_ID	NUMBER(10) NOT NULL,
	CONSTRAINT PK_AUTO_IMP_MAIL_FILE PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID),
	CONSTRAINT CK_AUTO_IMP_MAIL_FILE_FRM_BODY CHECK (MADE_FROM_BODY IN (0, 1))
)
;

CREATE TABLE CSR.AUTO_IMP_MAIL_MSG (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MAILBOX_SID						NUMBER(10) NOT NULL,
	MAIL_MESSAGE_UID				NUMBER(10) NOT NULL,
	MESSAGE							VARCHAR2(1024) NOT NULL,
	POS								NUMBER(10) NOT NULL,
	CONSTRAINT PK_AUTO_IMP_MAIL_MSG PRIMARY KEY (APP_SID, MAILBOX_SID, MAIL_MESSAGE_UID, POS)
)
;

CREATE TABLE CSR.AUTOMATED_IMPORT_BUS_FILE (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FILE_BLOB						BLOB NOT NULL,
	AUTOMATED_IMPORT_INSTANCE_ID	NUMBER(10) NOT NULL,
	MESSAGE_RECEIVED_DTM			DATE DEFAULT SYSDATE NOT NULL,
	SOURCE_DESCRIPTION				VARCHAR(1024),
	CONSTRAINT PK_AUTO_IMP_BUS_FILE PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
)
;

CREATE TABLE CSR.AUTO_IMP_USER_IMP_SETTINGS(
	APP_SID								NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AUTO_IMP_USER_IMP_SETTINGS_ID		NUMBER(10)		NOT NULL,
	AUTOMATED_IMPORT_CLASS_SID			NUMBER(10)		NOT NULL,
	STEP_NUMBER							NUMBER(10)		NOT NULL,
	MAPPING_XML							SYS.XMLTYPE		NOT NULL,
	AUTOMATED_IMPORT_FILE_TYPE_ID		NUMBER(10)		NOT NULL,
	DSV_SEPARATOR						CHAR,
	DSV_QUOTES_AS_LITERALS				NUMBER(1),
	EXCEL_WORKSHEET_INDEX				NUMBER(10),
	ALL_OR_NOTHING						NUMBER(1),
	HAS_HEADINGS						NUMBER(1)		DEFAULT 1 NOT NULL,
	CONCATENATOR						VARCHAR2(3)		DEFAULT '_' NOT NULL,
	ACTIVE_STATUS_METHOD_TXT			VARCHAR2(32)	DEFAULT 'ALWAYS_ACTIVE' NOT NULL,
	USE_LOC_REGION_AS_START_PT			NUMBER(1) DEFAULT 0 NOT NULL,
	USE_MANAGER_PRIMARY_KEY				NUMBER(1) DEFAULT 0 NOT NULL,
	SET_LINE_MNGMNT_FRM_MNGR_KEY		NUMBER(1) DEFAULT 0 NOT NULL,
	REGION_MAPPING_TYPE_ID 				NUMBER(2) DEFAULT 1 NOT NULL,
	DATE_STRING_EXACT_PARSE_FORMAT    	VARCHAR2(255),
	CONSTRAINT CK_AUTO_IMP_USR_SET_LIN_MNGMNT CHECK (SET_LINE_MNGMNT_FRM_MNGR_KEY IN (0,1)),
	CONSTRAINT PK_AUTO_IMP_USER_IMP_SETTINGS PRIMARY KEY (APP_SID, AUTO_IMP_USER_IMP_SETTINGS_ID),
	CONSTRAINT CK_AUTO_IMP_USER_SET_QUO CHECK (DSV_QUOTES_AS_LITERALS IN (0,1) OR DSV_QUOTES_AS_LITERALS IS NULL),
	CONSTRAINT CK_AUTO_IMP_USER_SET_ALLORNO CHECK (ALL_OR_NOTHING IN (0,1) OR ALL_OR_NOTHING IS NULL),
	CONSTRAINT CK_AUTO_IMP_USER_SET_HASHEADS CHECK (HAS_HEADINGS IN (0,1)),
	CONSTRAINT CK_AUTO_IMP_USER_SET_ACTIVMETH CHECK (ACTIVE_STATUS_METHOD_TXT IN ('ALWAYS_ACTIVE', 'ALWAYS_INACTIVE', 'STATUS_IN_COLUMN', 'ACTIVATION_DATE', 'INACTIVATION_DATE', 'EMPLOYMENT_DATE_COLS')),
	CONSTRAINT CK_AUTO_IMP_USER_SET_REGSTART CHECK (USE_LOC_REGION_AS_START_PT IN (0,1)),
	CONSTRAINT CK_AUTO_IMP_USER_SET_PRIKEY CHECK (USE_MANAGER_PRIMARY_KEY IN (0,1)),
	CONSTRAINT UK_AUTO_IMP_USER_SET_STEP UNIQUE (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
)
;

CREATE SEQUENCE CSR.AUTO_IMP_USER_SETNGS_ID_SEQ;

CREATE TABLE CSR.AUTO_IMPEXP_INSTANCE_MSG(
    APP_SID       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MESSAGE_ID    NUMBER(10, 0)     NOT NULL,
    MESSAGE       CLOB              NOT NULL,
    SEVERITY      VARCHAR2(1)       NOT NULL,
    MSG_DTM       DATE              NOT NULL,
    CONSTRAINT CK_AUTO_IMPEXP_INST_MSG_SEV CHECK (SEVERITY IN ('X','W','I','S')),
    CONSTRAINT PK_CMS_IMP_INSTANCE_STEP_MSG PRIMARY KEY (APP_SID, MESSAGE_ID)
)
;

CREATE SEQUENCE CSR.AUTO_IMPEXP_INSTANCE_MSG_SEQ;

CREATE TABLE CSR.AUTO_IMPORT_MESSAGE_MAP(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    IMPORT_INSTANCE_ID         NUMBER(10, 0)    NOT NULL,
    IMPORT_INSTANCE_STEP_ID    NUMBER(10, 0), -- CAN BE NULLABLE SO YOU CAN WRITE MESSAGES AGAINST THE INSTANCE ITSELF
    MESSAGE_ID                 NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_AUTO_IMPORT_MES_MAP PRIMARY KEY (APP_SID, MESSAGE_ID)
)
;

CREATE TABLE CSR.AUTOCREATE_USER(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GUID                    CHAR(36)         NOT NULL,
    REQUESTED_DTM           DATE             DEFAULT SYSDATE NOT NULL,
    USER_NAME               VARCHAR2(255)    NOT NULL,
    APPROVED_DTM            DATE,
    APPROVED_BY_USER_SID    NUMBER(10, 0),
    CREATED_USER_SID        NUMBER(10, 0),
    ACTIVATED_DTM           DATE,
    REJECTED_DTM            DATE,
    REQUIRE_NEW_PASSWORD    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REDIRECT_TO_URL         VARCHAR2(255),
    CONSTRAINT PK_AUTOCREATE_USER PRIMARY KEY (APP_SID, USER_NAME)
)
;

CREATE TABLE CSR.AUTOMATED_EXPORT_CLASS(
    APP_SID                           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUTOMATED_EXPORT_CLASS_SID        NUMBER(10, 0)     NOT NULL,
    LABEL                             VARCHAR2(255)     NOT NULL,
    FILE_MASK                         VARCHAR2(255)     NOT NULL,
    SCHEDULE_XML                      SYS.XMLType,
    LAST_SCHEDULED_DTM                DATE,
    EMAIL_ON_ERROR                    VARCHAR2(2048),
    EMAIL_ON_SUCCESS                  VARCHAR2(2048),
    EXPORTER_PLUGIN_ID                NUMBER            NOT NULL,
    FILE_WRITER_PLUGIN_ID             NUMBER            NOT NULL,
    INCLUDE_HEADINGS                  NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    OUTPUT_EMPTY_AS                   VARCHAR2(16),
    FILE_MASK_DATE_FORMAT             VARCHAR2(128),
    AUTO_EXP_RETRIEVAL_DATAVIEW_ID    NUMBER(10, 0),
    AUTO_EXP_FILECRE_DSV_ID           NUMBER(10, 0),
    AUTO_EXP_FILEWRI_FTP_ID           NUMBER(10, 0),
    AUTO_EXP_RETRIEVAL_SP_ID          NUMBER(10, 0),
	DAYS_TO_RETAIN_PAYLOAD			  NUMBER(3, 0)		DEFAULT 90 NOT NULL,
	AUTO_IMPEXP_PUBLIC_KEY_ID		  NUMBER(10, 0)		DEFAULT NULL,
	ENABLE_ENCRYPTION 				  NUMBER(1, 0)		DEFAULT 0,
	CONTAINS_PII					  NUMBER(1, 0) 		DEFAULT 0 NOT NULL,
	AUTO_EXP_EXTERN_TARGET_PROFILE_ID   NUMBER(10,0),
	LOOKUP_KEY 							VARCHAR2(255),
    CONSTRAINT CK_INCLUDE_HEADINGS CHECK (INCLUDE_HEADINGS IN (0, 1)),
    CONSTRAINT CK_AUTO_EXP_CLS_FTP_ID CHECK (FILE_WRITER_PLUGIN_ID != 1 OR AUTO_EXP_FILEWRI_FTP_ID IS NOT NULL),
    CONSTRAINT PK_AUTOMATED_EXPORT_CLASS PRIMARY KEY (APP_SID, AUTOMATED_EXPORT_CLASS_SID)
)
;

CREATE UNIQUE INDEX CSR.UK_LOOKUP_EXP_CLASS ON CSR.AUTOMATED_EXPORT_CLASS(APP_SID, UPPER(LOOKUP_KEY))
;

CREATE TABLE CSR.AUTOMATED_EXPORT_INSTANCE(
    APP_SID                         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUTOMATED_EXPORT_INSTANCE_ID    NUMBER(10, 0)     NOT NULL,
    AUTOMATED_EXPORT_CLASS_SID      NUMBER(10, 0)     NOT NULL,
    BATCH_JOB_ID                    NUMBER(10, 0)     NOT NULL,
    PAYLOAD                         BLOB,
    PAYLOAD_FILENAME                VARCHAR2(1024),
    IS_PREVIEW                      NUMBER(1, 0)      DEFAULT 0 NOT NULL,
	DEBUG_LOG_FILE					BLOB,
	SESSION_LOG_FILE				BLOB,
	FILE_GENERATED					NUMBER(1,0) DEFAULT 0 NOT NULL,
	LAST_FETCHED_DATE 				DATE,
	FETCHED_COUNT 					NUMBER(10) DEFAULT 0 NOT NULL,
    CONSTRAINT PK_AUTOMATED_EXPORT_INSTANCE PRIMARY KEY (APP_SID, AUTOMATED_EXPORT_INSTANCE_ID),
    CONSTRAINT UK_AUTOMATED_EXPORT_INSTANCE UNIQUE (APP_SID, AUTOMATED_EXPORT_INSTANCE_ID, AUTOMATED_EXPORT_CLASS_SID)
)
;

CREATE SEQUENCE CSR.AUT_EXPORT_INST_ID_SEQ;

CREATE TABLE CSR.AUTOMATED_IMPORT_CLASS(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID    NUMBER(10, 0)     NOT NULL,
    LOOKUP_KEY                    VARCHAR2(255),
    LABEL                         VARCHAR2(255)     NOT NULL,
    SCHEDULE_XML                  SYS.XMLType,
    LAST_SCHEDULED_DTM            DATE,
    ABORT_ON_ERROR                NUMBER(1, 0)      NOT NULL,
    EMAIL_ON_ERROR                VARCHAR2(2048),
    EMAIL_ON_SUCCESS              VARCHAR2(2048),
    ON_COMPLETION_SP              VARCHAR2(255),
    IMPORT_PLUGIN                 VARCHAR2(255),
    EMAIL_ON_PARTIAL              VARCHAR2(2048),
    PROCESS_ALL_PENDING_FILES     NUMBER (1) 		DEFAULT 0 NOT NULL,
	CONTAINS_PII				  NUMBER(1, 0) 		DEFAULT 0 NOT NULL,
	PENDING_FILES_LIMIT			  NUMBER(3) 		DEFAULT 20 NOT NULL,
    CONSTRAINT CHK_CMS_IMP_CLS_ABORT CHECK (ABORT_ON_ERROR IN (0,1)),
    CONSTRAINT PK_CMS_IMP_CLASS PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID),
    CONSTRAINT CK_AUTO_IMP_CLS_PROCESS_ALL CHECK (PROCESS_ALL_PENDING_FILES IN (0, 1)),
	CONSTRAINT CK_AUTO_IMP_CLS_FILES_LIMIT CHECK (PENDING_FILES_LIMIT <= 100)
)
;

CREATE UNIQUE INDEX CSR.UK_CMS_IMP_CLASS ON CSR.AUTOMATED_IMPORT_CLASS(APP_SID, UPPER(LOOKUP_KEY))
;

CREATE UNIQUE INDEX CSR.UK_CMS_IMP_CLASS_LABEL ON CSR.AUTOMATED_IMPORT_CLASS(APP_SID, UPPER(LABEL))
;

CREATE TABLE CSR.AUTOMATED_IMPORT_CLASS_STEP(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID    NUMBER(10, 0)     NOT NULL,
    STEP_NUMBER                   NUMBER(10, 0)     NOT NULL,
    ON_COMPLETION_SP              VARCHAR2(255),
    ON_FAILURE_SP                 VARCHAR2(255),
    DAYS_TO_RETAIN_PAYLOAD        NUMBER(10, 0)     DEFAULT 90 NOT NULL,
    PLUGIN                        VARCHAR2(255),
    IMPORTER_PLUGIN_ID            NUMBER            DEFAULT 1 NOT NULL,
    AUTO_IMP_IMPORTER_CMS_ID      NUMBER(10, 0),
    FILEREAD_PLUGIN_ID            NUMBER NOT NULL,
    AUTO_IMP_FILEREAD_FTP_ID      NUMBER(10, 0),
    AUTO_IMP_FILEREAD_DB_ID       NUMBER(10, 0),
    IGNORE_FILE_NOT_FOUND_EXCPTN  NUMBER(1)         DEFAULT 0 NOT NULL,
	ENABLE_DECRYPTION 			  NUMBER(1, 0) 		DEFAULT 0,
    CONSTRAINT CK_AUTO_IMP_FILEREAD_FTP_ID CHECK (fileread_plugin_id != 1 OR auto_imp_fileread_ftp_id IS NOT NULL),
    CONSTRAINT CK_AUTO_IMP_FILEREAD_DB_ID CHECK (fileread_plugin_id != 2 OR auto_imp_fileread_db_id IS NOT NULL),
    CONSTRAINT PK_CMS_IMP_CLASS_STEP PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER),
    CONSTRAINT CK_IGNORE_FILE_NT_FND_EXCPTN CHECK (IGNORE_FILE_NOT_FOUND_EXCPTN IN (0, 1))
)
;

CREATE TABLE CSR.AUTOMATED_IMPORT_FILE_TYPE(
    AUTOMATED_IMPORT_FILE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                            VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_CMS_IMP_FILE_TYPE PRIMARY KEY (AUTOMATED_IMPORT_FILE_TYPE_ID)
)
;

CREATE TABLE CSR.AUTOMATED_IMPORT_INSTANCE(
    APP_SID							NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUTOMATED_IMPORT_INSTANCE_ID	NUMBER(10, 0)    NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID		NUMBER(10, 0)    NOT NULL,
    BATCH_JOB_ID					NUMBER(10, 0)    NOT NULL,
    IS_MANUAL						NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_FROM_BUS						NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	PARENT_INSTANCE_ID 				NUMBER(10),
	MAILBOX_SID 					NUMBER(10),
	MAIL_MESSAGE_UID 				NUMBER(10),
	DEBUG_LOG_FILE					BLOB,
	SESSION_LOG_FILE				BLOB,
    CONSTRAINT PK_CMS_IMP_INSTANCE PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID),
    CONSTRAINT UK_CMS_IMP_INSTANCE UNIQUE (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID, AUTOMATED_IMPORT_CLASS_SID)
)
;

CREATE SEQUENCE CSR.AUTO_IMP_INSTANCE_ID_SEQ;

CREATE TABLE CSR.AUTOMATED_IMPORT_INSTANCE_STEP(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUTO_IMPORT_INSTANCE_STEP_ID    NUMBER(10, 0)    NOT NULL,
    AUTOMATED_IMPORT_INSTANCE_ID    NUMBER(10, 0)    NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID      NUMBER(10, 0)    NOT NULL,
    STEP_NUMBER                     NUMBER(10, 0)    NOT NULL,
    STARTED_DTM                     DATE             DEFAULT SYSDATE NOT NULL,
    COMPLETED_DTM                   DATE,
    RESULT                          NUMBER(10, 0),
    PAYLOAD                         BLOB,
    ERROR_PAYLOAD                   BLOB,
    PAYLOAD_FILENAME                VARCHAR2(255),
    ERROR_FILENAME                  VARCHAR2(255),
    CUSTOM_URL                      VARCHAR2(1024),
    CUSTOM_URL_TITLE                VARCHAR(255),
    CONSTRAINT PK_CMS_IMP_INSTANCE_STEP PRIMARY KEY (APP_SID, AUTO_IMPORT_INSTANCE_STEP_ID),
    CONSTRAINT CK_AUTO_IMP_INST_STP_URL_TITLE CHECK ((CUSTOM_URL IS NOT NULL AND CUSTOM_URL_TITLE IS NOT NULL) OR (CUSTOM_URL IS NULL AND CUSTOM_URL_TITLE IS NULL))
)
;

CREATE SEQUENCE CSR.AUTO_IMP_INSTANCE_STEP_ID_SEQ;

CREATE TABLE CSR.AUTOMATED_IMPORT_MANUAL_FILE(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUTOMATED_IMPORT_INSTANCE_ID    NUMBER(10, 0)    NOT NULL,
    STEP_NUMBER                     NUMBER(10, 0)    NOT NULL,
    FILE_BLOB                       BLOB             NOT NULL,
    FILE_NAME                       VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_CMS_IMP_MAN_FILE PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID, STEP_NUMBER)
)
;

CREATE TABLE CSR.AUTOMATED_IMPORT_RESULT(
    AUTOMATED_IMPORT_RESULT_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                         VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_CMS_IMP_RESULT PRIMARY KEY (AUTOMATED_IMPORT_RESULT_ID)
)
;

CREATE SEQUENCE CSR.AUTO_IMP_ZIP_SETTINGS_ID_SEQ;

CREATE TABLE CSR.AUTO_IMP_ZIP_SETTINGS(
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AUTO_IMP_ZIP_SETTINGS_ID		NUMBER(10) NOT NULL,
	AUTOMATED_IMPORT_CLASS_SID		NUMBER(10) NOT NULL,
	STEP_NUMBER						NUMBER(10) NOT NULL,
	SORT_BY							VARCHAR2(10),
	SORT_BY_DIRECTION				VARCHAR2(10),
	CONSTRAINT PK_AUTO_IMP_ZIP_SETTINGS PRIMARY KEY (APP_SID, AUTO_IMP_ZIP_SETTINGS_ID),
	CONSTRAINT UK_AUTO_IMP_ZIP_SET_STEP UNIQUE (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER),
	CONSTRAINT CK_AUTO_IMP_ZIP_SET_SORT_BY CHECK (SORT_BY IN ('DATE','FILENAME') OR SORT_BY IS NULL),
	CONSTRAINT CK_AUTO_IMP_ZIP_SET_SORT_DIR CHECK (SORT_BY_DIRECTION IN ('ASC','DESC') OR SORT_BY_DIRECTION IS NULL)
);

CREATE TABLE CSR.AUTO_IMP_ZIP_FILTER(
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AUTO_IMP_ZIP_SETTINGS_ID		NUMBER(10) NOT NULL,
	POS								NUMBER(10) NOT NULL,
	IS_WILDCARD						NUMBER(1) DEFAULT 0 NOT NULL,
	FILTER_STRING					VARCHAR2(1024),
	MATCHED_IMPORT_CLASS_SID		NUMBER(10) NOT NULL,
	CONSTRAINT PK_AUTO_IMP_ZIP_FILTER PRIMARY KEY (APP_SID, AUTO_IMP_ZIP_SETTINGS_ID, POS)
);

DECLARE
	FEATURE_NOT_ENABLED EXCEPTION;
	PRAGMA EXCEPTION_INIT(FEATURE_NOT_ENABLED, -439);
BEGIN
EXECUTE IMMEDIATE '
CREATE TABLE CSR.BATCH_JOB(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT(''SECURITY'',''APP'') NOT NULL,
    BATCH_JOB_ID             NUMBER(10, 0)    NOT NULL,
    BATCH_JOB_TYPE_ID        NUMBER(10, 0)    NOT NULL,
    DESCRIPTION              VARCHAR2(500),
    REQUESTED_BY_USER_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT(''SECURITY'',''SID'') NOT NULL,
    REQUESTED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
	REQUESTED_BY_COMPANY_SID NUMBER(10, 0),
    EMAIL_ON_COMPLETION      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    STARTED_DTM              DATE,
    COMPLETED_DTM            DATE,
    UPDATED_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    ABORTED_DTM              DATE,
    RETRY_DTM                DATE,
    WORK_DONE                NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    TOTAL_WORK               NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    RUNNING_ON               VARCHAR2(256),
	RUNNING_BY_WORKER_ID	 NUMBER(10),
	RUNNING_BY_SID		     NUMBER(10),
	RUNNING_BY_PID		     NUMBER(10),
    RESULT                   VARCHAR2(500),
    RESULT_URL               VARCHAR2(500),
    IN_ORDER                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PROCESSING               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ATTEMPTS                 NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    NOTIFIED                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    FAILED                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	PRIORITY				 NUMBER(10)       DEFAULT 1 NOT NULL,
	RAM_USAGE				 NUMBER(20),
	CPU_MS                   NUMBER(20),
	COMPLETED				 AS (CASE WHEN completed_dtm IS NULL THEN 0 ELSE 1 END),
	TIMED_OUT 				 NUMBER(1) DEFAULT 0 NOT NULL,
	IGNORE_TIMEOUT			 NUMBER(1) DEFAULT 0 NOT NULL,
	IN_ORDER_GROUP			 VARCHAR2(256),
    CONSTRAINT CK_BATCH_JOB_DLG_PLAN_EMAIL CHECK (EMAIL_ON_COMPLETION IN (0,1)),
    CONSTRAINT CK_BATCH_JOB_IN_ORDER CHECK (IN_ORDER IN (0, 1)),
    CONSTRAINT CK_BATCH_JOB_PROCESSING CHECK (PROCESSING IN (0, 1)),
    CONSTRAINT CK_BATCH_JOB_NOTIFIED CHECK (NOTIFIED IN (0,1)),
	CONSTRAINT CK_BATCH_JOB_FAILED CHECK (FAILED IN (0, 1)),
	CONSTRAINT CK_BATCH_JOB_TIMED_OUT CHECK (TIMED_OUT IN (0, 1)),
	CONSTRAINT CK_BATCH_JOB_IGNORE_TIMEOUT CHECK (IGNORE_TIMEOUT IN (0, 1)),
    CONSTRAINT PK_BATCH_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)   PARTITION BY RANGE (COMPLETED) (
	PARTITION BATCH_JOB_PENDING VALUES LESS THAN (1),
	PARTITION BATCH_JOB_COMPLETED VALUES LESS THAN (2)
)
ENABLE ROW MOVEMENT';
EXCEPTION WHEN FEATURE_NOT_ENABLED THEN
EXECUTE IMMEDIATE '
CREATE TABLE CSR.BATCH_JOB(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT(''SECURITY'',''APP'') NOT NULL,
    BATCH_JOB_ID             NUMBER(10, 0)    NOT NULL,
    BATCH_JOB_TYPE_ID        NUMBER(10, 0)    NOT NULL,
    DESCRIPTION              VARCHAR2(500),
    REQUESTED_BY_USER_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT(''SECURITY'',''SID'') NOT NULL,
    REQUESTED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
	REQUESTED_BY_COMPANY_SID NUMBER(10, 0),
    EMAIL_ON_COMPLETION      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    STARTED_DTM              DATE,
    COMPLETED_DTM            DATE,
    UPDATED_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    ABORTED_DTM              DATE,
    RETRY_DTM                DATE,
    WORK_DONE                NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    TOTAL_WORK               NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    RUNNING_ON               VARCHAR2(256),
	RUNNING_BY_WORKER_ID	 NUMBER(10),
	RUNNING_BY_SID		     NUMBER(10),
	RUNNING_BY_PID		     NUMBER(10),
    RESULT                   VARCHAR2(500),
    RESULT_URL               VARCHAR2(500),
    IN_ORDER                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PROCESSING               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ATTEMPTS                 NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    NOTIFIED                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    FAILED                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	PRIORITY				 NUMBER(10)       DEFAULT 1 NOT NULL,
	RAM_USAGE				 NUMBER(20),
	CPU_MS                   NUMBER(20),
	COMPLETED				 AS (CASE WHEN completed_dtm IS NULL THEN 0 ELSE 1 END),
	TIMED_OUT 				 NUMBER(1) DEFAULT 0 NOT NULL,
	IGNORE_TIMEOUT			 NUMBER(1) DEFAULT 0 NOT NULL,
	IN_ORDER_GROUP			 VARCHAR2(256),
    CONSTRAINT CK_BATCH_JOB_DLG_PLAN_EMAIL CHECK (EMAIL_ON_COMPLETION IN (0,1)),
    CONSTRAINT CK_BATCH_JOB_IN_ORDER CHECK (IN_ORDER IN (0, 1)),
    CONSTRAINT CK_BATCH_JOB_PROCESSING CHECK (PROCESSING IN (0, 1)),
    CONSTRAINT CK_BATCH_JOB_NOTIFIED CHECK (NOTIFIED IN (0,1)),
	CONSTRAINT CK_BATCH_JOB_FAILED CHECK (FAILED IN (0, 1)),
	CONSTRAINT CK_BATCH_JOB_TIMED_OUT CHECK (TIMED_OUT IN (0, 1)),
	CONSTRAINT CK_BATCH_JOB_IGNORE_TIMEOUT CHECK (IGNORE_TIMEOUT IN (0, 1)),
    CONSTRAINT PK_BATCH_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
ENABLE ROW MOVEMENT';
END;
/

CREATE SEQUENCE CSR.BATCH_JOB_ID_SEQ;

CREATE INDEX CSR.IX_BATCH_JOB_COMPLETED_DTM ON CSR.BATCH_JOB (COMPLETED_DTM);

-- note the "0-" is important here -- if it's not present oracle gives ora-01408: such column list already indexed
CREATE UNIQUE INDEX CSR.UX_BATCH_JOB_IN_ORDER ON CSR.BATCH_JOB(APP_SID, BATCH_JOB_TYPE_ID, CASE WHEN IN_ORDER = 1 AND PROCESSING = 1 THEN 1 ELSE 0-BATCH_JOB_ID END)
;

CREATE TABLE CSR.BATCH_JOB_APPROVAL_DASH_VALS(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DASHBOARD_INSTANCE_ID    NUMBER(10, 0)    NOT NULL,
    BATCH_JOB_ID             NUMBER(10, 0)    NOT NULL
)
;

CREATE UNIQUE INDEX CSR.AK_BATCH_JOB_APP_DASH ON CSR.BATCH_JOB_APPROVAL_DASH_VALS(APP_SID, DASHBOARD_INSTANCE_ID, BATCH_JOB_ID)
;

CREATE TABLE CSR.BATCH_JOB_BATCHED_EXPORT(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    BATCH_JOB_ID            NUMBER(10, 0)     NOT NULL,
    SETTINGS_XML            SYS.XMLType       NOT NULL,
    FILE_BLOB               BLOB,
    FILE_NAME               VARCHAR2(1024),
    CONSTRAINT PK_BJ_BATCHED_EXPORT PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_BATCHED_IMPORT (
	APP_SID                 NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BATCH_JOB_ID            NUMBER(10) NOT NULL,
	SETTINGS_XML			XMLTYPE NOT NULL,
	FILE_BLOB				BLOB,
	FILE_NAME				VARCHAR2(1024),
	ERROR_FILE_BLOB			BLOB,
	ERROR_FILE_NAME			VARCHAR2(1024),
	CONSTRAINT PK_BJ_BATCHED_IMPORT PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_CMS_IMPORT(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID    NUMBER(10, 0)    NOT NULL,
    FILE_NAME       VARCHAR2(255)    NOT NULL,
    FILE_DATA       BLOB             NOT NULL,
    TABLE_NAME      VARCHAR2(255)    NOT NULL,
    REGION_SID      NUMBER(10, 0),
    FLOW_LABEL      VARCHAR2(255),
    SETTINGS_XML    CLOB             NOT NULL,
    FAILED_DATA     BLOB,
    JOB_FINISHED    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    USER_SID        NUMBER(10, 0)    DEFAULT 3 NOT NULL,
    CONSTRAINT CHK_JOB_FINISHED CHECK (JOB_FINISHED IN (0,1)),
    CONSTRAINT PK_BJCI PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_DELEGATION_COMP(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID      NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_BATCH_JOB_DELEGATION_COMP PRIMARY KEY (APP_SID, BATCH_JOB_ID) ENABLE
)
;

CREATE TABLE CSR.BATCH_JOB_EVENT(
    EVENT_ID    NUMBER(10, 0)    PRIMARY KEY,
    LABEL       VARCHAR2(50)
)
;

CREATE TABLE CSR.BATCH_JOB_EXCEL_MODEL(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    BATCH_JOB_ID          NUMBER(10, 0)    NOT NULL,
    MODEL_INSTANCE_SID    NUMBER(10, 0)    NOT NULL,
    BASE_MODEL_SID        NUMBER(10, 0)    NOT NULL,
    INSTANCE_RUN          NUMBER(20, 0)    NOT NULL,
    CONSTRAINT PK_BJEM PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_LIKE_FOR_LIKE(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID         NUMBER(10, 0)    NOT NULL,
    LIKE_FOR_LIKE_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_BATCH_JOB_L4L PRIMARY KEY (APP_SID, LIKE_FOR_LIKE_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_LOG(
    BATCH_JOB_ID          NUMBER(10, 0)    NOT NULL,
    EVENT_TYPE_ID         NUMBER(10, 0)    NOT NULL,
    CAUSED_BY_USER_SID    NUMBER(10, 0),
    DESCRIPTION           VARCHAR2(512),
    EVENT_DTM             DATE             NOT NULL
)
;

CREATE TABLE CSR.BATCH_JOB_METER_EXTRACT(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID          NUMBER(10, 0)    NOT NULL,
    REGION_SID            NUMBER(10, 0),
    USER_SID              NUMBER(10, 0),
    START_DTM             DATE,
    END_DTM               DATE,
    INTERVAL              VARCHAR2(255),
    PERIOD_SET_ID         NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID    NUMBER(10, 0)    NOT NULL,
    IS_FULL               NUMBER(1, 0),
    JOB_FINISHED          NUMBER(1, 0),
    REPORT_DATA           BLOB,
    CONSTRAINT CHK_JOB_FINISHED_ME CHECK (JOB_FINISHED IN (0,1)),
    CONSTRAINT PK_BJME PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_SRT_REFRESH
(
	APP_SID 			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BATCH_JOB_ID		NUMBER(10,0)	NOT NULL,
	REGION_SID			NUMBER(10, 0)	NOT NULL,
	USER_SID			NUMBER(10, 0)	DEFAULT NVL(SYS_CONTEXT('SECURITY','SID'),3) NOT NULL,
	CONSTRAINT PK_BATCH_JOB_SRT_REFRESH PRIMARY KEY (APP_SID, BATCH_JOB_ID)
);

CREATE TABLE CSR.BATCH_JOB_STRUCTURE_IMPORT(
    APP_SID                          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID                     NUMBER(10, 0)     NOT NULL,
    WORKBOOK                         BLOB              NOT NULL,
    SHEET_NUMBER                     NUMBER(4, 0)      NOT NULL,
    IMPORT_TYPE                      NUMBER(2, 0)      NOT NULL,
    INPUT                            VARCHAR2(4000)    NOT NULL,
    START_ROW                        NUMBER(10, 0)     NOT NULL,
    ALLOW_MOVE                       NUMBER(1, 0)      NOT NULL,
    TRASH_OLD                        NUMBER(1, 0)      NOT NULL,
    ALLOW_NULL_OVERWRITE             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    LANG                             VARCHAR2(10)      NOT NULL,
    COMPANY_SID                      NUMBER(10, 0),
    REMOVE_FROM_ROLES_INACTIVATED    NUMBER(1, 0)      DEFAULT 0,
    CREATE_USERS_WITH_BLANK_PWD      NUMBER(1, 0)      DEFAULT 0,
    CONSTRAINT PK_BATCH_JOB_STRUCTURE_IMPORT PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_TEMPLATED_REPORT(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID                    NUMBER(10, 0)    NOT NULL,
    TEMPLATED_REPORT_REQUEST_XML    SYS.XMLType      NOT NULL,
    USER_SID                        NUMBER(10, 0)    NOT NULL,
    REPORT_DATA                     BLOB,
    SCHEDULE_SID                    NUMBER(10, 0),
    CONSTRAINT PK_BATCH_JOB_TPL_REPORT PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_TYPE(
    BATCH_JOB_TYPE_ID        NUMBER(10, 0)    NOT NULL,
    DESCRIPTION              VARCHAR2(500)    NOT NULL,
    SP                       VARCHAR2(100),
    PLUGIN_NAME              VARCHAR2(500),
    IN_ORDER                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    FILE_DATA_SP             VARCHAR2(255),
    NOTIFY_ADDRESS           VARCHAR2(512)    DEFAULT 'SUPPORT@CREDIT360.COM',
    MAX_RETRIES			     NUMBER(10, 0)    DEFAULT 3,
    MAX_CONCURRENT_JOBS		 NUMBER(10),
	RAM_ESTIMATE             NUMBER(20),
	PRIORITY                 NUMBER(10) DEFAULT 1 NOT NULL,
	TIMEOUT_MINS 			 NUMBER(4) DEFAULT 60 NOT NULL,
    CONSTRAINT CK_BATCH_JOB_TYPE_CODE_TYPE CHECK ((SP IS NULL AND PLUGIN_NAME IS NOT NULL) OR (SP IS NOT NULL AND PLUGIN_NAME IS NULL)),
    CONSTRAINT CK_BATCH_JOB_TYPE_IN_ORDER CHECK (IN_ORDER IN (0, 1)),
    CONSTRAINT PK_BATCH_JOB_TYPE PRIMARY KEY (BATCH_JOB_TYPE_ID)
)
;

CREATE TABLE CSR.BATCH_JOB_TYPE_APP_CFG
(
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BATCH_JOB_TYPE_ID				NUMBER(10) NOT NULL,
	RAM_ESTIMATE					NUMBER(20),
	PRIORITY						NUMBER(10),
	MAX_CONCURRENT_JOBS				NUMBER(10),
	TIMEOUT_MINS 					NUMBER(4),
	CONSTRAINT PK_BATCH_JOB_TYPE_APP_CFG PRIMARY KEY (APP_SID, BATCH_JOB_TYPE_ID)
);

CREATE TABLE CSR.BATCH_JOB_TYPE_APP_STAT
(
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BATCH_JOB_TYPE_ID				NUMBER(10) NOT NULL,
	RAM_MAX							NUMBER(20),
	RAM_AVG							NUMBER(20),
	CPU_MAX_MS						NUMBER(20),
	CPU_AVG_MS						NUMBER(20),
	RUN_TIME_MAX					NUMBER(20),
	RUN_TIME_AVG					NUMBER(20),
	START_DELAY_MAX					NUMBER(20),
	START_DELAY_AVG					NUMBER(20),
	CONSTRAINT PK_BATCH_JOB_TYPE_APP_STAT PRIMARY KEY (APP_SID, BATCH_JOB_TYPE_ID)
);

CREATE TABLE CSR.BATCHED_EXPORT_TYPE(
    LABEL                   VARCHAR2(255)     NOT NULL,
    ASSEMBLY                VARCHAR2(1024)    NOT NULL,
	BATCH_JOB_TYPE_ID		NUMBER(10, 0)     NOT NULL,
	CONSTRAINT PK_BATCHED_EXP_TYPE_JOB_TYPE PRIMARY KEY (BATCH_JOB_TYPE_ID)
)
;

CREATE TABLE CSR.BATCHED_IMPORT_TYPE (
	LABEL					VARCHAR2(255) NOT NULL,
	ASSEMBLY				VARCHAR2(1024) NOT NULL,
	BATCH_JOB_TYPE_ID		NUMBER(10, 0)     NOT NULL,
	CONSTRAINT PK_BATCHED_IMP_TYPE_JOB_TYPE PRIMARY KEY (BATCH_JOB_TYPE_ID)
)
;

CREATE TABLE CSR.BENCHMARK_DASHBOARD(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BENCHMARK_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    NAME                       VARCHAR2(255)    NOT NULL,
    START_DTM                  DATE             NOT NULL,
    END_DTM                    DATE,
    PERIOD_SET_ID              NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID         NUMBER(10, 0)    NOT NULL,
    LOOKUP_KEY                 VARCHAR2(255),
    CONSTRAINT PK_BENCHMARK_DASHBOARD PRIMARY KEY (APP_SID, BENCHMARK_DASHBOARD_SID)
)
;

CREATE UNIQUE INDEX CSR.UK_BENCHMARK_DASH_LOOKUP ON CSR.BENCHMARK_DASHBOARD(APP_SID, NVL(UPPER(LOOKUP_KEY), TO_CHAR(BENCHMARK_DASHBOARD_SID)))
;

CREATE TABLE CSR.BENCHMARK_DASHBOARD_CHAR(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    BENCHMARK_DASHBOARD_SID        NUMBER(10, 0)    NOT NULL,
    BENCHMARK_DASHBOARD_CHAR_ID    NUMBER(10, 0)    NOT NULL,
    POS                            NUMBER(10, 0)    NOT NULL,
    IND_SID                        NUMBER(10, 0),
    TAG_GROUP_ID                   NUMBER(10, 0),
    CONSTRAINT PK_BENCHMARK_DAS_CHAR PRIMARY KEY (APP_SID, BENCHMARK_DASHBOARD_CHAR_ID),
    CONSTRAINT UK_BENCHMARK_DAS_IND_TAG_GRP UNIQUE (APP_SID, BENCHMARK_DASHBOARD_SID, IND_SID, TAG_GROUP_ID),
    CONSTRAINT CHK_BENCHMARK_DAS_IND_TAG_GRP CHECK ((IND_SID IS NOT NULL AND TAG_GROUP_ID IS NULL) OR (IND_SID IS NULL AND TAG_GROUP_ID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.BENCHMARK_DASHB_CHAR_ID_SEQ;

CREATE INDEX CSR.IX_BENCHMARK_DAS_CHAR_IND_SID ON CSR.BENCHMARK_DASHBOARD_CHAR(APP_SID, BENCHMARK_DASHBOARD_SID)
;

CREATE TABLE CSR.BENCHMARK_DASHBOARD_IND(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BENCHMARK_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID                    NUMBER(10, 0)    NOT NULL,
    DISPLAY_NAME               VARCHAR2(255),
    SCENARIO_RUN_SID           NUMBER(10, 0),
    FLOOR_AREA_IND_SID         NUMBER(10, 0)    NOT NULL,
    POS                        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_BENCHMARK_DASHBOARD_IND PRIMARY KEY (APP_SID, BENCHMARK_DASHBOARD_SID, IND_SID)
)
;

CREATE TABLE CSR.BENCHMARK_DASHBOARD_PLUGIN(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BENCHMARK_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID                  NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_BENCHMARK_DASHBOARD_PLUGIN PRIMARY KEY (APP_SID, BENCHMARK_DASHBOARD_SID, PLUGIN_ID)
)
;

CREATE TABLE CSR.BRANDING(
    CLIENT_FOLDER_NAME    VARCHAR2(255)    NOT NULL,
    BRANDING_TITLE        VARCHAR2(100)    NOT NULL,
    AUTHOR                VARCHAR2(100)    DEFAULT NULL,
    CONSTRAINT PK_BRANDING PRIMARY KEY (CLIENT_FOLDER_NAME)
)
;

CREATE TABLE CSR.BRANDING_AVAILABILITY(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CLIENT_FOLDER_NAME    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_BRANDING_AVAILABILITY PRIMARY KEY (APP_SID, CLIENT_FOLDER_NAME)
)
;

CREATE TABLE CSR.BRANDING_LOCK(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LOCK_EXPIRY_DTM    DATE             NOT NULL,
    LOCKED_BY          NUMBER(10, 0)    NOT NULL,
    UNLOCKED_BY        NUMBER(10, 0),
    UNLOCKED_DTM       DATE,
    CONSTRAINT PK_BRANDING_LOCK PRIMARY KEY (APP_SID, LOCK_EXPIRY_DTM)
)
;

CREATE TABLE CSR.CALC_DEPENDENCY(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID         NUMBER(10, 0)    NOT NULL,
    CALC_IND_SID    NUMBER(10, 0)    NOT NULL,
    DEP_TYPE        NUMBER(10, 0)    DEFAULT (1) NOT NULL,
    CONSTRAINT PK_CALC_DEPENDENCY PRIMARY KEY (APP_SID, IND_SID, CALC_IND_SID, DEP_TYPE)
)
;

CREATE INDEX CSR.IDX_CALC_DEP_CALC_IND ON CSR.CALC_DEPENDENCY(APP_SID, CALC_IND_SID)
;

CREATE INDEX CSR.IDX_CALC_DEP_IND ON CSR.CALC_DEPENDENCY(APP_SID, IND_SID)
;

CREATE TABLE CSR.CALC_JOB(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALC_JOB_ID               NUMBER(10, 0)    NOT NULL,
    SCENARIO_RUN_SID          NUMBER(10, 0),
    PROCESSING                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    START_DTM                 DATE             NOT NULL,
    END_DTM                   DATE             NOT NULL,
    LAST_ATTEMPT_DTM          DATE,
    PHASE                     NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    WORK_DONE                 NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    TOTAL_WORK                NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    UPDATED_DTM               DATE             DEFAULT SYSDATE NOT NULL,
    RUNNING_ON                VARCHAR2(256),
    DELAY_PUBLISH_SCENARIO    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CREATED_DTM               DATE             DEFAULT SYSDATE NOT NULL,
    ATTEMPTS                  NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    NOTIFIED                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CALC_JOB_TYPE             NUMBER(10, 0)    NOT NULL,
    PRIORITY                  NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    FULL_RECOMPUTE            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PROCESS_AFTER_DTM         DATE             DEFAULT SYSDATE NOT NULL,
    CALC_QUEUE_ID             NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    RUN_BY_USER_SID           NUMBER(10, 0)    DEFAULT NVL(SYS_CONTEXT('SECURITY','SID'),3) NOT NULL,
    CONSTRAINT CK_CALC_JOB_DATES CHECK(END_DTM > START_DTM AND TRUNC(END_DTM,'DD')=END_DTM AND TRUNC(START_DTM,'DD')=START_DTM),
    CONSTRAINT CK_CALC_JOB_PROCESSING CHECK (PROCESSING IN (0,1)),
    CONSTRAINT CK_CALC_JOB_DELAY_PUBLISH_SCN CHECK (DELAY_PUBLISH_SCENARIO IN (0,1)),
    CONSTRAINT CK_CALC_JOB_NOTIFIED CHECK (NOTIFIED IN (0,1)),
    CONSTRAINT CK_CALC_JOB_FULL_RECOMPUTE CHECK (FULL_RECOMPUTE IN (0,1)),
    CONSTRAINT PK_CALC_JOB PRIMARY KEY (APP_SID, CALC_JOB_ID),
    CONSTRAINT UK_CALC_JOB UNIQUE (APP_SID, CALC_JOB_TYPE, SCENARIO_RUN_SID, PROCESSING)
)
;

CREATE SEQUENCE CSR.CALC_JOB_ID_SEQ;

CREATE TABLE CSR.CALC_JOB_AGGREGATE_IND_GROUP(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    CALC_JOB_ID               NUMBER(10, 0)    NOT NULL,
    AGGREGATE_IND_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CALC_JOB_AGG_IND_GROUP PRIMARY KEY (APP_SID, CALC_JOB_ID, AGGREGATE_IND_GROUP_ID)
)
;

CREATE TABLE CSR.CALC_JOB_IND(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALC_JOB_ID    NUMBER(10, 0)    NOT NULL,
    IND_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CALC_JOB_IND PRIMARY KEY (APP_SID, CALC_JOB_ID, IND_SID)
)
;

CREATE TABLE CSR.CALC_JOB_PHASE(
    PHASE          NUMBER(10, 0)    NOT NULL,
    DESCRIPTION    VARCHAR2(500)    NOT NULL,
    CONSTRAINT PK_CALC_JOB_PHASE PRIMARY KEY (PHASE)
)
;

CREATE TABLE CSR.CALC_JOB_FETCH_STAT (
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALC_JOB_ID               NUMBER(10, 0)    NOT NULL,
    FETCH_SP				  VARCHAR2(256),
    FETCH_TIME				  NUMBER(10, 2)	   NOT NULL
);

CREATE TABLE CSR.CALC_JOB_STAT (
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALC_JOB_ID               NUMBER(10, 0)    NOT NULL,
    SCENARIO_RUN_SID          NUMBER(10, 0),
    VERSION					  NUMBER(10, 0),
    START_DTM                 DATE             NOT NULL,
    END_DTM                   DATE             NOT NULL,
    CALC_JOB_INDS			  NUMBER(10, 0)	   NOT NULL,
    ATTEMPTS                  NUMBER(10, 0)    NOT NULL,
    CALC_JOB_TYPE             NUMBER(10, 0)    NOT NULL,
    PRIORITY                  NUMBER(10, 0)    NOT NULL,
    FULL_RECOMPUTE            NUMBER(1, 0)     NOT NULL,
    CREATED_DTM				  DATE			   NOT NULL,
    RAN_DTM					  DATE			   NOT NULL,
    RAN_ON					  VARCHAR2(256)	   NOT NULL,
    SCENARIO_FILE_SIZE		  NUMBER(20)	   NOT NULL,
    HEAP_ALLOCATED			  NUMBER(20)	   NOT NULL,
    TOTAL_TIME				  NUMBER(10, 2)	   NOT NULL,
    FETCH_TIME				  NUMBER(10, 2)	   NOT NULL,
    CALC_TIME				  NUMBER(10, 2)	   NOT NULL,
    LOAD_FILE_TIME			  NUMBER(10, 2)	   NOT NULL,
    LOAD_METADATA_TIME		  NUMBER(10, 2)	   NOT NULL,
    LOAD_VALUES_TIME	  	  NUMBER(10, 2)	   NOT NULL,
    LOAD_AGGREGATES_TIME	  NUMBER(10, 2)	   NOT NULL,
    SCENARIO_RULES_TIME		  NUMBER(10, 2)	   NOT NULL,
    SAVE_FILE_TIME			  NUMBER(10, 2)	   NOT NULL,
    TOTAL_VALUES			  NUMBER(20)	   NOT NULL,
    AGGREGATE_VALUES		  NUMBER(20)	   NOT NULL,
    CALC_VALUES				  NUMBER(20)	   NOT NULL,
    NORMAL_VALUES		  	  NUMBER(20)	   NOT NULL,
    EXTERNAL_AGGREGATE_VALUES NUMBER(20)	   NOT NULL,
    CALCS_RUN				  NUMBER(10)	   NOT NULL,
	INDS					  NUMBER(10)	   NOT NULL,
	REGIONS					  NUMBER(10)	   NOT NULL,
    CONSTRAINT CK_CALC_JOB_STAT_DATES CHECK(END_DTM > START_DTM AND TRUNC(END_DTM,'DD') = END_DTM AND TRUNC(START_DTM,'DD') = START_DTM),
    CONSTRAINT CK_CALC_JOB_ST_FULL_RECOMPUTE CHECK (FULL_RECOMPUTE IN (0,1)),
    CONSTRAINT PK_CALC_JOB_STAT PRIMARY KEY (APP_SID, CALC_JOB_ID)
)
;

CREATE TABLE CSR.CALC_QUEUE(
    CALC_QUEUE_ID    NUMBER(1, 0)     NOT NULL,
    NAME             VARCHAR2(100),
    CONSTRAINT PK_CALC_QUEUE PRIMARY KEY (CALC_QUEUE_ID),
    CONSTRAINT UK_CALC_QUEUE UNIQUE (NAME),
    CONSTRAINT CK_CALC_QUEUE_NAME CHECK (NAME = UPPER(NAME))
)
;

CREATE TABLE CSR.CALC_TAG_DEPENDENCY(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALC_IND_SID    NUMBER(10, 0)    NOT NULL,
    TAG_ID          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CALC_TAG_DEP PRIMARY KEY (APP_SID, CALC_IND_SID, TAG_ID)
)
;

CREATE TABLE CSR.CALC_BASELINE_CONFIG_DEPENDENCY (
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALC_IND_SID            NUMBER(10, 0)    NOT NULL,
    BASELINE_CONFIG_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CALC_BASELINE_DEP PRIMARY KEY (APP_SID, CALC_IND_SID, BASELINE_CONFIG_ID)
)
;

CREATE TABLE CSR.CALCULATION_TYPE(
    CALCULATION_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    DESCRIPTION            VARCHAR2(1023)    NOT NULL,
    CONSTRAINT PK755 PRIMARY KEY (CALCULATION_TYPE_ID)
)
;

CREATE SEQUENCE CSR.CALCULATION_TYPE_ID_SEQ;

CREATE TABLE CSR.CALENDAR(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALENDAR_SID              NUMBER(10, 0)    NOT NULL,
    JS_INCLUDE                VARCHAR2(255)    NOT NULL,
    JS_CLASS_TYPE             VARCHAR2(255)    NOT NULL,
    DESCRIPTION               VARCHAR2(255)    NOT NULL,
    IS_GLOBAL                 NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    APPLIES_TO_TEAMROOMS      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_INITIATIVES    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PLUGIN_ID                 NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_CALENDAR PRIMARY KEY (APP_SID, CALENDAR_SID)
)
;

CREATE TABLE CSR.CALENDAR_EVENT(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALENDAR_EVENT_ID    NUMBER(10, 0)     NOT NULL,
    DESCRIPTION          VARCHAR2(4000),
    START_DTM            DATE              NOT NULL,
    END_DTM              DATE,
    CREATED_BY_SID       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    CREATED_DTM          DATE              DEFAULT SYSDATE NOT NULL,
    LOCATION             VARCHAR2(1000),
    REGION_SID           NUMBER(10, 0),
    CONSTRAINT CK_TEAMROOM_EVENT_DTM_1 CHECK (END_DTM IS NULL OR END_DTM >= START_DTM),
    CONSTRAINT PK_CALENDAR_EVENT PRIMARY KEY (APP_SID, CALENDAR_EVENT_ID)
)
;

CREATE SEQUENCE CSR.CALENDAR_EVENT_ID_SEQ;

CREATE TABLE CSR.CALENDAR_EVENT_INVITE(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALENDAR_EVENT_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID             NUMBER(10, 0)    NOT NULL,
    INVITED_DTM          DATE             DEFAULT SYSDATE NOT NULL,
    INVITED_BY_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    ACCEPTED_DTM         DATE,
    ATTENDED             NUMBER(1, 0),
    DECLINED_DTM         DATE,
    ATTENDED_DTM         DATE,
    CONSTRAINT CHK_CAL_EVT_INV_ATTEND CHECK (ATTENDED IS NULL OR ATTENDED IN (0,1)),
    CONSTRAINT PK_CALENDAR_EVENT_INVITE PRIMARY KEY (APP_SID, CALENDAR_EVENT_ID, USER_SID)
)
;

CREATE TABLE CSR.CALENDAR_EVENT_OWNER(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CALENDAR_EVENT_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID             NUMBER(10, 0)    NOT NULL,
    ADDED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    ADDED_BY_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    CONSTRAINT PK_CALENDAR_EVENT_OWNER PRIMARY KEY (APP_SID, CALENDAR_EVENT_ID, USER_SID)
)
;

CREATE TABLE CSR.CAPABILITY(
    NAME                VARCHAR2(255)    NOT NULL,
    ALLOW_BY_DEFAULT    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	DESCRIPTION 		VARCHAR2(1024),
    CONSTRAINT PK536 PRIMARY KEY (NAME)
)
;

CREATE TABLE CSR.CERTIFICATION (
	CERTIFICATION_ID			NUMBER(10,0) NOT NULL,
	CERTIFICATION_TYPE_ID		NUMBER(10,0) NOT NULL,
	EXTERNAL_ID					VARCHAR2(255) NOT NULL,
	NAME						VARCHAR2(255),
	CONSTRAINT PK_CERT PRIMARY KEY (CERTIFICATION_ID),
	CONSTRAINT UK_CERT_EXT_ID UNIQUE (CERTIFICATION_TYPE_ID, EXTERNAL_ID)
)
;

CREATE TABLE CSR.CERTIFICATION_LEVEL (
	CERTIFICATION_LEVEL_ID		NUMBER(10,0) NOT NULL,
	CERTIFICATION_ID			NUMBER(10,0) NOT NULL,
	POSITION					NUMBER(10,0) NOT NULL,
	NAME						VARCHAR2(255),
	CONSTRAINT PK_CERT_LEVEL PRIMARY KEY (CERTIFICATION_LEVEL_ID, CERTIFICATION_ID),
	CONSTRAINT UK_CERT_POS UNIQUE (CERTIFICATION_ID, POSITION)
)
;

CREATE TABLE CSR.CERTIFICATION_TYPE (
	CERTIFICATION_TYPE_ID		NUMBER(10,0) NOT NULL,
	NAME						VARCHAR2(255) NOT NULL,
	LOOKUP_KEY					VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_CERT_TYPE PRIMARY KEY (CERTIFICATION_TYPE_ID),
	CONSTRAINT UK_CERT_TYPE_LOOKUP UNIQUE (LOOKUP_KEY)
)
;

CREATE TABLE CSR.CHAIN_TPL_DELEGATION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CHAIN_TPL_DELEGATION PRIMARY KEY (APP_SID, TPL_DELEGATION_SID)
)
;

CREATE TABLE CSR.CLIENT_UTIL_SCRIPT(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    CLIENT_UTIL_SCRIPT_ID    NUMBER(10, 0)     NOT NULL,
    UTIL_SCRIPT_NAME         VARCHAR2(255),
    DESCRIPTION              VARCHAR2(2047),
    UTIL_SCRIPT_SP           VARCHAR2(255),
    WIKI_ARTICLE             VARCHAR2(10),
    CONSTRAINT PK_CLIENT_UTIL_SCRIPT PRIMARY KEY (APP_SID, CLIENT_UTIL_SCRIPT_ID)
)
;

CREATE SEQUENCE CSR.CLIENT_UTIL_SCRIPT_ID_SEQ;

CREATE TABLE CSR.CLIENT_UTIL_SCRIPT_PARAM(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    CLIENT_UTIL_SCRIPT_ID    NUMBER(10, 0)     NOT NULL,
    PARAM_NAME               VARCHAR2(1023)    NOT NULL,
    PARAM_HINT               VARCHAR2(1023),
    POS                      NUMBER(2, 0)      NOT NULL,
    PARAM_HIDDEN             NUMBER(1, 0)      DEFAULT 0,
    PARAM_VALUE              VARCHAR2(1024),
    CONSTRAINT PK_CLIENT_UTIL_SCRIPT_PARAM PRIMARY KEY (APP_SID, CLIENT_UTIL_SCRIPT_ID, POS)
)
;

CREATE TABLE CSR.CMS_ALERT_HELPER(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    HELPER_SP      VARCHAR2(100)    NOT NULL,
    TAB_SID        NUMBER(10, 0)    NOT NULL,
    DESCRIPTION    VARCHAR2(500)    NOT NULL,
    CONSTRAINT PK1476 PRIMARY KEY (APP_SID, HELPER_SP)
)
;

CREATE TABLE CSR.CMS_ALERT_TYPE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAB_SID                   NUMBER(10, 0)    NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION               VARCHAR2(500)    NOT NULL,
    LOOKUP_KEY                VARCHAR2(255),
    INCLUDE_IN_ALERT_SETUP    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    DELETED                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_BATCHED                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_CMS_ALERT_TYPE PRIMARY KEY (APP_SID, TAB_SID, CUSTOMER_ALERT_TYPE_ID),
    CONSTRAINT CHK_INCLUDE_IN_ALERT_SETUP CHECK (INCLUDE_IN_ALERT_SETUP IN (1, 0))
)
;

CREATE UNIQUE INDEX CSR.UK_CMS_ALERT_TYPE ON CSR.CMS_ALERT_TYPE(app_sid, NVL(lookup_key, tab_sid||'_'||customer_alert_type_id))
;

CREATE TABLE CSR.CMS_FIELD_CHANGE_ALERT(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CMS_FIELD_CHANGE_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    ITEM_ID                      NUMBER(10, 0)    NOT NULL,
    CUSTOMER_ALERT_TYPE_ID       NUMBER(10, 0)    NOT NULL,
    USER_SID                     NUMBER(10, 0)    NOT NULL,
    VERSION_NUMBER               NUMBER(10, 0),
    SENT_DTM                     DATE,
    CONSTRAINT PK_CMS_FIELD_CHANGE_ALERT PRIMARY KEY (CMS_FIELD_CHANGE_ALERT_ID),
    CONSTRAINT UK_CMS_FIELD_CHANGE_ALERT UNIQUE (ITEM_ID, CUSTOMER_ALERT_TYPE_ID, USER_SID, VERSION_NUMBER, SENT_DTM)
)
;

CREATE SEQUENCE CSR.CMS_FIELD_CHANGE_ALERT_ID_SEQ CACHE 5;

CREATE TABLE CSR.CMS_TAB_ALERT_TYPE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAB_SID                   NUMBER(10, 0)    NOT NULL,
    HAS_REPEATS               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FILTER_XML                SYS.XMLType,
    CONSTRAINT CHK_CMS_ALERT_HAS_REPEATS CHECK (HAS_REPEATS IN (0,1)),
    CONSTRAINT PK_CMS_TAB_ALERT_TYPE PRIMARY KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
)
;

CREATE SEQUENCE CSR.COMPLIANCE_ITEM_SEQ CACHE 5;

CREATE TABLE CSR.COMPLIANCE_ITEM(
	APP_SID							NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	COMPLIANCE_ITEM_ID				NUMBER(10, 0)     NOT NULL,
	TITLE							VARCHAR2(1024)    NOT NULL,
	SUMMARY							CLOB,
	DETAILS							CLOB,
	SOURCE							NUMBER(3, 0)      DEFAULT 0 NOT NULL, -- 0 = Manual, 1 = ENHESA
	COMPLIANCE_ITEM_STATUS_ID		NUMBER(10)        DEFAULT 1 NOT NULL,
	REFERENCE_CODE					VARCHAR2(255),
	USER_COMMENT					VARCHAR2(1024),
	CITATION						VARCHAR2(4000),
	EXTERNAL_LINK					VARCHAR2(1024),
	MAJOR_VERSION					NUMBER(10)        DEFAULT 1 NOT NULL,
	MINOR_VERSION					NUMBER(10)        DEFAULT 0 NOT NULL,
	CREATED_DTM						DATE              DEFAULT SYSDATE NOT NULL,
	UPDATED_DTM						DATE              DEFAULT SYSDATE NOT NULL,
	LOOKUP_KEY						VARCHAR2(1024),
	COMPLIANCE_ITEM_TYPE			NUMBER(10)		  NOT NULL,
    CONSTRAINT PK_COMPLIANCE_ITEM PRIMARY KEY (APP_SID, COMPLIANCE_ITEM_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_CI_LOOKUP_KEY ON CSR.COMPLIANCE_ITEM (APP_SID,NVL(LOOKUP_KEY, 'COMP_ITEM_' || COMPLIANCE_ITEM_ID));

CREATE UNIQUE INDEX CSR.UK_COMPLIANCE_ITEM_REF ON CSR.COMPLIANCE_ITEM(app_sid, DECODE(compliance_item_type, 2, TO_CHAR("COMPLIANCE_ITEM_ID"), DECODE("SOURCE", 0, NVL("REFERENCE_CODE", TO_CHAR("COMPLIANCE_ITEM_ID")), TO_CHAR("COMPLIANCE_ITEM_ID"))))
;

CREATE SEQUENCE csr.compliance_permit_type_seq START WITH 10000;

CREATE TABLE csr.compliance_permit_type (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	permit_type_id					NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	pos								NUMBER(10),
	CONSTRAINT pk_compliance_permit_type PRIMARY KEY (app_sid, permit_type_id)
);

CREATE SEQUENCE csr.compliance_permit_sub_type_seq START WITH 10000;

CREATE TABLE csr.compliance_permit_sub_type (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	permit_type_id					NUMBER(10,0) NOT NULL,
	permit_sub_type_id				NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	pos								NUMBER(10),
	CONSTRAINT pk_compliance_permit_sub_type PRIMARY KEY (app_sid, permit_type_id, permit_sub_type_id)
);

CREATE SEQUENCE csr.compliance_condition_type_seq START WITH 10000;

CREATE TABLE csr.compliance_condition_type (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	condition_type_id				NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	pos								NUMBER(10),
	CONSTRAINT pk_compliance_condition_type PRIMARY KEY (app_sid, condition_type_id)
);

CREATE SEQUENCE csr.compliance_cond_sub_type_seq START WITH 10000;

CREATE TABLE csr.compliance_condition_sub_type (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	condition_type_id				NUMBER(10,0) NOT NULL,
	condition_sub_type_id			NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	pos								NUMBER(10),
	CONSTRAINT pk_condition_sub_type PRIMARY KEY (app_sid, condition_type_id, condition_sub_type_id)
);

CREATE SEQUENCE csr.compliance_activity_type_seq START WITH 10000;

CREATE TABLE csr.compliance_activity_type (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	activity_type_id				NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	pos								NUMBER(10),
	CONSTRAINT pk_compliance_activity_type PRIMARY KEY (app_sid, activity_type_id)
);

CREATE SEQUENCE csr.compliance_application_tp_seq START WITH 10000;

CREATE TABLE csr.compliance_activity_sub_type (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	activity_type_id				NUMBER(10,0) NOT NULL,
	activity_sub_type_id			NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	pos								NUMBER(10),
	CONSTRAINT pk_compl_activity_sub_type
		PRIMARY KEY (app_sid, activity_type_id, activity_sub_type_id),
	CONSTRAINT fk_compl_activity_sub_type
		FOREIGN KEY (app_sid, activity_type_id)
		REFERENCES csr.compliance_activity_type (app_sid, activity_type_id)
);

CREATE SEQUENCE csr.compliance_activ_sub_type_seq START WITH 10000;

CREATE TABLE csr.compliance_application_type (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	application_type_id				NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	pos								NUMBER(10),
	CONSTRAINT pk_compliance_application_type PRIMARY KEY (app_sid, application_type_id)
);

CREATE TABLE csr.compliance_enhesa_map (
	app_sid NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	enhesa_country CHAR(3) NOT NULL,
	enhesa_region CHAR(3) NOT NULL,
	alert_sent DATE NULL,
	CONSTRAINT pk_compliance_enhesa_map
		PRIMARY KEY (app_sid, enhesa_country, enhesa_region)
);

CREATE TABLE csr.compliance_enhesa_map_item (
	app_sid NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	enhesa_country CHAR(3) NOT NULL,
	enhesa_region CHAR(3) NOT NULL,
	region_sid NUMBER(10, 0) NOT NULL,
	CONSTRAINT pk_compliance_enhesa_map_item
		PRIMARY KEY (app_sid, enhesa_country, enhesa_region, region_sid)
);

CREATE INDEX csr.compliance_enhesa_map_item_re ON csr.compliance_enhesa_map_item (app_sid, region_sid);

CREATE TABLE csr.std_compl_activity_type (
	activity_type_id				NUMBER(10) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	CONSTRAINT pk_std_compl_activity_type PRIMARY KEY (activity_type_id)
);

CREATE TABLE csr.std_compl_activity_sub_type (
	activity_type_id				NUMBER(10) NOT NULL,
	activity_sub_type_id			NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	CONSTRAINT pk_std_compl_activity_sub_type
		PRIMARY KEY (activity_type_id, activity_sub_type_id),
	CONSTRAINT fk_std_activity_sub_type
		FOREIGN KEY (activity_type_id)
		REFERENCES csr.std_compl_activity_type (activity_type_id)
);

CREATE TABLE csr.std_compl_application_type (
	application_type_id				NUMBER(10) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	CONSTRAINT pk_std_compl_application_type PRIMARY KEY (application_type_id)
);

CREATE TABLE csr.std_compl_condition_type (
	condition_type_id				NUMBER(10) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	CONSTRAINT pk_std_compl_condition_type PRIMARY KEY (condition_type_id)
);

CREATE TABLE csr.std_compl_condition_sub_type (
	condition_type_id				NUMBER(10,0) NOT NULL,
	condition_sub_type_id			NUMBER(10,0) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	CONSTRAINT pk_std_compl_cond_sub_type
		PRIMARY KEY (condition_type_id, condition_sub_type_id),
	CONSTRAINT fk_std_cond_sub_type
		FOREIGN KEY (condition_type_id)
		REFERENCES csr.std_compl_condition_type (condition_type_id)
);

CREATE TABLE csr.std_compl_permit_type (
	permit_type_id					NUMBER(10) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	CONSTRAINT pk_std_compl_permit_type PRIMARY KEY (permit_type_id)
);

CREATE TABLE csr.std_compl_permit_sub_type (
	permit_type_id					NUMBER(10) NOT NULL,
	permit_sub_type_id				NUMBER(10) NOT NULL,
	description						VARCHAR2(1024) NOT NULL,
	CONSTRAINT pk_std_compl_permit_sub_type PRIMARY KEY (permit_type_id, permit_sub_type_id),
	CONSTRAINT fk_std_permit_sub_type
		FOREIGN KEY (permit_type_id)
		REFERENCES csr.std_compl_permit_type (permit_type_id)
);

CREATE SEQUENCE csr.compliance_permit_seq;

CREATE TABLE csr.compliance_permit (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	compliance_permit_id			NUMBER(10,0) NOT NULL,
	region_sid						NUMBER(10,0) NOT NULL,
	flow_item_id					NUMBER(10,0) NOT NULL,
	title							VARCHAR2(1024) NOT NULL,
	permit_reference				VARCHAR2(255),
	activity_start_dtm				DATE,
	activity_end_dtm				DATE,
	permit_type_id					NUMBER(10,0) NOT NULL,
	permit_sub_type_id				NUMBER(10,0),
	site_commissioning_required 	NUMBER(1) DEFAULT 0 NOT NULL,
	site_commissioning_dtm 			DATE NULL,
	permit_start_dtm				DATE,
	permit_end_dtm					DATE,
	activity_type_id				NUMBER(10,0) NOT NULL,
	activity_sub_type_id			NUMBER(10),
	activity_details				CLOB,
	date_created					DATE DEFAULT SYSDATE NOT NULL,
	date_updated					DATE,
	created_by						NUMBER(10,0),
    CONSTRAINT pk_compliance_permit PRIMARY KEY (app_sid, compliance_permit_id)
);

CREATE INDEX csr.ix_compliance_permit_region 
	ON csr.compliance_permit (app_sid, region_sid);

CREATE INDEX csr.ix_compliance_permit_type 
	ON csr.compliance_permit (app_sid, permit_type_id, permit_sub_type_id);

CREATE INDEX csr.ix_compliance_activity_type 
	ON csr.compliance_permit (app_sid, activity_type_id);

CREATE UNIQUE INDEX csr.uk_cp_permit_reference ON csr.compliance_permit 
	(app_sid, NVL(LOWER(permit_reference), compliance_permit_id));

CREATE SEQUENCE csr.compliance_permit_appl_seq;

CREATE TABLE csr.compliance_permit_history (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	prev_permit_id					NUMBER(10,0) NOT NULL,
	next_permit_id					NUMBER(10,0) NOT NULL,
	CONSTRAINT pk_compliance_permit_history PRIMARY KEY (app_sid, prev_permit_id, next_permit_id)
);

CREATE TABLE csr.compliance_permit_application  (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	permit_application_id			NUMBER(10,0) NOT NULL,
	permit_id						NUMBER(10, 0) NOT NULL,
	title							VARCHAR2(1024) NOT NULL,
	flow_item_id					NUMBER(10,0) NOT NULL,
	notes							CLOB,
	application_reference			VARCHAR2(255),
	application_type_id				NUMBER(10) NOT NULL,
	submission_dtm					DATE,
	duly_made_dtm					DATE,
	determined_dtm					DATE,
	compl_permit_app_status_id		NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT pk_compliance_permit_applicati PRIMARY KEY (app_sid, permit_application_id)
);

CREATE INDEX csr.ix_cpa_cpat
    ON csr.compliance_permit_application (app_sid, application_type_id); 

CREATE INDEX csr.ix_cpa_permit
    ON csr.compliance_permit_application (app_sid, permit_id, permit_application_id);

CREATE INDEX csr.ix_cpa_stat 
	ON csr.compliance_permit_application (compl_permit_app_status_id);
	
CREATE UNIQUE INDEX csr.uk_cp_permit_app_reference ON csr.compliance_permit_application 
	(app_sid, NVL(LOWER(application_reference), permit_application_id));

CREATE TABLE csr.compliance_permit_condition (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	compliance_item_id				NUMBER(10,0) NOT NULL,
	compliance_permit_id			NUMBER(10,0) NOT NULL,
	condition_type_id				NUMBER(10,0) NOT NULL,
	condition_sub_type_id			NUMBER(10,0),
	copied_from_id					NUMBER(10) NULL,
	CONSTRAINT pk_compliance_permit_condition PRIMARY KEY (app_sid, compliance_item_id)
);

CREATE INDEX csr.ix_compliance_permit_cond_type
	ON csr.compliance_permit_condition (app_sid, condition_type_id, condition_sub_type_id);

CREATE SEQUENCE CSR.COMPLIANCE_PERMIT_SCORE_ID_SEQ;

CREATE TABLE CSR.COMPLIANCE_PERMIT_SCORE (
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	COMPLIANCE_PERMIT_SCORE_ID		NUMBER(10, 0)	NOT NULL,
	COMPLIANCE_PERMIT_ID			NUMBER(10, 0)	NOT NULL,
	SCORE_THRESHOLD_ID				NUMBER(10, 0),
	SCORE_TYPE_ID					NUMBER(10, 0)	NOT NULL,
	SCORE							NUMBER(15, 5),
	COMMENT_TEXT					CLOB,
	SET_DTM							DATE			DEFAULT TRUNC(SYSDATE) NOT NULL,
	CHANGED_BY_USER_SID				NUMBER(10, 0),
	VALID_UNTIL_DTM					DATE,
	SCORE_SOURCE_TYPE				NUMBER(10, 0),
	SCORE_SOURCE_ID					NUMBER(10, 0),
	IS_OVERRIDE						NUMBER(1)		DEFAULT 0 NOT NULL,
	CONSTRAINT PK_COMPIANCE_PERMIT_SCORE PRIMARY KEY (APP_SID, COMPLIANCE_PERMIT_SCORE_ID),
	CONSTRAINT UK_SUPPLIER_RELATIONSHIP_SCORE UNIQUE (APP_SID, COMPLIANCE_PERMIT_ID, SET_DTM, IS_OVERRIDE),
	CONSTRAINT CHK_COMP_PERM_SCORE_SET_DTM CHECK (SET_DTM = TRUNC(SET_DTM)),
	CONSTRAINT CHK_COMP_PERM_SCORE_VLD_DTM CHECK (VALID_UNTIL_DTM = TRUNC(VALID_UNTIL_DTM)),
	CONSTRAINT CHK_IS_OVERRIDE CHECK (IS_OVERRIDE IN (0,1))
);

CREATE INDEX csr.ix_perm_score_perm ON csr.compliance_permit_score (app_sid, compliance_permit_id);
CREATE INDEX csr.ix_perm_score_type ON csr.compliance_permit_score (app_sid, score_type_id);
CREATE INDEX csr.ix_perm_score_csr_user ON csr.compliance_permit_score (app_sid, changed_by_user_sid);
CREATE INDEX csr.ix_perm_score_threshold ON csr.compliance_permit_score (app_sid, score_threshold_id);
--IX for view
CREATE UNIQUE INDEX csr.ix_perm_score_view ON csr.compliance_permit_score (app_sid, compliance_permit_id, score_type_id, set_dtm, is_override);
	
CREATE TABLE csr.compliance_permit_tab(
    app_sid							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    plugin_id         				NUMBER(10, 0)	NOT NULL,
    plugin_type_id    				NUMBER(10, 0)	NOT NULL,
    pos               				NUMBER(10, 0)	NOT NULL,
    tab_label         				VARCHAR2(50),
    CONSTRAINT pk_permit_tab PRIMARY KEY (app_sid, plugin_id),
    CONSTRAINT ck_permit_tab_plugin_type CHECK (plugin_type_id = 21)
);

CREATE INDEX csr.ix_compliance_permit_tb_plugin ON csr.compliance_permit_tab (plugin_id, plugin_type_id);

CREATE TABLE csr.compliance_permit_tab_group (
    app_sid							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    plugin_id         				NUMBER(10, 0)	NOT NULL,
    group_sid						NUMBER(10, 0),
    role_sid						NUMBER(10, 0),
    CONSTRAINT pk_permit_tab_group PRIMARY KEY (app_sid, plugin_id, group_sid),
    CONSTRAINT ck_permit_tab_group_grp_role CHECK (
		(group_sid IS NULL AND role_sid IS NOT NULL) OR 
		(group_sid IS NOT NULL AND role_sid IS NULL)
	)
);

CREATE INDEX csr.ix_compliance_permit_tab_role ON csr.compliance_permit_tab_group (app_sid, role_sid);

CREATE TABLE csr.compliance_permit_header(
    app_sid							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    plugin_id         				NUMBER(10, 0)	NOT NULL,
    plugin_type_id    				NUMBER(10, 0)	NOT NULL,
    pos               				NUMBER(10, 0)	NOT NULL,
    CONSTRAINT pk_permit_header PRIMARY KEY (app_sid, plugin_id),
    CONSTRAINT ck_permit_header_plugin_type CHECK (plugin_type_id IN (21, 22))
);

CREATE INDEX csr.ix_compli_permit_hdr_plugin ON csr.compliance_permit_header (plugin_id, plugin_type_id);

CREATE TABLE csr.compliance_permit_header_group (
    app_sid							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    plugin_id         				NUMBER(10, 0)	NOT NULL,
    group_sid						NUMBER(10, 0),
    role_sid						NUMBER(10, 0),
    CONSTRAINT pk_permit_header_group PRIMARY KEY (app_sid, plugin_id, group_sid),
    CONSTRAINT ck_permit_hdr_group_grp_role CHECK (
		(group_sid IS NULL AND role_sid IS NOT NULL) OR 
		(group_sid IS NOT NULL AND role_sid IS NULL)
	)
);

CREATE INDEX csr.ix_compli_permit_header_role ON csr.compliance_permit_header_group (app_sid, role_sid);

CREATE SEQUENCE CSR.APPLICATION_PAUSE_ID_SEQ;

CREATE TABLE CSR.COMPL_PERMIT_APPLICATION_PAUSE (
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	APPLICATION_PAUSE_ID	NUMBER(10, 0)	NOT NULL,
	PERMIT_APPLICATION_ID	NUMBER(10, 0)	NOT NULL,
	PAUSED_DTM				DATE			NOT NULL,
	RESUMED_DTM				DATE,
	CONSTRAINT PK_COMPL_PERMIT_APP_PAUSE PRIMARY KEY (APP_SID, APPLICATION_PAUSE_ID)
)
;

CREATE INDEX csr.ix_compl_permit_app_pause_cpa ON csr.COMPL_PERMIT_APPLICATION_PAUSE (app_sid, permit_application_id);

CREATE TABLE csr.comp_permit_sched_issue (
	app_sid							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	flow_item_id					NUMBER(10) NOT NULL,
	issue_scheduled_task_id			NUMBER(10) NOT NULL,
	CONSTRAINT pk_comp_pmt_reg_sched_issue PRIMARY KEY (app_sid, flow_item_id, issue_scheduled_task_id)
);

CREATE TABLE csr.compliance_item_rollout (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	compliance_item_rollout_id		NUMBER(10, 0) NOT NULL,
	compliance_item_id				NUMBER(10,0) NOT NULL,
	country							VARCHAR2(2),
	region							VARCHAR2(2),
	country_group					VARCHAR2(3),
	region_group					VARCHAR2(3),
	rollout_dtm						DATE,
	rollout_pending					NUMBER(1) DEFAULT 0 NOT NULL,
    federal_requirement_code		VARCHAR2(255),
    is_federal_req					NUMBER(10,0),
	source_region					CHAR(3) NULL,
	source_country					CHAR(3) NULL,
    suppress_rollout                NUMBER(1,0) DEFAULT 0,
    CONSTRAINT pk_compliance_item_rollout PRIMARY KEY (app_sid, compliance_item_id),
	CONSTRAINT CHK_COMP_ITEM_ROL_REGION CHECK((region IS NOT NULL AND country IS NOT NULL) OR region IS NULL),
	CONSTRAINT CHK_COMP_ITEM_ROL_REGION_GRP CHECK((region_group IS NOT NULL AND country IS NOT NULL) OR region_group IS NULL)
);

CREATE INDEX csr.ix_compliance_rollout_pcr ON csr.compliance_item_rollout (country, region);
CREATE INDEX csr.ix_compliance_rollout_cg ON csr.compliance_item_rollout (country_group);
CREATE INDEX csr.ix_compliance_rollout_rg ON csr.compliance_item_rollout (region_group);

CREATE UNIQUE INDEX CSR.IX_COMPLIANCE_ITEM_ROLLOUT ON csr.compliance_item_rollout(app_sid, compliance_item_id, NVL(country, compliance_item_id), NVL(region, compliance_item_id), NVL(country_group, compliance_item_id), NVL(region_group, compliance_item_id));

CREATE SEQUENCE CSR.COMPLIANCE_ITEM_ROLLOUT_ID_SEQ;

-- flow item id nullable until workflow userstory is done.
CREATE TABLE CSR.COMPLIANCE_ITEM_REGION(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	COMPLIANCE_ITEM_ID		NUMBER(10, 0)	NOT NULL,
	REGION_SID				NUMBER(10, 0)	NOT NULL,
	FLOW_ITEM_ID			NUMBER(10, 0),
	out_of_scope			NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	CONSTRAINT PK_COMPLIANCE_ITEM_REGION PRIMARY KEY (APP_SID, COMPLIANCE_ITEM_ID, REGION_SID),
	CONSTRAINT UK_COMP_ITEM_REG_FLOW_ITEM_ID UNIQUE (APP_SID, FLOW_ITEM_ID),
	CONSTRAINT CHK_COMPLIANCE_ITEM_REGION_1_0 CHECK (out_of_scope IN (0,1))
)
;

CREATE INDEX CSR.IX_COMPLIANCE_ITEM_REGION ON CSR.COMPLIANCE_ITEM_REGION (APP_SID, REGION_SID)
;
CREATE INDEX CSR.IX_COMPLIANCE_ITEM_REGION_CI ON CSR.COMPLIANCE_ITEM_REGION (APP_SID, COMPLIANCE_ITEM_ID)
;

CREATE SEQUENCE CSR.COMPLIANCE_LANG_ID_SEQ;

CREATE TABLE CSR.COMPLIANCE_LANGUAGE (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	LANG_ID						NUMBER(10, 0)	NOT NULL,
	ADDED_DTM					DATE			DEFAULT SYSDATE NOT NULL,
	ACTIVE						NUMBER(1)		DEFAULT 1 NOT NULL,
	CONSTRAINT PK_COMPLIANCE_LANGUAGE PRIMARY KEY (APP_SID, LANG_ID),
	CONSTRAINT CK_COMPLIANCE_LANGUAGE_ACTIVE CHECK (ACTIVE IN (0,1))
);

CREATE TABLE csr.compliance_item_description(
	app_sid						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	compliance_item_id			NUMBER(10, 0)	NOT NULL,
	lang_id						NUMBER(10, 0)	NOT NULL,
	major_version				NUMBER(10)		DEFAULT 1 NOT NULL,
	minor_version				NUMBER(10)		DEFAULT 0 NOT NULL,
	title						VARCHAR2(2048)	NOT NULL,
	summary						CLOB,
	details						CLOB,
	citation					VARCHAR2(4000),
	CONSTRAINT pk_compliance_item_description
		PRIMARY KEY (app_sid, compliance_item_id, lang_id),
	CONSTRAINT fk_pk_comp_item_var_comp_lang
		FOREIGN KEY (app_sid, lang_id)
		REFERENCES csr.compliance_language (app_sid, lang_id)
);

CREATE INDEX csr.ix_compliance_it_compliance_la on csr.compliance_item_description (app_sid, lang_id);

CREATE SEQUENCE csr.compliance_item_desc_hist_seq
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

CREATE TABLE csr.compliance_item_desc_hist (
	app_sid							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	compliance_item_desc_hist_id	NUMBER(10, 0)	NOT NULL,
	compliance_item_id				NUMBER(10, 0)	NOT NULL,
	lang_id							NUMBER(10, 0)	NOT NULL,
	major_version					NUMBER(10, 0)	NOT NULL,
	minor_version					NUMBER(10, 0)	NOT NULL,
	title							VARCHAR2(1024)	NOT NULL,
	summary							VARCHAR2(4000),
	summary_clob					CLOB,
	details							CLOB,
	citation						VARCHAR2(4000),
	description						CLOB,
	change_dtm						DATE,
	CONSTRAINT pk_compliance_item_desc_hist PRIMARY KEY (app_sid, compliance_item_desc_hist_id),
	CONSTRAINT fk_comp_item_dsc_hst_comp_item
		FOREIGN KEY (app_sid, compliance_item_id)
		REFERENCES csr.compliance_item (app_sid, compliance_item_id)
);

CREATE SEQUENCE csr.flow_item_audit_log_id_seq;

CREATE TABLE csr.flow_item_audit_log (
	app_sid							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	flow_item_audit_log_id			NUMBER(10) NOT NULL,
	flow_item_id					NUMBER(10) NOT NULL,
	log_dtm							DATE DEFAULT SYSDATE NOT NULL,
	user_sid						NUMBER(10) DEFAULT NVL(SYS_CONTEXT('SECURITY','SID'),3) NOT NULL,
	description						VARCHAR2(4000) NOT NULL,
	comment_text					CLOB,
	param_1							VARCHAR2(255),
	param_2							VARCHAR2(255),
	param_3							VARCHAR2(255),
	CONSTRAINT pk_flow_item_audit_log PRIMARY KEY (app_sid, flow_item_audit_log_id)
);

create index csr.ix_flow_it_aud_log_flow_it_id on csr.flow_item_audit_log (app_sid, flow_item_id);
create index csr.ix_flow_it_aud_log_user_sid on csr.flow_item_audit_log (app_sid, user_sid);

CREATE TABLE csr.compliance_item_status (
	compliance_item_status_id			NUMBER(10) NOT NULL,
	description							VARCHAR2(255) NOT NULL,
	pos									NUMBER(10) NOT NULL,
	CONSTRAINT pk_compliance_item_status PRIMARY KEY (compliance_item_status_id)
);

CREATE TABLE csr.compliance_item_source (
	COMPLIANCE_ITEM_SOURCE_ID			NUMBER(10) NOT NULL,
	description							VARCHAR2(255) NOT NULL,
	CONSTRAINT pk_compliance_item_source PRIMARY KEY (COMPLIANCE_ITEM_SOURCE_ID)
);

CREATE TABLE CSR.COMPLIANCE_ITEM_TAG(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COMPLIANCE_ITEM_ID    NUMBER(10, 0)    NOT NULL,
    TAG_ID                NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_COMPLIANCE_ITEM_TAG PRIMARY KEY (APP_SID, COMPLIANCE_ITEM_ID, TAG_ID)
)
;

CREATE INDEX CSR.IX_COMPLIANCE_ITEM_TAG_ID ON CSR.COMPLIANCE_ITEM_TAG (APP_SID, TAG_ID)
;
CREATE INDEX CSR.IX_CIT_CI ON CSR.COMPLIANCE_ITEM_TAG(APP_SID, COMPLIANCE_ITEM_ID)
;

CREATE TABLE CSR.COMPLIANCE_OPTIONS(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	QUICK_SURVEY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	REQUIREMENT_FLOW_SID	NUMBER(10, 0),
	REGULATION_FLOW_SID		NUMBER(10, 0),
	PERMIT_FLOW_SID			NUMBER(10, 0),
	APPLICATION_FLOW_SID	NUMBER(10, 0),
	CONDITION_FLOW_SID		NUMBER(10, 0),
	ROLLOUT_DELAY			NUMBER(5) DEFAULT 15 NOT NULL,
	ROLLOUT_OPTION			NUMBER(10) DEFAULT 0 NOT NULL,
	SCORE_TYPE_ID			NUMBER(10),
	AUTO_INVOLVE_MANAGERS	NUMBER(1,0) DEFAULT 0 NOT NULL,
	PERMIT_DOC_LIB_SID		NUMBER(10,0),
	PERMIT_SCORE_TYPE_ID	NUMBER(10),
	CONSTRAINT PK_COMPLIANCE_OPTIONS PRIMARY KEY (APP_SID)
)
;

CREATE SEQUENCE CSR.COMPLIANCE_REGION_MAP_ID_SEQ;

CREATE TABLE CSR.COMPLIANCE_REGION_MAP
(
	COMPLIANCE_REGION_MAP_ID	NUMBER(10) NOT NULL,
	COMPLIANCE_ITEM_SOURCE_ID	NUMBER(3),
	SOURCE_COUNTRY				VARCHAR2(3),
	SOURCE_COUNTRY_LABEL		VARCHAR2(1024),
	SOURCE_REGION				VARCHAR2(3),
	SOURCE_REGION_LABEL			VARCHAR2(1024),
	COUNTRY						VARCHAR2(2),
	REGION						VARCHAR2(2),
	CONSTRAINT PK_COM_REG_MAP PRIMARY KEY (COMPLIANCE_REGION_MAP_ID),
	CONSTRAINT UK_COM_REG_MAP UNIQUE (COMPLIANCE_ITEM_SOURCE_ID, SOURCE_COUNTRY, SOURCE_REGION, COUNTRY, REGION)
);

CREATE INDEX CSR.IX_COMP_REG_MAP_REG ON CSR.COMPLIANCE_REGION_MAP(COUNTRY, REGION);

CREATE INDEX CSR.IX_COMP_REG_MAP_CI_SRC ON CSR.COMPLIANCE_REGION_MAP(COMPLIANCE_ITEM_SOURCE_ID);

CREATE TABLE CSR.COMPLIANCE_REGULATION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COMPLIANCE_ITEM_ID    NUMBER(10, 0)    NOT NULL,
    ADOPTION_DTM          DATE             NULL,
    EXTERNAL_ID           NUMBER(10),
    IS_POLICY             NUMBER(1)        DEFAULT 0 NOT NULL,
    CONSTRAINT PK_COMPLIANCE_REGULATION    PRIMARY KEY (APP_SID, COMPLIANCE_ITEM_ID),
    CONSTRAINT CK_IS_POLICY                CHECK(IS_POLICY IN (0, 1))
)
;

CREATE TABLE CSR.COMPLIANCE_REQ_REG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REQUIREMENT_ID    NUMBER(10, 0)    NOT NULL,
    REGULATION_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_COMPLIANCE_REQ_REG PRIMARY KEY (APP_SID, REQUIREMENT_ID, REGULATION_ID)
)
;

CREATE INDEX CSR.IX_COMPLIANCE_REQ_REG ON CSR.COMPLIANCE_REQ_REG (APP_SID, REGULATION_ID)
;

CREATE TABLE CSR.COMPLIANCE_REQUIREMENT(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COMPLIANCE_ITEM_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_COMPLIANCE_REQUIREMENT PRIMARY KEY (APP_SID, COMPLIANCE_ITEM_ID)
)
;

CREATE TABLE CSR.COMP_ITEM_REGION_SCHED_ISSUE (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FLOW_ITEM_ID					NUMBER(10) NOT NULL,
	ISSUE_SCHEDULED_TASK_ID			NUMBER(10) NOT NULL,
	CONSTRAINT PK_COMP_ITEM_REG_SCHED_ISSUE PRIMARY KEY (APP_SID, FLOW_ITEM_ID, ISSUE_SCHEDULED_TASK_ID)
);

CREATE SEQUENCE CSR.COMP_ITEM_VERSION_LOG_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

CREATE TABLE CSR.COMPLIANCE_AUDIT_LOG (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPLIANCE_AUDIT_LOG_ID			NUMBER(10, 0)	NOT NULL,
	COMPLIANCE_ITEM_ID				NUMBER(10, 0)	NOT NULL,
	DATE_TIME						DATE			NOT NULL,
	RESPONSIBLE_USER				NUMBER(10, 0)	NOT NULL,
	USER_LANG_ID					NUMBER(10, 0),
	SYS_LANG_ID						NUMBER(10, 0)	NOT NULL,
	LANG_ID							NUMBER(10, 0),
	TITLE							VARCHAR2(1024)	NOT NULL, 
	SUMMARY							CLOB,
	DETAILS							CLOB,
	CITATION						VARCHAR2(4000),
	CONSTRAINT PK_COMPLIANCE_AUDIT_LOG PRIMARY KEY (APP_SID, COMPLIANCE_AUDIT_LOG_ID)
);

CREATE SEQUENCE CSR.COMPLIANCE_AUDIT_LOG_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

CREATE INDEX CSR.IX_COMPLIANCE_AU_COMPLIANCE_IT ON CSR.COMPLIANCE_AUDIT_LOG (APP_SID, COMPLIANCE_ITEM_ID);

CREATE TABLE CSR.COMPLIANCE_ITEM_VERSION_LOG (
    APP_SID                         NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    COMPLIANCE_ITEM_VERSION_LOG_ID  NUMBER(10, 0)   NOT NULL,
    COMPLIANCE_ITEM_ID              NUMBER(10, 0)   NOT NULL,
    CHANGE_TYPE                     NUMBER(10, 0),
	MAJOR_VERSION	                NUMBER(10, 0)	NOT NULL,
	MINOR_VERSION					NUMBER(10, 0)	NOT NULL,
	IS_MAJOR_CHANGE					NUMBER(1, 0),
    DESCRIPTION                     CLOB,
    CHANGE_DTM                      DATE,
	LANG_ID							NUMBER(10, 0),
	CONSTRAINT PK_COMPLIANCE_ITEM_VERSION_LOG PRIMARY KEY (APP_SID, COMPLIANCE_ITEM_VERSION_LOG_ID),
	CONSTRAINT UK_CIVL_I UNIQUE (APP_SID, COMPLIANCE_ITEM_ID, MAJOR_VERSION, MINOR_VERSION, IS_MAJOR_CHANGE, LANG_ID, CHANGE_TYPE)
);

CREATE TABLE csr.compliance_region_tag(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAG_ID			    NUMBER(10, 0)    NOT NULL,
    REGION_SID			NUMBER(10, 0)	 NOT NULL,
	CONSTRAINT PK_COMP_REGION_TAG PRIMARY KEY (APP_SID, TAG_ID, REGION_SID)
);

CREATE INDEX csr.ix_comp_reg_tag_region_sid ON csr.compliance_region_tag (app_sid, region_sid);
CREATE INDEX csr.ix_comp_reg_tag_tag_id ON csr.compliance_region_tag (app_sid, tag_id);

CREATE TABLE CSR.COMPLIANCE_ITEM_CHANGE_TYPE (
	compliance_item_change_type_id	NUMBER(10,0)	NOT NULL,
	description						VARCHAR2(100)	NOT NULL,
	source							NUMBER(10,0)	NOT NULL,
	change_type_index				NUMBER(10,0)	NOT NULL,
	enhesa_id						NUMBER(10),
	CONSTRAINT ck_enhesa_ct CHECK (enhesa_id IS NULL OR (enhesa_id IS NOT NULL AND source = 1)),
	CONSTRAINT pk_compliance_item_change_type PRIMARY KEY (compliance_item_change_type_id)
);

CREATE TABLE csr.compliance_root_regions (
	app_sid                         NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	region_sid						NUMBER(10,0) NOT NULL,
	region_type						NUMBER(2,0) NOT NULL,
	rollout_level					NUMBER(10,0) DEFAULT 1,
	CONSTRAINT pk_compliance_root_regions
		PRIMARY KEY (app_sid, region_sid, region_type)
);

CREATE INDEX csr.ix_crr_rt ON csr.compliance_root_regions (app_sid, region_type);

CREATE TABLE csr.compl_permit_app_status (
	compl_permit_app_status_id		NUMBER(10, 0)	NOT NULL,
	label							VARCHAR2(256)	NOT NULL,
	pos 							NUMBER(10, 0)	NOT NULL,
	CONSTRAINT pk_compl_permit_app_status PRIMARY KEY (compl_permit_app_status_id)
);

CREATE TABLE csr.compliance_alert(
	compliance_alert_id		NUMBER(10, 0)	NOT NULL,
	app_sid					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	csr_user_sid			NUMBER(10)		NOT NULL,
	sent_dtm				DATE			NOT NULL,
	CONSTRAINT pk_compliance_imp_alert PRIMARY KEY (app_sid, compliance_alert_id)
)
;

CREATE SEQUENCE csr.compliance_alert_id_seq;


CREATE TABLE CSR.CONTEXT_SENSITIVE_HELP_REDIRECT (
	source_path			VARCHAR(2048)	NOT NULL,
	help_path			VARCHAR(2048)	NOT NULL,
	CONSTRAINT PK_CONTEXT_SENSITIVE_HELP_REDIRECT PRIMARY KEY (source_path)
);

CREATE TABLE CSR.CONTEXT_SENSITIVE_HELP_BASE (
	client_help_root	VARCHAR(128) NOT NULL,
	internal_help_root	VARCHAR(128) NOT NULL,
	CONSTRAINT PK_CONTEXT_SENSITIVE_HELP_BASE PRIMARY KEY (client_help_root, internal_help_root)
);
-- Restrict to one row
CREATE UNIQUE INDEX CSR.CONTEXT_SENSITIVE_HELP_BASE_UK ON CSR.CONTEXT_SENSITIVE_HELP_BASE ('1');


CREATE TABLE CSR.CORRESPONDENT(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CORRESPONDENT_ID    NUMBER(10, 0)     NOT NULL,
    FULL_NAME           VARCHAR2(255)     NOT NULL,
    EMAIL               VARCHAR2(255),
    PHONE               VARCHAR2(255),
    GUID                RAW(16)           NOT NULL,
    MORE_INFO_1         VARCHAR2(1000),
    CONSTRAINT PK_CORRESPONDENT PRIMARY KEY (APP_SID, CORRESPONDENT_ID)
)
;

CREATE SEQUENCE CSR.CORRESPONDENT_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_CORRESPONDENT_EMAIL ON CSR.CORRESPONDENT(APP_SID, NVL(UPPER(EMAIL),'CRSPDNT'||TO_CHAR(CORRESPONDENT_ID)))
;

CREATE TABLE CSR.COUNTRY_GROUP(
    COUNTRY_GROUP_ID    VARCHAR2(3)      NOT NULL,
    GROUP_NAME          VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_COUNTRY_GROUP PRIMARY KEY (COUNTRY_GROUP_ID)
)
;

CREATE TABLE CSR.COUNTRY_GROUP_COUNTRY(
    COUNTRY_GROUP_ID    VARCHAR2(3) NOT NULL,
    COUNTRY_ID          VARCHAR2(2) NOT NULL,
    CONSTRAINT PK_COUNTRY_GROUP_COUNTRY PRIMARY KEY (COUNTRY_GROUP_ID, COUNTRY_ID)
)
;

CREATE INDEX CSR.IX_COUNTRY_GROUP_COUNTRY ON CSR.COUNTRY_GROUP_COUNTRY (COUNTRY_ID)
;

CREATE TABLE CSR.COURSE(
    APP_SID                     NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COURSE_ID                   NUMBER(10, 0)     NOT NULL,
    TITLE                       VARCHAR2(50)      NOT NULL,
    REFERENCE                   VARCHAR2(40),
    DESCRIPTION                 VARCHAR2(4000),
    VERSION                     VARCHAR2(50),
    COURSE_TYPE_ID              NUMBER(10, 0)     NOT NULL,
    REGION_SID                  NUMBER(10, 0)     NOT NULL,
    DELIVERY_METHOD_ID          NUMBER(10, 0)     NOT NULL,
    PROVISION_ID                NUMBER(10, 0)     NOT NULL,
    STATUS_ID                   NUMBER(10, 0)     NOT NULL,
    DEFAULT_TRAINER_ID          NUMBER(10, 0),
    DEFAULT_PLACE_ID            NUMBER(10, 0),
    DURATION                    NUMBER(5, 0)      NOT NULL,
    EXPIRY_PERIOD               NUMBER(5, 0),
    EXPIRY_NOTICE_PERIOD        NUMBER(5, 0),
    ESCALATION_NOTICE_PERIOD    NUMBER(5, 0),
    REMINDER_NOTICE_PERIOD      NUMBER(5, 0),
    PASS_SCORE                  NUMBER(5, 0),
    SURVEY_SID                  NUMBER(10, 0),
    QUIZ_SID                    NUMBER(10, 0),
    PASS_FAIL                   NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ABSOLUTE_DEADLINE           DATE,
    CONSTRAINT PK_COURSE PRIMARY KEY (APP_SID, COURSE_ID)
)
;

CREATE SEQUENCE CSR.COURSE_ID_SEQ;

CREATE TABLE CSR.COURSE_FILE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP'),
    COURSE_ID              NUMBER(10, 0),
    COURSE_FILE_DATA_ID    NUMBER(10, 0),
    CONSTRAINT PK_COURSE_FILE_CONN PRIMARY KEY (APP_SID, COURSE_ID, COURSE_FILE_DATA_ID)
)
;

CREATE SEQUENCE CSR.COURSE_FILE_ID_SEQ;

CREATE TABLE CSR.COURSE_FILE_DATA(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP'),
    COURSE_FILE_DATA_ID    NUMBER(10, 0),
    FILENAME               VARCHAR2(255 BYTE),
    MIME_TYPE              VARCHAR2(255 BYTE),
    DATA                   BLOB,
    SHA1                   RAW(20),
    UPLOADED_DTM           DATE             DEFAULT SYSDATE,
    CONSTRAINT PK_COURSE_FILE PRIMARY KEY (APP_SID, COURSE_FILE_DATA_ID)
)
;

CREATE TABLE CSR.COURSE_SCHEDULE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COURSE_SCHEDULE_ID     NUMBER(10, 0)    NOT NULL,
    COURSE_ID              NUMBER(10, 0)    NOT NULL,
    CALENDAR_EVENT_ID      NUMBER(10, 0)    NOT NULL,
    MAX_CAPACITY           NUMBER(5, 0)     NOT NULL,
    TRAINER_ID             NUMBER(10, 0),
    PLACE_ID               NUMBER(10, 0),
    BOOKED                 NUMBER(5, 0)     DEFAULT 0 NOT NULL,
    AVAILABLE              NUMBER(5, 0)     NOT NULL,
    CANCELED               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ATTENDANCE_PASSWORD    VARCHAR2(100),
    CONSTRAINT PK_COURSE_SCHEDULE PRIMARY KEY (APP_SID, COURSE_SCHEDULE_ID),
    CONSTRAINT UK_COURSE_SCHEDULE UNIQUE (APP_SID, COURSE_SCHEDULE_ID, COURSE_ID)
)
;

CREATE SEQUENCE CSR.COURSE_SCHEDULE_ID_SEQ;

CREATE TABLE CSR.COURSE_TYPE(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COURSE_TYPE_ID               NUMBER(10, 0)    NOT NULL,
    LABEL                        VARCHAR2(50)     NOT NULL,
    USER_RELATIONSHIP_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LOOKUP_KEY                   VARCHAR2(255),
    CONSTRAINT PK_COURSE_TYPE PRIMARY KEY (APP_SID, COURSE_TYPE_ID),
    CONSTRAINT UNQ_COURSE_TYPE UNIQUE (APP_SID, LABEL)
)
;

CREATE SEQUENCE CSR.COURSE_TYPE_ID_SEQ;

CREATE UNIQUE INDEX CSR.IDX_UK_COURSE_TYPE_LOOKUP_KEY ON CSR.COURSE_TYPE(APP_SID, NVL(UPPER(LOOKUP_KEY),'URT'||TO_CHAR(COURSE_TYPE_ID)))
;

CREATE TABLE CSR.COURSE_TYPE_REGION(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COURSE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_COURSE_TYPE_REGION PRIMARY KEY (APP_SID, COURSE_TYPE_ID, REGION_SID)
)
;

CREATE TABLE CSR.CSR_USER(
    APP_SID                         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CSR_USER_SID                    NUMBER(10, 0)     NOT NULL,
    EMAIL                           VARCHAR2(256),
    GUID                            CHAR(36)          NOT NULL,
    FULL_NAME                       VARCHAR2(256),
    USER_NAME                       VARCHAR2(256)     NOT NULL,
    FRIENDLY_NAME                   VARCHAR2(255)     NOT NULL,
    INFO_XML                        SYS.XMLType,
    SEND_ALERTS                     NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    SHOW_PORTAL_HELP                NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    DONATIONS_REPORTS_FILTER_ID     NUMBER(10, 0),
    DONATIONS_BROWSE_FILTER_ID      NUMBER(10, 0),
    HIDDEN                          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    PHONE_NUMBER                    VARCHAR2(100),
    JOB_TITLE                       VARCHAR2(100),
    SHOW_SAVE_CHART_WARNING         NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    ENABLE_ARIA                     NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CREATED_DTM                     DATE              DEFAULT SYSDATE NOT NULL,
    LAST_MODIFIED_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    LAST_LOGON_TYPE_ID              NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    LINE_MANAGER_SID                NUMBER(10, 0),
    AVATAR                          BLOB,
    AVATAR_LAST_MODIFIED_DTM        DATE,
    AVATAR_SHA1                     RAW(20),
    AVATAR_MIME_TYPE                VARCHAR2(2000),
    PRIMARY_REGION_SID              NUMBER(10, 0),
    REMOVE_ROLES_ON_DEACTIVATION    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    USER_REF                        VARCHAR2(255),
    ANONYMISED                      NUMBER(1) DEFAULT 0 NOT NULL,
    CHECK (HIDDEN IN (0, 1)),
    CONSTRAINT CK_USER_AVATAR CHECK ((AVATAR IS NULL AND AVATAR_LAST_MODIFIED_DTM IS NULL AND AVATAR_SHA1 IS NULL AND AVATAR_MIME_TYPE IS NULL)
        OR (AVATAR IS NOT NULL AND AVATAR_LAST_MODIFIED_DTM IS NOT NULL AND AVATAR_SHA1 IS NOT NULL AND AVATAR_MIME_TYPE IS NOT NULL)),
    CONSTRAINT PK_CSR_USER PRIMARY KEY (APP_SID, CSR_USER_SID)
)
;

CREATE INDEX CSR.IX_USER_LINE_MANAGER ON CSR.CSR_USER(APP_SID, LINE_MANAGER_SID)
;

CREATE UNIQUE INDEX CSR.UK_USER_REF ON CSR.CSR_USER(APP_SID, LOWER(NVL(USER_REF, 'CR360_' || CSR_USER_SID)))
;

CREATE SEQUENCE CSR.COOKIE_POLICY_CONSENT_ID_SEQ;

CREATE TABLE CSR.COOKIE_POLICY_CONSENT(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	COOKIE_POLICY_CONSENT_ID	NUMBER(10, 0)	NOT NULL,
	CSR_USER_SID				NUMBER(10, 0)	NOT NULL,
	CREATED_DTM 				DATE			DEFAULT SYSDATE NOT NULL,
	ACCEPTED					NUMBER(1),
	CHECK 	(ACCEPTED IN (0, 1)),
	CONSTRAINT PK_COOKIE_POLICY_CONSENT PRIMARY KEY (APP_SID, COOKIE_POLICY_CONSENT_ID)
);

CREATE TABLE CSR.CURRENCY(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CURRENCY_CODE    VARCHAR2(10)     NOT NULL,
    CONSTRAINT PK_CURRENCY PRIMARY KEY (APP_SID, CURRENCY_CODE)
)
;

CREATE TABLE CSR.CURRENT_SUPPLIER_SCORE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCORE_TYPE_ID             NUMBER(10, 0)    NOT NULL,
    COMPANY_SID               NUMBER(10, 0)    NOT NULL,
    LAST_SUPPLIER_SCORE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CURRENT_SUPPLIER_SCORE PRIMARY KEY (APP_SID, SCORE_TYPE_ID, COMPANY_SID)
)
;

CREATE INDEX CSR.IX_CUR_SUP_LAST_SCORE ON CSR.CURRENT_SUPPLIER_SCORE(APP_SID, LAST_SUPPLIER_SCORE_ID)
;

CREATE TABLE CSR.CUSTOM_DISTANCE(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ORIGIN_ID            NUMBER(10, 0)     NOT NULL,
    DESTINATION_ID       NUMBER(10, 0)     NOT NULL,
    DISTANCE             NUMBER(24, 10)    NOT NULL,
    TRANSPORT_MODE_ID    NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_CUSTOM_DISTANCE PRIMARY KEY (APP_SID, ORIGIN_ID, DESTINATION_ID, TRANSPORT_MODE_ID)
)
;

CREATE TABLE CSR.CUSTOM_FACTOR(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOM_FACTOR_ID             NUMBER(10, 0)     NOT NULL,
    CUSTOM_FACTOR_SET_ID         NUMBER(10, 0)     NOT NULL,
    FACTOR_TYPE_ID               NUMBER(10, 0)     NOT NULL,
    GAS_TYPE_ID                  NUMBER(10, 0)     NOT NULL,
    GEO_COUNTRY                  VARCHAR2(2),
    GEO_REGION                   VARCHAR2(2),
    EGRID_REF                    VARCHAR2(4),
	REGION_SID					 NUMBER(10, 0),
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0)     NOT NULL,
    START_DTM                    DATE              NOT NULL,
    END_DTM                      DATE,
    VALUE                        NUMBER(24, 10)    NOT NULL,
    NOTE                         CLOB,
    CONSTRAINT CK_CUSTOM_FCTR_DATES CHECK ((START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM)),
    CONSTRAINT PK_CUSTOM_FACTOR PRIMARY KEY (APP_SID, CUSTOM_FACTOR_ID)
)
;

CREATE SEQUENCE CSR.CUSTOM_FACTOR_ID_SEQ;

CREATE TABLE CSR.CUSTOM_FACTOR_SET(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOM_FACTOR_SET_ID    NUMBER(10, 0)     NOT NULL,
    NAME                    VARCHAR2(1000)    NOT NULL,
    CREATED_BY_SID          NUMBER(10, 0),
    CREATED_DTM             DATE,
    FACTOR_SET_GROUP_ID     NUMBER(10, 0),
	INFO_NOTE				CLOB,
    CONSTRAINT PK_CUSTOM_FACTOR_SET PRIMARY KEY (APP_SID, CUSTOM_FACTOR_SET_ID)
)
;

-- removed in r318367; not sure that's correct
-- CREATE SEQUENCE CSR.CUSTOM_FACTOR_SET_ID_SEQ;

CREATE TABLE CSR.CUSTOM_LOCATION(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOM_LOCATION_ID    NUMBER(10, 0)     NOT NULL,
    LOCATION_TYPE_ID      NUMBER(10, 0)     NOT NULL,
    LOCATION_HASH         RAW(20)           NOT NULL,
    NAME                  VARCHAR2(255),
    DESCRIPTION           VARCHAR2(1023),
    ADDRESS               VARCHAR2(1023),
    CITY                  VARCHAR2(255),
    PROVINCE              VARCHAR2(255),
    POSTCODE              VARCHAR2(255),
    IS_APPROVED           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    COUNTRY               VARCHAR2(2),
    LOCATION_ID           NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK941 PRIMARY KEY (APP_SID, CUSTOM_LOCATION_ID),
    CONSTRAINT AK_CUSTOM_LOCATION UNIQUE (APP_SID, LOCATION_TYPE_ID, LOCATION_HASH)
)
;

CREATE SEQUENCE CSR.CUSTOM_LOCATION_ID_SEQ;

CREATE TABLE CSR.CUSTOMER(
    APP_SID                           NUMBER(10, 0)                   DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_ESCALATION_ENABLED          NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    NAME                              VARCHAR2(255)                   NOT NULL,
    HOST                              VARCHAR2(255)                   NOT NULL,
    SYSTEM_MAIL_ADDRESS               VARCHAR2(255)                   NOT NULL,
    TRACKER_MAIL_ADDRESS              VARCHAR2(255)                   NOT NULL,
    ALERT_MAIL_ADDRESS                VARCHAR2(255)                   NOT NULL,
    ALERT_MAIL_NAME                   VARCHAR2(255)                   NOT NULL,
    ALERT_BATCH_RUN_TIME              INTERVAL DAY(2) TO SECOND(6)    DEFAULT to_dsinterval('0 20:00:00') NOT NULL,
    TRASH_SID                         NUMBER(10, 0)                   NOT NULL,
    AGGREGATION_ENGINE_VERSION        NUMBER(1, 0)                    DEFAULT 4 NOT NULL,
    CONTACT_EMAIL                     VARCHAR2(255),
    EDITING_URL                       VARCHAR2(255)                   NOT NULL,
    MESSAGE                           CLOB,
    IND_INFO_XML_FIELDS               SYS.XMLType,
    REGION_INFO_XML_FIELDS            SYS.XMLType,
    USER_INFO_XML_FIELDS              SYS.XMLType,
    RAISE_REMINDERS                   NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    ACCOUNT_POLICY_SID                NUMBER(10, 0)                   NOT NULL,
    STATUS                            NUMBER(2, 0)                    DEFAULT 0 NOT NULL,
    RAISE_SPLIT_DELEG_ALERTS          NUMBER(10, 0)                   DEFAULT 0 NOT NULL,
    CURRENT_REPORTING_PERIOD_SID      NUMBER(10, 0),
    LOCK_START_DTM                    DATE                            DEFAULT TO_DATE('1980-01-01','yyyy-mm-dd') NOT NULL,
    LOCK_END_DTM                      DATE                            DEFAULT TO_DATE('1980-01-01','yyyy-mm-dd') NOT NULL,
    REGION_ROOT_SID                   NUMBER(10, 0),
    IND_ROOT_SID                      NUMBER(10, 0),
    CASCADE_REJECT                    NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    APPROVER_RESPONSE_WINDOW          NUMBER(10, 0)                   DEFAULT 3 NOT NULL,
    SELF_REG_GROUP_SID                NUMBER(10, 0),
    SELF_REG_NEEDS_APPROVAL           NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    SELF_REG_APPROVER_SID             NUMBER(10, 0),
    ALLOW_PARTIAL_SUBMIT              NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    HELPER_ASSEMBLY                   VARCHAR2(255),
    APPROVAL_STEP_SHEET_URL           VARCHAR2(255)                   DEFAULT '/csr/site/pending/FormPage.acds?' NOT NULL,
    USE_TRACKER                       NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    USE_USER_SHEETS                   NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    ALLOW_VAL_EDIT                    NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    FULLY_HIDE_SHEETS                 NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CALC_SUM_ZERO_FILL                NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CREATE_SHEETS_AT_PERIOD_END       NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    AUDIT_CALC_CHANGES                NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    ORACLE_SCHEMA                     VARCHAR2(255),
    IND_CMS_TABLE                     VARCHAR2(255),
    TARGET_LINE_COL_FROM_GRADIENT     NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    USE_CARBON_EMISSION               NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    HELPER_PKG                        VARCHAR2(255),
    CHAIN_INVITE_LANDING_PREABLE      VARCHAR2(4000),
    CHAIN_INVITE_LANDING_QSTN         VARCHAR2(4000),
    ALLOW_DELEG_PLAN                  NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    SUPPLIER_REGION_ROOT_SID          NUMBER(10, 0),
    TRUCOST_COMPANY_ID                NUMBER(10, 0),
    TRUCOST_PORTLET_TAB_ID            NUMBER(10, 0),
    FOGBUGZ_IXPROJECT                 NUMBER(10, 0),
    FOGBUGZ_SAREA                     VARCHAR2(50),
    PROPAGATE_DELEG_VALUES_DOWN       NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    ENABLE_SAVE_CHART_WARNING         NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    ISSUE_EDITOR_URL                  VARCHAR2(200)                   DEFAULT '/csr/site/issues/EditIssueDialog.js' NOT NULL,
    ALLOW_MAKE_EDITABLE               NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    ALERT_URI_FORMAT                  VARCHAR2(250),
    UNMERGED_CONSISTENT               NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    UNMERGED_SCENARIO_RUN_SID         NUMBER(10, 0),
    IND_SELECTIONS_ENABLED            NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CHECK_TOLERANCE_AGAINST_ZERO      NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    SCENARIOS_ENABLED                 NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CALC_JOB_PRIORITY                 NUMBER(10, 0)                   DEFAULT 1 NOT NULL,
    COPY_VALS_TO_NEW_SHEETS           NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    USE_VAR_EXPL_GROUPS               NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    APPLY_FACTORS_TO_CHILD_REGIONS    NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    ALLOW_CUSTOM_ISSUE_TYPES          NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    USER_DIRECTORY_TYPE_ID            NUMBER(10, 0)                   DEFAULT 1 NOT NULL,
    MERGED_SCENARIO_RUN_SID           NUMBER(10, 0),
    BOUNCE_TRACKING_ENABLED           NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    PROPERTY_FLOW_SID                 NUMBER(10, 0),
    ALLOW_SECTION_IN_MANY_CARTS       NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    INCL_INACTIVE_REGIONS             NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    FAILED_CALC_JOB_RETRY_DELAY       NUMBER(10, 0)                   DEFAULT 10 NOT NULL,
    SCRAG_QUEUE                       VARCHAR2(100),
    LOCK_PREVENTS_EDITING             NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    LIKE_FOR_LIKE_SLOTS               NUMBER(10, 0)                   DEFAULT 0 NOT NULL,
    SHOW_AGGREGATE_OVERRIDE           NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    EQUALITY_EPSILON                  NUMBER                          DEFAULT 0 NOT NULL,
    TRANSLATION_CHECKBOX              NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    AUDIT_HELPER_PKG                  VARCHAR2(255),
    ALLOW_MULTIPERIOD_FORMS           NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    START_MONTH                       NUMBER(2, 0)                    DEFAULT 1 NOT NULL,
    CHART_XSL                         VARCHAR2(512),
    SHOW_REGION_DISPOSAL_DATE         NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    DATA_EXPLORER_SHOW_MARKERS        NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    SHOW_ALL_SHEETS_FOR_REP_PRD       NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    DELEG_BROWSER_SHOW_RAG            NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    TGTDASH_IGNORE_ESTIMATED          NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    TGTDASH_HIDE_TOTALS               NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    TGTDASH_SHOW_CHG_FROM_LAST_YR     NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    TGTDASH_SHOW_LAST_YEAR            NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    TGTDASH_COLOUR_TEXT               NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    TGTDASH_SHOW_TARGET_FIRST         NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    TGTDASH_SHOW_FLASH                NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    USE_REGION_EVENTS                 NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    METERING_ENABLED                  NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CRC_METERING_ENABLED              NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CRC_METERING_IND_CORE             NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CRC_METERING_AUTO_CORE            NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    ISS_VIEW_SRC_TO_DEEPEST_SHEET     NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    DELEGS_ALWAYS_SHOW_ADV_OPTS       NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    DEFAULT_ADMIN_CSS                 VARCHAR2(512),
    RESTRICT_ISSUE_VISIBILITY         NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    LIVE_METERING_SHOW_GAPS           NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    METERING_GAPS_FROM_ACQUISITION    NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    REPORTING_IND_ROOT_SID            NUMBER(10, 0),
    DEFAULT_COUNTRY                   VARCHAR2(2),
    MAX_CONCURRENT_CALC_JOBS          NUMBER(10, 0),
    CHECK_DIVISIBILITY                NUMBER(1, 0)                    DEFAULT 1 NOT NULL,
    ADJ_FACTORSET_STARTMONTH          NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CALC_JOB_NOTIFY_ADDRESS           VARCHAR2(512)                   DEFAULT 'SUPPORT@CREDIT360.COM',
    CALC_JOB_NOTIFY_AFTER_ATTEMPTS    NUMBER(10, 0)                   DEFAULT 3,
    CHEMICAL_FLOW_SID                 NUMBER(10, 0),
    MAX_DATAVIEW_HISTORY              NUMBER(10, 0)                   DEFAULT 0,
    NTFY_DAYS_BEFORE_USER_INACTIVE    NUMBER(10, 0)                   DEFAULT 15 NOT NULL,
    DATA_EXPLORER_SHOW_RANKING        NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    DATA_EXPLORER_SHOW_TRENDS         NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    DATA_EXPLORER_SHOW_SCATTER        NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    DATA_EXPLORER_SHOW_RADAR          NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    DATA_EXPLORER_SHOW_GAUGE          NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    DATA_EXPLORER_SHOW_WATERFALL      NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    USER_ADMIN_HELPER_PKG             VARCHAR2(255),
    STATUS_FROM_PARENT_ON_SUBDELEG    NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    TOLERANCE_CHECKER_REQ_MERGED      NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    MULTIPLE_AUDIT_SURVEYS            NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    LEGACY_PERIOD_FORMATTING          NUMBER(1, 0)                    DEFAULT 0,
    EST_JOB_NOTIFY_ADDRESS            VARCHAR2(512)                   DEFAULT 'support@credit360.com',
    EST_JOB_NOTIFY_AFTER_ATTEMPTS     NUMBER(10, 0)                   DEFAULT 3,
    INCLUDE_NULLS_IN_TA               NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    RSTRCT_MULTIPRD_FRM_EDIT_TO_YR    NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    COPY_FORWARD_ALLOW_NA             NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    AUDITS_ON_USERS                   NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    QUICK_SURVEY_FIXED_STRUCTURE      NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    REMOVE_ROLES_ON_ACCOUNT_EXPIR     NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    ALLOW_OLD_CHART_ENGINE            NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    TEAR_OFF_DELEG_HEADER             NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    SHOW_MAP_ON_AUDIT_LIST            NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    DELEG_DROPDOWN_THRESHOLD          NUMBER(10)                      DEFAULT 4 NOT NULL,
    USER_PICKER_EXTRA_FIELDS          VARCHAR2(255),
    FORECASTING_SLOTS                 NUMBER(10, 0)                   DEFAULT 0 NOT NULL,
    DIVISIBILITY_BUG                  NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
	REST_API_GUEST_ACCESS			  NUMBER(1)						  DEFAULT 0 NOT NULL,
	QUESTION_LIBRARY_ENABLED		  NUMBER(1)						  DEFAULT 0 NOT NULL,
	CALC_SUM_TO_DT_CUST_YR_START      NUMBER(1, 0)                    DEFAULT 0 NOT NULL,
    CALC_START_DTM                    DATE							  NOT NULL,
    CALC_END_DTM                      DATE							  NOT NULL,
    SHOW_ADDITIONAL_AUDIT_INFO        NUMBER(1)                       DEFAULT 1 NOT NULL,
	LAZY_LOAD_ROLE_MEMBERSHIP 		  NUMBER(1)						  DEFAULT 0 NOT NULL,
	CALC_FUTURE_WINDOW				  NUMBER(2)						  DEFAULT 1 NOT NULL,
	SITE_TYPE						  VARCHAR(10)					  DEFAULT 'Customer' NOT NULL,
	REQUIRE_SA_LOGIN_REASON			  NUMBER(1)						  DEFAULT 1 NOT NULL,
	ALLOW_CC_ON_ALERTS				  NUMBER(1)						  DEFAULT 0 NOT NULL,
	CHART_ALGORITHM_VERSION	  		  NUMBER(10),
	MARKED_FOR_ZAP					  NUMBER(1)						  DEFAULT 0 NOT NULL,
	ZAP_AFTER_DTM					  DATE,
	BATCH_JOBS_DISABLED				  NUMBER(1)						  DEFAULT 0 NOT NULL,
	CALC_JOBS_DISABLED				  NUMBER(1)						  DEFAULT 0 NOT NULL,
	SCHEDULED_TASKS_DISABLED		  NUMBER(1)						  DEFAULT 0 NOT NULL,
	ALERTS_DISABLED					  NUMBER(1)						  DEFAULT 0 NOT NULL,
	PREVENT_LOGON					  NUMBER(1)						  DEFAULT 0 NOT NULL,
	MOBILE_BRANDING_ENABLED			  NUMBER(1)						  DEFAULT 0 NOT NULL,
	ENABLE_JAVA_AUTH				  NUMBER(1)						  DEFAULT 1 NOT NULL,
	RENDER_CHARTS_AS_SVG			  NUMBER(1)						  DEFAULT 0 NOT NULL,
	SHOW_DATA_APPROVE_CONFIRM		  NUMBER(1)						  DEFAULT 0 NOT NULL,
    AUTO_ANONYMISATION_ENABLED          NUMBER(1,0)                   DEFAULT 0 NOT NULL,
	INACTIVE_DAYS_BEFORE_ANONYMISATION  NUMBER(10,0)                  DEFAULT 30 NOT NULL,
	CONSTRAINT CK_SITE_TYPE CHECK (SITE_TYPE IN ('Customer', 'Prospect', 'Sandbox', 'Staff', 'Retired', 'AutomationTest')),
	CHECK (ALLOW_PARTIAL_SUBMIT IN (0,1)),
    CHECK (USE_TRACKER IN (0,1)),
    CONSTRAINT CK_CUST_USE_USER_SHEETS CHECK (USE_USER_SHEETS IN (0,1)),
    CONSTRAINT CK_AGGREGATION_ENGINE_VERSION CHECK (AGGREGATION_ENGINE_VERSION IN (4)),
    CHECK (ALLOW_VAL_EDIT IN (0,1)),
    CONSTRAINT CK_CUST_FULLY_HIDE_SHEETS CHECK (FULLY_HIDE_SHEETS IN (0,1)),
    CONSTRAINT CK_CUSTOMER_CALC_SUM_0_FILL CHECK (CALC_SUM_ZERO_FILL IN (0,1)),
    CONSTRAINT CK_CUSTOMER_AUDIT_CALC_CHANGES CHECK (AUDIT_CALC_CHANGES IN (0,1)),
    CHECK (TARGET_LINE_COL_FROM_GRADIENT IN (0,1)),
    CHECK (USE_CARBON_EMISSION IN (0,1)),
    CHECK (ALLOW_DELEG_PLAN IN (0,1)),
    CONSTRAINT CK_UNMERGED_CONSISTENT CHECK (unmerged_consistent in (0,1)),
    CONSTRAINT CK_CUSTOMER_IND_SEL_ENABLED CHECK (IND_SELECTIONS_ENABLED IN (0,1)),
    CONSTRAINT CHK_CUS_CHK_TOL_ZERO CHECK (CHECK_TOLERANCE_AGAINST_ZERO IN (0,1)),
    CONSTRAINT CK_CUSTOMER_SCENARIOS_ENABLED CHECK (scenarios_enabled in (0,1)),
    CONSTRAINT CHK_CPY_VAL_TO_NEW_SHT CHECK (COPY_VALS_TO_NEW_SHEETS IN (0,1)),
    CONSTRAINT CK_USE_VAR_EXPL_GROUPS CHECK (USE_VAR_EXPL_GROUPS IN (0,1)),
    CONSTRAINT CHK_CUS_APPLY_FCTRS_CHLDRN CHECK (APPLY_FACTORS_TO_CHILD_REGIONS IN (0,1)),
    CONSTRAINT CHK_CUSTOMER_ALLOW_CUSTOM_IT CHECK (ALLOW_CUSTOM_ISSUE_TYPES IN (0,1)),
    CONSTRAINT CK_CUST_BOUNCE_TRACK_ENABLED CHECK (BOUNCE_TRACKING_ENABLED IN (0,1)),
    CONSTRAINT CK_CUST_ISSUE_ESC_ENABLED CHECK (ISSUE_ESCALATION_ENABLED IN (0,1)),
    CONSTRAINT CK_CUST_START_MONTH CHECK (START_MONTH BETWEEN 1 AND 12),
    CONSTRAINT CK_CUST_SHO_REGION_DISP_DATE CHECK (SHOW_REGION_DISPOSAL_DATE IN (0, 1)),
    CONSTRAINT CK_CUST_SHO_ALL_SHT_REP_PRD CHECK (SHOW_ALL_SHEETS_FOR_REP_PRD IN (0, 1)),
    CONSTRAINT CK_CUST_DELEG_BROWSER_SHO_RAG CHECK (DELEG_BROWSER_SHOW_RAG IN (0, 1)),
    CONSTRAINT CK_CUST_TGTDASH_IGNORE_EST CHECK (TGTDASH_IGNORE_ESTIMATED IN (0, 1)),
    CONSTRAINT CK_CUST_TGTDASH_HIDE_TOTALS CHECK (TGTDASH_HIDE_TOTALS IN (0, 1)),
    CONSTRAINT CK_CUST_TGTDSH_SHO_CHG_LST_YR CHECK (TGTDASH_SHOW_CHG_FROM_LAST_YR IN (0, 1)),
    CONSTRAINT CK_CUST_TGTDASH_SHOW_LAST_YR CHECK (TGTDASH_SHOW_LAST_YEAR IN (0, 1)),
    CONSTRAINT CK_CUST_TGTDASH_COLOUR_TEXT CHECK (TGTDASH_COLOUR_TEXT IN (0, 1)),
    CONSTRAINT CK_CUST_TGTDASH_SHO_TGT_FIRST CHECK (TGTDASH_SHOW_TARGET_FIRST IN (0, 1)),
    CONSTRAINT CK_CUST_TGTDASH_SHOW_FLASH CHECK (TGTDASH_SHOW_FLASH IN (0, 1)),
    CONSTRAINT CK_CUST_USE_REGION_EVENTS CHECK (USE_REGION_EVENTS IN (0, 1)),
    CONSTRAINT CK_CUST_METERING_ENABLED CHECK (METERING_ENABLED IN (0, 1)),
    CONSTRAINT CK_CUST_CRC_METERING_ENABLED CHECK (CRC_METERING_ENABLED IN (0, 1)),
    CONSTRAINT CK_CUST_CRC_METERING_IND_CORE CHECK (CRC_METERING_IND_CORE IN (0, 1)),
    CONSTRAINT CK_CUST_CRC_METERNG_AUTO_CORE CHECK (CRC_METERING_AUTO_CORE IN (0, 1)),
    CONSTRAINT CK_CUST_ISS_VW_SRC_DPST_SHT CHECK (ISS_VIEW_SRC_TO_DEEPEST_SHEET IN (0, 1)),
    CONSTRAINT CK_DLGS_ALWAYS_SHOW_ADV_OPTS CHECK (DELEGS_ALWAYS_SHOW_ADV_OPTS IN (0, 1)),
    CONSTRAINT CK_CUSTOMER_ISSUE_VISIBILITY CHECK (CHECK_DIVISIBILITY IN (0,1)),
    CONSTRAINT CK_CUSTOMER_CHECK_DIVIS CHECK (CHECK_DIVISIBILITY IN (0,1)),
    CONSTRAINT CHK_ALLOW_MULTIPERIOD_FRM CHECK (ALLOW_MULTIPERIOD_FORMS IN (0,1)),
    CONSTRAINT CK_CUSTOMER_REPORTING_SID_NN CHECK (CURRENT_REPORTING_PERIOD_SID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT CK_CUSTOMER_REGION_ROOT_NN CHECK (REGION_ROOT_SID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT CK_CUSTOMER_IND_ROOT_NN CHECK (IND_ROOT_SID IS NOT NULL) DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT CK_CUST_DE_SHOW_MARKERS CHECK (DATA_EXPLORER_SHOW_MARKERS IN (0, 1)),
    CONSTRAINT CK_CUST_DE_SHOW_RANKING CHECK (DATA_EXPLORER_SHOW_RANKING IN (0, 1)),
    CONSTRAINT CK_CUST_DE_SHOW_TRENDS CHECK (DATA_EXPLORER_SHOW_TRENDS IN (0, 1)),
    CONSTRAINT CK_CUST_DE_SHOW_SCATTER CHECK (DATA_EXPLORER_SHOW_SCATTER IN (0, 1)),
    CONSTRAINT CK_CUST_DE_SHOW_RADAR CHECK (DATA_EXPLORER_SHOW_RADAR IN (0, 1)),
    CONSTRAINT CK_CUST_DE_SHOW_GAUGE CHECK (DATA_EXPLORER_SHOW_GAUGE IN (0, 1)),
    CONSTRAINT CK_CUST_DE_SHOW_WATERFALL CHECK (DATA_EXPLORER_SHOW_WATERFALL IN (0, 1)),
    CONSTRAINT CK_CUSTOMER_TOL_CHK_REQ_MRGD CHECK (TOLERANCE_CHECKER_REQ_MERGED IN (0, 1, 2)),
    CONSTRAINT CK_MULTIPLE_AUDIT_SURVEYS CHECK (MULTIPLE_AUDIT_SURVEYS IN (0, 1)),
    CONSTRAINT CK_CUSTOMER_COPY_FOR_ALLOW_NA CHECK (COPY_FORWARD_ALLOW_NA IN (0,1)),
    CONSTRAINT CK_AUDITS_ON_USERS CHECK (AUDITS_ON_USERS IN (0, 1)),
    CONSTRAINT CHK_QS_FIXED_STRUCTURE CHECK (QUICK_SURVEY_FIXED_STRUCTURE IN (0, 1)),
    CONSTRAINT CK_CUST_ALLOW_OLD_CHART_ENGINE CHECK (ALLOW_OLD_CHART_ENGINE IN (0,1)),
    CONSTRAINT CK_CUST_TEAR_OFF_DELEG CHECK (TEAR_OFF_DELEG_HEADER IN (0,1)),
    CONSTRAINT CHK_SHOW_MAP_ON_AUDIT_LIST CHECK (SHOW_MAP_ON_AUDIT_LIST IN (0, 1)),
    CONSTRAINT CK_CUSTOMER_DIVISIBILITY_BUG CHECK (DIVISIBILITY_BUG IN (0,1)),
	CONSTRAINT CK_CUST_REST_API_GUEST_ACCESS CHECK (REST_API_GUEST_ACCESS IN (0,1)),
	CONSTRAINT CK_QUESTION_LIBRARY_ENABLED CHECK (QUESTION_LIBRARY_ENABLED IN (0,1)),
	CONSTRAINT CK_CALC_SUM_TO_DT_CUST_YR CHECK (CALC_SUM_TO_DT_CUST_YR_START IN (0,1)),
    CONSTRAINT CHK_SHOW_ADDITIONAL_AUDIT_INFO CHECK (SHOW_ADDITIONAL_AUDIT_INFO IN (0,1)),
	CONSTRAINT CHK_LAZY_LOAD_ROLE_MEMBERSHIP CHECK (LAZY_LOAD_ROLE_MEMBERSHIP IN (0,1)),
	CONSTRAINT CHK_CALC_FUTURE_WINDOW CHECK (CALC_FUTURE_WINDOW >= 1 AND CALC_FUTURE_WINDOW < 15),
	CONSTRAINT CHK_ADJ_FACTORSET_STARTMONTH CHECK (ADJ_FACTORSET_STARTMONTH IN (0,1)),
	CONSTRAINT CK_ALLOW_CC_ON_ALERTS CHECK (ALLOW_CC_ON_ALERTS IN (0,1)),
	CONSTRAINT CK_ALLOW_MARKED_FOR_ZAP CHECK (MARKED_FOR_ZAP IN (0,1)),
	CONSTRAINT CK_ALLOW_BATCH_JOBS_DISABLED CHECK (BATCH_JOBS_DISABLED IN (0,1)),
	CONSTRAINT CK_ALLOW_CALC_JOBS_DISABLED CHECK (CALC_JOBS_DISABLED IN (0,1)),
	CONSTRAINT CK_ALLOW_SCHEDULED_TASKS_DISABLED CHECK (SCHEDULED_TASKS_DISABLED IN (0,1)),
	CONSTRAINT CK_ALLOW_ALERTS_DISABLED CHECK (ALERTS_DISABLED IN (0,1)),
	CONSTRAINT CK_ALLOW_PREVENT_LOGON CHECK (PREVENT_LOGON IN (0,1)),
	CONSTRAINT CK_ENABLE_MOBILE_BRANDING CHECK (MOBILE_BRANDING_ENABLED IN (0,1)),
	CONSTRAINT CK_ENABLE_JAVA_AUTH CHECK (ENABLE_JAVA_AUTH IN (0, 1)),
    CONSTRAINT CK_RENDER_CHARTS_AS_SVG CHECK (RENDER_CHARTS_AS_SVG IN (0,1)),
    CONSTRAINT CK_SHOW_DATA_APPROVE_CONFIRM CHECK (SHOW_DATA_APPROVE_CONFIRM IN (0,1)),
	CONSTRAINT PK_CUSTOMER PRIMARY KEY (APP_SID)
)
;

-- Table to store long lived generic feature flags.
-- They are intended to be used for a short time (setting to 1), then if the feature is accepted,
-- the feature flag wrapper around the code is removed and the flag set back to 0.
-- No requirement to clone this table.
CREATE TABLE CSR.CUSTOMER_FEATURE_FLAGS(
    APP_SID                             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FEATURE_FLAG_SCRAG_A                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    FEATURE_FLAG_SCRAG_B                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    FEATURE_FLAG_SCRAG_C                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_CUSTOMER_FEATURE_FLAGS PRIMARY KEY (APP_SID),
    CONSTRAINT CHK_CUSTOMER_FEATURE_FLAGS_SCRAG_A CHECK (FEATURE_FLAG_SCRAG_A IN (0, 1)),
    CONSTRAINT CHK_CUSTOMER_FEATURE_FLAGS_SCRAG_B CHECK (FEATURE_FLAG_SCRAG_B IN (0, 1)),
    CONSTRAINT CHK_CUSTOMER_FEATURE_FLAGS_SCRAG_C CHECK (FEATURE_FLAG_SCRAG_C IN (0, 1))
)
;

CREATE TABLE CSR.CUSTOMER_ALERT_TYPE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    STD_ALERT_TYPE_ID         NUMBER(10, 0),
    GET_PARAMS_SP             VARCHAR2(255),
	NOTIFICATION_TYPE_ID      VARCHAR2(36),
    CONSTRAINT PK_CUSTOMER_ALERT_TYPE PRIMARY KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
)
;

CREATE SEQUENCE CSR.CUSTOMER_ALERT_TYPE_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_CUSTOMER_ALERT_TYPE ON CSR.CUSTOMER_ALERT_TYPE(APP_SID, NVL2(STD_ALERT_TYPE_ID, 'S'||STD_ALERT_TYPE_ID, 'C'||CUSTOMER_ALERT_TYPE_ID))
;

CREATE TABLE CSR.CUSTOMER_ALERT_TYPE_PARAM(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    FIELD_NAME                VARCHAR2(100)     NOT NULL,
    DESCRIPTION               VARCHAR2(200)     NOT NULL,
    HELP_TEXT                 VARCHAR2(2000)    NOT NULL,
    REPEATS                   NUMBER(1, 0)      NOT NULL,
    DISPLAY_POS               NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_CUS_ALERT_TYPE_PARAM PRIMARY KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID, FIELD_NAME)
)
;

CREATE TABLE CSR.CUSTOMER_FILE_UPLOAD_MIME_OPT(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MIME_TYPE     VARCHAR2(255)    NOT NULL,
    IS_ALLOWED    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_CUSTOMER_FILE_UPLD_MIME_OPT PRIMARY KEY (APP_SID, MIME_TYPE),
    CONSTRAINT CHK_FILE_UPLD_MIME_IS_ALLOWED CHECK (IS_ALLOWED IN (0, 1)),
    CONSTRAINT CHK_FILE_UPLD_MIME_FILE_EXT CHECK (MIME_TYPE = LOWER(TRIM(MIME_TYPE)))
)
;

CREATE TABLE CSR.CUSTOMER_FILE_UPLOAD_TYPE_OPT(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FILE_EXTENSION    VARCHAR2(255)    NOT NULL,
    IS_ALLOWED        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_CUSTOMER_FILE_UPLD_TYPE_OPT PRIMARY KEY (APP_SID, FILE_EXTENSION),
    CONSTRAINT CHK_FILE_UPLD_TYPE_IS_ALLOWED CHECK (IS_ALLOWED IN (0, 1)),
    CONSTRAINT CHK_FILE_UPLD_TYPE_FILE_EXT CHECK (FILE_EXTENSION = LOWER(TRIM(FILE_EXTENSION)))
)
;

CREATE TABLE CSR.CUSTOMER_FLOW_ALERT_CLASS(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_ALERT_CLASS    VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_CUSTOMER_FLOW_ALERT_CLASS PRIMARY KEY (APP_SID, FLOW_ALERT_CLASS)
)
;

CREATE TABLE CSR.CUSTOMER_FLOW_CAPABILITY(
    APP_SID                   NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    FLOW_CAPABILITY_ID        NUMBER(10, 0) NOT NULL,
    FLOW_ALERT_CLASS          VARCHAR2(256 BYTE) NOT NULL,
    DESCRIPTION               VARCHAR2(256 BYTE) NOT NULL,
    PERM_TYPE                 NUMBER(1, 0) NOT NULL,
    DEFAULT_PERMISSION_SET    NUMBER(10, 0) DEFAULT 0 NOT NULL,
    LOOKUP_KEY                VARCHAR2(256),
	IS_SYSTEM_MANAGED         NUMBER(1, 0) DEFAULT 0 NOT NULL,
    CONSTRAINT PK_CUST_FLOW_CAPABILITY PRIMARY KEY (APP_SID, FLOW_CAPABILITY_ID),
    CONSTRAINT CK_CUST_FLOW_CAPABILITY CHECK (FLOW_CAPABILITY_ID > 1000000),
    CONSTRAINT CK_CUST_FLOW_CAP_PERM_TYPE CHECK (PERM_TYPE IN (0, 1)),
	CONSTRAINT CK_CUST_FLOW_CAP_IS_SYS_MNGD CHECK (IS_SYSTEM_MANAGED IN (0, 1))
)
;

CREATE SEQUENCE CSR.CUSTOMER_FLOW_CAP_ID_SEQ MINVALUE 1000001;

CREATE UNIQUE INDEX CSR.UX_CUST_FLOW_CAPABILITY_LK ON CSR.CUSTOMER_FLOW_CAPABILITY(CASE WHEN LOOKUP_KEY IS NOT NULL THEN APP_SID END, LOWER(LOOKUP_KEY))
;

CREATE TABLE CSR.CUSTOMER_GEO_MAP_TAB_TYPE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_TAB_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CUSTOMER_GEO_MAP_TAB_TYPE PRIMARY KEY (APP_SID, GEO_MAP_TAB_TYPE_ID)
)
;

CREATE TABLE CSR.CUSTOMER_HELP_LANG(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    HELP_LANG_ID    NUMBER(10, 0)    NOT NULL,
    IS_DEFAULT      NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK5_2 PRIMARY KEY (APP_SID, HELP_LANG_ID)
)
;

CREATE TABLE CSR.CUSTOMER_INIT_SAVING_TYPE(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SAVING_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    IS_RUNNING        NUMBER(1, 0),
    IS_DURING         NUMBER(1, 0),
    CHECK (IS_RUNNING IS NULL OR IS_RUNNING IN (0,1)),
    CHECK (IS_DURING IS NULL OR IS_DURING IN (0,1)),
    CONSTRAINT PK_CUSTOMER_INIT_SAVING_TYPE PRIMARY KEY (APP_SID, SAVING_TYPE_ID)
)
;

CREATE TABLE CSR.CUSTOMER_MAP(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MAP_ID         NUMBER(10, 0)     NOT NULL,
    MAP_CONTEXT    NUMBER(10, 0)     DEFAULT 0,
    EXTENT_N       NUMBER(14, 10)    DEFAULT 80,
    EXTENT_S       NUMBER(14, 10)    DEFAULT -80,
    EXTENT_W       NUMBER(14, 10)    DEFAULT -160,
    EXTENT_E       NUMBER(14, 10)    DEFAULT 160,
    CONFIG_PATH    VARCHAR2(1024)    DEFAULT '/fp/shared/map/OpenStreetMap.js',
    CONSTRAINT PK1_2 PRIMARY KEY (APP_SID, MAP_ID)
)
;

CREATE TABLE CSR.CUSTOMER_PORTLET(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOMER_PORTLET_SID    NUMBER(10, 0)    NOT NULL,
    PORTLET_ID              NUMBER(10, 0),
    DEFAULT_STATE           CLOB,
    PORTAL_GROUP            VARCHAR2(50),
    CONSTRAINT PK_CUSTOMER_PORTLET PRIMARY KEY (APP_SID, CUSTOMER_PORTLET_SID)
)
;

CREATE TABLE CSR.CUSTOMER_REGION_TYPE(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_TYPE    NUMBER(2, 0)     NOT NULL,
    CONSTRAINT PK785 PRIMARY KEY (APP_SID, REGION_TYPE)
)
;

CREATE TABLE CSR.CUSTOMER_SAML_SSO(
    APP_SID               		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IDP_URL               		VARCHAR2(1024)	NOT NULL,
    SIGN_AUTH_REQUEST     		NUMBER(1, 0)	NOT NULL,
    SIGNED_RESPONSE_REQ   		NUMBER(1, 0)	NOT NULL,
    USE_NAME_ID           		NUMBER(1, 0)	NOT NULL,
    NAME_ATTRIBUTE        		VARCHAR2(255),
    LOGOUT_REDIRECT_URL   		VARCHAR2(1024),
    CONSUMER_URL          		VARCHAR2(2048),
    USE_HTTP_REDIRECT     		NUMBER(1, 0)	DEFAULT 0 NOT NULL,
    SHOW_SSO_OPTION_LOGIN 		NUMBER(1)		DEFAULT 0 NOT NULL,
	USE_DEFAULT_USER_ACC  		NUMBER(1, 0)	DEFAULT 0 NOT NULL, 
	DEFAULT_LOGON_USER_SID		NUMBER(10, 0),
	USE_BASIC_USER_MANAGEMENT	NUMBER(1)		DEFAULT 0 NOT NULL,
	USE_FIRST_LAST_NAME_ATTRS	NUMBER(1)		DEFAULT 0 NOT NULL,
	FULL_NAME_ATTRIBUTE			VARCHAR2(255),
	FIRST_NAME_ATTRIBUTE		VARCHAR2(255),
	LAST_NAME_ATTRIBUTE			VARCHAR2(255),
	EMAIL_ATTRIBUTE				VARCHAR2(255),
    CONSTRAINT CHK_USE_HTTP_REDIRECT CHECK (USE_HTTP_REDIRECT IN (0,1)),
    CONSTRAINT CHK_SIGN_AUTH_REQUEST CHECK (SIGN_AUTH_REQUEST IN (0,1)),
    CONSTRAINT CHK_SIGNED_RESPONSE_REQ CHECK (SIGNED_RESPONSE_REQ IN (0,1)),
    CONSTRAINT CHK_USE_NAME_ID CHECK (USE_NAME_ID IN (0,1)),
	CONSTRAINT CHK_SHOW_SSO_OPTION_LOG CHECK (SHOW_SSO_OPTION_LOGIN IN (0,1)),
    CONSTRAINT CHK_NAME_ATTRIBUTE CHECK ((USE_NAME_ID = 1 AND NAME_ATTRIBUTE IS NULL) OR (USE_NAME_ID = 0 AND NAME_ATTRIBUTE IS NOT NULL)),
	CONSTRAINT CHK_USE_DEFAULT_USER_ACC CHECK (USE_DEFAULT_USER_ACC IN (0,1)),
	CONSTRAINT CHK_USE_DEF_USER_ACC_SET CHECK (USE_DEFAULT_USER_ACC <> 1 OR (USE_DEFAULT_USER_ACC = 1 AND USE_DEFAULT_USER_ACC IS NOT NULL)),
	CONSTRAINT CHK_BASIC_USR_MGMT_ATTRS CHECK ((use_basic_user_management IS NULL OR use_basic_user_management = 0) OR (use_basic_user_management = 1 AND full_name_attribute IS NOT NULL AND email_attribute IS NOT NULL) OR (use_basic_user_management = 1 AND use_first_last_name_attrs = 1)),
	CONSTRAINT CHK_USE_FIRST_LAST_NAME_ATTRS CHECK ((use_basic_user_management IS NULL OR use_basic_user_management = 0) OR (use_first_last_name_attrs IS NULL OR use_first_last_name_attrs = 0) OR (use_basic_user_management = 1 AND use_first_last_name_attrs = 1 AND first_name_attribute IS NOT NULL AND last_name_attribute IS NOT NULL)),
	CONSTRAINT FK_DEFAULT_LOGON_USER_SID FOREIGN KEY (APP_SID, DEFAULT_LOGON_USER_SID) REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID),
    CONSTRAINT PK_CUSTOMER_SAML_SSO PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.CUSTOMER_SAML_SSO_CERT(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PUBLIC_SIGNING_CERT    BLOB             NOT NULL,
    SSO_CERT_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CUSTOMER_SAML_SSO_CERT PRIMARY KEY (APP_SID, SSO_CERT_ID)
)
;

CREATE SEQUENCE CSR.SSO_CERT_ID_SEQ CACHE 5;

CREATE TABLE CSR.DASHBOARD(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    NAME             VARCHAR2(255)    NOT NULL,
    NOTE             CLOB             DEFAULT EMPTY_CLOB(),
    CONSTRAINT PK_DASHBOARD PRIMARY KEY (APP_SID, DASHBOARD_SID)
)
;

CREATE TABLE CSR.DASHBOARD_ITEM(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DASHBOARD_ITEM_ID    NUMBER(10, 0)    NOT NULL,
    DASHBOARD_SID        NUMBER(10, 0)    NOT NULL,
    PARENT_SID           NUMBER(10, 0)    NOT NULL,
    PERIOD               CHAR             NOT NULL,
    COMPARISON_TYPE      NUMBER(10, 0)    NOT NULL,
    IND_SID              NUMBER(10, 0)    NOT NULL,
    REGION_SID           NUMBER(10, 0)    NOT NULL,
    NAME                 VARCHAR2(255)    NOT NULL,
    POS                  NUMBER(10, 0)    NOT NULL,
    DATAVIEW_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DASHBOARD_ITEM PRIMARY KEY (APP_SID, DASHBOARD_ITEM_ID)
)
;

CREATE SEQUENCE CSR.DASHBOARD_ITEM_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_DASH_ITEM_DASH ON CSR.DASHBOARD_ITEM(APP_SID, DASHBOARD_SID)
;

CREATE INDEX CSR.IDX_DASH_ITEM_DATAVIEW ON CSR.DASHBOARD_ITEM(APP_SID, DATAVIEW_SID)
;

CREATE INDEX CSR.IDX_DASH_ITEM_COMP_TYPE ON CSR.DASHBOARD_ITEM(COMPARISON_TYPE)
;

CREATE INDEX CSR.IDX_DASH_ITEM_IND ON CSR.DASHBOARD_ITEM(APP_SID, IND_SID)
;

CREATE INDEX CSR.IDX_DASH_ITEM_REG ON CSR.DASHBOARD_ITEM(APP_SID, REGION_SID)
;

CREATE TABLE CSR.DASHBOARD_ITEM_COMPARISON_TYPE(
    COMPARISON_TYPE    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION        VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_COMPARISON_TYPE PRIMARY KEY (COMPARISON_TYPE)
)
;

CREATE TABLE CSR.DATAVIEW(
    APP_SID                           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID                      NUMBER(10, 0)     NOT NULL,
    PARENT_SID                        NUMBER(10, 0)     NOT NULL,
    NAME                              VARCHAR2(256),
    START_DTM                         DATE              NOT NULL,
    END_DTM                           DATE,
    GROUP_BY                          VARCHAR2(128)     NOT NULL,
    PERIOD_SET_ID                     NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID                NUMBER(10, 0)     NOT NULL,
    CHART_CONFIG_XML                  CLOB              DEFAULT EMPTY_CLOB(),
    CHART_STYLE_XML                   CLOB              DEFAULT EMPTY_CLOB(),
    POS                               NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    DESCRIPTION                       VARCHAR2(2048),
    DATAVIEW_TYPE_ID                  NUMBER(6, 0)      DEFAULT 1 NOT NULL,
    SHOW_CALC_TRACE                   NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SHOW_VARIANCE                     NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SHOW_ABS_VARIANCE                 NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SORT_BY_MOST_RECENT               NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    INCLUDE_PARENT_REGION_NAMES       NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    LAST_UPDATED_DTM                  DATE              DEFAULT SYSDATE NOT NULL,
    LAST_UPDATED_SID                  NUMBER(10, 0),
    RANK_FILTER_TYPE                  NUMBER(10, 0)     NOT NULL,
    AGGREGATION_PERIOD_ID             NUMBER(10, 0),
    RANK_LIMIT_LEFT                   NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    RANK_IND_SID                      NUMBER(10, 0),
    RANK_LIMIT_RIGHT                  NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    RANK_LIMIT_LEFT_TYPE              NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    RANK_LIMIT_RIGHT_TYPE             NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    RANK_REVERSE                      NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    REGION_GROUPING_TAG_GROUP         NUMBER(10, 0),
    SHOW_REGION_EVENTS                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SUPPRESS_UNMERGED_DATA_MESSAGE    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    VERSION_NUM                       NUMBER(10, 0),
    SHOW_VARIANCE_EXPLANATIONS        NUMBER(1, 0)      NOT NULL,
    ANONYMOUS_REGION_NAMES            NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    INCLUDE_NOTES_IN_TABLE            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    TREAT_NULL_AS_ZERO                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
	HIGHLIGHT_CHANGED_SINCE			  NUMBER(1, 0)	    DEFAULT 0 NOT NULL,
	HIGHLIGHT_CHANGED_SINCE_DTM		  DATE,
	SHOW_LAYER_VARIANCE_PCT			  NUMBER(1,0)		DEFAULT 0 NOT NULL,
	SHOW_LAYER_VARIANCE_ABS			  NUMBER(1,0)		DEFAULT 0 NOT NULL,
	SHOW_LAYER_VARIANCE_START		  NUMBER(10,0)		DEFAULT 0 NOT NULL,
 	SHOW_LAYER_VARIANCE_PCT_BASE	  NUMBER(1,0)		DEFAULT 0 NOT NULL,
	SHOW_LAYER_VARIANCE_ABS_BASE	  NUMBER(1,0)		DEFAULT 0 NOT NULL,
	REGION_SELECTION				  NUMBER(1,0)		DEFAULT 6 NOT NULL,
    CONSTRAINT CK_DATAVIEW_SHOW_CALC_TRACE CHECK (SHOW_CALC_TRACE IN (0,1)),
    CONSTRAINT CK_DATAVIEW_SHOW_VARIANCE CHECK (SHOW_VARIANCE IN (0,1)),
    CONSTRAINT CK_DATAVIEW_SHOW_ABS_VARIANCE CHECK (SHOW_ABS_VARIANCE IN (0,1)),
    CONSTRAINT CK_DATAVIEW_TREAT_NULL_AS_ZRO CHECK (TREAT_NULL_AS_ZERO IN (0,1)),
	CONSTRAINT CK_DATAVIEW_HGHLGHT_CHGD_SNCE CHECK (HIGHLIGHT_CHANGED_SINCE IN (0,1)),
    CONSTRAINT PK_DATAVIEW PRIMARY KEY (APP_SID, DATAVIEW_SID)
)
;

CREATE INDEX CSR.FK_DATAVIEW_TAG_GROUP ON CSR.DATAVIEW(APP_SID, REGION_GROUPING_TAG_GROUP)
;

CREATE TABLE CSR.DATAVIEW_ARBITRARY_PERIOD(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID    NUMBER(10, 0)    NOT NULL,
    START_DTM       DATE             NOT NULL,
    END_DTM         DATE,
    CONSTRAINT PK_DATAVIEW_ARB_PERIOD PRIMARY KEY (APP_SID, DATAVIEW_SID, START_DTM)
)
;

CREATE TABLE CSR.DATAVIEW_ARBITRARY_PERIOD_HIST(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID    NUMBER(10, 0)    NOT NULL,
    VERSION_NUM     NUMBER(10, 0)    NOT NULL,
    START_DTM       DATE             NOT NULL,
    END_DTM         DATE,
    CONSTRAINT PK_DATAVIEW_HIST_ARB_PERIOD PRIMARY KEY (APP_SID, DATAVIEW_SID, VERSION_NUM, START_DTM)
)
;

CREATE TABLE CSR.DATAVIEW_HISTORY(
    APP_SID                           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID                      NUMBER(10, 0)     NOT NULL,
    VERSION_NUM                       NUMBER(10, 0)     NOT NULL,
    NAME                              VARCHAR2(256)     NOT NULL,
    START_DTM                         DATE              NOT NULL,
    END_DTM                           DATE,
    GROUP_BY                          VARCHAR2(128)     NOT NULL,
    CHART_CONFIG_XML                  CLOB,
    CHART_STYLE_XML                   CLOB,
    POS                               NUMBER(10, 0)     NOT NULL,
    DESCRIPTION                       VARCHAR2(2048),
    DATAVIEW_TYPE_ID                  NUMBER(6, 0)      NOT NULL,
    SHOW_CALC_TRACE                   NUMBER(1, 0)      NOT NULL,
    SHOW_VARIANCE                     NUMBER(1, 0)      NOT NULL,
    SHOW_ABS_VARIANCE                 NUMBER(1, 0)      NOT NULL,
    SORT_BY_MOST_RECENT               NUMBER(1, 0)      NOT NULL,
    INCLUDE_PARENT_REGION_NAMES       NUMBER(10, 0)     NOT NULL,
    LAST_UPDATED_DTM                  DATE              NOT NULL,
    LAST_UPDATED_SID                  NUMBER(10, 0),
    RANK_FILTER_TYPE                  NUMBER(10, 0)     NOT NULL,
    RANK_LIMIT_LEFT                   NUMBER(10, 0)     NOT NULL,
    RANK_IND_SID                      NUMBER(10, 0),
    RANK_LIMIT_RIGHT                  NUMBER(10, 0)     NOT NULL,
    RANK_LIMIT_LEFT_TYPE              NUMBER(10, 0)     NOT NULL,
    RANK_LIMIT_RIGHT_TYPE             NUMBER(10, 0)     NOT NULL,
    RANK_REVERSE                      NUMBER(1, 0)      NOT NULL,
    REGION_GROUPING_TAG_GROUP         NUMBER(10, 0),
    ANONYMOUS_REGION_NAMES            NUMBER(1, 0)      NOT NULL,
    INCLUDE_NOTES_IN_TABLE            NUMBER(1, 0)      NOT NULL,
    SHOW_REGION_EVENTS                NUMBER(1, 0)      NOT NULL,
    SUPPRESS_UNMERGED_DATA_MESSAGE    NUMBER(1, 0)      NOT NULL,
    PERIOD_SET_ID                     NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID                NUMBER(10, 0)     NOT NULL,
    AGGREGATION_PERIOD_ID             NUMBER(10, 0),
    SHOW_VARIANCE_EXPLANATIONS        NUMBER(1, 0)      NOT NULL,
    TREAT_NULL_AS_ZERO                NUMBER(1, 0)      NOT NULL,
	HIGHLIGHT_CHANGED_SINCE			  NUMBER(1, 0)		DEFAULT 0 NOT NULL,
	HIGHLIGHT_CHANGED_SINCE_DTM		  DATE,
	SHOW_LAYER_VARIANCE_PCT			  NUMBER(1,0)		DEFAULT 0 NOT NULL,
	SHOW_LAYER_VARIANCE_ABS			  NUMBER(1,0)		DEFAULT 0 NOT NULL,
	SHOW_LAYER_VARIANCE_START		  NUMBER(10,0)		DEFAULT 0 NOT NULL,
 	SHOW_LAYER_VARIANCE_PCT_BASE	  NUMBER(1,0)		DEFAULT 0 NOT NULL,
	SHOW_LAYER_VARIANCE_ABS_BASE	  NUMBER(1,0)		DEFAULT 0 NOT NULL,
	REGION_SELECTION				  NUMBER(1,0)		DEFAULT 6 NOT NULL,
    CONSTRAINT PK_DATAVIEW_HISTORY PRIMARY KEY (APP_SID, DATAVIEW_SID, VERSION_NUM),
    CONSTRAINT CK_DV_HIST_TREAT_NULL_AS_ZERO CHECK (TREAT_NULL_AS_ZERO IN (0,1)),
	CONSTRAINT CK_DV_HIST_HIGHLIGHT_CHGD_SNCE CHECK (HIGHLIGHT_CHANGED_SINCE IN (0,1))
)
;

CREATE TABLE CSR.DATAVIEW_IND_DESCRIPTION(
    APP_SID         	NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID    	NUMBER(10, 0)     NOT NULL,
    POS             	NUMBER(10, 0)     NOT NULL,
    LANG            	VARCHAR2(10)      NOT NULL,
    DESCRIPTION     	VARCHAR2(1023)    NOT NULL,
	LAST_CHANGED_DTM	DATE,
    CONSTRAINT PK_DATAVIEW_IND_DESCRIPTION PRIMARY KEY (APP_SID, DATAVIEW_SID, POS, LANG)
)
;

CREATE INDEX CSR.DATAVIEW_IND_DESC_LANG ON CSR.DATAVIEW_IND_DESCRIPTION(APP_SID, LANG)
;

CREATE TABLE CSR.DATAVIEW_IND_MEMBER(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID             NUMBER(10, 0)    NOT NULL,
    IND_SID                  NUMBER(10, 0)    NOT NULL,
    NORMALIZATION_IND_SID    NUMBER(10, 0),
    CALCULATION_TYPE_ID      NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    POS                      NUMBER(10, 0)    NOT NULL,
    FORMAT_MASK              VARCHAR2(255),
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    SHOW_AS_RANK             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT UK_DATAVIEW_IND_POS UNIQUE (APP_SID, DATAVIEW_SID, POS)
)
;

CREATE INDEX CSR.IX_DV_IND_MEM_DV_IND ON CSR.DATAVIEW_IND_MEMBER(APP_SID, DATAVIEW_SID, IND_SID)
;

CREATE INDEX CSR.IX_DV_IND_MEM_IND ON CSR.DATAVIEW_IND_MEMBER(APP_SID, IND_SID)
;

CREATE TABLE CSR.DATAVIEW_REGION_DESCRIPTION(
    APP_SID         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID    NUMBER(10, 0)     NOT NULL,
    REGION_SID      NUMBER(10, 0)     NOT NULL,
    LANG            VARCHAR2(10)      NOT NULL,
    DESCRIPTION     VARCHAR2(1023)    NOT NULL,
    CONSTRAINT PK_DATAVIEW_REGION_DESC PRIMARY KEY (APP_SID, DATAVIEW_SID, REGION_SID, LANG)
)
;

CREATE TABLE CSR.DATAVIEW_REGION_MEMBER(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID      NUMBER(10, 0)    NOT NULL,
    POS             NUMBER(10, 0)    NOT NULL,
    TAB_LEVEL       NUMBER(10, 0),
    CONSTRAINT PK754 PRIMARY KEY (APP_SID, DATAVIEW_SID, REGION_SID),
    CONSTRAINT UK_DATAVIEW_REGION_POS UNIQUE (APP_SID, DATAVIEW_SID, POS)
)
;

CREATE INDEX CSR.IX_DV_REG_MEM_REG ON CSR.DATAVIEW_REGION_MEMBER(APP_SID, REGION_SID)
;

CREATE TABLE CSR.DATAVIEW_SCENARIO_RUN(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID         NUMBER(10, 0)    NOT NULL,
    SCENARIO_RUN_TYPE    NUMBER(10, 0)    NOT NULL,
    SCENARIO_RUN_SID     NUMBER(10, 0),
    CONSTRAINT CK_SCENARIO_RUN_SID CHECK (( scenario_run_type = 2 and scenario_run_sid is not null ) or
( scenario_run_type in (0,1) and scenario_run_sid is null )),
    CONSTRAINT UK_DATAVIEW_SCENARIO_RUN UNIQUE (APP_SID, DATAVIEW_SID, SCENARIO_RUN_TYPE, SCENARIO_RUN_SID)
)
;

CREATE TABLE CSR.DATAVIEW_TREND(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    POS                  NUMBER(10, 0)     NOT NULL,
    NAME                 VARCHAR2(255)     NOT NULL,
    TITLE                VARCHAR2(4000)    NOT NULL,
    DATAVIEW_SID         NUMBER(10, 0)     NOT NULL,
    IND_SID              NUMBER(10, 0)     NOT NULL,
    REGION_SID           NUMBER(10, 0)     NOT NULL,
    MONTHS               NUMBER(10, 0)     NOT NULL,
    ROUNDING_METHOD      NUMBER(5, 0)      DEFAULT 0 NOT NULL,
    ROUNDING_DIGITS      NUMBER(5, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_DATAVIEW_TREND_ROUNDING_ME CHECK ( ROUNDING_METHOD BETWEEN 0 AND 9 ),
    CONSTRAINT CHK_DATAVIEW_TREND_ROUNDING_DI CHECK ( ROUNDING_DIGITS BETWEEN 0 AND 99 ),
    CONSTRAINT PK_DATAVIEW_TREND PRIMARY KEY (APP_SID, DATAVIEW_SID, POS)
)
;

CREATE TABLE CSR.DATAVIEW_ZONE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    POS                     NUMBER(10, 0)    NOT NULL,
    NAME                    VARCHAR2(255)    NOT NULL,
    DATAVIEW_SID            NUMBER(10, 0),
    START_VAL_IND_SID       NUMBER(10, 0)    NOT NULL,
    START_VAL_REGION_SID    NUMBER(10, 0)    NOT NULL,
    START_VAL_START_DTM     DATE             NOT NULL,
    START_VAL_END_DTM       DATE             NOT NULL,
    END_VAL_IND_SID         NUMBER(10, 0),
    END_VAL_REGION_SID      NUMBER(10, 0),
    END_VAL_START_DTM       DATE,
    END_VAL_END_DTM         DATE,
    STYLE_XML               CLOB             NOT NULL,
    IS_TARGET               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TARGET_DIRECTION        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TYPE                    NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    DESCRIPTION             VARCHAR2(255),
    CONSTRAINT CHK_DATAVIEW_ZONE_TAR CHECK (IS_TARGET IN (0,1)),
    CONSTRAINT CHK_DATAVIEW_ZONE_DIR CHECK (TARGET_DIRECTION IN (-1,0,1)),
    CONSTRAINT PK_DATAVIEW_ZONE PRIMARY KEY (APP_SID, DATAVIEW_SID, POS)
)
;

CREATE TABLE CSR.DB_CONFIG
(
	ONLY_ONE_ROW					NUMBER(1) DEFAULT 0 NOT NULL,
	BATCH_UDP_NOTIFY_COMMAND		VARCHAR2(4000), 
	BATCH_UDP_BROADCAST_ADDRESSES	VARCHAR2(4000),
	CONSTRAINT CK_DB_CONFIG_ONLY_ONE_ROW CHECK (only_one_row = 0),
	CONSTRAINT PK_DB_CONFIG PRIMARY KEY (ONLY_ONE_ROW)
)
;

CREATE TABLE CSR.DEFAULT_ALERT_FRAME(
    DEFAULT_ALERT_FRAME_ID    NUMBER(10, 0)     NOT NULL,
    NAME                      VARCHAR2(1000)    NOT NULL,
    CONSTRAINT PK_DEFAULT_ALERT_FRAME PRIMARY KEY (DEFAULT_ALERT_FRAME_ID)
)
;

CREATE SEQUENCE CSR.DEFAULT_ALERT_FRAME_ID_SEQ;

CREATE TABLE CSR.DEFAULT_ALERT_FRAME_BODY(
    DEFAULT_ALERT_FRAME_ID    NUMBER(10, 0)    NOT NULL,
    LANG                      VARCHAR2(10)     NOT NULL,
    HTML                      CLOB             NOT NULL,
    CONSTRAINT PK_DEFAULT_ALERT_FRAME_BODY PRIMARY KEY (DEFAULT_ALERT_FRAME_ID, LANG)
)
;

CREATE TABLE CSR.DEFAULT_ALERT_TEMPLATE(
    STD_ALERT_TYPE_ID         NUMBER(10, 0)    NOT NULL,
    DEFAULT_ALERT_FRAME_ID    NUMBER(10, 0)    NOT NULL,
    SEND_TYPE                 VARCHAR2(10)     NOT NULL,
    CONSTRAINT CK_DEF_ALRT_TEMPLATE_SEND_TYPE CHECK (SEND_TYPE IN ('manual', 'automatic', 'inactive')),
    CONSTRAINT PK_DEFAULT_ALERT_TEMPLATE PRIMARY KEY (STD_ALERT_TYPE_ID)
)
;

CREATE TABLE CSR.DEFAULT_ALERT_TEMPLATE_BODY(
    STD_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LANG                 VARCHAR2(10)     NOT NULL,
    SUBJECT              CLOB             NOT NULL,
    BODY_HTML            CLOB             NOT NULL,
    ITEM_HTML            CLOB             NOT NULL,
    CONSTRAINT PK_DEFAULT_ALERT_TEMPLATE_BODY PRIMARY KEY (STD_ALERT_TYPE_ID, LANG)
)
;

CREATE TABLE CSR.DEFAULT_INITIATIVE_USER_STATE(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_SID         NUMBER(10, 0),
    IS_EDITABLE      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    GENERATE_ALERTS  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_EDITABLE IN(0,1)),
    CHECK (GENERATE_ALERTS IN (0, 1)),
    CONSTRAINT PK_DEF_INITIATIVE_USER_STATE PRIMARY KEY (APP_SID, FLOW_STATE_ID)
)
;

CREATE TABLE CSR.DEFAULT_RSS_FEED(
    APP_SID    NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RSS_URL    VARCHAR2(1024)    NOT NULL,
    NAME       VARCHAR2(255),
    CONSTRAINT PK_DEFAULT_RSS_FEED PRIMARY KEY (APP_SID, RSS_URL)
)
;

CREATE TABLE CSR.DEGREEDAY_ACCOUNT(
    ACCOUNT_NAME    VARCHAR2(128)     NOT NULL,
    ACCOUNT_KEY     VARCHAR2(1024)    NOT NULL,
    SECURITY_KEY    VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK_DEGREEDAY_ACCOUNT PRIMARY KEY (ACCOUNT_NAME)
)
;

CREATE TABLE CSR.DEGREEDAY_DATA(
    STATION_ID          VARCHAR2(32)    NOT NULL,
    CALCULATION_TYPE    NUMBER(1, 0)    NOT NULL,
    PERIOD_DTM          DATE            NOT NULL,
    BASE_TEMP           NUMBER(3, 1)    NOT NULL,
    DEGREE_DAYS         NUMBER(9, 1),
    CONSTRAINT PK_DEGREEDAY_DATA PRIMARY KEY (STATION_ID, CALCULATION_TYPE, PERIOD_DTM, BASE_TEMP),
    CONSTRAINT CK_DEGREEDAY_DATA_CALC CHECK (CALCULATION_TYPE IN (0, 1))
)
;

CREATE TABLE CSR.DEGREEDAY_REGION(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID             NUMBER(10, 0)    NOT NULL,
    STATION_ID             VARCHAR2(32)     NOT NULL,
    STATION_DESCRIPTION    VARCHAR2(512),
    STATION_UPDATE_DTM     DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_DEGREEDAY_REGION PRIMARY KEY (APP_SID, REGION_SID, STATION_ID)
)
;

CREATE TABLE CSR.DEGREEDAY_SETTINGS(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACCOUNT_NAME                   VARCHAR2(128)    NOT NULL,
    DOWNLOAD_ENABLED               NUMBER(1, 0)     NOT NULL,
    EARLIEST_FETCH_DTM             DATE             NOT NULL,
    AVERAGE_YEARS                  NUMBER(3, 0)     NOT NULL,
    HEATING_BASE_TEMP_IND_SID      NUMBER(10, 0),
    COOLING_BASE_TEMP_IND_SID      NUMBER(10, 0),
    HEATING_DEGREE_DAYS_IND_SID    NUMBER(10, 0),
    COOLING_DEGREE_DAYS_IND_SID    NUMBER(10, 0),
    HEATING_AVERAGE_IND_SID        NUMBER(10, 0),
    COOLING_AVERAGE_IND_SID        NUMBER(10, 0),
    LAST_SYNC_DTM                  DATE,
    CONSTRAINT PK_DEGREEDAY_SETTINGS PRIMARY KEY (APP_SID)
)
;

CREATE INDEX CSR.IX_DEGREEDAY_SET_ACCOUNT_NAME ON CSR.DEGREEDAY_SETTINGS(ACCOUNT_NAME)
;

CREATE INDEX CSR.IX_DEGREEDAY_SET_COOLING_AVG ON CSR.DEGREEDAY_SETTINGS(APP_SID, COOLING_AVERAGE_IND_SID)
;

CREATE INDEX CSR.IX_DEGREEDAY_SET_COOLING_BASE ON CSR.DEGREEDAY_SETTINGS(APP_SID, COOLING_BASE_TEMP_IND_SID)
;

CREATE INDEX CSR.IX_DEGREEDAY_SET_COOLING_VAL ON CSR.DEGREEDAY_SETTINGS(APP_SID, COOLING_DEGREE_DAYS_IND_SID)
;

CREATE INDEX CSR.IX_DEGREEDAY_SET_HEATING_AVG ON CSR.DEGREEDAY_SETTINGS(APP_SID, HEATING_AVERAGE_IND_SID)
;

CREATE INDEX CSR.IX_DEGREEDAY_SET_HEATING_BASE ON CSR.DEGREEDAY_SETTINGS(APP_SID, HEATING_BASE_TEMP_IND_SID)
;

CREATE INDEX CSR.IX_DEGREEDAY_SET_HEATING_VAL ON CSR.DEGREEDAY_SETTINGS(APP_SID, HEATING_DEGREE_DAYS_IND_SID)
;

CREATE TABLE CSR.DELEG_DATA_CHANGE_ALERT(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_DATA_CHANGE_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID               NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID            NUMBER(10, 0)    NOT NULL,
    SHEET_ID                      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEG_DATA_CHANGE_ALERT PRIMARY KEY (APP_SID, DELEG_DATA_CHANGE_ALERT_ID)
)
;

CREATE SEQUENCE CSR.DELEG_DATA_CHANGE_ALERT_ID_SEQ;

CREATE TABLE CSR.DELEG_GRID_VARIANCE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP'),
    ID                     VARCHAR2(255)    NOT NULL,
    ROOT_DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID             NUMBER(10, 0)    NOT NULL,
    START_DTM              DATE             NOT NULL,
    END_DTM                DATE             NOT NULL,
    GRID_IND_SID           NUMBER(10, 0)    NOT NULL,
    LABEL                  VARCHAR2(255)    NOT NULL,
    VARIANCE               VARCHAR2(255)    NOT NULL,
    EXPLANATION            CLOB,
    ACTIVE                 NUMBER(1, 0)     DEFAULT 1,
    CURR_VALUE             NUMBER,
    PREV_VALUE             NUMBER,
    CONSTRAINT PK_DELEG_GRID_VAR PRIMARY KEY (APP_SID, ROOT_DELEGATION_SID, REGION_SID, START_DTM, END_DTM, GRID_IND_SID, ID)
)
;

CREATE TABLE CSR.DELEG_IND_FORM_EXPR(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID           NUMBER(10, 0)    NOT NULL,
    FORM_EXPR_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEG_IND_FORM_EXPR PRIMARY KEY (APP_SID, DELEGATION_SID, IND_SID, FORM_EXPR_ID)
)
;

CREATE TABLE CSR.DELEG_IND_GROUP(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_IND_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID        NUMBER(10, 0)    NOT NULL,
    TITLE                 VARCHAR2(255),
    START_COLLAPSED       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_DELEG_IND_GROUP PRIMARY KEY (APP_SID, DELEG_IND_GROUP_ID, DELEGATION_SID)
)
;

CREATE SEQUENCE CSR.DELEG_IND_GROUP_ID_SEQ;

CREATE TABLE CSR.DELEG_IND_GROUP_MEMBER(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID        NUMBER(10, 0)    NOT NULL,
    DELEG_IND_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    IND_SID               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEG_IND_GROUP_MEMBER PRIMARY KEY (APP_SID, DELEGATION_SID, DELEG_IND_GROUP_ID, IND_SID)
)
;

CREATE TABLE CSR.DELEG_META_ROLE_IND_SELECTION(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID           NUMBER(10, 0)    NOT NULL,
    LANG              VARCHAR2(10)     NOT NULL,
    DESCRIPTION       VARCHAR2(500)    NOT NULL,
    CONSTRAINT PK_DELEG_META_ROLE_IND_SEL PRIMARY KEY (APP_SID, DELEGATION_SID, IND_SID)
)
;

CREATE TABLE CSR.DELEG_PLAN(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_SID        NUMBER(10, 0)     NOT NULL,
    NAME                  VARCHAR2(1023)    NOT NULL,
    START_DTM             DATE              NOT NULL,
    END_DTM               DATE              NOT NULL,
    PERIOD_SET_ID         NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID    NUMBER(10, 0)     NOT NULL,
    REMINDER_OFFSET       NUMBER(10, 0)     DEFAULT 5 NOT NULL,
    SCHEDULE_XML          CLOB              NOT NULL,
    NAME_TEMPLATE         VARCHAR2(1000),
    ACTIVE                NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    NOTES                 CLOB,
    DYNAMIC               NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    LAST_APPLIED_DTM      DATE,
    LAST_APPLIED_DYNAMIC  NUMBER(1, 0),
    CONSTRAINT CK_DELEG_TPL_DATES CHECK (END_DTM > START_DTM),
    CONSTRAINT CHK_DELEG_PLAN_ACTIVE CHECK (ACTIVE IN (0,1)),
    CONSTRAINT CK_DYNAMIC CHECK (dynamic in (0,1)),
    CONSTRAINT PK890 PRIMARY KEY (APP_SID, DELEG_PLAN_SID)
)
;

CREATE TABLE CSR.DELEG_PLAN_APPLIED(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_APPLIED_ID    NUMBER(10, 0)    NOT NULL,
    DELEG_PLAN_SID           NUMBER(10, 0)    NOT NULL,
    APPLIED_BY_USER_SID      NUMBER(10, 0)    NOT NULL,
    APPLIED_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_DELEG_PLAN_LOG PRIMARY KEY (APP_SID, DELEG_PLAN_APPLIED_ID)
)
;

CREATE SEQUENCE CSR.DELEG_PLAN_APPLIED_ID_SEQ;

CREATE TABLE CSR.DELEG_PLAN_COL(
    DELEG_PLAN_COL_ID           NUMBER(10, 0)    NOT NULL,
    DELEG_PLAN_SID              NUMBER(10, 0),
    IS_HIDDEN                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    DELEG_PLAN_COL_DELEG_ID     NUMBER(10, 0),
    DELEG_PLAN_COL_SURVEY_ID    NUMBER(10, 0),
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QS_CAMPAIGN_SID             NUMBER(10, 0),
    CONSTRAINT CHK_DELEG_PLAN_ENTITY_HIDDEN CHECK (IS_HIDDEN IN (0,1)),
    CONSTRAINT CHK_DELEG_PLAN_COL_HAS_PARENT CHECK ((QS_CAMPAIGN_SID IS NOT NULL AND DELEG_PLAN_SID IS NULL) OR
    (QS_CAMPAIGN_SID IS NULL AND DELEG_PLAN_SID IS NOT NULL)),
    CONSTRAINT PK_DELEG_PLAN_COL PRIMARY KEY (DELEG_PLAN_COL_ID, APP_SID)
)
;

CREATE SEQUENCE CSR.DELEG_PLAN_COL_ID_SEQ;

CREATE INDEX CSR.IX_DELEG_PLAN_COL_CAMP_SID ON CSR.DELEG_PLAN_COL(APP_SID, QS_CAMPAIGN_SID)
;

CREATE UNIQUE INDEX CSR.UK_DELEG_PLAN_COL_CAMP_SID ON CSR.DELEG_PLAN_COL(APP_SID, NVL(QS_CAMPAIGN_SID, DELEG_PLAN_COL_ID))
;

CREATE TABLE CSR.DELEG_PLAN_COL_DELEG(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_COL_DELEG_ID    NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID             NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEG_PLAN_COL_DELEG PRIMARY KEY (APP_SID, DELEG_PLAN_COL_DELEG_ID)
)
;

CREATE SEQUENCE CSR.DELEG_PLAN_COL_DELEG_ID_SEQ;

CREATE TABLE CSR.DELEG_PLAN_COL_SURVEY(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_COL_SURVEY_ID    NUMBER(10, 0)    NOT NULL,
    SURVEY_SID                  NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEG_PLAN_COL_SURVEY PRIMARY KEY (APP_SID, DELEG_PLAN_COL_SURVEY_ID)
)
;

CREATE SEQUENCE CSR.DELEG_PLAN_COL_SURVEY_ID_SEQ;

CREATE TABLE CSR.DELEG_PLAN_DATE_SCHEDULE(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_SID                 NUMBER(10, 0)    NOT NULL,
    ROLE_SID                       NUMBER(10, 0),
    DELEG_PLAN_COL_ID              NUMBER(10, 0),
    SCHEDULE_XML                   CLOB,
    REMINDER_OFFSET                NUMBER(10, 0),
    DELEGATION_DATE_SCHEDULE_ID    NUMBER(10, 0),
    CONSTRAINT CK_SCHEDULE CHECK ((DELEGATION_DATE_SCHEDULE_ID IS NULL AND REMINDER_OFFSET IS NOT NULL AND SCHEDULE_XML IS NOT NULL) OR (DELEGATION_DATE_SCHEDULE_ID IS NOT NULL AND REMINDER_OFFSET IS NULL AND SCHEDULE_XML IS NULL)),
    CONSTRAINT UK_DELEG_PLAN_DATE_SCHEDULE UNIQUE (APP_SID, DELEG_PLAN_SID, ROLE_SID, DELEG_PLAN_COL_ID)
)
;

CREATE INDEX CSR.IX_DELEG_PLAN_SCHDL_SCHDL_ID ON CSR.DELEG_PLAN_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

CREATE TABLE CSR.DELEG_PLAN_DELEG_REGION(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_COL_DELEG_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID                 NUMBER(10, 0)    NOT NULL,
    PENDING_DELETION           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SELECTION           VARCHAR2(2)      DEFAULT 'R' NOT NULL,
    REGION_COLLATION           VARCHAR2(1)      DEFAULT 'S' NOT NULL,
    TAG_ID                     NUMBER(10, 0),
	REGION_TYPE                NUMBER(10, 0),
    CONSTRAINT CHK_DELEG_PLAN_DR_PENDING_DEL CHECK (PENDING_DELETION IN (0,1,2)),
    CONSTRAINT CHK_DLG_PLN_DLG_RGN_RS CHECK (REGION_SELECTION IN ('R','L','P','RT','LT','PT')),
    CONSTRAINT CHK_DLG_PLN_DLG_RGN_RC CHECK (REGION_COLLATION IN ('S','M')),
    CONSTRAINT PK_DELEG_PLAN_DELEG_REGION PRIMARY KEY (APP_SID, DELEG_PLAN_COL_DELEG_ID, REGION_SID)
)
;

CREATE TABLE CSR.DELEG_PLAN_DELEG_REGION_DELEG(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_COL_DELEG_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID                 NUMBER(10, 0)    NOT NULL,
    APPLIED_TO_REGION_SID      NUMBER(10, 0)    NOT NULL,
    HAS_MANUAL_AMENDS          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    MAPS_TO_ROOT_DELEG_SID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT CK_DELGPLNDLGREGDELG_MAN_AMND CHECK (HAS_MANUAL_AMENDS IN (0,1)),
    CONSTRAINT PK_DLG_PLAN_DLG_REG_DLG PRIMARY KEY (APP_SID, DELEG_PLAN_COL_DELEG_ID, REGION_SID, APPLIED_TO_REGION_SID)
)
;

CREATE TABLE CSR.DELEG_PLAN_JOB(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    BATCH_JOB_ID       NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID     NUMBER(10, 0),                        -- MERGE IF EQUAL, NEW IF NOT
    DELEG_PLAN_SID     NUMBER(10, 0),                        -- MERGE IF EQUAL, NEW IF NOT
    IS_DYNAMIC_PLAN    NUMBER(1, 0)     DEFAULT 1 NOT NULL,      -- MERGE IF EQUAL, NEW IF NOT
    OVERWRITE_DATES    NUMBER(1, 0)     DEFAULT 0 NOT NULL,      -- MERGE GREATEST VALUE
    CONSTRAINT CK_DELEG_PLAN_JOB_TYPE CHECK (
        ( DELEGATION_SID IS NOT NULL AND DELEG_PLAN_SID IS NULL )
     OR ( DELEGATION_SID IS NULL AND DELEG_PLAN_SID IS NOT NULL )
    ),
    CONSTRAINT PK_DELEG_PLAN_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.DELEG_PLAN_REGION(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK894 PRIMARY KEY (APP_SID, DELEG_PLAN_SID, REGION_SID)
)
;

CREATE TABLE CSR.DELEG_PLAN_ROLE(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_SID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID          NUMBER(10, 0)    NOT NULL,
    POS               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK891 PRIMARY KEY (APP_SID, DELEG_PLAN_SID, ROLE_SID)
)
;

CREATE TABLE CSR.DELEG_PLAN_SURVEY_REGION(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_COL_SURVEY_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID                  NUMBER(10, 0)    NOT NULL,
    HAS_MANUAL_AMENDS           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PENDING_DELETION            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SELECTION            VARCHAR2(2)      DEFAULT 'R' NOT NULL,
    TAG_ID                      NUMBER(10, 0),
    CONSTRAINT CHK_DELEG_PLAN_SR_PENDING_DEL CHECK (PENDING_DELETION IN (0,1,2)),
    CONSTRAINT CHK_DELEG_PLAN_SR_AMENDS CHECK (HAS_MANUAL_AMENDS IN (0,1)),
    CONSTRAINT CHK_DLG_PLN_SRV_RGN_RS CHECK (REGION_SELECTION IN ('R','L','P','RT','LT','PT')),
    CONSTRAINT PK_DELEG_PLAN_SURVEY_REGION PRIMARY KEY (APP_SID, DELEG_PLAN_COL_SURVEY_ID, REGION_SID)
)
;

CREATE INDEX CSR.IX_DELEG_PLAN_SRV_REG_TAG_ID ON CSR.DELEG_PLAN_SURVEY_REGION(APP_SID, TAG_ID)
;

CREATE TABLE CSR.DELEG_REPORT(
    APP_SID                 NUMBER(10, 0)    NOT NULL,
    DELEG_REPORT_SID        NUMBER(10, 0)    NOT NULL,
    NAME                    VARCHAR2(255)    NOT NULL,
    DELEG_REPORT_TYPE_ID    NUMBER(1, 0)     NOT NULL,
    START_DTM               DATE             NOT NULL,
    END_DTM                 DATE,
    PERIOD_SET_ID           NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEG_REPORT PRIMARY KEY (APP_SID, DELEG_REPORT_SID),
    CONSTRAINT CHK_DELEG_REPORT CHECK (DELEG_REPORT_TYPE_ID IN (0,1))
)
;

CREATE TABLE CSR.DELEG_REPORT_DELEG_PLAN(
    APP_SID             NUMBER(10, 0)    NOT NULL,
    DELEG_REPORT_SID    NUMBER(10, 0)    NOT NULL,
    DELEG_PLAN_SID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEG_REPORT_DELEG_PLAN PRIMARY KEY (APP_SID, DELEG_REPORT_SID)
)
;

CREATE TABLE CSR.DELEG_REPORT_REGION(
    APP_SID             NUMBER(10, 0)    NOT NULL,
    DELEG_REPORT_SID    NUMBER(10, 0)    NOT NULL,
    ROOT_REGION_SID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEG_REPORT_REGION PRIMARY KEY (APP_SID, DELEG_REPORT_SID)
)
;

CREATE TABLE CSR.DELEGATION(
    APP_SID                           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID                    NUMBER(10, 0)     NOT NULL,
    PARENT_SID                        NUMBER(10, 0)     NOT NULL,
    NAME                              VARCHAR2(1023)    NOT NULL,
    MASTER_DELEGATION_SID             NUMBER(10, 0),
    CREATED_BY_SID                    NUMBER(10, 0)     NOT NULL,
    SCHEDULE_XML                      CLOB,
    NOTE                              CLOB              DEFAULT EMPTY_CLOB(),
    PERIOD_SET_ID                     NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID                NUMBER(10, 0)     NOT NULL,
    GROUP_BY                          VARCHAR2(64)      NOT NULL,
    ALLOCATE_USERS_TO                 VARCHAR2(64)      NOT NULL,
    START_DTM                         DATE              NOT NULL,
    END_DTM                           DATE              NOT NULL,
    REMINDER_OFFSET                   NUMBER(10, 0)     DEFAULT 5 NOT NULL,
    IS_NOTE_MANDATORY                 NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    SECTION_XML                       CLOB              DEFAULT EMPTY_CLOB(),
    EDITING_URL                       VARCHAR2(255)     DEFAULT '/csr/site/delegation/sheet.acds' NOT NULL,
    FULLY_DELEGATED                   NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    GRID_XML                          CLOB,
    IS_FLAG_MANDATORY                 NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SHOW_AGGREGATE                    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SUBMISSION_OFFSET                 NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    HIDE_SHEET_PERIOD                 NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DELEGATION_DATE_SCHEDULE_ID       NUMBER(10, 0),
    LAYOUT_ID                         NUMBER(10, 0),
    TAG_VISIBILITY_MATRIX_GROUP_ID    NUMBER(10, 0),
    ALLOW_MULTI_PERIOD                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT CK_DELEGATION_DATES CHECK (END_DTM > START_DTM),
    CONSTRAINT PK_DELEGATION PRIMARY KEY (APP_SID, DELEGATION_SID)
)
;

CREATE INDEX CSR.IX_DELEG_SCHDL_ID ON CSR.DELEGATION(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

CREATE TABLE CSR.DELEGATION_AUTOMATIC_APPROVAL(
    APP_SID            NUMBER(10, 0)    NOT NULL,
    DUE_DATE_OFFSET    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGAA PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.DELEGATION_BATCH_JOB_EXPORT 
(
	APP_SID 					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL, 
	BATCH_JOB_ID 				NUMBER(10) NOT NULL, 
	FILE_BLOB 					BLOB, 
	FILE_NAME 					VARCHAR2(1024), 
	CONSTRAINT PK_BJ_DELEG PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.DELEGATION_CHANGE_ALERT(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_CHANGE_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID               NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID            NUMBER(10, 0)    NOT NULL,
    SHEET_ID                      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGATION_CHANGE_ALERT PRIMARY KEY (APP_SID, DELEGATION_CHANGE_ALERT_ID)
)
;

CREATE SEQUENCE CSR.DELEG_CHANGE_ALERT_ID_SEQ;

CREATE TABLE CSR.DELEGATION_COMMENT(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    START_DTM         DATE             NOT NULL,
    END_DTM           DATE             NOT NULL,
    POSTIT_ID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGATION_COMMENT PRIMARY KEY (APP_SID, POSTIT_ID)
)
;

CREATE TABLE CSR.DELEGATION_DATE_SCHEDULE(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_DATE_SCHEDULE_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM                      DATE             NOT NULL,
    END_DTM                        DATE             NOT NULL,
    CONSTRAINT CK_DATES CHECK (END_DTM > START_DTM),
    CONSTRAINT PK_DELEGATION_DATE_SCHEDULE PRIMARY KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID)
)
;

CREATE SEQUENCE CSR.DELEGATION_DATE_SCHEDULE_SEQ;

CREATE TABLE CSR.DELEGATION_DESCRIPTION(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)     NOT NULL,
    LANG              VARCHAR2(10)      NOT NULL,
    DESCRIPTION       VARCHAR2(1023)    NOT NULL,
	LAST_CHANGED_DTM  DATE,
    CONSTRAINT PK_DELEGATION_DESCRIPTION PRIMARY KEY (APP_SID, DELEGATION_SID, LANG)
)
;

CREATE TABLE CSR.DELEGATION_EDITED_ALERT(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    DELEGATION_EDIT_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID             NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID          NUMBER(10, 0)    NOT NULL,
    SHEET_ID                    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGATION_EDIT_ALERT PRIMARY KEY (APP_SID, DELEGATION_EDIT_ALERT_ID)
)
;

CREATE SEQUENCE CSR.DELEG_EDIT_ALERT_ID_SEQ;

CREATE INDEX CSR.IX_DELEG_EDIT_ALERT_SHEET ON CSR.DELEGATION_EDITED_ALERT(APP_SID, SHEET_ID)
;

CREATE INDEX CSR.IX_DELEG_EDIT_ALRT_NOTIFY_USER ON CSR.DELEGATION_EDITED_ALERT(APP_SID, NOTIFY_USER_SID)
;

CREATE INDEX CSR.IX_DELEG_EDIT_ALRT_RAISED_USER ON CSR.DELEGATION_EDITED_ALERT(APP_SID, RAISED_BY_USER_SID)
;

CREATE TABLE CSR.DELEGATION_GRID(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID                   NUMBER(10, 0)    NOT NULL,
    NAME                      VARCHAR2(255)    NOT NULL,
    PATH                      VARCHAR2(255),
    FORM_SID                  NUMBER(10, 0),
    HELPER_PKG                VARCHAR2(255),
    AGGREGATION_XML           SYS.XMLType,
    VARIANCE_VALIDATION_SP    VARCHAR2(255),
    CONSTRAINT CHK_DELE_GRID_CMS_FORM CHECK (PATH IS NOT NULL OR FORM_SID IS NOT NULL),
    CONSTRAINT PK_DELEGATION_GRID PRIMARY KEY (APP_SID, IND_SID)
)
;

CREATE SEQUENCE CSR.DELEGATION_GRID_ID_SEQ;

CREATE TABLE CSR.DELEGATION_GRID_AGGREGATE_IND(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID                 NUMBER(10, 0)    NOT NULL,
    AGGREGATE_TO_IND_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGATION_GRID_AGGR_IND PRIMARY KEY (APP_SID, IND_SID, AGGREGATE_TO_IND_SID)
)
;

CREATE TABLE CSR.DELEGATION_IND(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID       NUMBER(10, 0)    NOT NULL,
    IND_SID              NUMBER(10, 0)    NOT NULL,
    MANDATORY            NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    POS                  NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    SECTION_KEY          VARCHAR2(128),
    VAR_EXPL_GROUP_ID    NUMBER(10, 0),
    VISIBILITY           VARCHAR2(32)     DEFAULT 'SHOW' NOT NULL,
    CSS_CLASS            VARCHAR2(64),
    META_ROLE            VARCHAR2(32),
    ALLOWED_NA           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CK_DELEG_IND_VISIBLE CHECK (VISIBILITY IN ('SHOW','READONLY','HIDE','VALIDATE')),
    CONSTRAINT CK_META_ROLE CHECK (META_ROLE IN('MERGED','MERGED_ON_TIME', 'DP_COMPLETE', 'COMP_TOTAL_DP', 'IND_SEL_COUNT', 'IND_SEL_TOTAL', 'DP_NOT_CHANGED_COUNT', 'ACC_TOTAL_DP')),
    CONSTRAINT PK60 PRIMARY KEY (APP_SID, DELEGATION_SID, IND_SID)
)
;

CREATE TABLE CSR.DELEGATION_IND_COND(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID            NUMBER(10, 0)    NOT NULL,
    IND_SID                   NUMBER(10, 0)    NOT NULL,
    DELEGATION_IND_COND_ID    NUMBER(10, 0)    NOT NULL,
    EXPR                      VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK697 PRIMARY KEY (APP_SID, DELEGATION_SID, IND_SID, DELEGATION_IND_COND_ID)
)
;

CREATE SEQUENCE CSR.DELEGATION_IND_COND_ID_SEQ;

CREATE TABLE CSR.DELEGATION_IND_COND_ACTION(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID            NUMBER(10, 0)    NOT NULL,
    IND_SID                   NUMBER(10, 0)    NOT NULL,
    DELEGATION_IND_COND_ID    NUMBER(10, 0)    NOT NULL,
    ACTION                    VARCHAR2(255)    NOT NULL,
    TAG                       VARCHAR2(255)    NOT NULL
)
;

CREATE TABLE CSR.DELEGATION_IND_DESCRIPTION(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)     NOT NULL,
    IND_SID           NUMBER(10, 0)     NOT NULL,
    LANG              VARCHAR2(10)      NOT NULL,
    DESCRIPTION       VARCHAR2(1023)    NOT NULL,
    CONSTRAINT PK_DELEGATION_IND_DESCRIPTION PRIMARY KEY (APP_SID, DELEGATION_SID, IND_SID, LANG)
)
;

CREATE TABLE CSR.DELEGATION_IND_TAG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID           NUMBER(10, 0)    NOT NULL,
    TAG               VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK702 PRIMARY KEY (APP_SID, DELEGATION_SID, IND_SID, TAG)
)
;

CREATE TABLE CSR.DELEGATION_IND_TAG_LIST(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    TAG               VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_DELEGATION_IND_TAG_LIST PRIMARY KEY (APP_SID, DELEGATION_SID, TAG)
)
;

CREATE TABLE CSR.DELEGATION_LAYOUT(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LAYOUT_ID       NUMBER(10, 0)    NOT NULL,
    LAYOUT_XHTML    SYS.XMLType      NOT NULL,
    NAME            VARCHAR2(255)    DEFAULT 'New Layout' NOT NULL,
    VALID           NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT PK_DELEGATION_LAYOUT PRIMARY KEY (APP_SID, LAYOUT_ID)
)
;

CREATE SEQUENCE CSR.DELEGATION_LAYOUT_ID_SEQ;

CREATE TABLE CSR.DELEGATION_PLUGIN(
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID          NUMBER(10, 0)     NOT NULL,
    NAME             VARCHAR2(255)     NOT NULL,
    JS_CLASS_TYPE    VARCHAR2(1000)    NOT NULL,
    JS_INCLUDE       VARCHAR2(1000),
    HELPER_PKG       VARCHAR2(255),
    CONSTRAINT DELEGATION_PLUGIN_PK PRIMARY KEY (APP_SID, IND_SID)
)
;

CREATE TABLE CSR.DELEGATION_POLICY(
    SUBMIT_CONFIRMATION_TEXT    VARCHAR2(500)    NOT NULL,
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID              NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGATION_POLICY PRIMARY KEY (APP_SID, DELEGATION_SID)
)
;

CREATE TABLE CSR.DELEGATION_REGION(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID             NUMBER(10, 0)    NOT NULL,
    REGION_SID                 NUMBER(10, 0)    NOT NULL,
    MANDATORY                  NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    POS                        NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    AGGREGATE_TO_REGION_SID    NUMBER(10, 0)    NOT NULL,
    VISIBILITY                 VARCHAR2(255)    DEFAULT 'SHOW' NOT NULL,
    ALLOWED_NA                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    HIDE_AFTER_DTM             DATE,
    HIDE_INCLUSIVE             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CK_DELEG_REGION_VISIBLE CHECK (VISIBILITY IN ('HIDE','SHOW','READONLY')),
    CONSTRAINT PK61 PRIMARY KEY (APP_SID, DELEGATION_SID, REGION_SID)
)
;

CREATE TABLE CSR.DELEGATION_REGION_DESCRIPTION(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)     NOT NULL,
    REGION_SID        NUMBER(10, 0)     NOT NULL,
    LANG              VARCHAR2(10)      NOT NULL,
    DESCRIPTION       VARCHAR2(1023)    NOT NULL,
    CONSTRAINT PK_DELEGATION_REGION_DESC PRIMARY KEY (APP_SID, DELEGATION_SID, REGION_SID, LANG)
)
;

CREATE TABLE CSR.DELEGATION_ROLE(
    APP_SID           				NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    				NUMBER(10, 0)    NOT NULL,
    ROLE_SID          				NUMBER(10, 0)    NOT NULL,
    IS_READ_ONLY     				NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	DELEG_PERMISSION_SET			NUMBER(10, 0)	 DEFAULT 0 NOT NULL,
	INHERITED_FROM_SID				NUMBER(10, 0)	 NOT NULL,
    CONSTRAINT PK_DELEGATION_ROLE PRIMARY KEY (APP_SID, DELEGATION_SID, ROLE_SID, INHERITED_FROM_SID)
)
;

CREATE INDEX CSR.IX_DELEG_ROLE_INHERITED ON CSR.DELEGATION_ROLE (APP_SID, INHERITED_FROM_SID);

CREATE TABLE CSR.DELEGATION_TAG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    TAG_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK718 PRIMARY KEY (APP_SID, DELEGATION_SID, TAG_ID)
)
;

CREATE TABLE CSR.DELEGATION_TERMINATED_ALERT(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_TERMINATED_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID              NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID           NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGATION_TERMINATED_ALERT PRIMARY KEY (APP_SID, DELEG_TERMINATED_ALERT_ID)
)
;

CREATE SEQUENCE CSR.DELEG_TERMINATED_ALERT_ID_SEQ;

CREATE TABLE CSR.DELEGATION_USER(
    APP_SID           				NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    				NUMBER(10, 0)    NOT NULL,
    USER_SID          				NUMBER(10, 0)    NOT NULL,
	DELEG_PERMISSION_SET			NUMBER(10, 0)	 DEFAULT 0 NOT NULL,
	INHERITED_FROM_SID				NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGATION_USER PRIMARY KEY (APP_SID, DELEGATION_SID, USER_SID, INHERITED_FROM_SID)
)
;

CREATE INDEX CSR.IX_DELEG_USER_INHERITED ON CSR.DELEGATION_USER (APP_SID, INHERITED_FROM_SID);

CREATE TABLE CSR.DELEGATION_USER_COVER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_COVER_ID             NUMBER(10, 0)    NOT NULL,
    USER_GIVING_COVER_SID     NUMBER(10, 0)    NOT NULL,
    USER_BEING_COVERED_SID    NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DELEGATION_USER_COVER PRIMARY KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID, DELEGATION_SID)
)
;

CREATE TABLE CSR.DELETED_DELEGATION(
    APP_SID                NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID         NUMBER(10, 0)     NOT NULL,
    NAME                   VARCHAR2(1024)    NOT NULL,
    DELETED_DTM            DATE              NOT NULL,
    DELETED_BY_USER_SID    NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK563 PRIMARY KEY (APP_SID, DELEGATION_SID)
)
;

CREATE TABLE CSR.DELETED_DELEGATION_DESCRIPTION(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)     NOT NULL,
    LANG              VARCHAR2(10)      NOT NULL,
    DESCRIPTION       VARCHAR2(1023)    NOT NULL,
    CONSTRAINT PK_DEL_DELEGATION_DESCRIPTION PRIMARY KEY (APP_SID, DELEGATION_SID, LANG)
)
;

CREATE TABLE CSR.DELIVERY_METHOD(
    DELIVERY_METHOD_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                 VARCHAR2(40)     NOT NULL,
    CONSTRAINT PK_DELIVERY_METHOD PRIMARY KEY (DELIVERY_METHOD_ID)
)
;

CREATE TABLE CSR.DISTANCE(
    ORIGIN_ID            NUMBER(10, 0)     NOT NULL,
    DESTINATION_ID       NUMBER(10, 0)     NOT NULL,
    DISTANCE             NUMBER(24, 10)    NOT NULL,
    TRANSPORT_MODE_ID    NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_DISTANCE PRIMARY KEY (ORIGIN_ID, DESTINATION_ID, TRANSPORT_MODE_ID)
)
;

CREATE TABLE CSR.DIVISION(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DIVISION_ID    NUMBER(10, 0)     NOT NULL,
    REGION_SID     NUMBER(10, 0)     NOT NULL,
    NAME           VARCHAR2(1023)    NOT NULL,
    ACTIVE         NUMBER(1, 0)      NOT NULL,
    HIDDEN         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK760 PRIMARY KEY (APP_SID, DIVISION_ID)
)
;

CREATE SEQUENCE CSR.DIVISION_ID_SEQ;

CREATE TABLE CSR.DOC(
    APP_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DOC PRIMARY KEY (APP_SID, DOC_ID)
)
;

CREATE SEQUENCE CSR.DOC_ID_SEQ;

CREATE TABLE CSR.DOC_CURRENT(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_ID             NUMBER(10, 0)    NOT NULL,
    VERSION            NUMBER(10, 0)    DEFAULT 1,
    PARENT_SID         NUMBER(10, 0)    NOT NULL,
    LOCKED_BY_SID      NUMBER(10, 0),
    PENDING_VERSION    NUMBER(10, 0),
    CONSTRAINT PK_DOC_CURRENT PRIMARY KEY (APP_SID, DOC_ID)
)
;

CREATE TABLE CSR.DOC_DATA(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_DATA_ID    NUMBER(10, 0)    NOT NULL,
    DATA           BLOB             NOT NULL,
    SHA1           RAW(20)          NOT NULL,
    MIME_TYPE      VARCHAR2(100)    NOT NULL,
    CONSTRAINT PK_DOC_DATA PRIMARY KEY (APP_SID, DOC_DATA_ID)
)
;

CREATE SEQUENCE CSR.DOC_DATA_ID_SEQ;

CREATE TABLE CSR.DOC_DOWNLOAD(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_ID               NUMBER(10, 0)    NOT NULL,
    VERSION              NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    DOWNLOADED_DTM       DATE             DEFAULT SYSDATE NOT NULL,
    DOWNLOADED_BY_SID    NUMBER(10, 0)    NOT NULL
)
;

CREATE INDEX CSR.IDX_DOC_DOWNLOAD ON CSR.DOC_DOWNLOAD(APP_SID, VERSION, DOWNLOADED_DTM)
;

CREATE TABLE CSR.DOC_FOLDER(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_FOLDER_SID          NUMBER(10, 0)    NOT NULL,
    DESCRIPTION             CLOB             NOT NULL,
    LIFESPAN_IS_OVERRIDE    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    LIFESPAN                NUMBER(10, 0),
    APPROVER_IS_OVERRIDE    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPROVER_SID            NUMBER(10, 0),
    COMPANY_SID                NUMBER(10, 0),
    PROPERTY_SID            NUMBER(10, 0),
	IS_SYSTEM_MANAGED 		NUMBER(1) DEFAULT 0 NOT NULL,
	PERMIT_ITEM_ID			NUMBER(10,0),
    CONSTRAINT PK_DOC_FOLDER PRIMARY KEY (APP_SID, DOC_FOLDER_SID),
	CONSTRAINT CHK_DOC_FOLDER_IS_SYS_MNGD_1_0 CHECK (IS_SYSTEM_MANAGED IN (1, 0))
)
;

CREATE INDEX CSR.IX_DOC_FOLDER_PROPERTY ON CSR.DOC_FOLDER (APP_SID, PROPERTY_SID);

CREATE TABLE CSR.DOC_FOLDER_SUBSCRIPTION(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_FOLDER_SID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DOC_FOLDER_SUB PRIMARY KEY (APP_SID, DOC_FOLDER_SID, NOTIFY_SID)
)
;

CREATE TABLE CSR.DOC_LIBRARY(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_LIBRARY_SID     NUMBER(10, 0)    NOT NULL,
    DOCUMENTS_SID       NUMBER(10, 0)    NOT NULL,
    TRASH_FOLDER_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DOC_LIBRARY PRIMARY KEY (APP_SID, DOC_LIBRARY_SID)
)
;

CREATE TABLE CSR.DOC_NOTIFICATION(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_NOTIFICATION_ID    NUMBER(10, 0)    NOT NULL,
    DOC_ID                 NUMBER(10, 0)    NOT NULL,
    VERSION                NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    NOTIFY_SID             NUMBER(10, 0)    NOT NULL,
    SENT_DTM               DATE,
    REASON                 VARCHAR2(32)     NOT NULL,
    CHECK (REASON IN ('NEW_VERSION','DELETED','RESTORED','FOR_APPROVAL')),
    CONSTRAINT PK_DOC_NOTIFICATION PRIMARY KEY (APP_SID, DOC_NOTIFICATION_ID)
)
;

CREATE SEQUENCE CSR.DOC_NOTIFICATION_ID_SEQ;

CREATE INDEX CSR.IDX_DOC_NOTIFICATION_SENT ON CSR.DOC_NOTIFICATION(APP_SID, SENT_DTM, DOC_NOTIFICATION_ID)
;

CREATE TABLE CSR.DOC_SUBSCRIPTION(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_ID        NUMBER(10, 0)    NOT NULL,
    NOTIFY_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_DOC_SUBSCRIPTION PRIMARY KEY (APP_SID, DOC_ID, NOTIFY_SID)
)
;

CREATE SEQUENCE CSR.DOC_TYPE_ID_SEQ;

CREATE TABLE CSR.DOC_TYPE (
    APP_SID                         NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_TYPE_ID                     NUMBER(10,0) NOT NULL,
    DOC_LIBRARY_SID                 NUMBER(10,0) NOT NULL,
    NAME                            VARCHAR2(255) NOT NULL,
    CONSTRAINT PK_DOC_TYPE          PRIMARY KEY (APP_SID, DOC_TYPE_ID),
    CONSTRAINT UK_DOC_TYPE_NAME     UNIQUE (APP_SID, DOC_LIBRARY_SID, NAME)
);

CREATE TABLE CSR.DOC_VERSION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DOC_ID                NUMBER(10, 0)    NOT NULL,
    VERSION               NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    FILENAME              VARCHAR2(200)    NOT NULL,
    DESCRIPTION           CLOB             NOT NULL,
    CHANGE_DESCRIPTION    CLOB             NOT NULL,
    CHANGED_BY_SID        NUMBER(10, 0)    NOT NULL,
    CHANGED_DTM           TIMESTAMP(6)     DEFAULT SYSDATE NOT NULL,
    DOC_DATA_ID           NUMBER(10, 0)    NOT NULL,
    DOC_TYPE_ID           NUMBER(10,0)     NULL,
    CONSTRAINT PK_DOC_VERSION PRIMARY KEY (APP_SID, DOC_ID, VERSION)
)
;
CREATE INDEX CSR.IX_DOC_VERSION_DOC_TYPE ON CSR.DOC_VERSION (APP_SID, DOC_TYPE_ID);

CREATE TABLE CSR.DOC_FOLDER_NAME_TRANSLATION (
	APP_SID				NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	DOC_FOLDER_SID		NUMBER(10, 0)		NOT NULL,
	LANG				VARCHAR2(10)		NOT NULL,
	TRANSLATED			VARCHAR2(1023)		NOT NULL,
	PARENT_SID			NUMBER(10,0)		NOT NULL,
	CONSTRAINT PK_DOC_FOLDER_NAME_TRANSLATION PRIMARY KEY (APP_SID, DOC_FOLDER_SID, LANG),
	CONSTRAINT UK_DOC_FOLDER_NAME UNIQUE (PARENT_SID, LANG, TRANSLATED)
);

CREATE TABLE CSR.DUFF_METER_ERROR_TYPE (
	ERROR_TYPE_ID					NUMBER(10)		NOT NULL,
	LABEL							VARCHAR2(256)	NOT NULL,
	CONSTRAINT PK_DUFF_METER_ERROR_TYPE PRIMARY KEY (ERROR_TYPE_ID)
);

CREATE TABLE CSR.DUFF_METER_REGION (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	URJANET_METER_ID				VARCHAR2(256)	NOT NULL,
	METER_NAME						VARCHAR2(1024)	NOT NULL,
	METER_NUMBER					VARCHAR2(256)	NOT NULL,
	REGION_REF						VARCHAR2(256),
	SERVICE_TYPE					VARCHAR2(256)	NOT NULL,
	METER_RAW_DATA_ID				NUMBER(10),
	METER_RAW_DATA_ERROR_ID			NUMBER(10),
	REGION_SID						NUMBER(10),
	ISSUE_ID						NUMBER(10),
	MESSAGE							VARCHAR2(4000),
	ERROR_TYPE_ID					NUMBER(10)		NOT NULL,
	CREATED_DTM						DATE			DEFAULT SYSDATE NOT NULL,
	UPDATED_DTM						DATE			DEFAULT SYSDATE NOT NULL,
	CONSTRAINT PK_DUFF_METER_REGION PRIMARY KEY (APP_SID, URJANET_METER_ID)
);

CREATE TABLE CSR.EGRID(
    EGRID_REF    VARCHAR2(4)      NOT NULL,
    NAME         VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK622 PRIMARY KEY (EGRID_REF)
)
;

CREATE TABLE CSR.EMISSION_FACTOR_PROFILE(
    APP_SID       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROFILE_ID    NUMBER(10, 0)     NOT NULL,
    NAME          VARCHAR2(1000)    NOT NULL,
    START_DTM     DATE,
    END_DTM       DATE,
    APPLIED       NUMBER(1, 0)      NOT NULL,
    CONSTRAINT CK_EMISSION_FCTR_DATES CHECK ((START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM)),
    CONSTRAINT CK_EMISSION_FCTR_PROF_APPLIED CHECK (APPLIED IN (1, 0)),
    CONSTRAINT PK_EMISSION_FACTOR_PROFILE PRIMARY KEY (APP_SID, PROFILE_ID),
    CONSTRAINT UK_EMISSION_FACTOR_PROFILE UNIQUE (APP_SID, NAME)
)
;

CREATE SEQUENCE CSR.EMISSION_FACTOR_PROFILE_ID_SEQ;

CREATE TABLE CSR.EMISSION_FACTOR_PROFILE_FACTOR(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROFILE_ID              NUMBER(10, 0)    NOT NULL,
    FACTOR_TYPE_ID          NUMBER(10, 0)    NOT NULL,
    STD_FACTOR_SET_ID       NUMBER(10, 0),
    CUSTOM_FACTOR_SET_ID    NUMBER(10, 0),
    REGION_SID              NUMBER(10, 0),
    GEO_COUNTRY             VARCHAR2(2),
    GEO_REGION              VARCHAR2(2),
    EGRID_REF               VARCHAR2(4),
    CONSTRAINT CK_EMISSION_FCTR_PROF_FACTOR CHECK
        (NOT (STD_FACTOR_SET_ID IS NULL AND CUSTOM_FACTOR_SET_ID IS NULL) AND
         NOT (STD_FACTOR_SET_ID IS NOT NULL AND CUSTOM_FACTOR_SET_ID IS NOT NULL)),
	CONSTRAINT UK_EMISSION_FCTR_PROFILE_FCTR UNIQUE (APP_SID, PROFILE_ID, FACTOR_TYPE_ID, STD_FACTOR_SET_ID, CUSTOM_FACTOR_SET_ID,
													 REGION_SID, GEO_COUNTRY, GEO_REGION, EGRID_REF)
)
;

CREATE TABLE CSR.ENERGY_RATING (
	ENERGY_RATING_ID			NUMBER(10,0) NOT NULL,
	CERTIFICATION_TYPE_ID		NUMBER(10,0) NOT NULL,
	EXTERNAL_ID					NUMBER(10,0) NOT NULL,
	NAME						VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENERGY_RATING PRIMARY KEY (ENERGY_RATING_ID),
	CONSTRAINT UK_ENERGY_RAT_EXT_ID UNIQUE (CERTIFICATION_TYPE_ID, EXTERNAL_ID)
)
;

CREATE TABLE CSR.ENHESA_OPTIONS (
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CLIENT_ID						VARCHAR2(1024) NOT NULL,
	USERNAME						VARCHAR2(1024),
	PASSWORD						VARCHAR2(1024),
	LAST_SUCCESS					DATE,
	LAST_RUN						DATE,
	LAST_MESSAGE					VARCHAR2(1024),
	NEXT_RUN						DATE,
	MANUAL_RUN						NUMBER(1) DEFAULT 0 NOT NULL,
	PACKAGES_IMPORTED	NUMBER(10) DEFAULT 0 NOT NULL,
	PACKAGES_TOTAL		NUMBER(10) DEFAULT 0 NOT NULL,
	ITEMS_IMPORTED		NUMBER(10) DEFAULT 0 NOT NULL,
	ITEMS_TOTAL			NUMBER(10) DEFAULT 0 NOT NULL,
	LINKS_CREATED		NUMBER(10) DEFAULT 0 NOT NULL,
	LINKS_TOTAL			NUMBER(10) DEFAULT 0 NOT NULL,
    CONSTRAINT PK_ENHESA_OPTIONS PRIMARY KEY (APP_SID)
);

CREATE TABLE csr.ENHESA_ACCOUNT(
	ONLY_ONE_ROW					NUMBER(1) DEFAULT 0 NOT NULL,
	USERNAME 						VARCHAR2(1024) NOT NULL,
	PASSWORD 						VARCHAR2(1024) NOT NULL,
	CONSTRAINT CK_ENHESA_ACCOUNT_ONE_ROW CHECK (ONLY_ONE_ROW = 0),
    CONSTRAINT PK_ENHESA_ACCOUNT PRIMARY KEY (ONLY_ONE_ROW)
);

CREATE SEQUENCE CSR.ENHESA_ERROR_LOG_ID_SEQ;

CREATE TABLE CSR.ENHESA_ERROR_LOG(
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ERROR_LOG_ID		NUMBER(10) NOT NULL,
	ERROR_DTM			DATE NOT NULL,
	ERROR_MESSAGE		VARCHAR2(255) NOT NULL,
	STACK_TRACE			CLOB,
	CONSTRAINT PK_ENHESA_ERROR_LOG_ID PRIMARY KEY (APP_SID, ERROR_LOG_ID)
);

CREATE TABLE CSR.ENHESA_COUNTRY(
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_COUNTRY PRIMARY KEY (COUNTRY_CODE)
)
;

CREATE TABLE CSR.ENHESA_COUNTRY_NAME(
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    LANG            VARCHAR2(255)    NOT NULL,
    NAME            VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_COUNTRY_NAME PRIMARY KEY (COUNTRY_CODE),
    CONSTRAINT CHK_ENHESA_COUNTRY_NAME_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_COUNTRY_REGION(
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    REGION_CODE     VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_COUNTRY_REGION PRIMARY KEY (COUNTRY_CODE, REGION_CODE)
)
;

CREATE TABLE CSR.ENHESA_COUNTRY_REGION_NAME(
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    REGION_CODE     VARCHAR2(255)    NOT NULL,
    LANG            VARCHAR2(255)    NOT NULL,
    NAME            VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_COUNTRY_REGION_NAME PRIMARY KEY (COUNTRY_CODE, REGION_CODE, LANG),
    CONSTRAINT CHK_ENHESA_CNTRY_REG_NAME_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_HEADING(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    HEADING_CODE    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_HEADING PRIMARY KEY (APP_SID, HEADING_CODE)
)
;

CREATE TABLE CSR.ENHESA_HEADING_TEXT(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    HEADING_CODE       VARCHAR2(255)     NOT NULL,
    LANG               VARCHAR2(255)     NOT NULL,
    TITLE              VARCHAR2(2048)    NOT NULL,
    DESCRIPTION        VARCHAR2(4000),
    VERSION            NUMBER(10, 2)     NOT NULL,
    VERSION_PUB_DTM    DATE,
    CONSTRAINT PK_ENHESA_HEADING_TEXT PRIMARY KEY (APP_SID, HEADING_CODE, LANG),
    CONSTRAINT CHK_ENHESA_HEADING_TEXT_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_INTRO(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTRO_ID        NUMBER(10, 0)    NOT NULL,
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    REGION_CODE     VARCHAR2(255)    NOT NULL,
    HEADING_CODE    VARCHAR2(255)    NOT NULL,
    VERSION         NUMBER(10, 2)    NOT NULL,
    ARCHIVED        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_ENHESA_INTRO PRIMARY KEY (APP_SID, INTRO_ID),
    CONSTRAINT CHK_ENHESA_INTRO_ARCHIVED CHECK (ARCHIVED IN (0,1))
)
;

CREATE TABLE CSR.ENHESA_INTRO_TEXT(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTRO_ID           NUMBER(10, 0)    NOT NULL,
    LANG               VARCHAR2(255)    NOT NULL,
    DESCR              CLOB             NOT NULL,
    VERSION            NUMBER(10, 2)    NOT NULL,
    VERSION_PUB_DTM    DATE,
    CONSTRAINT PK_ENHESA_INTRO_TEXT PRIMARY KEY (APP_SID, INTRO_ID, LANG),
    CONSTRAINT CHK_ENHESA_INTRO_TEXT_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_KEYWORD(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    KEYWORD_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ENHESA_KEYWORD PRIMARY KEY (APP_SID, KEYWORD_ID)
)
;

CREATE TABLE CSR.ENHESA_KEYWORD_TEXT(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    KEYWORD_ID    NUMBER(10, 0)    NOT NULL,
    LANG          VARCHAR2(255)    NOT NULL,
    MAIN          VARCHAR2(255)    NOT NULL,
    CATEGORY      VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_KEYWORD_TEXT PRIMARY KEY (APP_SID, KEYWORD_ID, LANG),
    CONSTRAINT CHK_ENHESA_KEYWORD_TEXT_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_LANG(
    LANG    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_LANG PRIMARY KEY (LANG),
    CONSTRAINT CHK_ENHESA_LANG_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_LANG_NAME(
    LANG         VARCHAR2(255)    NOT NULL,
    NAME_LANG    VARCHAR2(255)    NOT NULL,
    NAME         VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_LANG_NAME PRIMARY KEY (LANG, NAME_LANG),
    CONSTRAINT CHK_ENHESA_LANG_NAME_UC CHECK (LANG = UPPER(LANG))
)
;

-- TODO: FK on parent? (XML is unsorted. Grr.) - deferred constraint?
CREATE TABLE CSR.ENHESA_REG(
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REG_ID           NUMBER(10, 0)     NOT NULL,
    PARENT_REG_ID    NUMBER(10, 0),
    COUNTRY_CODE     VARCHAR2(255)     NOT NULL,
    REG_REF          VARCHAR2(255)     NOT NULL,
    REF_DTM          DATE,
    LINK             VARCHAR2(1024),
    ARCHIVED         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    VERSION          NUMBER(10, 2)     NOT NULL,
    REG_LEVEL        NUMBER(10, 0),
    CONSTRAINT PK_ENHESA_REG PRIMARY KEY (APP_SID, REG_ID),
    CONSTRAINT CHK_ENH_REG_ARCHIVED CHECK (ARCHIVED IN (0,1))
)
;

CREATE TABLE CSR.ENHESA_REG_HEADING(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REG_ID          NUMBER(10, 0)    NOT NULL,
    HEADING_CODE    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_REG_HEADING PRIMARY KEY (APP_SID, REG_ID)
)
;

CREATE TABLE CSR.ENHESA_REG_REGION(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REG_ID          NUMBER(10, 0)    NOT NULL,
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    REGION_CODE     VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_REG_REGION PRIMARY KEY (APP_SID, REG_ID)
)
;

CREATE TABLE CSR.ENHESA_REG_TEXT(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REG_ID                  NUMBER(10, 0)     NOT NULL,
    LANG                    VARCHAR2(255)     NOT NULL,
    VERSION                 NUMBER(10, 2)     NOT NULL,
    VERSION_PUB_DTM         DATE,
    VERSION_RESEARCH_DTM    DATE,
    TITLE                   VARCHAR2(4000)    NOT NULL,
    CONSTRAINT PK_ENHESA_REG_TEXT PRIMARY KEY (APP_SID, REG_ID, LANG),
    CONSTRAINT CHK_ENHESA_REG_TEXT_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_RQMT_TEXT(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QN_CODE              VARCHAR2(255)     NOT NULL,
    QN                   VARCHAR2(4000)    NOT NULL,
    GUIDE_NOTE           CLOB              NOT NULL,
    LANG                 VARCHAR2(255)     NOT NULL,
    VERSION              NUMBER(10, 2)     NOT NULL,
    VERSION_PUB_DTM      DATE,
    VERSION_RSRCH_DTM    DATE,
    CONSTRAINT PK_ENHESA_RQMT_TEXT PRIMARY KEY (APP_SID, QN_CODE, LANG),
    CONSTRAINT CHK_ENHESA_RQMT_TEXT_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_RQMT_DOMAIN(
    APP_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QN_CODE    VARCHAR2(255)    NOT NULL,
    DOMAIN     VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_RQMT_DOMAIN PRIMARY KEY (APP_SID, QN_CODE, DOMAIN)
)
;

CREATE TABLE CSR.ENHESA_RQMT_REG_CITATION(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QN_CODE              VARCHAR2(255)    NOT NULL,
    REG_ID               NUMBER(10, 0)    NOT NULL,
    CITATION_ID          NUMBER(10, 0)    NOT NULL,
    FINAL_CITATION_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ENHESA_RQMT_REG_CIT PRIMARY KEY (APP_SID, QN_CODE, REG_ID)
)
;

CREATE TABLE CSR.ENHESA_RQMT_SUP_DOC(
    APP_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QN_CODE    VARCHAR2(255)    NOT NULL,
    ITEM_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ENHESA_RQMT_SUP_DOC PRIMARY KEY (APP_SID, QN_CODE, ITEM_ID)
)
;

CREATE TABLE CSR.ENHESA_RQMT(
    APP_SID         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QN_CODE         VARCHAR2(255)     NOT NULL,
    QN_REF          VARCHAR2(255)     NOT NULL,
    HEADING_CODE    VARCHAR2(255)     NOT NULL,
    COUNTRY_CODE    VARCHAR2(255)     NOT NULL,
    REGION_CODE     VARCHAR2(255)     NOT NULL,
    SORT_INDEX      NUMBER(10, 0)     NOT NULL,
    LINK            VARCHAR2(1024),
    ARCHIVED        NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    VERSION         NUMBER(10,2)      NOT NULL,
    CONSTRAINT PK_ENHESA_RQMT PRIMARY KEY (APP_SID, QN_CODE), --not sure what else to use as PK here
    CONSTRAINT CHK_ENHESA_RQMT_ARCHIVED CHECK (ARCHIVED IN (0,1))
)
;

CREATE TABLE CSR.ENHESA_SCRNGQN(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCRNGQN_ID           NUMBER(10, 0)    NOT NULL,
    BASE_HEADING_CODE    VARCHAR2(255)    NOT NULL,
    VERSION              NUMBER(10, 2)    NOT NULL,
    ARCHIVED             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_ENHESA_SCRNGQN PRIMARY KEY (APP_SID, SCRNGQN_ID),
    CONSTRAINT CHK_ENHESA_SCRNGQN_ARCHIVED CHECK (ARCHIVED IN (0,1))
)
;

CREATE TABLE CSR.ENHESA_SCRNGQN_HEADING(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCRNGQN_ID      NUMBER(10, 0)    NOT NULL,
    HEADING_CODE    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_SCRNGQN_HEAD PRIMARY KEY (APP_SID, SCRNGQN_ID, HEADING_CODE)
)
;

CREATE TABLE CSR.ENHESA_SCRNGQN_TEXT(
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCRNGQN_ID       NUMBER(10, 0)     NOT NULL,
    LANG             VARCHAR2(255)     NOT NULL,
    SCRNGQN_TITLE    VARCHAR2(4000)    NOT NULL,
    VERSION          NUMBER(10, 2)     NOT NULL,
    CONSTRAINT PK_ENHESA_SCRNGQN_TEXT PRIMARY KEY (APP_SID, SCRNGQN_ID, LANG),
    CONSTRAINT CHK_ENHESA_SCRNGQN_TEXT_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE SEQUENCE CSR.ENHESA_SITE_TYPE_ID_SEQ
;

CREATE TABLE CSR.ENHESA_SITE_TYPE(
    APP_SID             		NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SITE_TYPE_ID				NUMBER(10, 0)    NOT NULL,
	LABEL						VARCHAR2(256)    NOT NULL,
	CONSTRAINT PK_ENHESA_SITE_TYPE PRIMARY KEY (APP_SID, SITE_TYPE_ID)
)
;

CREATE SEQUENCE CSR.ENHESA_SITE_TYP_HEADING_ID_SEQ
;

CREATE TABLE CSR.ENHESA_SITE_TYPE_HEADING(
    APP_SID             		NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SITE_TYPE_HEADING_ID		NUMBER(10, 0)    NOT NULL,
	SITE_TYPE_ID				NUMBER(10, 0)    NOT NULL,
	HEADING_CODE				VARCHAR2(256)    NOT NULL,
	CONSTRAINT PK_SITE_TYPE_HEADING PRIMARY KEY (APP_SID, SITE_TYPE_HEADING_ID),
	CONSTRAINT UK_SITE_TYPE_HEADING UNIQUE (APP_SID, SITE_TYPE_ID, HEADING_CODE)
)
;

CREATE INDEX CSR.IX_SITE_TYP_HEADING_SITE_TYP ON CSR.ENHESA_SITE_TYPE_HEADING(APP_SID, SITE_TYPE_ID)
;


CREATE TABLE CSR.ENHESA_STATUS(
    STATUS_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ENHESA_STATUS PRIMARY KEY (STATUS_ID)
)
;

CREATE TABLE CSR.ENHESA_STATUS_NAME(
    STATUS_ID    NUMBER(10, 0)    NOT NULL,
    LANG         VARCHAR2(255)    NOT NULL,
    NAME         VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_STATUS_NAME PRIMARY KEY (STATUS_ID, LANG),
    CONSTRAINT CHK_ENHESA_STATUS_NAME_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_SUP_DOC(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ITEM_ID         NUMBER(10, 0)    NOT NULL,
    TYPE            VARCHAR2(255)    NOT NULL,
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    REGION_CODE     VARCHAR2(255)    NOT NULL,
    ARCHIVED        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_ENHESA_SUP_DOC PRIMARY KEY (APP_SID, ITEM_ID),
    CONSTRAINT CHK_ENHESA_SUP_DOC_ARCHIVED CHECK (ARCHIVED IN (0,1))
)
;

CREATE TABLE CSR.ENHESA_SUP_DOC_ITEM_TEXT(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ITEM_ID            NUMBER(10, 0)     NOT NULL,
    LANG               VARCHAR2(255)     NOT NULL,
    TITLE              VARCHAR2(4000)    NOT NULL,
    VERSION            NUMBER(10,2)      NOT NULL,
    VERSION_PUB_DTM    DATE,
    CONSTRAINT PK_ENHESA_SUP_DOC_ITM_TEXT PRIMARY KEY (APP_SID, ITEM_ID, LANG),
    CONSTRAINT CHK_ENHESA_SUP_DOC_ITM_TXT_UC CHECK (LANG = UPPER(LANG))
)
;

-- TODO: industry data really badly implemented and docs imply it's not really used?

CREATE TABLE CSR.ENHESA_TOPIC(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID      NUMBER(10, 0)    DEFAULT NULL,
    TOPIC_ID        NUMBER(10, 0)    NOT NULL,
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    STATUS_ID       NUMBER(10, 0)    NOT NULL,
    REPORT_DTM      DATE,
    ADOPTION_DTM    DATE,
    IMPORTANCE      VARCHAR2(255)    NOT NULL,
    ARCHIVED        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    VERSION         NUMBER(10, 2)    DEFAULT 1 NOT NULL,
    URL             VARCHAR2(255),
    FLOW_ITEM_ID    NUMBER(10, 0),
    CONSTRAINT PK_ENHESA_TOPIC PRIMARY KEY (APP_SID, TOPIC_ID),
    CONSTRAINT UK_ENHESA_TOPIC UNIQUE (APP_SID, TOPIC_ID, COUNTRY_CODE),
    CONSTRAINT CHK_ENH_TOP_ARCHIVED CHECK (ARCHIVED IN (0,1))
)
;

CREATE TABLE CSR.ENHESA_TOPIC_AUTH(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ENHESA_TOPIC_AUTH_ID    NUMBER(10, 0)    NOT NULL,
    TOPIC_ID                NUMBER(10, 0)    NOT NULL,
    AUTHORITY_TYPE          VARCHAR2(255),
    TEL                     VARCHAR2(255),
    FAX                     VARCHAR2(255),
    STREET                  VARCHAR2(255),
    POSTCODE                VARCHAR2(255),
    COUNTRY                 VARCHAR2(255),
    EMAIL                   VARCHAR2(255),
    WEB_PAGE                VARCHAR2(255),
    CONSTRAINT PK_ENHESA_TOPIC_AUTH PRIMARY KEY (APP_SID, ENHESA_TOPIC_AUTH_ID),
    CONSTRAINT UK_ENHESA_TOPIC_AUTH UNIQUE (APP_SID, TOPIC_ID)
)
;

CREATE TABLE CSR.ENHESA_TOPIC_AUTH_ORG_TITLE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ENHESA_TOPIC_AUTH_ID    NUMBER(10, 0)    NOT NULL,
    LANG                    VARCHAR2(255)    NOT NULL,
    NAME                    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_TOPIC_AUTH_ORG_TITLE PRIMARY KEY (APP_SID, ENHESA_TOPIC_AUTH_ID, LANG),
    CONSTRAINT CHK_EN_TP_AUTH_ORG_TITLE_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.ENHESA_TOPIC_HEADING(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TOPIC_ID        NUMBER(10, 0)    NOT NULL,
    HEADING_CODE    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_TOPIC_HEADING PRIMARY KEY (APP_SID, TOPIC_ID, HEADING_CODE)
)
;

CREATE TABLE CSR.ENHESA_TOPIC_KEYWORD(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TOPIC_ID      NUMBER(10, 0)    NOT NULL,
    KEYWORD_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ENHESA_TOPIC_KEYWD PRIMARY KEY (APP_SID, TOPIC_ID, KEYWORD_ID)
)
;

CREATE TABLE CSR.ENHESA_TOPIC_REG(
    APP_SID     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TOPIC_ID    NUMBER(10, 0)    NOT NULL,
    REG_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ENHESA_TOPIC_REG PRIMARY KEY (APP_SID, TOPIC_ID, REG_ID)
)
;

CREATE TABLE CSR.ENHESA_TOPIC_REGION(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TOPIC_ID        NUMBER(10, 0)    NOT NULL,
    COUNTRY_CODE    VARCHAR2(255)    NOT NULL,
    REGION_CODE     VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ENHESA_TOPIC_REGION PRIMARY KEY (APP_SID, TOPIC_ID, COUNTRY_CODE, REGION_CODE)
)
;

CREATE TABLE CSR.ENHESA_TOPIC_TEXT(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TOPIC_ID           NUMBER(10, 0)     NOT NULL,
    LANG               VARCHAR2(255)     NOT NULL,
    VERSION            NUMBER(10, 2)     NOT NULL,
    VERSION_PUB_DTM    DATE,
    TITLE              VARCHAR2(4000)    NOT NULL,
    ABSTRACT           CLOB,
    ANALYSIS           CLOB,
    AFFECTED_OPS       VARCHAR2(4000),
    REG_CITATION       VARCHAR2(4000),
    BIZ_IMPACT         CLOB,
    CONSTRAINT PK_ENHESA_TOPIC_TEXT PRIMARY KEY (APP_SID, TOPIC_ID, LANG),
    CONSTRAINT CHK_ENHESA_TOPIC_TEXT_UC CHECK (LANG = UPPER(LANG))
)
;

CREATE TABLE CSR.EST_ACCOUNT(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)    NOT NULL,
    EST_ACCOUNT_ID           NUMBER(10, 0)    NOT NULL,
    ACCOUNT_CUSTOMER_ID      VARCHAR2(256),
    SHARE_JOB_INTERVAL       NUMBER(10, 0),
    LAST_SHARE_JOB_DTM       DATE,
    BUILDING_JOB_INTERVAL    NUMBER(10, 0),
    METER_JOB_INTERVAL       NUMBER(10, 0),
    AUTO_MAP_CUSTOMER        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ALLOW_DELETE             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (AUTO_MAP_CUSTOMER IN(0,1)),
    CHECK (ALLOW_DELETE IN(0,1)),
    CONSTRAINT PK_EST_ACCOUNT PRIMARY KEY (APP_SID, EST_ACCOUNT_SID)
)
;

CREATE SEQUENCE CSR.EST_ACCOUNT_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_EST_ACCOUNT_SID ON CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_ID)
;

CREATE TABLE CSR.EST_ACCOUNT_GLOBAL(
    EST_ACCOUNT_ID          NUMBER(10, 0)    NOT NULL,
    USER_NAME               VARCHAR2(256)    NOT NULL,
    PASSWORD_OLD            VARCHAR2(245)    NOT NULL,
    BASE_URL                VARCHAR2(256)    NOT NULL,
    CONNECT_JOB_INTERVAL    NUMBER(10, 0),
    LAST_CONNECT_JOB_DTM    DATE,
    CONSTRAINT PK_EST_ACCOUNT_GLOBAL PRIMARY KEY (EST_ACCOUNT_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_EST_ACCOUNT_GLOBAL_UNAME ON CSR.EST_ACCOUNT_GLOBAL(USER_NAME)
;

CREATE TABLE CSR.EST_ATTR_ENUM(
    TYPE_NAME    VARCHAR2(256)    NOT NULL,
    ENUM         VARCHAR2(256)    NOT NULL,
    POS          NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_EST_ATTR_ENUM PRIMARY KEY (TYPE_NAME, ENUM)
)
;

CREATE TABLE CSR.EST_ATTR_FOR_BUILDING(
    ATTR_NAME       VARCHAR2(256)    NOT NULL,
    TYPE_NAME       VARCHAR2(256)    NOT NULL,
    IS_MANDATORY    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    LABEL           VARCHAR2(256)    NOT NULL,
    CHECK (IS_MANDATORY IN(0,1)),
    CONSTRAINT PK_EST_ATTR_FOR_BUILDING PRIMARY KEY (ATTR_NAME)
)
;

CREATE TABLE CSR.EST_ATTR_FOR_SPACE(
    ATTR_NAME    VARCHAR2(256)     NOT NULL,
    TYPE_NAME    VARCHAR2(256)     NOT NULL,
    NOTES        VARCHAR2(4000),
    CONSTRAINT PK_EST_ATTR_FOR_SPACE PRIMARY KEY (ATTR_NAME)
)
;

CREATE TABLE CSR.EST_ATTR_MEASURE(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TYPE_NAME      VARCHAR2(256)    NOT NULL,
    MEASURE_SID    NUMBER(10, 0),
    CONSTRAINT PK_EST_ATTR_MEASURE PRIMARY KEY (APP_SID, TYPE_NAME)
)
;

CREATE TABLE CSR.EST_ATTR_MEASURE_CONV(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    TYPE_NAME                VARCHAR2(256)    NOT NULL,
    UOM                      VARCHAR2(256)    NOT NULL,
    MEASURE_SID              NUMBER(10, 0),
    CONSTRAINT PK_EST_ATTR_MEASURE_CONV PRIMARY KEY (APP_SID, TYPE_NAME, UOM)
)
;

CREATE TABLE CSR.EST_ATTR_TYPE(
    TYPE_NAME     VARCHAR2(256)    NOT NULL,
    BASIC_TYPE    VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_ATTR_TYPE PRIMARY KEY (TYPE_NAME)
)
;

CREATE TABLE CSR.EST_ATTR_UNIT(
    TYPE_NAME    VARCHAR2(256)    NOT NULL,
    UOM          VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_ATTR_UNIT PRIMARY KEY (TYPE_NAME, UOM)
)
;

CREATE TABLE CSR.EST_BUILDING(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)     NOT NULL,
    PM_CUSTOMER_ID           VARCHAR2(256)     NOT NULL,
    PM_BUILDING_ID           VARCHAR2(256)     NOT NULL,
    REGION_SID               NUMBER(10, 0),
    BUILDING_NAME            VARCHAR2(256)     NOT NULL,
    ADDRESS                  VARCHAR2(256),
    ADDRESS2                 VARCHAR2(256),
    CITY                     VARCHAR2(256),
    STATE                    VARCHAR2(256),
    OTHER_STATE              VARCHAR2(256),
    COUNTRY                  VARCHAR2(256),
    ZIP_CODE                 VARCHAR2(16),
    ZIP_CODE_EXT             VARCHAR2(16),
    IMPORT_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    YEAR_BUILT               NUMBER(10, 0)     NOT NULL,
    PRIMARY_FUNCTION         VARCHAR2(1024)    NOT NULL,
    CONSTRUCTION_STATUS      VARCHAR2(256)     NOT NULL,
    NOTES                    VARCHAR2(4000),
    IS_FEDERAL_PROPERTY      NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    FEDERAL_OWNER            VARCHAR2(16),
    FEDERAL_AGENCY           VARCHAR2(1024),
    FEDERAL_AGENCY_REGION    VARCHAR2(1024),
    FEDERAL_CAMPUS           VARCHAR2(1024),
    LAST_POLL_DTM            DATE,
    LAST_JOB_DTM             DATE,
    MISSING                  NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    WRITE_ACCESS             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SOURCE_PM_CUSTOMER_ID    VARCHAR2(256),
    IGNORED                  NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    PREV_REGION_SID          NUMBER(10),
    CHECK (MISSING IN(0,1)),
    CHECK (IS_FEDERAL_PROPERTY IN(0,1)),
    CHECK (WRITE_ACCESS IN(0, 1)),
    CONSTRAINT CK_EST_BUILDING_IGNORED CHECK (IGNORED IN (0, 1)),
    CONSTRAINT PK_EST_BUILDING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_BUILDING_ID ON CSR.EST_BUILDING(APP_SID, PM_BUILDING_ID)
;

CREATE UNIQUE INDEX CSR.UK_EST_BUILDING_REGION_SID ON CSR.EST_BUILDING(NVL2(REGION_SID, APP_SID, NULL), REGION_SID)
;

CREATE TABLE CSR.EST_BUILDING_CHANGE_LOG(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID     VARCHAR2(256)    NOT NULL,
    PM_BUILDING_ID     VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_BUILDING_CNG_LOG PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID)
)
;

CREATE TABLE CSR.EST_BUILDING_METRIC(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)     NOT NULL,
    PM_CUSTOMER_ID     VARCHAR2(256)     NOT NULL,
    PM_BUILDING_ID     VARCHAR2(256)     NOT NULL,
    METRIC_NAME        VARCHAR2(256)     NOT NULL,
    PERIOD_END_DTM     DATE              NOT NULL,
    VAL                NUMBER(24, 10),
    STR                VARCHAR2(512),
    UOM                VARCHAR2(256),
    CONSTRAINT PK_EST_BUILDING_METRIC PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, METRIC_NAME, PERIOD_END_DTM)
)
;

CREATE TABLE CSR.EST_BUILDING_METRIC_MAPPING(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)     NOT NULL,
    METRIC_NAME              VARCHAR2(256)     NOT NULL,
    UOM                      VARCHAR2(256)     NOT NULL,
    IND_SID                  NUMBER(10, 0)     NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    DESCRIPTION              VARCHAR2(1024),
    DIVISOR                  NUMBER(24, 10)    DEFAULT 1 NOT NULL,
    SIMULATED                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    READ_ONLY                NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    CHECK (DIVISOR <> 0),
    CHECK (SIMULATED IN (0,1)),
    CHECK (READ_ONLY IN(0,1)),
    CONSTRAINT PK_EST_BUILDING_METRIC_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, METRIC_NAME, UOM)
)
;

CREATE TABLE CSR.EST_CONV_MAPPING(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)    NOT NULL,
    METER_TYPE               VARCHAR2(256)    NOT NULL,
    UOM                      VARCHAR2(256)    NOT NULL,
    MEASURE_SID              NUMBER(10, 0)    NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    CONSTRAINT PK_EST_CONV_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, METER_TYPE, UOM)
)
;

CREATE TABLE CSR.EST_CUSTOMER(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID     NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID      VARCHAR2(256)    NOT NULL,
    EST_CUSTOMER_SID    NUMBER(10, 0),
    ORG_NAME            VARCHAR2(255)    NOT NULL,
    EMAIL               VARCHAR2(255),
    CONSTRAINT PK_EST_CUSTOMER PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_EST_CUSTOMER_SID ON CSR.EST_CUSTOMER(APP_SID, EST_ACCOUNT_SID, EST_CUSTOMER_SID)
;

CREATE TABLE CSR.EST_CUSTOMER_GLOBAL(
    PM_CUSTOMER_ID    VARCHAR2(256)    NOT NULL,
    ORG_NAME          VARCHAR2(256)    NOT NULL,
    EMAIL             VARCHAR2(256),
    CONSTRAINT PK_EST_CUSTOMER_GLOBAL PRIMARY KEY (PM_CUSTOMER_ID)
)
;

CREATE TABLE CSR.EST_ERROR(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ERROR_ID       NUMBER(10, 0)     NOT NULL,
    REGION_SID         NUMBER(10, 0),
    EST_ACCOUNT_SID    NUMBER(10, 0),
    PM_CUSTOMER_ID     VARCHAR2(256),
    PM_BUILDING_ID     VARCHAR2(256),
    PM_SPACE_ID        VARCHAR2(256),
    PM_METER_ID        VARCHAR2(256),
    ERROR_LEVEL        NUMBER(10, 0)     NOT NULL,
    ERROR_DTM          DATE              DEFAULT SYSDATE NOT NULL,
    ERROR_CODE         NUMBER(10, 0)     NOT NULL,
    ERROR_MESSAGE      VARCHAR2(4000)    NOT NULL,
    REQUEST_URL        VARCHAR2(1024),
    REQUEST_HEADER     VARCHAR2(4000),
    REQUEST_BODY       CLOB,
    RESPONSE           CLOB,
    ACTIVE             NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_EST_ERROR_ACTIVE_1_0 CHECK (ACTIVE IN(0,1)),
    CONSTRAINT PK_EST_ERROR PRIMARY KEY (APP_SID, EST_ERROR_ID)
)
;

CREATE SEQUENCE CSR.EST_ERROR_ID_SEQ;

CREATE TABLE CSR.EST_ERROR_DESCRIPTION(
    ERROR_NO            NUMBER(10, 0),
    URL_PATTERN         VARCHAR2(1024),
    MSG_PATTERN         VARCHAR2(1024),
    HELP_TEXT           VARCHAR2(4000),
    APPLIES_TO_SPACE    NUMBER(1, 0),
    APPLIES_TO_METER    NUMBER(1, 0),
    APPLIES_TO_PUSH     NUMBER(1, 0),
    CONSTRAINT CK_EED_APPLIES_TO_SPACE CHECK (APPLIES_TO_SPACE IN (0,1)),
    CONSTRAINT CK_EED_APPLIES_TO_METER CHECK (APPLIES_TO_METER IN (0,1)),
    CONSTRAINT CK_EED_APPLIES_TO_PUSH CHECK (APPLIES_TO_PUSH IN (0,1))
)
;

CREATE TABLE CSR.EST_JOB(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_JOB_ID             NUMBER(10, 0)    NOT NULL,
    EST_ACCOUNT_SID        NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID         VARCHAR2(256),
    PM_BUILDING_ID         VARCHAR2(256),
    PM_SPACE_ID            VARCHAR2(256),
    PM_METER_ID            NUMBER(10, 0),
    REGION_SID             NUMBER(10, 0),
    EST_JOB_TYPE_ID        NUMBER(10, 0)    NOT NULL,
    EST_JOB_STATE_ID       NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    PROCESSING             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CREATED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    PROCESS_AFTER_DTM      DATE,
    LAST_ATTEMPT_DTM       DATE,
    UPDATE_PM_OBJECT       NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CREATED_BY_USER_SID    NUMBER(10, 0),
    ATTEMPTS               NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    NOTIFIED               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (PROCESSING IN(0,1)),
    CHECK (UPDATE_PM_OBJECT IN(0,1)),
    CONSTRAINT CK_EST_JOB_NOTIFIED CHECK (NOTIFIED IN (0,1)),
    CONSTRAINT PK_EST_JOB PRIMARY KEY (APP_SID, EST_JOB_ID)
)
;

CREATE SEQUENCE CSR.EST_JOB_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_EST_JOB ON CSR.EST_JOB(APP_SID, EST_JOB_TYPE_ID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID, PM_METER_ID, REGION_SID, PROCESSING)
;

CREATE TABLE CSR.EST_JOB_ATTR(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_JOB_ID              NUMBER(10, 0)    NOT NULL,
    REGION_METRIC_VAL_ID    NUMBER(10, 0)    NOT NULL,
    PM_VAL_ID               NUMBER(10, 0),
    CONSTRAINT PK_EST_JOB_ATTR PRIMARY KEY (APP_SID, EST_JOB_ID, REGION_METRIC_VAL_ID)
)
;

CREATE TABLE CSR.EST_JOB_READING(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_JOB_ID          NUMBER(10, 0)    NOT NULL,
    METER_READING_ID    NUMBER(10, 0)    NOT NULL,
    PM_READING_ID       NUMBER(10, 0),
    CONSTRAINT PK_EST_JOB_READING PRIMARY KEY (APP_SID, EST_JOB_ID, METER_READING_ID)
)
;

CREATE TABLE CSR.EST_JOB_STATE(
    EST_JOB_STATE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION         VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_JOB_STATE PRIMARY KEY (EST_JOB_STATE_ID)
)
;

CREATE TABLE CSR.EST_JOB_TYPE(
    EST_JOB_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION        VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_JOB_TYPE PRIMARY KEY (EST_JOB_TYPE_ID)
)
;

CREATE TABLE CSR.EST_METER(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID           VARCHAR2(256)    NOT NULL,
    PM_BUILDING_ID           VARCHAR2(256)    NOT NULL,
    PM_METER_ID              VARCHAR2(256)    NOT NULL,
    PM_SPACE_ID              VARCHAR2(256),
    REGION_SID               NUMBER(10, 0),
    METER_NAME               VARCHAR2(256)    NOT NULL,
    METER_TYPE               VARCHAR2(256)    NOT NULL,
    UOM                      VARCHAR2(256)    NOT NULL,
    ACTIVE                   NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    ADD_TO_TOTAL             NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    OTHER_DESC               VARCHAR2(256),
    INACTIVE_DTM             DATE,
    FIRST_BILL_DTM           DATE,
    LAST_ENTRY_DATE          DATE,
    LAST_POLL_DTM            DATE,
    LAST_JOB_DTM             DATE,
    MISSING                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    WRITE_ACCESS             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SELLBACK                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ENVIRO_ATTR_OWNED        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    GENERATION_METHOD        VARCHAR2(256),
    SOURCE_PM_CUSTOMER_ID    VARCHAR2(256),
    CHECK (ACTIVE IN(0,1)),
    CHECK (ADD_TO_TOTAL IN(0,1)),
    CHECK (MISSING IN(0,1)),
    CHECK (WRITE_ACCESS IN(0,1)),
    CHECK (SELLBACK IN(0,1)),
    CHECK (ENVIRO_ATTR_OWNED IN(0,1)),
    CONSTRAINT PK_EST_METER PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_METER_ID)
)
;

CREATE TABLE CSR.EST_METER_CHANGE_LOG(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID     VARCHAR2(256)    NOT NULL,
    PM_BUILDING_ID     VARCHAR2(256)    NOT NULL,
    PM_METER_ID        VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_METER_CNG_LOG PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_METER_ID)
)
;

CREATE TABLE CSR.EST_METER_CONV(
    METER_TYPE    VARCHAR2(256)    NOT NULL,
    UOM           VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK2018 PRIMARY KEY (METER_TYPE, UOM)
)
;

CREATE TABLE CSR.EST_METER_READING_CHANGE_LOG(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID     NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID      VARCHAR2(256)    NOT NULL,
    PM_BUILDING_ID      VARCHAR2(256)    NOT NULL,
    PM_METER_ID         VARCHAR2(256)    NOT NULL,
    METER_READING_ID    NUMBER(10, 0)    NOT NULL,
    PM_READING_ID       NUMBER(10, 0),
    CONSTRAINT PK_EST_METER_RDNG_CNG_LOG PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_METER_ID, METER_READING_ID)
)
;

CREATE TABLE CSR.EST_METER_TYPE(
    METER_TYPE    VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_METER_TYPE PRIMARY KEY (METER_TYPE)
)
;

CREATE TABLE CSR.EST_METER_TYPE_MAPPING(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    METER_TYPE         VARCHAR2(256)    NOT NULL,
    METER_TYPE_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_EST_METER_TYPE_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, METER_TYPE)
)
;

CREATE TABLE CSR.EST_MISMATCHED_ESP_ID(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)     NOT NULL,
    PM_CUSTOMER_ID     VARCHAR2(1024)    NOT NULL,
    PM_ID              VARCHAR2(1024)    NOT NULL,
    ES_ESP_ID          NUMBER(10, 0)     NOT NULL,
    CR_ESP_ID          NUMBER(10, 0)     NOT NULL,
    DETECTED_DTM       DATE              NOT NULL,
    PM_TYPE            VARCHAR2(256)     NOT NULL,
    CONSTRAINT PK_EST_MISMATCHED_ESP_ID PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_ID)
)
;

CREATE TABLE CSR.EST_OPTIONS(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DEFAULT_ACCOUNT_SID       NUMBER(10, 0)    NOT NULL,
    DEFAULT_CUSTOMER_ID       VARCHAR2(256),
    DEFAULT_PUSH              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    AUTO_CREATE_PROP_TYPE     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    AUTO_CREATE_SPACE_TYPE    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SHOW_COMPAT_ICONS         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TRASH_WHEN_SHARING        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TRASH_WHEN_POLLING        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (DEFAULT_PUSH IN(0,1)),
    CHECK (AUTO_CREATE_PROP_TYPE IN(0,1)),
    CHECK (AUTO_CREATE_SPACE_TYPE IN(0,1)),
    CHECK (SHOW_COMPAT_ICONS IN(0,1)),
    CONSTRAINT PK_EST_OPTIONS PRIMARY KEY (APP_SID),
    CONSTRAINT CK_TRASH_WHEN_SHARING CHECK (TRASH_WHEN_SHARING IN (0, 1)),
    CONSTRAINT CK_TRASH_WHEN_POLLING CHECK (TRASH_WHEN_POLLING IN (0, 1))
)
;

CREATE TABLE CSR.EST_OTHER_MAPPING(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)    NOT NULL,
    MAPPING_NAME             VARCHAR2(256)    NOT NULL,
    IND_SID                  NUMBER(10, 0),
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    HELPER                   VARCHAR2(256),
    CONSTRAINT PK_EST_OTHER_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, MAPPING_NAME)
)
;

CREATE TABLE CSR.EST_PROPERTY_TYPE(
    EST_PROPERTY_TYPE    VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_PROPERTY_TYPE PRIMARY KEY (EST_PROPERTY_TYPE)
)
;

CREATE TABLE CSR.EST_PROPERTY_TYPE_MAP(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROPERTY_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    EST_PROPERTY_TYPE    VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_PROPERTY_TYPE_MAP PRIMARY KEY (APP_SID, PROPERTY_TYPE_ID, EST_PROPERTY_TYPE)
)
;

CREATE TABLE CSR.EST_REGION_CHANGE_LOG(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID     VARCHAR2(256)    NOT NULL,
    REGION_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_EST_REGION_CHANGE_LOG PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, REGION_SID)
)
;

CREATE TABLE CSR.EST_SPACE(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID     VARCHAR2(256)    NOT NULL,
    PM_BUILDING_ID     VARCHAR2(256)    NOT NULL,
    PM_SPACE_ID        VARCHAR2(256)    NOT NULL,
    REGION_SID         NUMBER(10, 0),
    SPACE_NAME         VARCHAR2(256)    NOT NULL,
    SPACE_TYPE         VARCHAR2(256)    NOT NULL,
    MISSING            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PREV_REGION_SID    NUMBER(10),
    CHECK (MISSING IN(0,1)),
    CONSTRAINT PK_EST_SPACE PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_EST_SPACE_REGION_SID ON CSR.EST_SPACE(NVL2(REGION_SID, APP_SID, NULL), REGION_SID)
;

CREATE TABLE CSR.EST_SPACE_ATTR(
    PM_VAL_ID               NUMBER(10, 0)     NOT NULL,
    EST_ACCOUNT_SID         NUMBER(10, 0)     NOT NULL,
    PM_CUSTOMER_ID          VARCHAR2(256)     NOT NULL,
    PM_BUILDING_ID          VARCHAR2(256)     NOT NULL,
    PM_SPACE_ID             VARCHAR2(256)     NOT NULL,
    REGION_METRIC_VAL_ID    NUMBER(10, 0),
    ATTR_NAME               VARCHAR2(256)     NOT NULL,
    EFFECTIVE_DATE          DATE              NOT NULL,
    VAL                     NUMBER(24, 10),
    STR                     VARCHAR2(512),
    UOM                     VARCHAR2(256),
    IS_DEFAULT              NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CHECK (IS_DEFAULT IN(0,1)),
    CONSTRAINT PK_EST_SPACE_ATTR2 PRIMARY KEY (PM_VAL_ID, APP_SID)
)
;

CREATE UNIQUE INDEX CSR.UK_EST_SPACE_ATTR_DTM ON CSR.EST_SPACE_ATTR(PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID, ATTR_NAME, EFFECTIVE_DATE)
;

CREATE TABLE CSR.EST_SPACE_ATTR_CHANGE_LOG(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID         NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID          VARCHAR2(256)    NOT NULL,
    PM_BUILDING_ID          VARCHAR2(256)    NOT NULL,
    PM_SPACE_ID             VARCHAR2(256)    NOT NULL,
    REGION_METRIC_VAL_ID    NUMBER(10, 0)    NOT NULL,
    PM_VAL_ID               NUMBER(10, 0),
    CONSTRAINT EST_SPACE_ATTR_CHANGE_LOG PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID, REGION_METRIC_VAL_ID)
)
;

CREATE TABLE CSR.EST_SPACE_ATTR_MAPPING(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)     NOT NULL,
    ATTR_NAME                VARCHAR2(256)     NOT NULL,
    UOM                      VARCHAR2(256)     NOT NULL,
    IND_SID                  NUMBER(10, 0)     NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    DESCRIPTION              VARCHAR2(1024),
    DIVISOR                  NUMBER(24, 10)    DEFAULT 1 NOT NULL,
    APPLIES_TO_BUILDING      NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (DIVISOR <> 0),
    CHECK (APPLIES_TO_BUILDING IN(0,1)),
    CONSTRAINT PK_EST_SPACE_ATTR_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, ATTR_NAME, UOM)
)
;

CREATE TABLE CSR.EST_SPACE_CHANGE_LOG(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    PM_CUSTOMER_ID     VARCHAR2(256)    NOT NULL,
    PM_BUILDING_ID     VARCHAR2(256)    NOT NULL,
    PM_SPACE_ID        VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_SPACE_CHANGE_LOG PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID)
)
;

CREATE TABLE CSR.EST_SPACE_TYPE(
    EST_SPACE_TYPE    VARCHAR2(256)     NOT NULL,
    LABEL             VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK_EST_SPACE_TYPE PRIMARY KEY (EST_SPACE_TYPE)
)
;

CREATE TABLE CSR.EST_SPACE_TYPE_ATTR(
    EST_SPACE_TYPE    VARCHAR2(256)    NOT NULL,
    ATTR_NAME         VARCHAR2(256)    NOT NULL,
    IS_MANDATORY      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_MANDATORY IN(0,1)),
    CONSTRAINT PK_EST_SPACE_TYPE_ATTR PRIMARY KEY (EST_SPACE_TYPE, ATTR_NAME)
)
;

CREATE TABLE CSR.EST_SPACE_TYPE_MAP(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_SPACE_TYPE    VARCHAR2(256)    NOT NULL,
    SPACE_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_EST_SPACE_TYPE_MAP PRIMARY KEY (APP_SID, EST_SPACE_TYPE)
)
;

CREATE TABLE CSR.EVENT(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EVENT_ID                 NUMBER(10, 0)     NOT NULL,
    LABEL                    VARCHAR2(4000)    NOT NULL,
    RAISED_BY_USER_SID       NUMBER(10, 0)     NOT NULL,
    RAISED_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    EVENT_TEXT               CLOB              NOT NULL,
    RAISED_FOR_REGION_SID    NUMBER(10, 0)     NOT NULL,
    EVENT_DTM                DATE              NOT NULL,
    CONSTRAINT PK1 PRIMARY KEY (APP_SID, EVENT_ID)
)
;

CREATE SEQUENCE CSR.EVENT_ID_SEQ;

CREATE TABLE CSR.EXCEL_EXPORT_OPTIONS(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATAVIEW_SID                   NUMBER(10, 0)    NOT NULL,
    IND_SHOW_SID                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IND_SHOW_INFO                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IND_SHOW_TAGS                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IND_SHOW_GAS_FACTOR            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_SID                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_INACTIVE           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_INFO               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_TAGS               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_TYPE               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_REF                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_ACQUISITION_DTM    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_DISPOSAL_DTM       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_ROLES              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_EGRID              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_SHOW_GEO_COUNTRY        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_REF                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_LOCATION            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_SOURCE_TYPE         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_NOTE                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_CRC                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_IND                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_MEASURE             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_COST_IND            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_COST_MEASURE        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_DAYS_IND            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_SUPPLIER            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    METER_SHOW_CONTRACT            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SCENARIO_POS                   VARCHAR2(10)     DEFAULT 'Column' NOT NULL,
    CHECK (IND_SHOW_SID IN (0,1)),
    CHECK (IND_SHOW_INFO IN (0,1)),
    CHECK (IND_SHOW_TAGS IN (0,1)),
    CHECK (REGION_SHOW_SID IN (0,1)),
    CHECK (REGION_SHOW_INACTIVE IN (0,1)),
    CHECK (REGION_SHOW_INFO IN (0,1)),
    CHECK (REGION_SHOW_TAGS IN (0,1)),
    CHECK (REGION_SHOW_TYPE IN (0,1)),
    CHECK (REGION_SHOW_REF IN (0,1)),
    CHECK (REGION_SHOW_ACQUISITION_DTM IN (0,1)),
    CHECK (REGION_SHOW_DISPOSAL_DTM IN (0,1)),
    CHECK (REGION_SHOW_ROLES IN (0,1)),
    CHECK (METER_SHOW_REF IN (0,1)),
    CHECK (METER_SHOW_LOCATION IN (0,1)),
    CHECK (METER_SHOW_SOURCE_TYPE IN (0,1)),
    CHECK (METER_SHOW_NOTE IN (0,1)),
    CHECK (METER_SHOW_CRC IN (0,1)),
    CHECK (METER_SHOW_IND IN (0,1)),
    CHECK (METER_SHOW_MEASURE IN (0,1)),
    CHECK (METER_SHOW_SUPPLIER IN (0,1)),
    CHECK (METER_SHOW_CONTRACT IN (0,1)),
    CONSTRAINT CHK_EE_M_SHOW_COST_IND CHECK (METER_SHOW_COST_IND IN (0,1)),
    CONSTRAINT CHK_EE_M_SHOW_COST_MEASURE CHECK (METER_SHOW_COST_MEASURE IN (0,1)),
    CONSTRAINT CHK_EE_M_SHOW_DAYS_IND CHECK (METER_SHOW_DAYS_IND IN (0,1)),
    CONSTRAINT CK_EXCEL_EXPORT_OPTS_SCN_POS CHECK (scenario_pos in ('Column','Sheet')),
    CONSTRAINT PK766 PRIMARY KEY (APP_SID, DATAVIEW_SID)
)
;

CREATE TABLE CSR.EXCEL_EXPORT_OPTIONS_TAG_GROUP(
	APP_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP'),
	DATAVIEW_SID	NUMBER(10, 0)	NOT NULL,
	APPLIES_TO		NUMBER			NOT NULL,
	TAG_GROUP_ID	NUMBER			NOT NULL,
	CONSTRAINT PK_EXCEL_EXPORT_OPTIONS_TG PRIMARY KEY (APP_SID, DATAVIEW_SID, APPLIES_TO, TAG_GROUP_ID),
	CONSTRAINT CHK_EXCEL_EXPORT_OPTIONS_AT CHECK (APPLIES_TO IN (1,2))
)
;

CREATE TABLE CSR.EXPORT_FEED(
    APP_SID                     NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EXPORT_FEED_SID             NUMBER(10, 0)     NOT NULL,
    NAME                        VARCHAR2(100)     NOT NULL,
    PROTOCOL                    NUMBER(1, 0)      NOT NULL,
    URL                         VARCHAR2(1024)    NOT NULL,
    SECURE_CREDS                CLOB,
    INTERVAL                    VARCHAR2(2)       NOT NULL,
    START_DTM                   DATE              NOT NULL,
    END_DTM                     DATE,
    LAST_SUCCESS_ATTEMPT_DTM    DATE,
    LAST_ATTEMPT_DTM            DATE,
    ALERT_RECIPIENTS            VARCHAR2(1024),
    CONSTRAINT PK_EXPORT_FEED PRIMARY KEY (APP_SID, EXPORT_FEED_SID),
    CONSTRAINT CHK_EXPORT_FEED_DTM CHECK ((END_DTM IS NULL) OR (START_DTM < END_DTM))
)
;

CREATE TABLE CSR.EXPORT_FEED_CMS_FORM(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EXPORT_FEED_SID    NUMBER(10, 0)    NOT NULL,
    FORM_SID           NUMBER(10, 0)    NOT NULL,
    FILENAME_MASK      VARCHAR2(255)    NOT NULL,
    FORMAT             NUMBER(1, 0)     NOT NULL,
    INCREMENTAL        NUMBER(1, 0)     NOT NULL,
    CONSTRAINT PK_EXPORT_FEED_CMS_FORM PRIMARY KEY (APP_SID, EXPORT_FEED_SID, FORM_SID)
)
;

CREATE TABLE CSR.EXPORT_FEED_DATAVIEW(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EXPORT_FEED_SID    NUMBER(10, 0)    NOT NULL,
    DATAVIEW_SID       NUMBER(10, 0)    NOT NULL,
    FILENAME_MASK      VARCHAR2(255)    NOT NULL,
    FORMAT             NUMBER(1, 0)     NOT NULL,
    ASSEMBLY_NAME      VARCHAR2(150)    NOT NULL,
    CONSTRAINT PK_DATAVIEW_EXPORT_FEED PRIMARY KEY (APP_SID, EXPORT_FEED_SID, DATAVIEW_SID)
)
;

CREATE TABLE CSR.EXPORT_FEED_STORED_PROC(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EXPORT_FEED_SID    NUMBER(10, 0)    NOT NULL,
    SP_NAME            VARCHAR2(100)    NOT NULL,
    SP_PARAMS          VARCHAR2(255)    NOT NULL,
    FILENAME_MASK      VARCHAR2(255)    NOT NULL,
    FORMAT             NUMBER(1, 0)     NOT NULL
)
;

CREATE TABLE CSR.FACTOR(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FACTOR_ID 					NUMBER(10, 0)	NOT NULL,
	FACTOR_TYPE_ID				NUMBER(10, 0)	NOT NULL,
	GAS_TYPE_ID					NUMBER(10, 0)	NOT NULL,
	REGION_SID					NUMBER(10, 0),
	GEO_COUNTRY					VARCHAR2(2),
	GEO_REGION					VARCHAR2(2),
	EGRID_REF					VARCHAR2(4),
	IS_SELECTED					NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	START_DTM					DATE			NOT NULL,
	END_DTM						DATE,
	VALUE						NUMBER(24, 10)	NOT NULL,
	NOTE						CLOB,
	STD_MEASURE_CONVERSION_ID   NUMBER(10, 0)	NOT NULL,
	STD_FACTOR_ID               NUMBER(10, 0),
	ORIGINAL_FACTOR_ID          NUMBER(10, 0),
	CUSTOM_FACTOR_ID            NUMBER(10, 0),
	PROFILE_ID					NUMBER(10, 0),
	IS_VIRTUAL					NUMBER(1, 0)	DEFAULT 0,
	VISIBLE						NUMBER(1,0) DEFAULT 0 NOT NULL,
	CONSTRAINT CK_FACTOR_DATES CHECK ((START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM)),
	CONSTRAINT CK_FACTOR_IS_VIRTUAL CHECK (IS_VIRTUAL IN (1, 0)),
	CONSTRAINT PK_FACTOR PRIMARY KEY (APP_SID, FACTOR_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_FACTOR_1 ON CSR.FACTOR (
 APP_SID, FACTOR_TYPE_ID, NVL(GEO_COUNTRY, 'XX'), NVL(GEO_REGION, 'XX'), NVL(EGRID_REF, 'XX'), NVL(REGION_SID, -1), START_DTM, END_DTM, GAS_TYPE_ID,
  NVL(std_factor_id, -is_selected), NVL(custom_factor_id, -is_selected)
);

CREATE UNIQUE INDEX CSR.UK_FACTOR_2 ON CSR.FACTOR (APP_SID, NVL(STD_FACTOR_ID, -FACTOR_ID), REGION_SID, START_DTM);


CREATE SEQUENCE CSR.CUSTOM_FACTOR_HISTORY_SEQ;

CREATE TABLE CSR.CUSTOM_FACTOR_HISTORY (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	CUSTOM_FACTOR_HISTORY_ID	NUMBER(10) NOT NULL,
	FACTOR_CAT_ID				NUMBER(10) NOT NULL,
	FACTOR_TYPE_ID				NUMBER(10) NOT NULL,
	FACTOR_SET_ID				NUMBER(10) NOT NULL,
	GEO_COUNTRY					VARCHAR2(2),
	GEO_REGION					VARCHAR2(2),
	EGRID_REF					VARCHAR2(4),
	REGION_SID					NUMBER(10),
	GAS_TYPE_ID					NUMBER(10),
	START_DTM					DATE NOT NULL,
	END_DTM						DATE,
	FIELD_NAME					VARCHAR2(1024),
	OLD_VAL						VARCHAR2(1024),
	NEW_VAL						VARCHAR2(1024),
	MESSAGE						VARCHAR2(1024),
	AUDIT_DATE					DATE DEFAULT SYSDATE NOT NULL,
	USER_SID					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
	CONSTRAINT PK_CUSTOM_FACTOR_HISTORY PRIMARY KEY (APP_SID, CUSTOM_FACTOR_HISTORY_ID)
);

CREATE SEQUENCE CSR.FACTOR_ID_SEQ;

CREATE TABLE CSR.FACTOR_HISTORY(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FACTOR_ID      NUMBER(10, 0)     NOT NULL,
    CHANGED_DTM    DATE              NOT NULL,
    USER_SID       NUMBER(10, 0)     NOT NULL,
    OLD_VALUE      NUMBER(24, 10)    NOT NULL,
    NOTE           CLOB              NOT NULL
)
;

CREATE TABLE CSR.FACTOR_SET_GROUP(
    FACTOR_SET_GROUP_ID    NUMBER(10, 0)     NOT NULL,
    NAME                   VARCHAR2(1000)    NOT NULL,
    CUSTOM                 NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_FACTOR_SET_GRP_ID PRIMARY KEY (FACTOR_SET_GROUP_ID),
    CONSTRAINT CK_FCTR_SET_GRP_CUSTOM CHECK (CUSTOM IN (1, 0))
)
;

CREATE SEQUENCE CSR.FACTOR_SET_GRP_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_FACTOR_SET_GROUP_NAME ON CSR.FACTOR_SET_GROUP(LOWER(NAME))
;

CREATE TABLE CSR.FACTOR_TYPE(
	FACTOR_TYPE_ID		NUMBER(10, 0)	NOT NULL,
	PARENT_ID			NUMBER(10, 0),
	NAME				VARCHAR2(1000)	NOT NULL,
	STD_MEASURE_ID		NUMBER(10, 0),
	EGRID				NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	ENABLED				NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	INFO_NOTE			CLOB,
	VISIBLE NUMBER(1,0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK601 PRIMARY KEY (FACTOR_TYPE_ID),
	CONSTRAINT CK_FCTR_TYPE_EGRID CHECK (EGRID IN (1, 0)),
	CONSTRAINT CK_FCTR_TYPE_ACTIVE CHECK (ENABLED IN (1, 0))
);

CREATE SEQUENCE CSR.FACTOR_TYPE_ID_SEQ;

CREATE TABLE CSR.FEED(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FEED_SID                 NUMBER(10, 0)     NOT NULL,
    LABEL                    VARCHAR2(64)      NOT NULL,
    XSL_DOC                  CLOB              NOT NULL,
    FEED_TYPE_ID             NUMBER(10, 0)     NOT NULL,
    URL                      VARCHAR2(2048),
    USERNAME                 VARCHAR2(2048),
    PROTOCOL                 VARCHAR2(2048),
    HOST_KEY                 VARCHAR2(2048),
    INTERVAL                 VARCHAR2(2),
    INTERVAL_OFFSET          NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    LAST_GOOD_ATTEMPT_DTM    DATE,
    LAST_ATTEMPT_DTM         DATE,
    RESPONSE_XSL_DOC         CLOB,
    MAPPING_XML              CLOB,
    HELPER_PKG               VARCHAR2(100),
    CONSTRAINT CHK_FEED_TYPE
        CHECK ((URL IS NULL AND
                PROTOCOL IS NULL AND
                INTERVAL IS NULL AND
                USERNAME IS NULL AND
                HOST_KEY IS NULL AND
                FEED_TYPE_ID IN (1,3,4))
            OR (URL IS NOT NULL AND
                PROTOCOL IS NOT NULL AND
                INTERVAL IS NOT NULL AND
                USERNAME IS NOT NULL AND
                HOST_KEY IS NOT NULL AND
                FEED_TYPE_ID NOT IN (1,3,4))),
    CONSTRAINT PK_FEED PRIMARY KEY (APP_SID, FEED_SID)
)
;

CREATE TABLE CSR.FEED_REQUEST(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FEED_REQUEST_ID       NUMBER(10, 0)    NOT NULL,
    FEED_SID              NUMBER(10, 0)    NOT NULL,
    RECEIVED_DTM          DATE             DEFAULT SYSDATE NOT NULL,
    USER_SID              NUMBER(10, 0)    NOT NULL,
    XML_DATA              CLOB,
    HTTP_RESPONSE_CODE    NUMBER(10, 0),
    REMOTE_ADDR           VARCHAR2(16)     NOT NULL,
    IMP_SESSION_SID       NUMBER(10, 0),
    FILE_DATA             BLOB,
    FILE_TYPE             VARCHAR2(10),
    SUMMARY_XML           CLOB,
    ERROR_DATA            BLOB,
    CONSTRAINT PK_FEED_REQUEST PRIMARY KEY (APP_SID, FEED_REQUEST_ID)
)
;

CREATE SEQUENCE CSR.FEED_REQUEST_ID_SEQ CACHE 5;

CREATE TABLE CSR.FEED_TYPE(
    FEED_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FEED_TYPE       VARCHAR2(512)    NOT NULL,
    IS_CHAIN        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_CHAIN  IN (1, 0)),
    CONSTRAINT PK_FEED_TYPE PRIMARY KEY (FEED_TYPE_ID)
)
;

CREATE TABLE CSR.FILE_UPLOAD(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FILE_UPLOAD_SID      NUMBER(10, 0)    NOT NULL,
    FILENAME             VARCHAR2(255)    NOT NULL,
    MIME_TYPE            VARCHAR2(256)    NOT NULL,
    PARENT_SID           NUMBER(10, 0)    NOT NULL,
    DATA                 BLOB             NOT NULL,
    SHA1                 RAW(20)          NOT NULL,
    LAST_MODIFIED_DTM    DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_FILE_UPLOAD PRIMARY KEY (APP_SID, FILE_UPLOAD_SID),
    CONSTRAINT UK_FILE_UPLOAD UNIQUE (FILE_UPLOAD_SID)
)
;

CREATE TABLE CSR.FLOW(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID                  NUMBER(10, 0)    NOT NULL,
    LABEL                     VARCHAR2(255)    NOT NULL,
    DEFAULT_STATE_ID          NUMBER(10, 0),
    HELPER_PKG                VARCHAR2(255),
    FLOW_ALERT_CLASS          VARCHAR2(256),
    OWNER_CAN_CREATE          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    AGGREGATE_IND_GROUP_ID    NUMBER(10, 0),
    CONSTRAINT PK_FLOW PRIMARY KEY (APP_SID, FLOW_SID)
)
;

ALTER TABLE CSR.FLOW ADD CHECK
    (DEFAULT_STATE_ID IS NOT NULL)
    DEFERRABLE INITIALLY DEFERRED
;

CREATE TABLE CSR.FLOW_ALERT_CLASS(
    FLOW_ALERT_CLASS     VARCHAR2(256)    NOT NULL,
    LABEL                VARCHAR2(256)    NOT NULL,
    ON_SAVE_HELPER_SP    VARCHAR2(255),
    HELPER_PKG           VARCHAR2(64),
    ALLOW_CREATE         NUMBER(1) DEFAULT 1 NOT NULL,
    CONSTRAINT PK_FLOW_ALERT_CLASS PRIMARY KEY (FLOW_ALERT_CLASS),
	CONSTRAINT CHK_FLOW_ALERT_CLASS_CREATE CHECK (ALLOW_CREATE IN (0, 1))
)
;

CREATE TABLE CSR.FLOW_ALERT_HELPER(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_ALERT_HELPER    VARCHAR2(256)     NOT NULL,
    LABEL                VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK_FLOW_ALERT_HELPER PRIMARY KEY (APP_SID, FLOW_ALERT_HELPER)
)
;

CREATE TABLE CSR.FLOW_ALERT_TYPE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_SID                  NUMBER(10, 0)    NOT NULL,
    LABEL                     VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY                VARCHAR2(256),
    DELETED                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_FLOW_ALERT_TYPE PRIMARY KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID),
    CONSTRAINT UK_FLOW_ALERT_TYPE UNIQUE (APP_SID, CUSTOMER_ALERT_TYPE_ID, FLOW_SID)
)
;

CREATE TABLE CSR.FLOW_CAPABILITY(
    FLOW_CAPABILITY_ID        NUMBER(10, 0)    NOT NULL,
    FLOW_ALERT_CLASS          VARCHAR2(256)    NOT NULL,
    DESCRIPTION               VARCHAR2(256)    NOT NULL,
    PERM_TYPE                 NUMBER(10, 0)    NOT NULL,
    DEFAULT_PERMISSION_SET    NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_FLOW_CAPABILITY CHECK (FLOW_CAPABILITY_ID < 1000000),
    CONSTRAINT PK_FLOW_CAPABILITY PRIMARY KEY (FLOW_CAPABILITY_ID),
    CONSTRAINT CHK_FLOW_CAP_PERM_TYPE CHECK (PERM_TYPE IN (0, 1)) -- To match chain.capability
)
;

CREATE INDEX CSR.IX_FLOW_CAP_ALERT_CLASS ON CSR.FLOW_CAPABILITY(FLOW_ALERT_CLASS)
;

CREATE TABLE CSR.FLOW_INVOLVEMENT_COVER(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    USER_COVER_ID               NUMBER(10, 0)    NOT NULL,
    USER_GIVING_COVER_SID       NUMBER(10, 0)    NOT NULL,
    USER_BEING_COVERED_SID      NUMBER(10, 0)    NOT NULL,
    FLOW_INVOLVEMENT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_ITEM_ID                NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_INV_COVER PRIMARY KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID, FLOW_INVOLVEMENT_TYPE_ID, FLOW_ITEM_ID)
)
;

CREATE TABLE CSR.FLOW_INVOLVEMENT_TYPE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_INVOLVEMENT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    PRODUCT_AREA                VARCHAR2(256)    NOT NULL,
    LABEL                       VARCHAR2(256)    NOT NULL,
	LOOKUP_KEY                  VARCHAR2(100),
    CSS_CLASS                   VARCHAR2(256),
    CONSTRAINT PK_FLOW_INVOLVEMENT_TYPE PRIMARY KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID),
    CONSTRAINT UK_FLOW_INV_TYPE_LABEL UNIQUE (APP_SID, LABEL, PRODUCT_AREA)
)
;

CREATE UNIQUE INDEX CSR.UK_FLOW_INV_TYPE_KEY ON CSR.FLOW_INVOLVEMENT_TYPE (APP_SID, NVL(UPPER(LOOKUP_KEY), FLOW_INVOLVEMENT_TYPE_ID))
;

CREATE SEQUENCE CSR.FLOW_INVOLVEMENT_TYPE_ID_SEQ START WITH 10000 MINVALUE 10000;

CREATE INDEX CSR.IX_FLOW_INVOLV_TYP_ALT_CLS ON CSR.FLOW_INVOLVEMENT_TYPE(PRODUCT_AREA)
;

CREATE TABLE CSR.FLOW_INV_TYPE_ALERT_CLASS(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_INVOLVEMENT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_ALERT_CLASS            VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_FLOW_INV_TYPE_ALERT_CLASS PRIMARY KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID, FLOW_ALERT_CLASS)
)
;


CREATE TABLE CSR.FLOW_ITEM(
	APP_SID							NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FLOW_ITEM_ID					NUMBER(10, 0)    NOT NULL,
	FLOW_SID						NUMBER(10, 0)    NOT NULL,
	CURRENT_STATE_ID				NUMBER(10, 0)    NOT NULL,
	SURVEY_RESPONSE_ID				NUMBER(10, 0),
	DASHBOARD_INSTANCE_ID			NUMBER(10, 0),
	LAST_FLOW_STATE_LOG_ID			NUMBER(10, 0)    NOT NULL DEFERRABLE INITIALLY DEFERRED,
	LAST_FLOW_STATE_TRANSITION_ID	NUMBER(10, 0),
	RESOURCE_UUID				 	VARCHAR2(64),
	AUTO_FAILURE_COUNT				NUMBER(4) 		 DEFAULT 0 NOT NULL,
	CONSTRAINT PK_FLOW_ITEM PRIMARY KEY (APP_SID, FLOW_ITEM_ID),
	CONSTRAINT CONS_FLOW_ITEM UNIQUE (APP_SID, FLOW_ITEM_ID, FLOW_SID),
	CONSTRAINT UC_FLOW_ITEM_DASHBORD_INSTANCE UNIQUE (DASHBOARD_INSTANCE_ID),
	CONSTRAINT UQ_FLOW_ITEM_RESPONSE_ID UNIQUE (SURVEY_RESPONSE_ID)
)
;

CREATE SEQUENCE CSR.FLOW_ITEM_ID_SEQ;

CREATE INDEX CSR.IX_FLOW_ITEM_ITEM_CURRENT_STAT ON CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID, CURRENT_STATE_ID)
;

CREATE UNIQUE INDEX csr.ix_flow_item_resource_uuid ON csr.flow_item (lower(resource_uuid));

CREATE TABLE CSR.FLOW_ITEM_REGION(
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FLOW_ITEM_ID					NUMBER(10, 0)	NOT NULL,
	REGION_SID						NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_FLOW_ITEM_REGION PRIMARY KEY (APP_SID, FLOW_ITEM_ID, REGION_SID)
)
;

CREATE TABLE CSR.FLOW_ITEM_GENERATED_ALERT(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_ITEM_GENERATED_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_TRANSITION_ALERT_ID        NUMBER(10, 0)    NOT NULL,
    FROM_USER_SID                   NUMBER(10, 0)    NOT NULL,
    TO_USER_SID                     NUMBER(10, 0),
    TO_COLUMN_SID                   NUMBER(10, 0),
    FLOW_ITEM_ID                    NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_LOG_ID               NUMBER(10, 0)    NOT NULL,
    PROCESSED_DTM                   DATE,
    CREATED_DTM                     DATE             DEFAULT SYSDATE,
    SUBJECT_OVERRIDE                CLOB,
    BODY_OVERRIDE                   CLOB,
    CONSTRAINT PK_FLOW_ITEM_GENERATED_ALERT PRIMARY KEY (APP_SID, FLOW_ITEM_GENERATED_ALERT_ID),
    CONSTRAINT UK_FLOW_ITEM_GENERATED_ALERT UNIQUE (APP_SID, FLOW_TRANSITION_ALERT_ID, FROM_USER_SID, TO_USER_SID, TO_COLUMN_SID, FLOW_STATE_LOG_ID)
)
;

CREATE SEQUENCE CSR.FLOW_ITEM_GEN_ALERT_ID_SEQ;

CREATE INDEX CSR.IX_FLOW_ITEM_GEN_PROC_DTM_FI ON CSR.FLOW_ITEM_GENERATED_ALERT(APP_SID, PROCESSED_DTM, FLOW_ITEM_ID)
;

CREATE INDEX CSR.IX_FLOW_ITEM_GEN_TO_COL_SID ON CSR.FLOW_ITEM_GENERATED_ALERT(APP_SID, TO_COLUMN_SID)
;

CREATE TABLE CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE(
    APP_SID                         NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP'),
    FLOW_ITEM_GENERATED_ALERT_ID    NUMBER(10, 0),
    FLOW_TRANSITION_ALERT_ID        NUMBER(10, 0) NOT NULL,
    FROM_USER_SID                   NUMBER(10, 0) NOT NULL,
    TO_USER_SID                     NUMBER(10, 0),
    TO_COLUMN_SID                   NUMBER(10, 0),
    FLOW_ITEM_ID                    NUMBER(10, 0) NOT NULL,
    FLOW_STATE_LOG_ID               NUMBER(10, 0) NOT NULL,
    PROCESSED_DTM                   DATE,
    CREATED_DTM                     DATE,
    SUBJECT_OVERRIDE                CLOB,
    BODY_OVERRIDE                   CLOB,
    CONSTRAINT PK_FLOW_ITEM_GEN_ALERT_ARCHIVE PRIMARY KEY (APP_SID, FLOW_ITEM_GENERATED_ALERT_ID)
)
;

CREATE TABLE CSR.FLOW_ITEM_INVOLVEMENT(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_INVOLVEMENT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_ITEM_ID                NUMBER(10, 0)    NOT NULL,
    USER_SID                    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT CHK_FII_FIT CHECK (FLOW_INVOLVEMENT_TYPE_ID >= 10000)
)
;

CREATE TABLE CSR.FLOW_ITEM_SUBSCRIPTION(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_ITEM_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_ITEM_SUBSCRIPTION PRIMARY KEY (APP_SID, FLOW_ITEM_ID, USER_SID)
)
;

CREATE INDEX CSR.IX_FLOW_ITEM_SUB_USER ON CSR.FLOW_ITEM_SUBSCRIPTION(APP_SID, USER_SID)
;

CREATE TABLE CSR.FLOW_STATE(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_ID            NUMBER(10, 0)    NOT NULL,
    FLOW_SID                 NUMBER(10, 0)    NOT NULL,
    LABEL                    VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY               VARCHAR2(255),
    ATTRIBUTES_XML           SYS.XMLType,
    IS_DELETED               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    STATE_COLOUR             NUMBER(10, 0),
    POS                      NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    IS_FINAL                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_EDITABLE_BY_OWNER     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IND_SID                  NUMBER(10, 0),
    MOVE_FROM_FLOW_STATE_ID  NUMBER(10, 0)    DEFAULT NULL,
    FLOW_STATE_NATURE_ID     NUMBER(10, 0),
	TIME_SPENT_IND_SID		 NUMBER(10, 0),
    SURVEY_EDITABLE          NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_FLOW_STATE_DELETED CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT CK_IS_EDITABLE_BY_OWNER CHECK (IS_EDITABLE_BY_OWNER IN (0,1)),
    CONSTRAINT PK_FLOW_STATE PRIMARY KEY (APP_SID, FLOW_STATE_ID),
    CONSTRAINT CONS_FLOW_STATE UNIQUE (APP_SID, FLOW_STATE_ID, FLOW_SID)
)
;

CREATE SEQUENCE CSR.FLOW_STATE_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_FLOW_STATE_LOOKUP ON CSR.FLOW_STATE(APP_SID, FLOW_SID, NVL(UPPER(LOOKUP_KEY),'FLST'||TO_CHAR(FLOW_STATE_ID)))
;

CREATE TABLE CSR.FLOW_STATE_ALERT(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID                  NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ALERT_ID       NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID             NUMBER(10, 0)    NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_ALERT_HELPER         VARCHAR2(256),
    DESCRIPTION               VARCHAR2(500)    NOT NULL,
    DELETED                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    RECURRENCE_PATTERN        SYS.XMLType      NOT NULL,
    CONSTRAINT CK_FLOW_TRANS_ALERT_DELETED_1 CHECK (deleted in (0,1)),
    CONSTRAINT PK_FLOW_STATE_ALERT PRIMARY KEY (APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID)
)
;

CREATE SEQUENCE CSR.FLOW_STATE_ALERT_ID_SEQ;

CREATE TABLE CSR.FLOW_STATE_ALERT_ROLE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID               NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID               NUMBER(10, 0),
    GROUP_SID              NUMBER(10, 0)    NOT NULL,
    CONSTRAINT CHK_FSAR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL)),
    CONSTRAINT PK_FLOW_STATE_ALERT_ROLE PRIMARY KEY (APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID, ROLE_SID, GROUP_SID)
)
;

CREATE TABLE CSR.FLOW_STATE_ALERT_RUN(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID               NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID               NUMBER(10, 0)    NOT NULL,
    LAST_FIRE_DATE         DATE,
    NEXT_FIRE_DATE         DATE             NOT NULL,
    CONSTRAINT PK_FLOW_STATE_ALERT_RUN PRIMARY KEY (APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID, USER_SID)
)
;

CREATE TABLE CSR.FLOW_STATE_ALERT_USER(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID               NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_ALERT_USER PRIMARY KEY (APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID, USER_SID)
)
;

CREATE TABLE CSR.FLOW_STATE_AUDIT_IND(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID                         NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID                   NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_AUDIT_IND_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_TYPE_ID          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_AUDIT_IND PRIMARY KEY (APP_SID, IND_SID),
    CONSTRAINT UK_FLOW_STATE_AUD_IND_STATE_AT UNIQUE (APP_SID, FLOW_STATE_ID, INTERNAL_AUDIT_TYPE_ID, FLOW_STATE_AUDIT_IND_TYPE_ID)
)
;

CREATE TABLE CSR.FLOW_STATE_AUDIT_IND_TYPE(
    FLOW_STATE_AUDIT_IND_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION                     VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_AUDIT_IND_TYPE PRIMARY KEY (FLOW_STATE_AUDIT_IND_TYPE_ID)
)
;

CREATE TABLE CSR.FLOW_STATE_CMS_COL(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_ID    NUMBER(10, 0)    NOT NULL,
    COLUMN_SID       NUMBER(10, 0)    NOT NULL,
    IS_EDITABLE      NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_FLOW_STATE_CMS_COL_EDIT CHECK (IS_EDITABLE IN (0,1)),
    CONSTRAINT PK_FLOW_STATE_CMS_COL PRIMARY KEY (APP_SID, FLOW_STATE_ID, COLUMN_SID)
)
;

CREATE TABLE CSR.FLOW_STATE_GROUP(
    APP_SID                NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_GROUP_ID    NUMBER(10, 0)     NOT NULL,
    LOOKUP_KEY             VARCHAR2(256)     NOT NULL,
    LABEL                  VARCHAR2(1024)    NOT NULL,
    COUNT_IND_SID          NUMBER(10, 0),
    CONSTRAINT PK_FLOW_STATE_GROUP PRIMARY KEY (APP_SID, FLOW_STATE_GROUP_ID)
)
;

CREATE SEQUENCE CSR.FLOW_STATE_GROUP_ID_SEQ;

CREATE TABLE CSR.FLOW_STATE_GROUP_MEMBER(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID          NUMBER(10, 0)    NOT NULL,
    BEFORE_REPORT_DATE     NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    AFTER_REPORT_DATE      NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT CK_BEFORE_REPORT_DATE CHECK (BEFORE_REPORT_DATE IN(0,1)),
    CONSTRAINT CK_AFTER_REPORT_DATE CHECK (AFTER_REPORT_DATE IN(0,1)),
    CONSTRAINT PK_FLOW_STATE_GROUP_MEMBER PRIMARY KEY (APP_SID, FLOW_STATE_GROUP_ID, FLOW_STATE_ID)
)
;

CREATE TABLE CSR.FLOW_STATE_SURVEY_TAG(
	APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FLOW_STATE_ID          NUMBER(10, 0)    NOT NULL,
	TAG_ID                 NUMBER(10, 0)    NOT NULL,
	CONSTRAINT PK_FLOW_STATE_SURVEY_TAG PRIMARY KEY (APP_SID, FLOW_STATE_ID, TAG_ID)
);

CREATE INDEX CSR.IX_FLOW_STATE_SURVEY_TAG_TAG ON CSR.FLOW_STATE_SURVEY_TAG(APP_SID, TAG_ID);

CREATE TABLE CSR.FLOW_STATE_INVOLVEMENT(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_ID               NUMBER(10, 0)    NOT NULL,
    FLOW_INVOLVEMENT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_INVOLVEMENT PRIMARY KEY (APP_SID, FLOW_STATE_ID, FLOW_INVOLVEMENT_TYPE_ID)
)
;

CREATE INDEX CSR.IX_FLOW_STATE_INV_INV_ID ON CSR.FLOW_STATE_INVOLVEMENT(FLOW_INVOLVEMENT_TYPE_ID)
;

CREATE INDEX CSR.IX_FLOW_STATE_INV_STATE_ID ON CSR.FLOW_STATE_INVOLVEMENT(APP_SID, FLOW_STATE_ID)
;

CREATE TABLE CSR.FLOW_STATE_LOG(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_LOG_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_ITEM_ID         NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID        NUMBER(10, 0)    NOT NULL,
    SET_BY_USER_SID      NUMBER(10, 0)    NOT NULL,
    SET_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    COMMENT_TEXT         CLOB,
    CONSTRAINT PK_FLOW_STATE_LOG PRIMARY KEY (APP_SID, FLOW_STATE_LOG_ID),
    CONSTRAINT UK_FLOW_STATE_LOG UNIQUE (APP_SID, FLOW_STATE_LOG_ID, FLOW_ITEM_ID)
)
;

CREATE SEQUENCE CSR.FLOW_STATE_LOG_ID_SEQ;

CREATE TABLE CSR.FLOW_STATE_LOG_FILE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_LOG_FILE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_LOG_ID         NUMBER(10, 0)    NOT NULL,
    FILENAME                  VARCHAR2(255)    NOT NULL,
    MIME_TYPE                 VARCHAR2(256)    NOT NULL,
    DATA                      BLOB             NOT NULL,
    SHA1                      RAW(20)          NOT NULL,
    UPLOADED_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_FLOW_STATE_LOG_FILE PRIMARY KEY (APP_SID, FLOW_STATE_LOG_FILE_ID)
)
;

CREATE SEQUENCE CSR.FLOW_STATE_LOG_FILE_ID_SEQ CACHE 5;

CREATE TABLE CSR.FLOW_STATE_NATURE(
    FLOW_STATE_NATURE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                   VARCHAR2(64)     NOT NULL,
    FLOW_ALERT_CLASS        VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_NATURE PRIMARY KEY (FLOW_STATE_NATURE_ID)
)
;

CREATE TABLE CSR.FLOW_STATE_ROLE(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_ID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID         NUMBER(10, 0),
    IS_EDITABLE      NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    GROUP_SID        NUMBER(10, 0),
    CONSTRAINT CHK_FLOW_STATE_ROLE_EDIT CHECK (IS_EDITABLE IN (0,1)),
    CONSTRAINT PK_FLOW_STATE_ROLE UNIQUE (APP_SID, FLOW_STATE_ID, ROLE_SID, GROUP_SID),
    CONSTRAINT CHK_FSR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL))
)
;

CREATE TABLE CSR.FLOW_STATE_ROLE_CAPABILITY(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_RL_CAP_ID        NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID               NUMBER(10, 0)    NOT NULL,
    FLOW_CAPABILITY_ID          NUMBER(10, 0)    NOT NULL,
    ROLE_SID                    NUMBER(10, 0),
    FLOW_INVOLVEMENT_TYPE_ID    NUMBER(10, 0),
    PERMISSION_SET              NUMBER(10, 0)    NOT NULL,
    GROUP_SID                   NUMBER(10, 0),
    CONSTRAINT PK_FLOW_STATE_ROLE_CAPABILITY PRIMARY KEY (APP_SID, FLOW_STATE_RL_CAP_ID),
    CONSTRAINT UK_FLOW_STATE_ROLE_CAPABILITY UNIQUE (APP_SID, FLOW_STATE_ID, FLOW_CAPABILITY_ID, ROLE_SID, GROUP_SID, FLOW_INVOLVEMENT_TYPE_ID),
    CONSTRAINT CHK_FLOW_STATE_ROLE_CAPABILITY CHECK(
        (ROLE_SID IS NULL AND GROUP_SID IS NOT NULL AND FLOW_INVOLVEMENT_TYPE_ID IS NULL) OR
        (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL AND FLOW_INVOLVEMENT_TYPE_ID IS NULL) OR
        (ROLE_SID IS NULL AND GROUP_SID IS NULL AND FLOW_INVOLVEMENT_TYPE_ID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.FLOW_STATE_RL_CAP_ID_SEQ;

CREATE INDEX CSR.IX_FLOW_STATE_RL_CAP_INV ON CSR.FLOW_STATE_ROLE_CAPABILITY(APP_SID, FLOW_STATE_ID, FLOW_INVOLVEMENT_TYPE_ID)
;

CREATE INDEX CSR.IX_FLOW_STATE_RL_CAP_ROLE ON CSR.FLOW_STATE_ROLE_CAPABILITY(APP_SID, FLOW_STATE_ID, ROLE_SID)
;

CREATE TABLE CSR.FLOW_STATE_TRANS_HELPER(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID     NUMBER(10, 0)    NOT NULL,
    HELPER_SP    VARCHAR2(255)    NOT NULL,
    LABEL        VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_TRANS_HELPER PRIMARY KEY (APP_SID, FLOW_SID, HELPER_SP)
)
;

CREATE TABLE CSR.FLOW_STATE_TRANSITION(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_TRANSITION_ID    NUMBER(10, 0)    NOT NULL,
    FROM_STATE_ID               NUMBER(10, 0)    NOT NULL,
    TO_STATE_ID                 NUMBER(10, 0)    NOT NULL,
    FLOW_SID                    NUMBER(10, 0)    NOT NULL,
    VERB                        VARCHAR2(255)    NOT NULL,
    ASK_FOR_COMMENT             VARCHAR2(16)     NOT NULL,
    POS                         NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    ATTRIBUTES_XML              SYS.XMLType,
    HELPER_SP                   VARCHAR2(255),
    LOOKUP_KEY                  VARCHAR2(255),
    MANDATORY_FIELDS_MESSAGE    VARCHAR2(255),
    BUTTON_ICON_PATH            VARCHAR2(255),
    OWNER_CAN_SET               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    HOURS_BEFORE_AUTO_TRAN      NUMBER(10, 0),
    GROUP_SID_CAN_SET           NUMBER(10, 0),
    AUTO_SCHEDULE_XML           SYS.XMLType,
    AUTO_TRANS_TYPE             NUMBER(10)       DEFAULT 0 NOT NULL,
    LAST_RUN_DTM                DATE,
	ENFORCE_VALIDATION			NUMBER(1) DEFAULT 0 NOT NULL,
    CHECK (ASK_FOR_COMMENT IN ('none','required','optional')),
    CONSTRAINT PK_FLOW_STATE_TRANSITION PRIMARY KEY (APP_SID, FLOW_STATE_TRANSITION_ID),
    CONSTRAINT UK_FLOW_STATE_TRANSITION UNIQUE (APP_SID, FROM_STATE_ID, TO_STATE_ID),
    CONSTRAINT UK_FLOW_STATE_TRANS_FROM UNIQUE (APP_SID, FLOW_STATE_TRANSITION_ID, FROM_STATE_ID),
    CONSTRAINT CK_OWNER_CAN_SET CHECK (OWNER_CAN_SET IN (0,1)),
	CONSTRAINT CK_ENFORCE_VALIDATION CHECK (ENFORCE_VALIDATION IN (0,1))
)
;

CREATE SEQUENCE CSR.FLOW_STATE_TRANSITION_ID_SEQ;

CREATE INDEX CSR.UK_FLOW_ST_TR_LOOKUP ON CSR.FLOW_STATE_TRANSITION(APP_SID, FROM_STATE_ID, NVL(UPPER(LOOKUP_KEY),'FLST'||TO_CHAR(FLOW_STATE_TRANSITION_ID)))
;

CREATE TABLE CSR.FLOW_STATE_TRANSITION_CMS_COL(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_TRANSITION_ID    NUMBER(10, 0)    NOT NULL,
    FROM_STATE_ID               NUMBER(10, 0)    NOT NULL,
    COLUMN_SID                  NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_TRANS_COL PRIMARY KEY (APP_SID, FLOW_STATE_TRANSITION_ID, FROM_STATE_ID, COLUMN_SID)
)
;

CREATE TABLE CSR.FLOW_STATE_TRANSITION_INV(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_TRANSITION_ID    NUMBER(10, 0)    NOT NULL,
    FROM_STATE_ID               NUMBER(10, 0)    NOT NULL,
    FLOW_INVOLVEMENT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_TRANSITION_INV PRIMARY KEY (APP_SID, FLOW_STATE_TRANSITION_ID, FLOW_INVOLVEMENT_TYPE_ID)
)
;

CREATE INDEX CSR.IX_FLOW_STATE_TRANS_INV_INV ON CSR.FLOW_STATE_TRANSITION_INV(APP_SID, FROM_STATE_ID, FLOW_INVOLVEMENT_TYPE_ID)
;

CREATE TABLE CSR.FLOW_STATE_TRANSITION_ROLE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_TRANSITION_ID    NUMBER(10, 0)    NOT NULL,
    FROM_STATE_ID               NUMBER(10, 0)    NOT NULL,
    ROLE_SID                    NUMBER(10, 0),
    GROUP_SID                   NUMBER(10, 0),
    CONSTRAINT CHK_FSTR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL)),
    CONSTRAINT PK_FLOW_STATE_TRANS_ROLE UNIQUE (APP_SID, FLOW_STATE_TRANSITION_ID, FROM_STATE_ID, ROLE_SID, GROUP_SID)
)
;

CREATE TABLE CSR.FLOW_TRANSITION_ALERT(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_TRANSITION_ALERT_ID        NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_TRANSITION_ID        NUMBER(10, 0)    NOT NULL,
    CUSTOMER_ALERT_TYPE_ID          NUMBER(10, 0)    NOT NULL,
    DESCRIPTION                     VARCHAR2(500)    NOT NULL,
    DELETED                         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TO_INITIATOR                    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    HELPER_SP                       VARCHAR2(100),
    FLOW_ALERT_HELPER               VARCHAR2(256),
    CAN_BE_EDITED_BEFORE_SENDING    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CK_FLOW_TRANS_ALERT_DELETED CHECK (deleted in (0,1)),
    CONSTRAINT CK_FLOW_TR_ALERT_TO_INITIATOR CHECK (TO_INITIATOR IN (0,1)),
    CONSTRAINT PK_FLOW_TRANSITION_ALERT PRIMARY KEY (APP_SID, FLOW_TRANSITION_ALERT_ID),
    CONSTRAINT CHK_FTA_CAN_BE_EDITED CHECK (CAN_BE_EDITED_BEFORE_SENDING IN (0,1))
)
;

CREATE SEQUENCE CSR.FLOW_TRANSITION_ALERT_ID_SEQ;

CREATE TABLE CSR.FLOW_TRANSITION_ALERT_CMS_COL(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_TRANSITION_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    COLUMN_SID                  NUMBER(10, 0)    NOT NULL,
    ALERT_MANAGER_FLAG          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_FLOW_TRANS_ALERT_CMS_COL PRIMARY KEY (APP_SID, FLOW_TRANSITION_ALERT_ID, COLUMN_SID)
)
;

CREATE TABLE CSR.FLOW_TRANSITION_ALERT_INV(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_TRANSITION_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_INVOLVEMENT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_TRANSITION_ALERT_INV PRIMARY KEY (APP_SID, FLOW_TRANSITION_ALERT_ID, FLOW_INVOLVEMENT_TYPE_ID)
)
;

CREATE INDEX CSR.FK_FLOW_TRANS_ALERT_INV_INV ON CSR.FLOW_TRANSITION_ALERT_INV(FLOW_INVOLVEMENT_TYPE_ID)
;

CREATE TABLE CSR.FLOW_TRANSITION_ALERT_ROLE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_TRANSITION_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID                    NUMBER(10, 0),
    GROUP_SID                   NUMBER(10, 0),
    CONSTRAINT CHK_FTAR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL)),
    CONSTRAINT PK_FLOW_TRANSITION_ALERT_ROLE UNIQUE (APP_SID, FLOW_TRANSITION_ALERT_ID, ROLE_SID, GROUP_SID)
)
;

CREATE TABLE CSR.FLOW_TRANSITION_ALERT_USER(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_TRANSITION_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID                    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_TRANS_ALERT_USER PRIMARY KEY (APP_SID, FLOW_TRANSITION_ALERT_ID, USER_SID)
)
;

CREATE TABLE CSR.FLOW_TRANSITION_ALERT_CC_ROLE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_TRANSITION_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID                    NUMBER(10, 0),
    GROUP_SID                   NUMBER(10, 0),
    CONSTRAINT CHK_FTACCR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL)),
    CONSTRAINT UK_FLOW_TRANS_ALERT_CC_ROLE UNIQUE (APP_SID, FLOW_TRANSITION_ALERT_ID, ROLE_SID, GROUP_SID)
)
;

CREATE TABLE CSR.FLOW_TRANSITION_ALERT_CC_USER(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_TRANSITION_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID                    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_TRANS_ALERT_CC_USER PRIMARY KEY (APP_SID, FLOW_TRANSITION_ALERT_ID, USER_SID)
)
;

CREATE TABLE CSR.FORECASTING_RULE (
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SCENARIO_SID				NUMBER(10, 0) NOT NULL,
	RULE_ID						NUMBER(10, 0) NOT NULL,
	IND_SID						NUMBER(10, 0) NOT NULL,
	REGION_SID					NUMBER(10, 0) NOT NULL,
	START_DTM					DATE NOT NULL,
	END_DTM						DATE NOT NULL,
	RULE_TYPE					VARCHAR2(10) NOT NULL,
	RULE_VAL					NUMBER(24, 10) NOT NULL,
	CONSTRAINT PK_FORECAST_RULE				PRIMARY KEY	(APP_SID, SCENARIO_SID, RULE_ID, IND_SID, REGION_SID, START_DTM, END_DTM),
	CONSTRAINT CK_FORECAST_RULE_RULE_TYPE 	CHECK (RULE_TYPE IN ('FIXED', '*', '+'))
)
;

CREATE TABLE CSR.FORM(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FORM_SID              NUMBER(10, 0)    NOT NULL,
    PARENT_SID            NUMBER(10, 0)    NOT NULL,
    NAME                  VARCHAR2(256)    NOT NULL,
    NOTE                  CLOB             DEFAULT EMPTY_CLOB(),
    START_DTM             DATE             NOT NULL,
    END_DTM               DATE             NOT NULL,
    GROUP_BY              VARCHAR2(128)    NOT NULL,
    PERIOD_SET_ID         NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID    NUMBER(10, 0)    NOT NULL,
    ALLOCATE_USERS_TO     VARCHAR2(10)     NOT NULL,
    TAB_DIRECTION         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CK_FORM_TAB_DIRECTION CHECK (TAB_DIRECTION IN (0,1)),
    CONSTRAINT PK_FORM PRIMARY KEY (APP_SID, FORM_SID)
)
;

CREATE TABLE CSR.FORM_ALLOCATION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FORM_ALLOCATION_ID    NUMBER(10, 0)    NOT NULL,
    FORM_SID              NUMBER(10, 0)    NOT NULL,
    NOTE                  CLOB             DEFAULT EMPTY_CLOB(),
    CONSTRAINT PK_FORM_ALLOCATION PRIMARY KEY (APP_SID, FORM_ALLOCATION_ID)
)
;

CREATE SEQUENCE CSR.FORM_ALLOCATION_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_FORM_ALL_FORM ON CSR.FORM_ALLOCATION(APP_SID, FORM_SID)
;

CREATE TABLE CSR.FORM_ALLOCATION_ITEM(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FORM_ALLOCATION_ID    NUMBER(10, 0)    NOT NULL,
    ITEM_SID              NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FORM_ALLOCATION_ITEM PRIMARY KEY (APP_SID, FORM_ALLOCATION_ID, ITEM_SID)
)
;

CREATE TABLE CSR.FORM_ALLOCATION_USER(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FORM_ALLOCATION_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID              NUMBER(10, 0)    NOT NULL,
    READ_ONLY             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_FORM_ALLOCATION_USER PRIMARY KEY (APP_SID, FORM_ALLOCATION_ID, USER_SID)
)
;

CREATE INDEX CSR.IDX_FA_USER_FA ON CSR.FORM_ALLOCATION_USER(APP_SID, FORM_ALLOCATION_ID)
;

CREATE INDEX CSR.IDX_FA_USER_USER ON CSR.FORM_ALLOCATION_USER(APP_SID, USER_SID)
;

CREATE TABLE CSR.FORM_COMMENT(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FORM_SID               NUMBER(10, 0)    NOT NULL,
    Z_KEY                  VARCHAR2(255)    NOT NULL,
    FORM_COMMENT           CLOB             DEFAULT EMPTY_CLOB(),
    LAST_UPDATED_BY_SID    NUMBER(10, 0)    NOT NULL,
    LAST_UPDATED_DTM       DATE             DEFAULT (SYSDATE) NOT NULL,
    FORM_ALLOCATION_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FORM_COMMENT PRIMARY KEY (APP_SID, FORM_SID, Z_KEY, FORM_ALLOCATION_ID)
)
;

CREATE INDEX CSR.IDX_FORM_COMMENT_FA ON CSR.FORM_COMMENT(APP_SID, FORM_ALLOCATION_ID)
;

CREATE INDEX CSR.IDX_FORM_COMMENT_FORM ON CSR.FORM_COMMENT(APP_SID, FORM_SID)
;

CREATE TABLE CSR.FORM_EXPR(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FORM_EXPR_ID      NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION       VARCHAR2(255),
    EXPR              SYS.XMLType      NOT NULL,
    CONSTRAINT PK_FORM_EXPR PRIMARY KEY (APP_SID, FORM_EXPR_ID)
)
;

CREATE SEQUENCE CSR.FORM_EXPR_ID_SEQ;

CREATE TABLE CSR.FORM_IND_MEMBER(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FORM_SID                 NUMBER(10, 0)     NOT NULL,
    IND_SID                  NUMBER(10, 0)     NOT NULL,
    DESCRIPTION              VARCHAR2(1023)    NOT NULL,
    POS                      NUMBER(10, 0)     NOT NULL,
    SCALE                    NUMBER(10, 0),
    FORMAT_MASK              VARCHAR2(255),
    MEASURE_DESCRIPTION      VARCHAR2(255),
    SHOW_TOTAL               NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    MULTIPLIER_IND_SID       NUMBER(10, 0),
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    CONSTRAINT PK_FORM_IND_MEMBER PRIMARY KEY (APP_SID, FORM_SID, IND_SID),
    CONSTRAINT CK_FORM_IND_MEMBER_SHOW_TOTAL CHECK (SHOW_TOTAL IN (0,1))
)
;

CREATE TABLE CSR.FORM_REGION_MEMBER(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FORM_SID       NUMBER(10, 0)    NOT NULL,
    REGION_SID     NUMBER(10, 0)    NOT NULL,
    DESCRIPTION    VARCHAR2(255)    NOT NULL,
    POS            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FORM_REGION_MEMBER PRIMARY KEY (APP_SID, FORM_SID, REGION_SID)
)
;

CREATE TABLE CSR.FTP_PROFILE(
	APP_SID						NUMBER(10, 0) 		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FTP_PROFILE_ID				NUMBER(10, 0)		NOT NULL,
	LABEL						VARCHAR2(255),
	HOST_NAME					VARCHAR2(1024)		NOT NULL,
	SECURE_CREDENTIALS			CLOB,
	FINGERPRINT					VARCHAR2(1024),
	USERNAME					VARCHAR2(255),
	PASSWORD					VARCHAR2(255),
	PORT_NUMBER					NUMBER(10, 0),
	FTP_PROTOCOL_ID				NUMBER(10, 0)		NOT NULL,
	PRESERVE_TIMESTAMP			NUMBER(1, 0)		DEFAULT 0 NOT NULL,
	ENABLE_DEBUG_LOG			NUMBER(1, 0)		DEFAULT 0 NOT NULL,
	USE_USERNAME_PASSWORD_AUTH	NUMBER(1, 0)		DEFAULT 0 NOT NULL,
	CONSTRAINT PK_FTP_PROFILE PRIMARY KEY (APP_SID, FTP_PROFILE_ID),
	CONSTRAINT CK_FTP_PROFILE_ENABLE_DEBG_LOG CHECK (ENABLE_DEBUG_LOG IN (0, 1)),
	CONSTRAINT CK_FTP_PROFILE_PRESV_TIMESTAMP CHECK (PRESERVE_TIMESTAMP IN (0, 1))
)
;

CREATE SEQUENCE CSR.FTP_PROFILE_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_FTP_PROFILE_LABEL ON CSR.FTP_PROFILE(APP_SID, LOWER(LABEL))
;

CREATE TABLE CSR.FTP_PROTOCOL(
    PROTOCOL_ID    NUMBER(10, 0)    NOT NULL,
    LABEL          VARCHAR2(128),
    CONSTRAINT PK_FTP_PROTOCOL PRIMARY KEY (PROTOCOL_ID)
)
;

CREATE TABLE CSR.FTP_PROFILE_LOG (
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FTP_PROFILE_ID			NUMBER(10) 		NOT NULL,
	CHANGED_DTM				DATE 			NOT NULL,
	CHANGED_BY_USER_SID		NUMBER(10) 		NOT NULL,
	MESSAGE					VARCHAR2(1024)	NOT NULL
)
;

CREATE INDEX CSR.IDX_FTP_PROFILE_LOG ON CSR.FTP_PROFILE_LOG(APP_SID)
;


CREATE TABLE CSR.FUNCTION(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FUNCTION_ID    NUMBER(10, 0)    NOT NULL,
    LABEL          VARCHAR2(50)     NOT NULL,
    LOOKUP_KEY     VARCHAR2(255),
    CONSTRAINT PK_FUNCTION PRIMARY KEY (APP_SID, FUNCTION_ID)
)
;

CREATE SEQUENCE CSR.FUNCTION_ID_SEQ;

CREATE UNIQUE INDEX CSR.IDX_UK_FUNCTION_LOOKUP_KEY ON CSR.FUNCTION(APP_SID, NVL(UPPER(LOOKUP_KEY),'URT'||TO_CHAR(FUNCTION_ID)))
;

CREATE TABLE CSR.FUNCTION_COURSE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FUNCTION_ID             NUMBER(10, 0)    NOT NULL,
    COURSE_ID               NUMBER(10, 0)    NOT NULL,
    TRAINING_PRIORITY_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FUNCTION_COURSE PRIMARY KEY (APP_SID, FUNCTION_ID, COURSE_ID)
)
;

CREATE TABLE CSR.FUND(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FUND_ID                    NUMBER(10, 0)    NOT NULL,
    COMPANY_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','CHAIN_COMPANY') NOT NULL,
    NAME                       VARCHAR2(255)    NOT NULL,
    YEAR_OF_INCEPTION          NUMBER(10, 0),
    FUND_TYPE_ID               NUMBER(10, 0),
    DEFAULT_MGMT_COMPANY_ID    NUMBER(10, 0),
    MGR_CONTACT_NAME           VARCHAR2(255),
    MGR_CONTACT_EMAIL          VARCHAR2(255),
    MGR_CONTACT_PHONE          VARCHAR2(255),
    REGION_SID                 NUMBER(10, 0),
    CONSTRAINT PK_FUND PRIMARY KEY (APP_SID, FUND_ID),
    CONSTRAINT UK_FUND UNIQUE (APP_SID, FUND_ID, DEFAULT_MGMT_COMPANY_ID)
)
;

CREATE SEQUENCE CSR.FUND_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_FUND_NAME ON CSR.FUND(APP_SID, COMPANY_SID, UPPER(TRIM(NAME)))
;

CREATE TABLE CSR.FUND_FORM_PLUGIN(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PLUGIN_ID    NUMBER(10, 0)    NOT NULL,
    POS          NUMBER(10, 0)    NOT NULL,
    XML_PATH     VARCHAR2(255)    NOT NULL,
    KEY_NAME     VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_FUND_FORM_PLUGIN PRIMARY KEY (APP_SID, PLUGIN_ID, POS)
)
;

CREATE TABLE CSR.FUND_MGMT_CONTACT(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FUND_ID                    NUMBER(10, 0)    NOT NULL,
    MGMT_COMPANY_ID            NUMBER(10, 0)    NOT NULL,
    MGMT_COMPANY_CONTACT_ID    NUMBER(10, 0)    NOT NULL
)
;

CREATE TABLE CSR.FUND_TYPE(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FUND_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL           VARCHAR2(255),
    CONSTRAINT PK_FUND_TYPE PRIMARY KEY (APP_SID, FUND_TYPE_ID)
)
;

CREATE SEQUENCE CSR.FUND_TYPE_ID_SEQ;

CREATE TABLE CSR.GAS_TYPE(
    GAS_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    NAME           VARCHAR2(200)    NOT NULL,
    CONSTRAINT PK_GAS_TYPE PRIMARY KEY (GAS_TYPE_ID)
)
;

CREATE SEQUENCE CSR.GAS_TYPE_ID_SEQ;

CREATE TABLE CSR.GEO_MAP(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_SID                 NUMBER(10, 0)    NOT NULL,
    LABEL                       VARCHAR2(255)    NOT NULL,
    REGION_SELECTION_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    INCLUDE_INACTIVE_REGIONS    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    START_DTM                   DATE             NOT NULL,
    END_DTM                     DATE,
    INTERVAL                    VARCHAR2(10)     DEFAULT 'y' NOT NULL,
    TAG_ID                      NUMBER(10, 0),
    CONSTRAINT CHK_GEO_MAP_INCL_INACT CHECK (INCLUDE_INACTIVE_REGIONS IN (0,1)),
    CONSTRAINT CHK_GEO_MAP_INTERVAL CHECK (INTERVAL IN ('m','q','h','y')),
    CONSTRAINT PK_GEO_MAP PRIMARY KEY (APP_SID, GEO_MAP_SID)
)
;

CREATE TABLE CSR.GEO_MAP_REGION(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_GEO_MAP_REGION PRIMARY KEY (APP_SID, GEO_MAP_SID, REGION_SID)
)
;

CREATE TABLE CSR.GEO_MAP_TAB(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_TAB_ID         NUMBER(10, 0)    NOT NULL,
    GEO_MAP_SID            NUMBER(10, 0)    NOT NULL,
    LABEL                  VARCHAR2(255)    NOT NULL,
    GEO_MAP_TAB_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    POS                    NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_GEO_MAP_TAB PRIMARY KEY (APP_SID, GEO_MAP_TAB_ID)
)
;

CREATE SEQUENCE CSR.GEO_MAP_TAB_ID_SEQ;

CREATE TABLE CSR.GEO_MAP_TAB_CHART(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_TAB_ID    NUMBER(10, 0)    NOT NULL,
    DATAVIEW_SID      NUMBER(10, 0)    NOT NULL,
    CHART_HEIGHT      NUMBER(10, 0),
    CHART_WIDTH       NUMBER(10, 0),
    CONSTRAINT PK_GEO_MAP_TAB_CHART PRIMARY KEY (APP_SID, GEO_MAP_TAB_ID)
)
;

CREATE TABLE CSR.GEO_MAP_TAB_TYPE(
    GEO_MAP_TAB_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    LABEL                   VARCHAR2(255)    NOT NULL,
    JS_CLASS                VARCHAR2(255)    NOT NULL,
    MAP_BUILDER_JS_CLASS    VARCHAR2(255)    NOT NULL,
    MAP_BUILDER_CS_CLASS    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK1867 PRIMARY KEY (GEO_MAP_TAB_TYPE_ID)
)
;

CREATE TABLE CSR.GRESB_ERROR(
    GRESB_ERROR_ID    VARCHAR2(255)     NOT NULL,
    DESCRIPTION       VARCHAR2(4000),
    CONSTRAINT PK_GRESB_ERROR PRIMARY KEY (GRESB_ERROR_ID)
)
;

CREATE TABLE CSR.GRESB_INDICATOR(
    GRESB_INDICATOR_ID           NUMBER(10, 0)     NOT NULL,
    GRESB_INDICATOR_TYPE_ID      NUMBER(10, 0)     NOT NULL,
    TITLE                        VARCHAR2(255)     NOT NULL,
    FORMAT                       VARCHAR2(255),
    DESCRIPTION                  VARCHAR2(4000),
    UNIT                         VARCHAR2(255),
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    SYSTEM_MANAGED               NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SM_DESCRIPTION               VARCHAR2(4000),
    CONSTRAINT PK_GRESB_INDICATOR PRIMARY KEY (GRESB_INDICATOR_ID),
    CONSTRAINT CK_GRESB_INDICATOR_MANAGED CHECK (SYSTEM_MANAGED IN (0,1))
)
;

CREATE TABLE CSR.GRESB_INDICATOR_MAPPING(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    GRESB_INDICATOR_ID       NUMBER(10, 0)    NOT NULL,
    IND_SID                  NUMBER(10, 0),
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    NOT_APPLICABLE           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_GRESB_INDICATOR_MAPPING PRIMARY KEY (APP_SID, GRESB_INDICATOR_ID)
)
;

CREATE TABLE CSR.GRESB_INDICATOR_TYPE(
    GRESB_INDICATOR_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    TITLE                      VARCHAR2(255)    NOT NULL,
    REQUIRED                   NUMBER(1, 0)     NOT NULL,
    POS                        NUMBER(2, 0)     NOT NULL,
    CONSTRAINT PK_GRESB_INDICATOR_TYPE PRIMARY KEY (GRESB_INDICATOR_TYPE_ID)
)
;

CREATE TABLE CSR.GRESB_PROPERTY_TYPE(
    NAME    				VARCHAR2(255),
    GRESB_PROPERTY_TYPE_ID  NUMBER(10) NOT NULL,
    POS                     NUMBER(2),
    CONSTRAINT PK_GRESB_PROPERTY_TYPE PRIMARY KEY (GRESB_PROPERTY_TYPE_ID)
)
;

CREATE TABLE CSR.GRESB_PROPERTY_SUB_TYPE (
    GRESB_PROPERTY_TYPE_ID      NUMBER(10)    NOT NULL,
    GRESB_PROPERTY_SUB_TYPE_ID  NUMBER(10)    NOT NULL,
    NAME                        VARCHAR2(255),
    GRESB_CODE                  VARCHAR2(255),
    POS                         NUMBER(2),
    CONSTRAINT PK_GRESB_PROPERTY_SUB_TYPE PRIMARY KEY (GRESB_PROPERTY_TYPE_ID, GRESB_PROPERTY_SUB_TYPE_ID),
    CONSTRAINT UK_GRESB_PROP_SUB_TYPE_CODE UNIQUE (GRESB_CODE)
)
;

CREATE TABLE CSR.GRESB_SERVICE_CONFIG(
    NAME             VARCHAR2(255)    NOT NULL,
    URL              VARCHAR2(255)    NOT NULL,
	OAUTH_URL        VARCHAR2(255)    NOT NULL,
    CLIENT_ID        VARCHAR2(255)    NOT NULL,
    CLIENT_SECRET    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_GRESB_SERVICE_CONFIG PRIMARY KEY (NAME)
)
;

CREATE UNIQUE INDEX CSR.IX_GRESB_SERVICE_CONFIG_NAME ON CSR.GRESB_SERVICE_CONFIG(LOWER(NAME))
;

CREATE TABLE CSR.GRESB_SUBMISSION_LOG(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    GRESB_SUBMISSION_ID    NUMBER(10, 0)    NOT NULL,
    GRESB_RESPONSE_ID      VARCHAR2(255),
    GRESB_ENTITY_ID        VARCHAR2(255),
    GRESB_ASSET_ID         VARCHAR2(255),
    SUBMISSION_TYPE        NUMBER(10, 0)    NOT NULL,
    SUBMISSION_DATE        DATE             NOT NULL,
    REQUEST_DATA           CLOB,
    RESPONSE_DATA          CLOB,
    CONSTRAINT PK_GRESB_SUBMISSION_LOG PRIMARY KEY (APP_SID, GRESB_SUBMISSION_ID),
    CONSTRAINT CK_SUBMISSION_TYPE_VALID CHECK (SUBMISSION_TYPE IN (0, 1)),
    CONSTRAINT CK_GRESB_SL_ID_VALID CHECK ((GRESB_RESPONSE_ID IS NOT NULL OR GRESB_ENTITY_ID IS NOT NULL) AND NOT (GRESB_RESPONSE_ID IS NOT NULL AND GRESB_ENTITY_ID IS NOT NULL) AND NOT (GRESB_RESPONSE_ID IS NULL AND GRESB_ENTITY_ID IS NULL))
)
;
CREATE SEQUENCE CSR.GRESB_SUBMISSION_SEQ;

CREATE TABLE CSR.GROUP_USER_COVER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    USER_COVER_ID             NUMBER(10, 0)    NOT NULL,
    USER_GIVING_COVER_SID     NUMBER(10, 0)    NOT NULL,
    USER_BEING_COVERED_SID    NUMBER(10, 0)    NOT NULL,
    GROUP_SID                 NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_GROUP_USER_COVER PRIMARY KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID, GROUP_SID)
)
;

CREATE TABLE CSR.HELP_FILE(
    HELP_FILE_ID        NUMBER(10, 0)     NOT NULL,
    DATA                BLOB              NOT NULL,
    LAST_UPDATED_DTM    DATE              DEFAULT SYSDATE NOT NULL,
    MIME_TYPE           VARCHAR2(1024)    NOT NULL,
    LABEL               VARCHAR2(1024)    NOT NULL,
    DATA_HASH           RAW(20)           NOT NULL,
    CONSTRAINT PK3_1 PRIMARY KEY (HELP_FILE_ID)
)
;

CREATE SEQUENCE CSR.HELP_FILE_ID_SEQ;

CREATE TABLE CSR.HELP_IMAGE(
    IMAGE_ID         NUMBER(10, 0)     NOT NULL,
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MIME_TYPE        VARCHAR2(100)     NOT NULL,
    SHA1             RAW(20)           NOT NULL,
    FILENAME         VARCHAR2(200)     NOT NULL,
    DESCRIPTION      VARCHAR2(1000),
    DATA             BLOB              NOT NULL,
    MODIFIED_DTM     TIMESTAMP(6)      DEFAULT systimestamp NOT NULL,
    WIDTH            NUMBER(10, 0),
    HEIGHT           NUMBER(10, 0),
    RECYCLED         NUMBER(1, 0)      NOT NULL,
    IMAGE_LANG_ID    NUMBER(10, 0)     NOT NULL,
    CONSTRAINT CHK_HELP_IMAGE_RECYCLED CHECK (RECYCLED IN (0,1)),
    CONSTRAINT PK_HELP_IMAGE PRIMARY KEY (IMAGE_ID)
)
;

CREATE SEQUENCE CSR.HELP_IMAGE_ID_SEQ;

CREATE TABLE CSR.HELP_IMAGE_TAG(
    PARENT_TAG_ID    NUMBER(10, 0)    NOT NULL,
    IMAGE_ID         NUMBER(10, 0)    NOT NULL,
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CONSTRAINT PK_HELP_IMAGE_TAG PRIMARY KEY (PARENT_TAG_ID, IMAGE_ID)
)
;

CREATE TABLE CSR.HELP_LANG(
    HELP_LANG_ID    NUMBER(10, 0)    NOT NULL,
    BASE_LANG_ID    NUMBER(10, 0),
    LABEL           VARCHAR2(255)    NOT NULL,
    SHORT_NAME      VARCHAR2(255),
    CONSTRAINT PK4_2 PRIMARY KEY (HELP_LANG_ID)
)
;

CREATE SEQUENCE CSR.HELP_LANG_ID_SEQ;

CREATE TABLE CSR.HELP_TAG(
    TAG_ID           NUMBER(10, 0)    NOT NULL,
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAG              VARCHAR2(300)    NOT NULL,
    PARENT_TAG_ID    NUMBER(10, 0),
    CONSTRAINT PK_HELP_TAG PRIMARY KEY (TAG_ID)
)
;

CREATE SEQUENCE CSR.HELP_TAG_ID_SEQ;

CREATE TABLE CSR.HELP_TOPIC(
    HELP_TOPIC_ID    NUMBER(10, 0)    NOT NULL,
    PARENT_ID        NUMBER(10, 0),
    LOOKUP_NAME      VARCHAR2(255),
    POS              NUMBER(10, 0)    NOT NULL,
    HITS             NUMBER(10, 0),
    VOTES            NUMBER(10, 0),
    SCORE            NUMBER(10, 0),
    CONSTRAINT PK1_1 PRIMARY KEY (HELP_TOPIC_ID)
)
;

CREATE TABLE CSR.HELP_TOPIC_FILE(
    HELP_FILE_ID     NUMBER(10, 0)    NOT NULL,
    HELP_TOPIC_ID    NUMBER(10, 0)    NOT NULL,
    HELP_LANG_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK304 PRIMARY KEY (HELP_FILE_ID, HELP_TOPIC_ID, HELP_LANG_ID)
)
;

CREATE TABLE CSR.HELP_TOPIC_IMAGE(
    HELP_TOPIC_ID    NUMBER(10, 0)    NOT NULL,
    HELP_LANG_ID     NUMBER(10, 0)    NOT NULL,
    HELP_IMAGE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK683 PRIMARY KEY (HELP_TOPIC_ID, HELP_LANG_ID, HELP_IMAGE_ID)
)
;

CREATE TABLE CSR.HELP_TOPIC_TEXT(
    HELP_TOPIC_ID       NUMBER(10, 0)    NOT NULL,
    HELP_LANG_ID        NUMBER(10, 0)    NOT NULL,
    TITLE               VARCHAR2(255)    NOT NULL,
    BODY                CLOB,
    LAST_UPDATED_DTM    DATE             DEFAULT SYSDATE,
    CONSTRAINT PK2_1 PRIMARY KEY (HELP_TOPIC_ID, HELP_LANG_ID)
)
;

CREATE TABLE CSR.HIDE_PORTLET(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PORTLET_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_HIDE_PORTLET PRIMARY KEY (APP_SID, PORTLET_ID)
)
;

CREATE TABLE CSR.HMAC(
    SHARED_SECRET    RAW(64)          NOT NULL,
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CONSTRAINT PK_HMAC PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.HTTP_REQUEST_CACHE(
    URL              VARCHAR2(4000)    NOT NULL,
    REQUEST_HASH     RAW(20)           NOT NULL,
    RESPONSE         BLOB              NOT NULL,
    FETCHED_DTM      DATE              DEFAULT SYSDATE NOT NULL,
    LAST_USED_DTM    DATE              DEFAULT SYSDATE NOT NULL,
    MIME_TYPE        VARCHAR2(255)     NOT NULL,
    CONSTRAINT PK_XML_REQUEST_CACHE PRIMARY KEY (URL, REQUEST_HASH)
)
;

CREATE TABLE CSR.IA_TYPE_SURVEY_GROUP(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    IA_TYPE_SURVEY_GROUP_ID        NUMBER(10, 0)     NOT NULL,
    LABEL                          VARCHAR2(1024)    NOT NULL,
    LOOKUP_KEY                     VARCHAR2(256),
    SURVEY_CAPABILITY_ID           NUMBER(10, 0)     NOT NULL,
    CHANGE_SURVEY_CAPABILITY_ID    NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_IATSG PRIMARY KEY (APP_SID, IA_TYPE_SURVEY_GROUP_ID)
)
;

CREATE SEQUENCE CSR.IA_TYPE_SURVEY_GROUP_ID_SEQ;

CREATE UNIQUE INDEX CSR.UX_IATSG_LABEL  ON CSR.IA_TYPE_SURVEY_GROUP(APP_SID, LOWER(LABEL))
;

CREATE UNIQUE INDEX CSR.UX_IATSG_LOOKUP_KEY ON CSR.IA_TYPE_SURVEY_GROUP(CASE WHEN LOOKUP_KEY IS NOT NULL THEN APP_SID END, LOWER(LOOKUP_KEY))
;

CREATE TABLE CSR.IMAGE_UPLOAD_PORTLET(
    IMG_ID       NUMBER(10, 0)    NOT NULL,
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    FILE_NAME    VARCHAR2(255)    NOT NULL,
    IMAGE        BLOB             NOT NULL,
    MIME_TYPE    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_IMAGE_UPLOAD_PORTLET PRIMARY KEY (APP_SID, IMG_ID)
)
;

CREATE SEQUENCE CSR.IMAGE_UPLOAD_PORTLET_SEQ START WITH 129;

CREATE TABLE CSR.IMG_CHART(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMG_CHART_SID        NUMBER(10, 0)     NOT NULL,
    PARENT_SID           NUMBER(10, 0)     NOT NULL,
    LABEL                VARCHAR2(1023)    NOT NULL,
    MIME_TYPE            VARCHAR2(255)     NOT NULL,
    DATA                 BLOB              NOT NULL,
    SHA1                 RAW(20)           NOT NULL,
    LAST_MODIFIED_DTM    DATE              DEFAULT SYSDATE NOT NULL,
    SCENARIO_RUN_SID     NUMBER(10, 0),
    SCENARIO_RUN_TYPE    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_IMG_CHART PRIMARY KEY (APP_SID, IMG_CHART_SID),
	CONSTRAINT CK_IMG_CHART_SCN_RUN_TYPE CHECK (SCENARIO_RUN_TYPE IN (0,1,2)),
    CONSTRAINT CK_IMG_CHART_SCN_RUN_SID CHECK ((SCENARIO_RUN_TYPE = 2 AND SCENARIO_RUN_SID IS NOT NULL) OR
        (SCENARIO_RUN_TYPE IN (0,1) AND SCENARIO_RUN_SID IS NULL))
)
;

CREATE TABLE CSR.IMG_CHART_IND(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMG_CHART_SID            NUMBER(10, 0)     NOT NULL,
    IND_SID                  NUMBER(10, 0)     NOT NULL,
    DESCRIPTION              VARCHAR2(1023),
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    X                        NUMBER(10, 0)     NOT NULL,
    Y                        NUMBER(10, 0)     NOT NULL,
    BACKGROUND_COLOR         NUMBER(10, 0)     NOT NULL,
    BORDER_COLOR             NUMBER(10, 0)     NOT NULL,
    FONT_SIZE                NUMBER(10, 0)     DEFAULT 11 NOT NULL,
    CONSTRAINT PK_IMG_CHART_IND PRIMARY KEY (APP_SID, IMG_CHART_SID, IND_SID)
)
;

CREATE TABLE CSR.IMG_CHART_REGION(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMG_CHART_SID       NUMBER(10, 0)     NOT NULL,
    REGION_SID          NUMBER(10, 0)     NOT NULL,
    DESCRIPTION         VARCHAR2(1023),
    X                   NUMBER(10, 0)     NOT NULL,
    Y                   NUMBER(10, 0)     NOT NULL,
    BACKGROUND_COLOR    NUMBER(10, 0)     NOT NULL,
    BORDER_COLOR        NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_IMG_CHART_REGION PRIMARY KEY (APP_SID, IMG_CHART_SID, REGION_SID)
)
;

CREATE TABLE CSR.IMP_CONFLICT(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMP_CONFLICT_ID         NUMBER(10, 0)    NOT NULL,
    IMP_SESSION_SID         NUMBER(10, 0)    NOT NULL,
    RESOLVED_BY_USER_SID    NUMBER(10, 0),
    START_DTM               DATE             NOT NULL,
    END_DTM                 DATE             NOT NULL,
    REGION_SID              NUMBER(10, 0)    NOT NULL,
    IND_SID                 NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_IMP_CONFLICT PRIMARY KEY (APP_SID, IMP_CONFLICT_ID)
)
;

CREATE SEQUENCE CSR.IMP_CONFLICT_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_IMP_CFLCT_RESLVD_SID ON CSR.IMP_CONFLICT(APP_SID, RESOLVED_BY_USER_SID)
;

CREATE INDEX CSR.IDX_IMP_CFLT_SESSION ON CSR.IMP_CONFLICT(APP_SID, IMP_SESSION_SID)
;

CREATE TABLE CSR.IMP_CONFLICT_VAL(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMP_CONFLICT_ID    NUMBER(10, 0)    NOT NULL,
    IMP_VAL_ID         NUMBER(10, 0)    NOT NULL,
    ACCEPT             NUMBER(10, 0)    DEFAULT (0) NOT NULL,
    CONSTRAINT PK_IMP_CONFLICT_VAL PRIMARY KEY (APP_SID, IMP_CONFLICT_ID, IMP_VAL_ID)
)
;

CREATE INDEX CSR.IDX_IMP_CONFLICT_VAL_VAL ON CSR.IMP_CONFLICT_VAL(APP_SID, IMP_VAL_ID)
;

CREATE TABLE CSR.IMP_IND(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMP_IND_ID         NUMBER(10, 0)     NOT NULL,
    DESCRIPTION        VARCHAR2(4000)    NOT NULL,
    MAPS_TO_IND_SID    NUMBER(10, 0),
    IGNORE             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_IMP_IND PRIMARY KEY (APP_SID, IMP_IND_ID)
)
;

CREATE SEQUENCE CSR.IMP_IND_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_IMP_IND_MAP_IND ON CSR.IMP_IND(APP_SID, MAPS_TO_IND_SID)
;

CREATE UNIQUE INDEX CSR.UK_IMP_IND_DESC ON CSR.IMP_IND(APP_SID, LOWER(DESCRIPTION))
;

CREATE TABLE CSR.IMP_MEASURE(
    APP_SID                          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMP_MEASURE_ID                   NUMBER(10, 0)    NOT NULL,
    DESCRIPTION                      VARCHAR2(255)    NOT NULL,
    MAPS_TO_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    MAPS_TO_MEASURE_SID              NUMBER(10, 0),
    IMP_IND_ID                       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_IMP_MEASURE PRIMARY KEY (APP_SID, IMP_MEASURE_ID)
)
;

CREATE SEQUENCE CSR.IMP_MEASURE_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.UK_IMP_MEASURE_DESC ON CSR.IMP_MEASURE(APP_SID, IMP_IND_ID, LOWER(DESCRIPTION))
;

CREATE UNIQUE INDEX CSR.UK_IMP_MEASURE_MEASURE_IND ON CSR.IMP_MEASURE(APP_SID, IMP_MEASURE_ID, IMP_IND_ID)
;

CREATE TABLE CSR.IMP_REGION(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMP_REGION_ID         NUMBER(10, 0)     NOT NULL,
    DESCRIPTION           VARCHAR2(4000)    NOT NULL,
    MAPS_TO_REGION_SID    NUMBER(10, 0),
    IGNORE                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_IMP_REGION PRIMARY KEY (APP_SID, IMP_REGION_ID)
)
;

CREATE SEQUENCE CSR.IMP_REGION_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_IMP_REGION_MAPS ON CSR.IMP_REGION(APP_SID, MAPS_TO_REGION_SID)
;

CREATE UNIQUE INDEX CSR.UK_IMP_REGION_DESC ON CSR.IMP_REGION(APP_SID, LOWER(DESCRIPTION))
;

CREATE TABLE CSR.IMP_SESSION(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMP_SESSION_SID      NUMBER(10, 0)     NOT NULL,
    PARENT_SID           NUMBER(10, 0)     NOT NULL,
    NAME                 VARCHAR2(256),
    OWNER_SID            NUMBER(10, 0)     NOT NULL,
    UPLOADED_DTM         DATE,
    FILE_PATH            VARCHAR2(256)     NOT NULL,
    PARSE_STARTED_DTM    DATE,
    PARSED_DTM           DATE,
    MERGED_DTM           DATE,
    RESULT_CODE          NUMBER(10, 0),
    MESSAGE              VARCHAR2(2048),
    UNMERGED_DTM         DATE,
    CONSTRAINT PK_IMP_SESSION PRIMARY KEY (APP_SID, IMP_SESSION_SID)
)
;

CREATE TABLE CSR.IMP_TAG_TYPE(
    IMP_TAG_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION        VARCHAR2(255)    NOT NULL,
    MEANS_IGNORE       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (MEANS_IGNORE IN(1,0)),
    CONSTRAINT PK_IMP_TAG_TYPE PRIMARY KEY (IMP_TAG_TYPE_ID)
)
;

CREATE TABLE CSR.IMP_VAL(
    APP_SID                     NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMP_VAL_ID                  NUMBER(10, 0)     NOT NULL,
    IMP_IND_ID                  NUMBER(10, 0)     NOT NULL,
    IMP_REGION_ID               NUMBER(10, 0)     NOT NULL,
    IMP_MEASURE_ID              NUMBER(10, 0),
    UNKNOWN                     VARCHAR2(2048),
    START_DTM                   DATE              NOT NULL,
    END_DTM                     DATE              NOT NULL,
    VAL                         NUMBER(24, 10),
    FILE_SID                    NUMBER(10, 0),
    A                           NUMBER(10, 0),
    B                           NUMBER(10, 0),
    C                           NUMBER(10, 0),
    IMP_SESSION_SID             NUMBER(10, 0)     NOT NULL,
    SET_VAL_ID                  NUMBER(20, 0),
    NOTE                        CLOB,
    SET_REGION_METRIC_VAL_ID    NUMBER(10, 0),
    CONSTRAINT CK_IMP_VAL_DATES CHECK (START_DTM = TRUNC(START_DTM, 'DD') AND END_DTM = TRUNC(END_DTM, 'DD') AND END_DTM > START_DTM),
    CONSTRAINT CK_IMP_VAL_CONV_COMPLETED CHECK ((a is null and b is null and c is null) or (a is not null and b is not null and c is not null)),
    CONSTRAINT PK_IMP_VAL PRIMARY KEY (APP_SID, IMP_VAL_ID)
)
;

CREATE SEQUENCE CSR.IMP_VAL_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_IMP_VAL_FILE ON CSR.IMP_VAL(APP_SID, FILE_SID)
;

CREATE INDEX CSR.IDX_IMP_VAL_IND ON CSR.IMP_VAL(APP_SID, IMP_IND_ID)
;

CREATE INDEX CSR.IDX_IMP_VAL_REGION ON CSR.IMP_VAL(APP_SID, IMP_REGION_ID)
;

CREATE INDEX CSR.IDX_IMP_VAL_SESSION ON CSR.IMP_VAL(APP_SID, IMP_SESSION_SID)
;

CREATE INDEX CSR.IDX_IMP_VAL_SET_VAL_ID ON CSR.IMP_VAL(APP_SID, SET_VAL_ID)
;

CREATE TABLE CSR.IMP_VOCAB(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CSR_USER_SID       NUMBER(10, 0)     NOT NULL,
    IMP_TAG_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    PHRASE             VARCHAR2(4000)    NOT NULL,
    FREQUENCY          NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_IMP_VOCAB PRIMARY KEY (APP_SID, CSR_USER_SID, IMP_TAG_TYPE_ID, PHRASE)
)
;

CREATE TABLE CSR.IMPORT_FEED(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMPORT_FEED_SID    NUMBER(10, 0)    NOT NULL,
    NAME               VARCHAR2(40)     NOT NULL,
    CONSTRAINT PK_IMPORT_FEED PRIMARY KEY (APP_SID, IMPORT_FEED_SID)
)
;

CREATE TABLE CSR.IMPORT_FEED_REQUEST(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMPORT_FEED_SID           NUMBER(10, 0)     NOT NULL,
    IMPORT_FEED_REQUEST_ID    NUMBER(10, 0)     NOT NULL,
    FILE_DATA                 BLOB              NOT NULL,
    FILENAME                  VARCHAR2(1024)    NOT NULL,
    MIME_TYPE                 VARCHAR2(1024)    NOT NULL,
    CREATED_DTM               DATE              NOT NULL,
    PROCESSED_DTM             DATE,
    FAILED_DATA               BLOB,
    FAILED_FILENAME           VARCHAR2(1024),
    FAILED_MIME_TYPE          VARCHAR2(1024),
    ROWS_IMPORTED             NUMBER(10, 0),
    ROWS_UPDATED              NUMBER(10, 0),
    ERRORS                    NUMBER(10, 0),
    CONSTRAINT PK_IMPORT_FEED_REQUEST PRIMARY KEY (APP_SID, IMPORT_FEED_SID, IMPORT_FEED_REQUEST_ID)
)
;

CREATE SEQUENCE CSR.IMPORT_FEED_REQUEST_ID_SEQ;

CREATE TABLE CSR.INBOUND_CMS_ACCOUNT(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACCOUNT_SID           NUMBER(10, 0)    NOT NULL,
    TAB_SID               NUMBER(10, 0)    NOT NULL,
    FLOW_SID              NUMBER(10, 0),
    DEFAULT_REGION_SID    NUMBER(10, 0),
    CONSTRAINT PK_INBOUND_CMS_ACCOUNT PRIMARY KEY (ACCOUNT_SID)
)
;

CREATE TABLE CSR.INBOUND_FEED_ACCOUNT(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CSR_INBOUND_FEED_ACCOUNT PRIMARY KEY (APP_SID, ACCOUNT_SID)
)
;

CREATE TABLE CSR.INBOUND_FEED_ATTACHMENT(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    ACCOUNT_SID       NUMBER(10, 0)    NOT NULL,
    MESSAGE_UID       NUMBER(10, 0)    NOT NULL,
    NAME              VARCHAR2(256)    NOT NULL,
    RECEIPT_DATE      DATE             NOT NULL,
    PROCESSED_DATE    DATE,
    ATTACHMENT        BLOB,
    CONSTRAINT PK_CSR_INBOUND_FEED_ATTACHMENT PRIMARY KEY (APP_SID, ACCOUNT_SID, MESSAGE_UID, NAME)
)
;

CREATE TABLE CSR.INBOUND_ISSUE_ACCOUNT(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACCOUNT_SID      NUMBER(10, 0)    NOT NULL,
    ISSUE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INBOUND_ISSUE_ACCOUNT PRIMARY KEY (ACCOUNT_SID)
)
;

CREATE TABLE CSR.INCIDENT_TYPE(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAB_SID                 NUMBER(10, 0)     NOT NULL,
    GROUP_KEY               VARCHAR2(255)     DEFAULT 'main' NOT NULL,
    LABEL                   VARCHAR2(500)     NOT NULL,
    PLURAL                  VARCHAR2(255)     NOT NULL,
    BASE_CSS_CLASS          VARCHAR2(255)     NOT NULL,
    POS                     NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    LIST_URL                VARCHAR2(2000)    NOT NULL,
    EDIT_URL                VARCHAR2(2000)    NOT NULL,
    NEW_CASE_URL            VARCHAR2(2000),
    MOBILE_FORM_PATH        VARCHAR2(2000),
    MOBILE_FORM_SID		    NUMBER(10, 0),
    DESCRIPTION             CLOB,
    CONSTRAINT PK_INCIDENT_TYPE PRIMARY KEY (APP_SID, TAB_SID),
	CONSTRAINT CK_INCIDENT_MOBILE_FORM CHECK ( MOBILE_FORM_PATH IS NULL OR MOBILE_FORM_SID IS NULL )
)
;

CREATE TABLE CSR.IND(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID                      NUMBER(10, 0)     NOT NULL,
    PARENT_SID                   NUMBER(10, 0)     NOT NULL,
    NAME                         VARCHAR2(255)     NOT NULL,
    IND_TYPE                     NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    TOLERANCE_TYPE               NUMBER(2, 0)      DEFAULT 0 NOT NULL,
    PCT_UPPER_TOLERANCE          NUMBER(10, 4)     DEFAULT 1 NOT NULL,
    PCT_LOWER_TOLERANCE          NUMBER(10, 4)     DEFAULT 1 NOT NULL,
    TOLERANCE_NUMBER_OF_PERIODS  NUMBER(10, 0),
    TOLERANCE_NUMBER_OF_STANDARD_DEVIATIONS_FROM_AVERAGE    NUMBER(10, 4),
    MEASURE_SID                  NUMBER(10, 0),
    MULTIPLIER                   NUMBER(10, 0)     DEFAULT 1 NOT NULL,
    SCALE                        NUMBER(10, 0)     DEFAULT 0,
    FORMAT_MASK                  VARCHAR2(255)     DEFAULT '#,##0',
    LAST_MODIFIED_DTM            DATE              DEFAULT SYSDATE,
    ACTIVE                       NUMBER(10, 0)     DEFAULT 1,
    TARGET_DIRECTION             NUMBER(10, 0)     DEFAULT 1 NOT NULL,
    POS                          NUMBER(10, 0)     DEFAULT 1 NOT NULL,
    INFO_XML                     SYS.XMLType,
    START_MONTH                  NUMBER(10, 0)     DEFAULT 1,
    DIVISIBILITY                 NUMBER(10, 0)     DEFAULT 1,
    NULL_MEANS_NULL              NUMBER(10, 0)     DEFAULT 0,
    AGGREGATE                    VARCHAR2(24)      DEFAULT 'SUM' NOT NULL,
    PERIOD_SET_ID                NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID           NUMBER(10, 0)     NOT NULL,
    CALC_START_DTM_ADJUSTMENT    NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    CALC_END_DTM_ADJUSTMENT      NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    CALC_FIXED_START_DTM         DATE,
    CALC_FIXED_END_DTM           DATE,
    CALC_XML                     CLOB,
    GRI                          VARCHAR2(255),
    LOOKUP_KEY                   VARCHAR2(255),
    OWNER_SID                    NUMBER(10, 0),
    IND_ACTIVITY_TYPE_ID         NUMBER(10, 0),
    CORE                         NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    ROLL_FORWARD                 NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    FACTOR_TYPE_ID               NUMBER(10, 0),
    MAP_TO_IND_SID               NUMBER(10, 0),
    GAS_MEASURE_SID              NUMBER(10, 0),
    GAS_TYPE_ID                  NUMBER(10, 0),
    CALC_DESCRIPTION             VARCHAR2(4000),
    NORMALIZE                    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DO_TEMPORAL_AGGREGATION      NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    PROP_DOWN_REGION_TREE_SID    NUMBER(10, 0),
    IS_SYSTEM_MANAGED            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CALC_OUTPUT_ROUND_DP         NUMBER(10, 0),
    CONSTRAINT CHK_TOLERANCE_TYPE CHECK (TOLERANCE_TYPE IN (0,1,2,3,4)),
    CONSTRAINT CHK_TOLERANCE_NUMBER_OF_PERIODS CHECK (
        TOLERANCE_NUMBER_OF_PERIODS >= 3 AND TOLERANCE_NUMBER_OF_PERIODS <= 99
    ),
    CONSTRAINT CHK_TOLERANCE_NUMBER_OF_STANDARD_DEVIATIONS_FROM_AVERAGE CHECK (
        TOLERANCE_NUMBER_OF_STANDARD_DEVIATIONS_FROM_AVERAGE >= 0 AND TOLERANCE_NUMBER_OF_STANDARD_DEVIATIONS_FROM_AVERAGE <= 5
    ),
    CONSTRAINT CK_IND_AGGR CHECK (aggregate IN ('SUM', 'FORCE SUM', 'AVERAGE', 'NONE', 'DOWN', 'FORCE DOWN', 'LOWEST', 'FORCE LOWEST', 'HIGHEST', 'FORCE HIGHEST')),
    CONSTRAINT CK_IND_TYPE CHECK (IND_TYPE IN (0,1,2,3,4)),
    CHECK (CORE IN (0,1)),
    CONSTRAINT CK_IND_ROLL_FORWARD CHECK (ROLL_FORWARD IN (0, 1)),
    CONSTRAINT CK_IND_NORMALIZE CHECK (NORMALIZE IN (0,1)),
    CHECK (DO_TEMPORAL_AGGREGATION IN (0,1)),
    CONSTRAINT CK_IND_START_MONTH CHECK (start_month between 1 and 12),
    CONSTRAINT CK_IND_MUST_BE_MANAGED CHECK (( gas_type_id is not null and is_system_managed = 1 ) or
    ( ind_type = 3 and is_system_managed = 1 ) or
    ( ind_type != 3 and gas_type_id is null )),
    CONSTRAINT CK_IND_IS_SYSTEM_MANAGED CHECK (IS_SYSTEM_MANAGED IN (0,1)),
    CONSTRAINT CK_IND_GAS_SETTINGS CHECK(
      (GAS_TYPE_ID IS NULL AND MAP_TO_IND_SID IS NULL) OR
      (GAS_TYPE_ID IS NOT NULL AND MAP_TO_IND_SID IS NOT NULL)),
    CONSTRAINT PK_IND PRIMARY KEY (APP_SID, IND_SID),
    CONSTRAINT UK_IND_IND_SID UNIQUE (IND_SID),
    CONSTRAINT CONS_IND_MEASURE_SID UNIQUE (APP_SID, IND_SID, MEASURE_SID)
) LOB ("CALC_XML") STORE AS (ENABLE STORAGE IN ROW )
;

CREATE INDEX CSR.IX_IND_LOOKUP_KEY ON CSR.IND(APP_SID, LOOKUP_KEY)
;

CREATE INDEX CSR.IDX_IND_MEASURE ON CSR.IND(APP_SID, MEASURE_SID)
;

CREATE INDEX CSR.IDX_IND_PARENT_SID ON CSR.IND(APP_SID, PARENT_SID)
;

CREATE TABLE CSR.IND_ACCURACY_TYPE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID             NUMBER(10, 0)    NOT NULL,
    ACCURACY_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK165 PRIMARY KEY (APP_SID, IND_SID, ACCURACY_TYPE_ID)
)
;

CREATE TABLE CSR.IND_ACTIVITY_TYPE(
    IND_ACTIVITY_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                   VARCHAR2(256)    NOT NULL,
    POS                     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK588 PRIMARY KEY (IND_ACTIVITY_TYPE_ID)
)
;

CREATE TABLE CSR.IND_DESCRIPTION(
    APP_SID				NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID				NUMBER(10, 0)     NOT NULL,
    LANG				VARCHAR2(10)      NOT NULL,
    DESCRIPTION			VARCHAR2(1023)    NOT NULL,
	LAST_CHANGED_DTM	DATE,
    CONSTRAINT PK_IND_DESCRIPTION PRIMARY KEY (APP_SID, IND_SID, LANG)
)
;

CREATE TABLE CSR.IND_FLAG(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID          NUMBER(10, 0)    NOT NULL,
    FLAG             NUMBER(10, 0)    NOT NULL,
    DESCRIPTION      VARCHAR2(256)    NOT NULL,
    REQUIRES_NOTE    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK105 PRIMARY KEY (APP_SID, IND_SID, FLAG)
)
;

CREATE TABLE CSR.IND_SEL_GROUP_MEMBER_DESC(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID        NUMBER(10, 0)    NOT NULL,
    LANG           VARCHAR2(10)     NOT NULL,
    DESCRIPTION    VARCHAR2(500)    NOT NULL,
    CONSTRAINT PK_IND_SEL_GROUP_MEMBER_DESC PRIMARY KEY (APP_SID, IND_SID, LANG)
)
;

CREATE TABLE CSR.IND_SELECTION_GROUP(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MASTER_IND_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_IND_SELECTION_GROUP PRIMARY KEY (APP_SID, MASTER_IND_SID)
)
;

CREATE TABLE CSR.IND_SELECTION_GROUP_MEMBER(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MASTER_IND_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID           NUMBER(10, 0)    NOT NULL,
    POS               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_IND_SELECTION_GROUP_MEMBER PRIMARY KEY (APP_SID, MASTER_IND_SID, IND_SID),
    CONSTRAINT UK_IND_SELECTION_GROUP_IND UNIQUE (APP_SID, IND_SID)
)
;

CREATE TABLE CSR.IND_SET(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SET_ID      NUMBER(10, 0)    NOT NULL,
    OWNER_SID       NUMBER(10, 0),
    NAME            VARCHAR2(255)    NOT NULL,
    DISPOSAL_DTM    DATE,
    CONSTRAINT PK_IND_SET PRIMARY KEY (APP_SID, IND_SET_ID),
    CONSTRAINT UK_IND_SET_OWNER_NAME UNIQUE (APP_SID, OWNER_SID, NAME, DISPOSAL_DTM)
)
;

CREATE SEQUENCE CSR.IND_SET_ID_SEQ;

CREATE TABLE CSR.IND_SET_IND(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SET_ID    NUMBER(10, 0)    NOT NULL,
    IND_SID       NUMBER(10, 0)    NOT NULL,
    POS           NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_IND_SET_IND PRIMARY KEY (APP_SID, IND_SET_ID, IND_SID)
)
;

CREATE TABLE CSR.IND_START_POINT(
    APP_SID     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID     NUMBER(10, 0)    NOT NULL,
    USER_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_IND_START_POINT PRIMARY KEY (APP_SID, IND_SID, USER_SID)
)
;

CREATE INDEX CSR.IDX_IND_START_PNT_USER ON CSR.IND_START_POINT(APP_SID, USER_SID)
;

CREATE TABLE CSR.IND_TAG(
    APP_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAG_ID     NUMBER(10, 0)    NOT NULL,
    IND_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK138 PRIMARY KEY (APP_SID, TAG_ID, IND_SID)
)
;

CREATE TABLE CSR.IND_VALIDATION_RULE(
    IND_VALIDATION_RULE_ID    NUMBER(10, 0)     NOT NULL,
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID                   NUMBER(10, 0)     NOT NULL,
    EXPR                      VARCHAR2(2000)    NOT NULL,
    MESSAGE                   VARCHAR2(2000)    NOT NULL,
    POSITION                  NUMBER(10, 0)     NOT NULL,
    TYPE                      VARCHAR2(1)       DEFAULT 'E' NOT NULL,
    CONSTRAINT CHK_IND_VALID_RULE_TYPE CHECK (TYPE IN ('E','W','X','N')),
    CONSTRAINT PK_IND_VALIDATION_RULE PRIMARY KEY (IND_VALIDATION_RULE_ID)
)
;

CREATE SEQUENCE CSR.IND_VALIDATION_RULE_ID_SEQ;

CREATE TABLE CSR.IND_WINDOW(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID              NUMBER(10, 0)    NOT NULL,
    UPPER_BRACKET        NUMBER(10, 4)    NOT NULL,
    LOWER_BRACKET        NUMBER(10, 4)    NOT NULL,
    PERIOD               CHAR             NOT NULL,
    COMPARISON_OFFSET    NUMBER(10, 0)    DEFAULT -1 NOT NULL,
    CONSTRAINT PK_IND_WINDOW PRIMARY KEY (APP_SID, IND_SID, PERIOD)
)
;

CREATE INDEX CSR.IDX_IND_WINDOW_IND ON CSR.IND_WINDOW(APP_SID, IND_SID)
;

CREATE TABLE CSR.INDEX_SECTION(
    INDEX_SECTION_ID    NUMBER(10, 0)    NOT NULL,
    CODE                VARCHAR2(40),
    TITLE               VARCHAR2(255)    NOT NULL,
    POS                 NUMBER(10, 0),
    INDEX_SID           NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK24 PRIMARY KEY (INDEX_SECTION_ID)
)
;

CREATE TABLE CSR.INDEX_SECTION_ITEM(
    INDEX_SECTION_ITEM_ID    NUMBER(10, 0)     NOT NULL,
    INDEX_SECTION_ID         NUMBER(10, 0)     NOT NULL,
    CODE                     VARCHAR2(40),
    TITLE                    VARCHAR2(255),
    DESCRIPTION              VARCHAR2(2048),
    POS                      NUMBER(10, 0),
    CONSTRAINT PK_INDEX_SECTION_ITEM PRIMARY KEY (INDEX_SECTION_ITEM_ID)
)
;

CREATE INDEX CSR.IDX_IDX_SECT_ITM_SECT ON CSR.INDEX_SECTION_ITEM(INDEX_SECTION_ID)
;

CREATE TABLE CSR.INDEX_SECTION_ITEM_LINK(
    INDEX_SECTION_ITEM_ID    NUMBER(10, 0)    NOT NULL,
    URL                      VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK26 PRIMARY KEY (INDEX_SECTION_ITEM_ID, URL)
)
;

CREATE INDEX CSR.Ref2564 ON CSR.INDEX_SECTION_ITEM_LINK(INDEX_SECTION_ITEM_ID)
;

CREATE TABLE CSR.INIT_CREATE_PAGE_EL_LAYOUT(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ELEMENT_ID      VARCHAR2(255)    NOT NULL,
    TAG_GROUP_ID    NUMBER(10, 0),
    XML_FIELD_ID    VARCHAR2(255),
    SECTION_ID      VARCHAR2(255)    NOT NULL,
    POS             NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_EL_LAYOUT PRIMARY KEY (APP_SID, ELEMENT_ID),
    CONSTRAINT CHK_INIT_EL_LAYT_TYPES CHECK ((XML_FIELD_ID IS NULL AND TAG_GROUP_ID IS NULL) OR (XML_FIELD_ID IS NOT NULL AND TAG_GROUP_ID IS NULL) OR (XML_FIELD_ID IS NULL AND TAG_GROUP_ID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.INIT_CREATE_PAGE_EL_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.IDX_INIT_EL_LAYOUT_TAG_GRP_ID ON CSR.INIT_CREATE_PAGE_EL_LAYOUT(
    APP_SID, NVL(TO_CHAR(TAG_GROUP_ID), ELEMENT_ID)
)
;

CREATE TABLE CSR.INIT_TAB_ELEMENT_LAYOUT(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ELEMENT_ID      NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID       NUMBER(10, 0)    NOT NULL,
    TAG_GROUP_ID    NUMBER(10, 0),
    XML_FIELD_ID    VARCHAR2(255),
    POS             NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_TAB_EL_LAYOUT PRIMARY KEY (APP_SID, ELEMENT_ID),
    CONSTRAINT CHK_INIT_TAB_LAYT_TYPES CHECK ((XML_FIELD_ID IS NULL AND TAG_GROUP_ID IS NULL) OR (XML_FIELD_ID IS NOT NULL AND TAG_GROUP_ID IS NULL) OR (XML_FIELD_ID IS NULL AND TAG_GROUP_ID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.INITIATIVE_TAB_ELEMENT_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.IDX_INIT_TAB_LAYOUT_TAG_GRP_ID ON CSR.INIT_TAB_ELEMENT_LAYOUT(
    APP_SID, NVL(TO_CHAR(TAG_GROUP_ID), ELEMENT_ID)
)
;

CREATE UNIQUE INDEX CSR.IDX_INIT_TAB_LAYOUT_XML_FLD_ID ON CSR.INIT_TAB_ELEMENT_LAYOUT(
    APP_SID, NVL(TO_CHAR(XML_FIELD_ID), ELEMENT_ID)
)
;

CREATE TABLE CSR.INITIATIVE(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID       NUMBER(10, 0)     NOT NULL,
    PROJECT_SID          NUMBER(10, 0)     NOT NULL,
    PARENT_SID           NUMBER(10, 0),
    FLOW_SID             NUMBER(10, 0)     NOT NULL,
    FLOW_ITEM_ID         NUMBER(10, 0)     NOT NULL,
    SAVING_TYPE_ID       NUMBER(10, 0)     NOT NULL,
    NAME                 VARCHAR2(1024)    NOT NULL,
    PROJECT_START_DTM    DATE,
    PROJECT_END_DTM      DATE,
    RUNNING_START_DTM    DATE,
    RUNNING_END_DTM      DATE,
    FIELDS_XML           CLOB,
    INTERNAL_REF         VARCHAR2(255),
    PERIOD_DURATION      NUMBER(10, 0)     NOT NULL,
    CREATED_BY_SID       NUMBER(10, 0)     NOT NULL,
    CREATED_DTM          DATE              DEFAULT SYSDATE NOT NULL,
    IS_RAMPED            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DOC_LIBRARY_SID      NUMBER(10, 0),
    RAG_STATUS_ID        NUMBER(10, 0),
    CHECK (IS_RAMPED IN(0,1)),
    CONSTRAINT PK_INITIATIVE PRIMARY KEY (APP_SID, INITIATIVE_SID),
    CONSTRAINT UK_INITIATIVE_FLOW UNIQUE (APP_SID, INITIATIVE_SID, FLOW_SID),
    CONSTRAINT UK_INITIATIVE_PROJECT UNIQUE (APP_SID, INITIATIVE_SID, PROJECT_SID),
    CONSTRAINT UC_INITIATIVE_FLOW_ITEM UNIQUE (FLOW_ITEM_ID)
)
;

CREATE TABLE CSR.INITIATIVE_COMMENT(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_COMMENT_ID    NUMBER(10, 0)    NOT NULL,
    INITIATIVE_SID           NUMBER(10, 0),
    USER_SID                 NUMBER(10, 0)    NOT NULL,
    POSTED_DTM               DATE             DEFAULT SYSDATE NOT NULL,
    COMMENT_TEXT             CLOB,
    CONSTRAINT PK_INITIATIVE_COMMENT PRIMARY KEY (APP_SID, INITIATIVE_COMMENT_ID)
)
;

CREATE SEQUENCE CSR.INITIATIVE_COMMENT_ID_SEQ;

CREATE TABLE CSR.INITIATIVE_EVENT(
    APP_SID                NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_EVENT_ID    NUMBER(10, 0)     NOT NULL,
    INITIATIVE_SID         NUMBER(10, 0)     NOT NULL,
    DESCRIPTION            VARCHAR2(4000),
    START_DTM              DATE              NOT NULL,
    END_DTM                DATE,
    CREATED_BY_SID         NUMBER(10, 0)     NOT NULL,
    CREATED_DTM            DATE              DEFAULT SYSDATE NOT NULL,
    LOCATION               VARCHAR2(1000),
    CONSTRAINT CK_INITIATIVE_EVENT_DTM CHECK (END_DTM IS NULL OR END_DTM >= START_DTM),
    CONSTRAINT PK_INITIATIVE_EVENT PRIMARY KEY (APP_SID, INITIATIVE_EVENT_ID)
)
;

CREATE SEQUENCE CSR.INITIATIVE_EVENT_ID_SEQ;

CREATE TABLE CSR.INITIATIVE_GROUP(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    NAME                   VARCHAR2(256)    NOT NULL,
    IS_PUBLIC              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_PUBLIC IN(0,1)),
    CONSTRAINT PK_INITIATIVE_GROUP PRIMARY KEY (APP_SID, INITIATIVE_GROUP_ID)
)
;

CREATE SEQUENCE CSR.INITIATIVE_GROUP_ID_SEQ;

CREATE TABLE CSR.INITIATIVE_GROUP_FLOW_STATE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_USER_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID               NUMBER(10, 0)    NOT NULL,
    PROJECT_SID                 NUMBER(10, 0)    NOT NULL,
    FLOW_SID                    NUMBER(10, 0)    NOT NULL,
    IS_EDITABLE                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    GENERATE_ALERTS             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_EDITABLE IN (0,1)),
    CHECK (GENERATE_ALERTS IN(0,1)),
    CONSTRAINT PK_INITIATIVE_GROUP_FLOW_STATE PRIMARY KEY (APP_SID, INITIATIVE_USER_GROUP_ID, FLOW_STATE_ID, PROJECT_SID)
)
;

CREATE TABLE CSR.INITIATIVE_GROUP_MEMBER(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    INITIATIVE_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_GROUP_MEMBER PRIMARY KEY (APP_SID, INITIATIVE_GROUP_ID, INITIATIVE_SID)
)
;

CREATE TABLE CSR.INITIATIVE_GROUP_USER(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID               NUMBER(10, 0)    NOT NULL,
    CAN_EDIT               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (CAN_EDIT IN(0,1)),
    CONSTRAINT PK_INITIATIVE_GROUP_USER PRIMARY KEY (APP_SID, INITIATIVE_GROUP_ID, USER_SID)
)
;

CREATE TABLE CSR.INITIATIVE_HEADER_ELEMENT(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    INITIATIVE_HEADER_ELEMENT_ID    NUMBER(10, 0)    NOT NULL,
    POS                             NUMBER(10, 0)    NOT NULL,
    COL                             NUMBER(10, 0)    NOT NULL,
    INITIATIVE_METRIC_ID            NUMBER(10, 0),
    TAG_GROUP_ID                    NUMBER(10, 0),
    INIT_HEADER_CORE_ELEMENT_ID     NUMBER(10, 0),
    CONSTRAINT PK_INITIATIVE_HEADER_ELEMENT PRIMARY KEY (APP_SID, INITIATIVE_HEADER_ELEMENT_ID),
    CONSTRAINT CHK_INITIATIVE_HEADER_ELEMENT
        CHECK ((INITIATIVE_METRIC_ID IS NOT NULL AND TAG_GROUP_ID IS NULL AND INIT_HEADER_CORE_ELEMENT_ID IS NULL) OR
                (INITIATIVE_METRIC_ID IS NULL AND TAG_GROUP_ID IS NOT NULL AND INIT_HEADER_CORE_ELEMENT_ID IS NULL) OR
                (INITIATIVE_METRIC_ID IS NULL AND TAG_GROUP_ID IS NULL AND INIT_HEADER_CORE_ELEMENT_ID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.INIT_HEADER_ELEMENT_ID_SEQ NOCACHE;

CREATE TABLE CSR.INITIATIVE_IMPORT_MAP_MRU(
    APP_SID         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CSR_USER_SID    NUMBER(10, 0)     NOT NULL,
    FROM_NAME       VARCHAR2(1024)    NOT NULL,
    TO_NAME         VARCHAR2(1024)    NOT NULL,
    POS             NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_INIT_IMPORT_MAPPING_MRU PRIMARY KEY (APP_SID, CSR_USER_SID, FROM_NAME, TO_NAME)
)
;

CREATE SEQUENCE CSR.INIT_IMPORT_MAPPING_POS_SEQ;

CREATE TABLE CSR.INITIATIVE_IMPORT_TEMPLATE(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMPORT_TEMPLATE_ID    NUMBER(10, 0)     NOT NULL,
    NAME                  VARCHAR2(1024)    NOT NULL,
    HEADING_ROW_IDX       NUMBER(10, 0)     NOT NULL,
    WORKSHEET_NAME        VARCHAR2(1024)    NOT NULL,
    PROJECT_SID           NUMBER(10, 0),
    WORKBOOK              BLOB,
    IS_DEFAULT            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (IS_DEFAULT IN(0,1)),
    CONSTRAINT PK_INITIATIVE_IMPORT_TEMPLATE PRIMARY KEY (APP_SID, IMPORT_TEMPLATE_ID)
)
;

CREATE TABLE CSR.INITIATIVE_IMPORT_TEMPLATE_MAP(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMPORT_TEMPLATE_ID    NUMBER(10, 0)     NOT NULL,
    TO_NAME               VARCHAR2(1024)    NOT NULL,
    FROM_IDX              NUMBER(10, 0)     NOT NULL,
    FROM_NAME             VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK_INIT_IMP_TPL_MAP PRIMARY KEY (APP_SID, IMPORT_TEMPLATE_ID, TO_NAME)
)
;

CREATE SEQUENCE CSR.INIT_IMPORT_TEMPLATE_ID_SEQ;

CREATE TABLE CSR.INITIATIVE_METRIC(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_METRIC_ID    NUMBER(10, 0)     NOT NULL,
    MEASURE_SID             NUMBER(10, 0)     NOT NULL,
    IS_SAVING               NUMBER(10, 0)     DEFAULT 1 NOT NULL,
    PER_PERIOD_DURATION     NUMBER(10, 0),
    ONE_OFF_PERIOD          NUMBER(10, 0),
    DIVISIBILITY            NUMBER(10, 0)     NOT NULL,
    IS_DURING               NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_RUNNING              NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_RAMPABLE             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    LABEL                   VARCHAR2(1024)    NOT NULL,
    LOOKUP_KEY              VARCHAR2(255),
    IS_EXTERNAL             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (IS_SAVING IN (0,1)),
    CHECK (IS_DURING IN(0,1)),
    CHECK (IS_RUNNING IN(0,1)),
    CHECK (IS_RAMPABLE IN(0,1)),
    CHECK (IS_EXTERNAL IN(0,1)),
    CONSTRAINT PK_INITIATIVE_METRIC PRIMARY KEY (APP_SID, INITIATIVE_METRIC_ID),
    CONSTRAINT CONS_INIT_METRIC_MEASURE UNIQUE (APP_SID, INITIATIVE_METRIC_ID, MEASURE_SID)
)
;

CREATE SEQUENCE CSR.INITIATIVE_METRIC_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_INIT_METRIC_LOOKUP ON CSR.INITIATIVE_METRIC(APP_SID, NVL(UPPER(LOOKUP_KEY),'IMID'||TO_CHAR(INITIATIVE_METRIC_ID)))
;

CREATE TABLE CSR.INITIATIVE_METRIC_ASSOC(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID           NUMBER(10, 0)    NOT NULL,
    PROPOSED_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    MEASURED_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_METRIC_ASSOC PRIMARY KEY (APP_SID, PROJECT_SID, PROPOSED_METRIC_ID, MEASURED_METRIC_ID)
)
;

CREATE TABLE CSR.INITIATIVE_METRIC_GROUP(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID           NUMBER(10, 0)     NOT NULL,
    POS_GROUP             NUMBER(10, 0)     NOT NULL,
    IS_GROUP_MANDATORY    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    LABEL                 VARCHAR2(1024),
    INFO_TEXT             VARCHAR2(4000),
    CHECK (IS_GROUP_MANDATORY IN(0,1)),
    CONSTRAINT PK_INITIATIVE_METRIC_GROUP PRIMARY KEY (APP_SID, PROJECT_SID, POS_GROUP)
)
;

CREATE TABLE CSR.INITIATIVE_METRIC_STATE_IND(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_GROUP_ID     NUMBER(10, 0)    NOT NULL,
    MEASURE_SID             NUMBER(10, 0)    NOT NULL,
    IND_SID                 NUMBER(10, 0)    NOT NULL,
    NET_PERIOD              NUMBER(10, 0),
    CONSTRAINT PK_INITIATIVE_METRIC_IND PRIMARY KEY (APP_SID, INITIATIVE_METRIC_ID, FLOW_STATE_GROUP_ID, IND_SID)
)
;

CREATE INDEX CSR.IX_INIT_MET_STATE_IND_METIND ON CSR.INITIATIVE_METRIC_STATE_IND(APP_SID, INITIATIVE_METRIC_ID, IND_SID, MEASURE_SID)
;

CREATE TABLE CSR.INITIATIVE_METRIC_TAG_IND(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    MEASURE_SID             NUMBER(10, 0)    NOT NULL,
    AGGR_TAG_GROUP_ID       NUMBER(10, 0)    NOT NULL,
    IND_SID                 NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_METRIC_TAG_IND PRIMARY KEY (APP_SID, INITIATIVE_METRIC_ID, AGGR_TAG_GROUP_ID, IND_SID)
)
;

CREATE INDEX CSR.IX_INIT_METRIC_TAG_IND_METIND ON CSR.INITIATIVE_METRIC_TAG_IND(APP_SID, INITIATIVE_METRIC_ID, IND_SID, MEASURE_SID)
;

CREATE TABLE CSR.INITIATIVE_METRIC_VAL(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_METRIC_ID           NUMBER(10, 0)     NOT NULL,
    INITIATIVE_SID                 NUMBER(10, 0)     NOT NULL,
    PROJECT_SID                    NUMBER(10, 0)     NOT NULL,
    MEASURE_SID                    NUMBER(10, 0),
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    ENTRY_VAL                      NUMBER(24, 10),
    VAL                            NUMBER(24, 10),
    CONSTRAINT PK_INITIATIVE_METRIC_INST PRIMARY KEY (APP_SID, INITIATIVE_METRIC_ID, INITIATIVE_SID)
)
;

CREATE TABLE CSR.INITIATIVE_PERIOD(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID                    NUMBER(10, 0)    NOT NULL,
    REGION_SID                        NUMBER(10, 0)    NOT NULL,
    START_DTM                         DATE             NOT NULL,
    PROJECT_SID                       NUMBER(10, 0)    NOT NULL,
    INITIATIVE_PERIOD_STATUS_ID       NUMBER(10, 0)    NOT NULL,
    SET_FLOW_STATE_ID                 NUMBER(10, 0),
    END_DTM                           DATE             NOT NULL,
    APPROVED_DTM                      DATE,
    APPROVED_BY_SID                   NUMBER(10, 0),
    PUBLIC_COMMENT_APPROVED_DTM       DATE,
    PUBLIC_COMMENT_APPROVED_BY_SID    NUMBER(10, 0),
    ENTERED_DTM                       DATE             DEFAULT SYSDATE NOT NULL,
    ENTERED_BY_SID                    NUMBER(10, 0)    NOT NULL,
    FIELDS_XML                        CLOB,
    NEEDS_AGGREGATION                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_INITIATIVE_PERIOD PRIMARY KEY (APP_SID, INITIATIVE_SID, REGION_SID, START_DTM)
)
;

CREATE TABLE CSR.INITIATIVE_PERIOD_STATUS(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_PERIOD_STATUS_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                          VARCHAR2(255)    NOT NULL,
    COLOUR                         NUMBER(10, 0),
    MEANS_PCT_COMPLETE             NUMBER(3, 2),
    CONSTRAINT PK_INITIATIVE_PERIOD_STATUS PRIMARY KEY (APP_SID, INITIATIVE_PERIOD_STATUS_ID)
)
;

CREATE SEQUENCE CSR.INITIATIV_PERIOD_STATUS_ID_SEQ;

CREATE TABLE CSR.INITIATIVE_PROJECT(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID           NUMBER(10, 0)     NOT NULL,
    NAME                  VARCHAR2(1024)    NOT NULL,
    START_DTM             DATE,
    END_DTM               DATE,
    FIELDS_XML            SYS.XMLType       NOT NULL,
    PERIOD_FIELDS_XML     SYS.XMLType       NOT NULL,
    ICON                  VARCHAR2(256),
    ABBREVIATION          VARCHAR2(16),
    POS_GROUP             NUMBER(10, 0),
    POS                   NUMBER(10, 0),
    CATEGORY_LEVEL        NUMBER(10, 0),
    FLOW_SID              NUMBER(10, 0)     NOT NULL,
    LIVE_FLOW_STATE_ID    NUMBER(10, 0)     NOT NULL,
    TAB_SID               NUMBER(10, 0),
    HELPER_PKG            VARCHAR2(255),
    CONSTRAINT PK_INITIATIVE_PROJECT PRIMARY KEY (APP_SID, PROJECT_SID),
    CONSTRAINT CONS_INITIATIVE_PROJECT UNIQUE (APP_SID, PROJECT_SID, FLOW_SID)
)
;

CREATE TABLE CSR.INITIATIVE_PROJECT_RAG_STATUS(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID      NUMBER(10, 0)    NOT NULL,
    RAG_STATUS_ID    NUMBER(10, 0)    NOT NULL,
    POS              NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_INIT_PROJ_RAG_STATUS PRIMARY KEY (APP_SID, PROJECT_SID, RAG_STATUS_ID)
)
;

CREATE TABLE CSR.INITIATIVE_PROJECT_TAB(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID       NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID         NUMBER(10, 0)    NOT NULL,
    PLUGIN_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    POS               NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    TAB_LABEL         VARCHAR2(255)    NOT NULL,
    CONSTRAINT CHK_INIT_PROJ_TAB_PLUGIN_TYPE CHECK (PLUGIN_TYPE_ID IN (8,9)),
    CONSTRAINT PK_INIT_PROJECT_TAB PRIMARY KEY (APP_SID, PROJECT_SID, PLUGIN_ID)
)
;

CREATE TABLE CSR.INITIATIVE_PROJECT_TAB_GROUP(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID     NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID       NUMBER(10, 0)    NOT NULL,
    GROUP_SID       NUMBER(10, 0)    NOT NULL,
    IS_READ_ONLY    NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_INIT_PRJ_TAB_GRP_RO CHECK (IS_READ_ONLY IN (0,1)),
    CONSTRAINT PK_INIT_PROJECT_TAB_GROUP PRIMARY KEY (APP_SID, PROJECT_SID, PLUGIN_ID, GROUP_SID)
)
;

CREATE TABLE CSR.INITIATIVE_PROJECT_TEAM(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    NAME              VARCHAR2(512)    NOT NULL,
    EMAIL             VARCHAR2(512)
)
;

CREATE TABLE CSR.INITIATIVE_PROJECT_USER_GROUP(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_USER_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    PROJECT_SID                 NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INIT_PROJECT_USER_GROUP PRIMARY KEY (APP_SID, INITIATIVE_USER_GROUP_ID, PROJECT_SID)
)
;

CREATE TABLE CSR.INITIATIVE_REGION(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    USE_FOR_CALC      NUMBER(1, 0),
    CONSTRAINT PK_INITIATIVE_REGION PRIMARY KEY (APP_SID, INITIATIVE_SID, REGION_SID)
)
;

CREATE TABLE CSR.INITIATIVE_SAVING_TYPE(
    SAVING_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    LOOKUP_KEY        VARCHAR2(256)     NOT NULL,
    LABEL             VARCHAR2(1024)    NOT NULL,
    IS_DURING         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_RUNNING        NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (IS_DURING IN(0,1)),
    CHECK (IS_RUNNING IN(0,1)),
    CONSTRAINT PK_INITIATIVE_SAVING_TYPE PRIMARY KEY (SAVING_TYPE_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_INIT_SAVING_TYPE_LOOKUP ON CSR.INITIATIVE_SAVING_TYPE(LOOKUP_KEY)
;

CREATE TABLE CSR.INITIATIVE_SPONSOR(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    NAME              VARCHAR2(512)    NOT NULL,
    EMAIL             VARCHAR2(512)
)
;

CREATE TABLE CSR.INITIATIVE_TAG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    TAG_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_TAG PRIMARY KEY (APP_SID, INITIATIVE_SID, TAG_ID)
)
;

CREATE TABLE CSR.INITIATIVE_USER(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID              NUMBER(10, 0)    NOT NULL,
    INITIATIVE_USER_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID                    NUMBER(10, 0)    NOT NULL,
    PROJECT_SID                 NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_USER PRIMARY KEY (APP_SID, INITIATIVE_SID, INITIATIVE_USER_GROUP_ID, USER_SID)
)
;

CREATE TABLE CSR.INITIATIVE_USER_GROUP(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_USER_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                       VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY                  VARCHAR2(255),
    SYNCH_ISSUES                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_INIT_USR_GRP_SYNCH_ISS CHECK (SYNCH_ISSUES IN (0,1)),
    CONSTRAINT PK_INITIATIVE_USER_GROUP PRIMARY KEY (APP_SID, INITIATIVE_USER_GROUP_ID)
)
;

CREATE SEQUENCE CSR.INITIATIVE_USER_GROUP_ID_SEQ;

CREATE TABLE CSR.INITIATIVE_USER_MSG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    USER_MSG_ID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_USER_MSG PRIMARY KEY (APP_SID, INITIATIVE_SID, USER_MSG_ID)
)
;

CREATE TABLE CSR.INITIATIVES_OPTIONS(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_NAME_GEN_PROC      VARCHAR2(256),
    INITIATIVE_REMINDER_ALERTS    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    INITIATIVE_NEW_DAYS           NUMBER(10, 0)     DEFAULT 5 NOT NULL,
    GANTT_PERIOD_COLOUR           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    INITIATIVES_HOST              VARCHAR2(256),
    MY_INITIATIVES_OPTIONS        VARCHAR2(1024),
    AUTO_COMPLETE_DATE            NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    UPDATE_REF_ON_AMEND           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CURRENT_REPORT_DATE           DATE,
    METRICS_START_YEAR            NUMBER(10, 0)     DEFAULT 2012 NOT NULL,
    METRICS_END_YEAR              NUMBER(10, 0)     DEFAULT 2030 NOT NULL,
    CHECK (INITIATIVE_REMINDER_ALERTS IN (0,1)),
    CHECK (GANTT_PERIOD_COLOUR IN(0,1)),
    CHECK (AUTO_COMPLETE_DATE IN(0,1)),
    CHECK (UPDATE_REF_ON_AMEND IN(0,1)),
    CONSTRAINT CK_INIT_OPTIONS_METRICYEAR CHECK (METRICS_START_YEAR>=2000 AND METRICS_START_YEAR<=METRICS_END_YEAR AND METRICS_END_YEAR<=2200),
    CONSTRAINT PK_INITIATIVES_OPTIONS PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.INSTANCE_DATAVIEW(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INSTANCE_ID     NUMBER(10, 0)    NOT NULL,
    CONTEXT         NUMBER(10, 0)    NOT NULL,
    DATAVIEW_SID    NUMBER(10, 0)    NOT NULL,
    POS             NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_INSTANCE_DATAVIEW PRIMARY KEY (APP_SID, INSTANCE_ID, CONTEXT, DATAVIEW_SID)
)
;


CREATE TABLE CSR.INTAPI_COMPANY_USER_GROUP(
	APP_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	GROUP_SID_ID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT FK_GROUP_SID_ID FOREIGN KEY (GROUP_SID_ID) REFERENCES SECURITY.GROUP_TABLE (SID_ID),
	CONSTRAINT PK_INTAPI_COMPANY_USER_GROUP PRIMARY KEY (APP_SID, GROUP_SID_ID)
)
;

CREATE TABLE CSR.INTERNAL_AUDIT(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_SID              NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_TYPE_ID          NUMBER(10, 0)    NOT NULL,
    SURVEY_SID                      NUMBER(10, 0),
    REGION_SID                      NUMBER(10, 0),
    LABEL                           VARCHAR2(255)    NOT NULL,
    AUDIT_DTM                       DATE             NOT NULL,
    CREATED_BY_USER_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    CREATED_DTM                     DATE             DEFAULT SYSDATE NOT NULL,
    AUDITOR_USER_SID                NUMBER(10, 0)    NOT NULL,
    NOTES                           CLOB,
    AUDIT_CONTACT_USER_SID          NUMBER(10, 0),
    SURVEY_RESPONSE_ID              NUMBER(10, 0),
    AUDITOR_NAME                    VARCHAR2(256),
    AUDITOR_ORGANISATION            VARCHAR2(50),
    AUDIT_CLOSURE_TYPE_ID           NUMBER(10, 0),
    FLOW_ITEM_ID                    NUMBER(10, 0),
    SUMMARY_RESPONSE_ID             NUMBER(10, 0),
    DELETED                         NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    EXPIRED                         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    COMPARISON_RESPONSE_ID          NUMBER(10, 0),
    AUDITOR_COMPANY_SID             NUMBER(10, 0),
    OVW_VALIDITY_DTM                DATE,
    INTERNAL_AUDIT_TYPE_GROUP_ID    NUMBER(10, 0),
    INTERNAL_AUDIT_REF              NUMBER(10, 0),
    NC_SCORE                        NUMBER(15, 5),
    NC_SCORE_THRSH_ID               NUMBER(10, 0),
    OVW_NC_SCORE_THRSH_ID           NUMBER(10, 0),
    OVW_NC_SCORE_THRSH_DTM          DATE,
    OVW_NC_SCORE_THRSH_USR_SID      NUMBER(10, 0),
    AUDITEE_USER_SID                NUMBER(10, 0),
	PERMIT_ID						NUMBER(10, 0),
	EXTERNAL_AUDIT_REF				VARCHAR2(255),
	EXTERNAL_PARENT_REF				VARCHAR2(255),
	EXTERNAL_URL					VARCHAR2(255),
    CONSTRAINT CHK_IA_EXPIRED_1_0 CHECK (EXPIRED IN (1, 0)),
    CONSTRAINT PK_INTERNAL_AUDIT PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID),
    CONSTRAINT UC_IA_FLOW_ITEM UNIQUE (FLOW_ITEM_ID)
)
;

CREATE INDEX CSR.IX_INT_AUD_CLSR_TYPE ON CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_TYPE_ID, AUDIT_CLOSURE_TYPE_ID)
;

CREATE UNIQUE INDEX CSR.UK_IA_SUMMARY_RESPONSE_ID ON CSR.INTERNAL_AUDIT(
    CASE WHEN SUMMARY_RESPONSE_ID IS NOT NULL THEN APP_SID END,
    SUMMARY_RESPONSE_ID
)
;

CREATE UNIQUE INDEX CSR.UK_INTERNAL_AUDIT_REF_TYPE ON CSR.INTERNAL_AUDIT(
    CASE WHEN INTERNAL_AUDIT_REF IS NULL THEN NULL
         ELSE APP_SID ||'_'|| INTERNAL_AUDIT_TYPE_ID ||'_'|| INTERNAL_AUDIT_REF END
)
;

CREATE INDEX csr.ix_audit_comparison_response ON csr.internal_audit(app_sid, comparison_response_id);

CREATE TABLE CSR.INTERNAL_AUDIT_FILE(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_SID             NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_FILE_DATA_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_IA_FILE_CONNECTION PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID, INTERNAL_AUDIT_FILE_DATA_ID)
)
;

CREATE SEQUENCE CSR.INTERNAL_AUDIT_FILE_ID_SEQ;

CREATE TABLE CSR.INTERNAL_AUDIT_FILE_DATA(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_FILE_DATA_ID    NUMBER(10, 0)    NOT NULL,
    FILENAME                       VARCHAR2(255)    NOT NULL,
    MIME_TYPE                      VARCHAR2(255)    NOT NULL,
    DATA                           BLOB             NOT NULL,
    SHA1                           RAW(20)          NOT NULL,
    UPLOADED_DTM                   DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_INTERNAL_AUDIT_FILE PRIMARY KEY (APP_SID, INTERNAL_AUDIT_FILE_DATA_ID)
)
;

CREATE TABLE CSR.INTERNAL_AUDIT_POSTIT(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_SID    NUMBER(10, 0)    NOT NULL,
    POSTIT_ID             NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INTERNAL_AUDIT_POSTIT PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID, POSTIT_ID)
)
;

CREATE TABLE CSR.INTERNAL_AUDIT_REPORT_GUID (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	GUID							VARCHAR2(36) NOT NULL,
	EXPIRY_DTM						DATE NOT NULL,
	DOCUMENT						BLOB NULL,
	FILENAME						VARCHAR2(255) NOT NULL,
	DOC_TYPE						VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_AUDIT_REPORT_GUID PRIMARY KEY (APP_SID, GUID)
)
;

CREATE TABLE CSR.INTERNAL_AUDIT_SURVEY(
    APP_SID                          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    INTERNAL_AUDIT_SID               NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_TYPE_SURVEY_ID    NUMBER(10, 0)    NOT NULL,
    SURVEY_SID                       NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID               NUMBER(10, 0),
    CONSTRAINT PK_IAS PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID, INTERNAL_AUDIT_TYPE_SURVEY_ID)
)
;

CREATE TABLE csr.internal_audit_score (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	internal_audit_sid				NUMBER(10, 0) NOT NULL,
	score_type_id					NUMBER(10, 0) NOT NULL,
    score							NUMBER(15, 5),
    score_threshold_id				NUMBER(10, 0),
	CONSTRAINT pk_internal_audit_score PRIMARY KEY (app_sid, internal_audit_sid, score_type_id)
);

CREATE TABLE CSR.INTERNAL_AUDIT_TAG(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_SID    NUMBER(10, 0)    NOT NULL,
    TAG_ID                NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INTERNAL_AUDIT_TAG PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID, TAG_ID)
)
;

CREATE TABLE CSR.INTERNAL_AUDIT_TYPE(
    APP_SID                           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID            NUMBER(10, 0)     NOT NULL,
    LABEL                             VARCHAR2(255)     NOT NULL,
    EVERY_N_MONTHS                    NUMBER(10, 0),
    AUDITOR_ROLE_SID                  NUMBER(10, 0),
    AUDIT_CONTACT_ROLE_SID            NUMBER(10, 0),
    DEFAULT_SURVEY_SID                NUMBER(10, 0),
    LOOKUP_KEY                        VARCHAR2(30),
    DEFAULT_AUDITOR_ORG               VARCHAR2(50),
    OVERRIDE_ISSUE_DTM                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ASSIGN_ISSUES_TO_ROLE             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    AUDITOR_CAN_TAKE_OWNERSHIP        NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    FLOW_SID                          NUMBER(10, 0),
    SUMMARY_SURVEY_SID                NUMBER(10, 0),
    SEND_AUDITOR_EXPIRY_ALERTS        NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    VALIDITY_MONTHS                   NUMBER(10, 0),
    ADD_NC_PER_QUESTION               NUMBER(1, 0)      DEFAULT 0,
    TAB_SID                           NUMBER(10, 0),
    FORM_PATH                         VARCHAR2(255),
    FORM_SID                        NUMBER(10),
    NC_AUDIT_CHILD_REGION             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    INTERNAL_AUDIT_TYPE_GROUP_ID      NUMBER(10, 0),
    INTERNAL_AUDIT_REF_HELPER_FUNC    VARCHAR2(255),
    NC_SCORE_TYPE_ID                  NUMBER(10, 0),
    ACTIVE                            NUMBER(1, 0)      DEFAULT 1,
    SHOW_PRIMARY_SURVEY_IN_HEADER     NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    PRIMARY_SURVEY_ACTIVE             NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    PRIMARY_SURVEY_LABEL              VARCHAR2(1024),
    PRIMARY_SURVEY_MANDATORY          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    PRIMARY_SURVEY_FIXED              NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    PRIMARY_SURVEY_GROUP_KEY          VARCHAR2(256),
    AUDIT_COORD_ROLE_OR_GROUP_SID     NUMBER(10, 0),
    INTERNAL_AUDIT_TYPE_SOURCE_ID     NUMBER(10,0)      NOT NULL,
    USE_LEGACY_CLOSED_DEFINITION      NUMBER(1, 0)      DEFAULT (0) NOT NULL,
	INVOLVE_AUDITOR_IN_ISSUES         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_IAT_OVRD_ISS_DTM_0_1 CHECK (OVERRIDE_ISSUE_DTM IN (0,1)),
    CONSTRAINT CHK_IAT_ISS_ASS_ROLE_0_1 CHECK (ASSIGN_ISSUES_TO_ROLE IN (0,1)),
    CONSTRAINT CHK_IAT_TAKE_OWNERSHIP_0_1 CHECK (AUDITOR_CAN_TAKE_OWNERSHIP IN (0,1)),
    CONSTRAINT CHK_SND_ADTR_EXP_ALERT_1_0 CHECK (SEND_AUDITOR_EXPIRY_ALERTS IN (1,0)),
    CONSTRAINT CHK_IA_TYPE_CMS_TAB_FORM CHECK ((TAB_SID IS NULL AND FORM_PATH IS NULL AND FORM_SID IS NULL) OR (TAB_SID IS NOT NULL AND (FORM_PATH IS NOT NULL OR FORM_SID IS NOT NULL))),
    CONSTRAINT CHK_NC_AUDIT_CHILD_REGION CHECK (NC_AUDIT_CHILD_REGION IN (0,1)),
    CONSTRAINT CHK_AUDIT_TYPE_ACT_1_0 CHECK (ACTIVE IN (1, 0)),
    CONSTRAINT CK_IAT_PS_IN_HEADER CHECK (SHOW_PRIMARY_SURVEY_IN_HEADER IN (0, 1)),
    CONSTRAINT CK_IAT_PS_ACTIVE CHECK (PRIMARY_SURVEY_ACTIVE IN (0, 1)),
    CONSTRAINT CK_IAT_PS_MANDATORY CHECK (PRIMARY_SURVEY_MANDATORY IN (0, 1)),
    CONSTRAINT CK_IAT_PS_FIXED CHECK (PRIMARY_SURVEY_FIXED IN (0, 1)),
    CONSTRAINT PK_INTERNAL_AUDIT_TYPE_ID PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID),
    CONSTRAINT CHK_IAT_USE_LEGACY_CLSD_DEF CHECK (USE_LEGACY_CLOSED_DEFINITION IN (0,1)),
	CONSTRAINT CHK_INVOLVE_AUDITOR_IN_ISSUES CHECK (INVOLVE_AUDITOR_IN_ISSUES IN (0, 1))
)
;

CREATE SEQUENCE CSR.INTERNAL_AUDIT_TYPE_ID_SEQ CACHE 5;

CREATE TABLE CSR.IA_TYPE_REPORT_GROUP (
    APP_SID                         NUMBER(10) DEFAULT SYS_CONTEXT('APP', 'SECURITY') NOT NULL,
    IA_TYPE_REPORT_GROUP_ID         NUMBER(10) NOT NULL,
    LABEL                           VARCHAR(255) NOT NULL,
    CONSTRAINT PK_IA_TYPE_REPORT_GROUP PRIMARY KEY (APP_SID, IA_TYPE_REPORT_GROUP_ID)
)
;

CREATE TABLE CSR.INTERNAL_AUDIT_TYPE_REPORT (
    APP_SID                         NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID          NUMBER(10) NOT NULL,
    INTERNAL_AUDIT_TYPE_REPORT_ID   NUMBER(10) NOT NULL,
    WORD_DOC                        BLOB NOT NULL,
    REPORT_FILENAME                 VARCHAR(255) NOT NULL,
    LABEL                           VARCHAR(255) NOT NULL,
    IA_TYPE_REPORT_GROUP_ID         NUMBER(10) NULL,
	USE_MERGE_FIELD_GUID			NUMBER(1) DEFAULT 0 NOT NULL,
	GUID_EXPIRATION_DAYS			NUMBER(10) NULL,
    CONSTRAINT PK_AUDIT_TYPE_REPORT PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_REPORT_ID),
    CONSTRAINT UK_AUDIT_TYPE_REPORT_LABEL UNIQUE (APP_SID, INTERNAL_AUDIT_TYPE_ID, LABEL),
    CONSTRAINT FK_AUDIT_TYPE_ID FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID) REFERENCES CSR.INTERNAL_AUDIT_TYPE (APP_SID, INTERNAL_AUDIT_TYPE_ID),
    CONSTRAINT FK_IA_REPORT_GROUP FOREIGN KEY (APP_SID, IA_TYPE_REPORT_GROUP_ID) REFERENCES CSR.IA_TYPE_REPORT_GROUP (APP_SID, IA_TYPE_REPORT_GROUP_ID),
	CONSTRAINT CHK_USE_MERGE_FLD_GUID CHECK (USE_MERGE_FIELD_GUID IN (0,1)),
	CONSTRAINT CHK_HAS_EXPIRATION CHECK (USE_MERGE_FIELD_GUID = 0 OR GUID_EXPIRATION_DAYS IS NOT NULL)
)
;

CREATE TABLE CSR.INTERNAL_AUDIT_LOCKED_TAG(
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	INTERNAL_AUDIT_SID				NUMBER(10) NOT NULL,
	TAG_GROUP_ID					NUMBER(10) NOT NULL,
	TAG_ID							NUMBER(10),
	CONSTRAINT UK_IA_LOCKED_TAG UNIQUE (APP_SID, INTERNAL_AUDIT_SID, TAG_GROUP_ID, TAG_ID)
)
;

CREATE SEQUENCE CSR.INTERNAL_AUDIT_TYPE_REPORT_SEQ CACHE 5;

CREATE SEQUENCE CSR.IA_TYPE_REPORT_GROUP_ID_SEQ CACHE 5;

CREATE TABLE CSR.INTERNAL_AUDIT_TYPE_SOURCE (
    INTERNAL_AUDIT_TYPE_SOURCE_ID    NUMBER(10) NOT NULL,
    INTERNAL_AUDIT_TYPE_SOURCE       VARCHAR2(255),
    CONSTRAINT PK_INTERNAL_AUDIT_TYPE_SOURCE PRIMARY KEY (INTERNAL_AUDIT_TYPE_SOURCE_ID)
);

CREATE TABLE CSR.INTERNAL_AUDIT_TYPE_CARRY_FWD(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    FROM_INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    TO_INTERNAL_AUDIT_TYPE_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_IATCF PRIMARY KEY (APP_SID, FROM_INTERNAL_AUDIT_TYPE_ID, TO_INTERNAL_AUDIT_TYPE_ID)
)
;

CREATE TABLE CSR.INTERNAL_AUDIT_TYPE_GROUP(
    APP_SID                         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_GROUP_ID    NUMBER(10, 0)     NOT NULL,
    LABEL                           VARCHAR2(255 BYTE) NOT NULL,
    LOOKUP_KEY                      VARCHAR2(255 BYTE),
    INTERNAL_AUDIT_REF_PREFIX       VARCHAR2(255 BYTE),
    AUDITOR_NAME_LABEL              VARCHAR2(100),
    APPLIES_TO_REGIONS              NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    APPLIES_TO_USERS                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    USE_USER_PRIMARY_REGION         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    AUDIT_SINGULAR_LABEL            VARCHAR2(100),
    AUDIT_PLURAL_LABEL              VARCHAR2(100),
    AUDITEE_USER_LABEL              VARCHAR2(100),
    AUDITOR_USER_LABEL              VARCHAR2(100),
    ISSUE_TYPE_ID                   NUMBER(10, 0),
    AUDITS_MENU_SID                 NUMBER(10, 0),
    NEW_AUDIT_MENU_SID              NUMBER(10, 0),
    NON_COMPLIANCES_MENU_SID        NUMBER(10, 0),
    BLOCK_CSS_CLASS                 VARCHAR2(255),
	APPLIES_TO_PERMITS              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CK_IATG_APPL_TO_REGIONS CHECK (APPLIES_TO_REGIONS IN (0,1)),
    CONSTRAINT CK_IATG_APPL_TO_USERS CHECK (APPLIES_TO_USERS IN (0,1)),
	CONSTRAINT CK_IATG_APPL_TO_PERMITS CHECK (APPLIES_TO_PERMITS IN (0,1)),
    CONSTRAINT CK_IATG_USE_USR_PRI_REG CHECK (USE_USER_PRIMARY_REGION = 0 OR (USE_USER_PRIMARY_REGION = 1 AND APPLIES_TO_REGIONS = 0 AND APPLIES_TO_USERS = 1)),
	CONSTRAINT CK_IATG_MUST_APPL_TO_STHNG CHECK (applies_to_regions = 1 OR applies_to_users = 1 OR applies_to_permits = 1),
    CONSTRAINT PK_AUDIT_GROUP PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_GROUP_ID),
    CONSTRAINT UK_AUDIT_GROUP UNIQUE (APP_SID, LOOKUP_KEY)
)
;

CREATE SEQUENCE CSR.INTERNAL_AUDIT_TYPE_GROUP_SEQ CACHE 5;

CREATE TABLE CSR.INTERNAL_AUDIT_TYPE_SURVEY(
    APP_SID                          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_SURVEY_ID    NUMBER(10, 0)     NOT NULL,
    INTERNAL_AUDIT_TYPE_ID           NUMBER(10, 0)     NOT NULL,
    ACTIVE                           NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    LABEL                            VARCHAR2(1024)    NOT NULL,
    IA_TYPE_SURVEY_GROUP_ID          NUMBER(10, 0),
    DEFAULT_SURVEY_SID               NUMBER(10, 0),
    MANDATORY                        NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SURVEY_FIXED                     NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SURVEY_GROUP_KEY                 VARCHAR2(256),
    CONSTRAINT PK_IATS PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_SURVEY_ID),
    CONSTRAINT CK_IATS_ACTIVE CHECK (ACTIVE IN (0, 1)),
    CONSTRAINT CK_IATS_MANDATORY CHECK (MANDATORY IN (0, 1)),
    CONSTRAINT CK_IATS_SURVEY_FIXED CHECK (SURVEY_FIXED IN (0, 1))
)
;

CREATE SEQUENCE CSR.IA_TYPE_SURVEY_ID_SEQ;

CREATE UNIQUE INDEX CSR.UX_IATS_IATSG ON CSR.INTERNAL_AUDIT_TYPE_SURVEY(CASE WHEN IA_TYPE_SURVEY_GROUP_ID IS NOT NULL THEN APP_SID END,
                                                                           CASE WHEN IA_TYPE_SURVEY_GROUP_ID IS NOT NULL THEN INTERNAL_AUDIT_TYPE_ID END,
                                                                           IA_TYPE_SURVEY_GROUP_ID)
;

CREATE UNIQUE INDEX CSR.UX_IATS_LABEL ON CSR.INTERNAL_AUDIT_TYPE_SURVEY(APP_SID, INTERNAL_AUDIT_TYPE_ID, LOWER(LABEL))
;

CREATE TABLE CSR.INTERNAL_AUDIT_TYPE_TAG_GROUP(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    TAG_GROUP_ID              NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INTERNAL_AUDIT_TYPE_TAG_GR PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID, TAG_GROUP_ID)
)
;


CREATE TABLE CSR.INTEGRATION_QUESTION_ANSWER(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PARENT_REF			VARCHAR2(255)	NOT NULL,
	QUESTION_REF		VARCHAR2(255)	NOT NULL,
	QUESTIONNAIRE_NAME	VARCHAR2(255),
	INTERNAL_AUDIT_SID	NUMBER(10, 0),
	SECTION_NAME		VARCHAR2(1024),
	SECTION_CODE		VARCHAR2(1024),
	SECTION_SCORE		NUMBER(10, 5),
	SUBSECTION_NAME		VARCHAR2(1024),
	SUBSECTION_CODE		VARCHAR2(1024),
	QUESTION_TEXT		VARCHAR2(4000),
	RATING				VARCHAR2(1024),
	CONCLUSION			CLOB,
	ANSWER				CLOB,
	DATA_POINTS			CLOB,
	LAST_UPDATED		DATE,
	ID					NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_INTEGRATION_QUESTION_ANSWER PRIMARY KEY (APP_SID, PARENT_REF, QUESTION_REF),
	CONSTRAINT FK_INTEGRATION_QTN_ANS_IA_SID FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID) REFERENCES CSR.INTERNAL_AUDIT (APP_SID, INTERNAL_AUDIT_SID),
	CONSTRAINT UK_INTEGRATION_QUESTION_ANSWER_ID UNIQUE (APP_SID, ID)
)
;
CREATE SEQUENCE CSR.INTEGRATION_QUESTION_ANSWER_ID_SEQ;


CREATE TABLE CSR.ISSUE(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FIRST_PRIORITY_SET_DTM         DATE,
    ISSUE_ID                       NUMBER(10, 0)     NOT NULL,
    LABEL                          VARCHAR2(2048),
    LAST_LABEL                     VARCHAR2(2048),
    SOURCE_LABEL                   VARCHAR2(2000),
    CORRESPONDENT_ID               NUMBER(10, 0),
    CORRESPONDENT_NOTIFIED         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    RAISED_BY_USER_SID             NUMBER(10, 0)     NOT NULL,
    RAISED_DTM                     DATE              NOT NULL,
    OWNER_USER_SID                 NUMBER(10, 0),
    OWNER_ROLE_SID                 NUMBER(10, 0),
    RESOLVED_BY_USER_SID           NUMBER(10, 0),
    RESOLVED_DTM                   DATE,
    MANUAL_COMPLETION_DTM          DATE,
    MANUAL_COMP_DTM_SET_DTM        DATE,
    CLOSED_BY_USER_SID             NUMBER(10, 0),
    CLOSED_DTM                     DATE,
    ASSIGNED_TO_USER_SID           NUMBER(10, 0),
    ASSIGNED_TO_ROLE_SID           NUMBER(10, 0),
    REGION_SID                     NUMBER(10, 0),
    REJECTED_DTM                   DATE,
    REJECTED_BY_USER_SID           NUMBER(10, 0),
    DUE_DTM                        DATE,
    LAST_DUE_DTM                   DATE,
    GUID                           RAW(16),
    ISSUE_PENDING_VAL_ID           NUMBER(10, 0),
    ISSUE_SHEET_VALUE_ID           NUMBER(10, 0),
    ISSUE_SURVEY_ANSWER_ID         NUMBER(10, 0),
    ISSUE_TYPE_ID                  NUMBER(10, 0)     NOT NULL,
    ISSUE_NON_COMPLIANCE_ID        NUMBER(10, 0),
    ISSUE_ACTION_ID                NUMBER(10, 0),
    ISSUE_METER_ID                 NUMBER(10, 0),
    ISSUE_METER_ALARM_ID           NUMBER(10, 0),
    ISSUE_METER_RAW_DATA_ID        NUMBER(10, 0),
    ISSUE_PRIORITY_ID              NUMBER(10, 0),
	ISSUE_COMPLIANCE_REGION_ID		NUMBER(10),
    LAST_ISSUE_PRIORITY_ID         NUMBER(10, 0),
    ISSUE_METER_DATA_SOURCE_ID     NUMBER(10, 0),
    ISSUE_SUPPLIER_ID              NUMBER(10, 0),
    IS_VISIBLE                     NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    SOURCE_URL                     VARCHAR2(2000),
    DELETED                        NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    PARENT_ID                      NUMBER(10, 0),
    ISSUE_INITIATIVE_ID            NUMBER(10, 0),
    ISSUE_ESCALATED                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_PUBLIC                      NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ALLOW_AUTO_CLOSE               NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    FIRST_ISSUE_LOG_ID             NUMBER(10, 0),
    LAST_ISSUE_LOG_ID              NUMBER(10, 0),
    IS_PENDING_ASSIGNMENT          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DESCRIPTION                    CLOB,
    LAST_DESCRIPTION               CLOB,
    REGION_2_SID                   NUMBER(10, 0),
    VAR_EXPL                       CLOB,
    FORECAST_DTM                   DATE,
    LAST_FORECAST_DTM              DATE,
    RAG_STATUS_ID                  NUMBER(10, 0),
    LAST_RAG_STATUS_ID             NUMBER(10, 0),
    ISSUE_METER_MISSING_DATA_ID    NUMBER(10, 0),
    ISSUE_REF                      NUMBER(10, 0),
    LAST_REGION_SID                NUMBER(10, 0),
	ISSUE_DUE_SOURCE_ID			   NUMBER(10,0) NULL,
	ISSUE_DUE_OFFSET_DAYS		   NUMBER(10,0) NULL,
	ISSUE_DUE_OFFSET_MONTHS		   NUMBER(10,0) NULL,
	ISSUE_DUE_OFFSET_YEARS		   NUMBER(10,0) NULL,
	PERMIT_ID					   NUMBER(10,0) NULL,
	IS_CRITICAL					   NUMBER(1) DEFAULT 0 NOT NULL,
	NOTIFIED_OVERDUE			   NUMBER(1) DEFAULT 0 NOT NULL,
	COPIED_FROM_ID				   NUMBER(10) NULL,
	CONSTRAINT CHK_ISSUE_FKS CHECK (
		CASE WHEN ISSUE_PENDING_VAL_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_SHEET_VALUE_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_SURVEY_ANSWER_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_NON_COMPLIANCE_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_ACTION_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_METER_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_METER_ALARM_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_METER_RAW_DATA_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_METER_DATA_SOURCE_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_METER_MISSING_DATA_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_SUPPLIER_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_INITIATIVE_ID IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN ISSUE_COMPLIANCE_REGION_ID IS NOT NULL OR PERMIT_ID IS NOT NULL THEN 1 ELSE 0 END
		IN (0, 1)),
    CONSTRAINT CHK_ISSUE_XOR_IS_ASSIGNED CHECK (
		(ASSIGNED_TO_USER_SID IS NOT NULL OR ASSIGNED_TO_ROLE_SID IS NOT NULL)
		AND
		(ASSIGNED_TO_USER_SID IS NULL OR ASSIGNED_TO_ROLE_SID IS NULL)),
    CONSTRAINT CHK_ISSUE_XOR_OWNER CHECK (
		(OWNER_USER_SID IS NOT NULL OR OWNER_ROLE_SID IS NOT NULL)
		AND
		(OWNER_USER_SID IS NULL OR OWNER_ROLE_SID IS NULL)),
    CONSTRAINT CHK_ISSUE_IS_VISIBLE CHECK (IS_VISIBLE IN (0,1)),
    CONSTRAINT CHK_DELETED_0_OR_1 CHECK (DELETED IN (0,1)),
    CONSTRAINT CHK_ISSUE_ESCALATED_0_OR_1 CHECK (ISSUE_ESCALATED IN (0,1)),
    CONSTRAINT CHK_IS_PUBLIC CHECK (IS_PUBLIC IN (0,1)),
    CONSTRAINT CHK_ALLOW_AUTO_CLOSE CHECK (ALLOW_AUTO_CLOSE IN (0,1)),
	CONSTRAINT CHK_IS_CRITICAL CHECK (IS_CRITICAL IN (0,1)),
	CONSTRAINT CHK_NOTIFIED_OVERDUE CHECK (NOTIFIED_OVERDUE IN (0,1)),
    CONSTRAINT PK_ISSUE PRIMARY KEY (APP_SID, ISSUE_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_ISSUE_REF_TYPE ON CSR.ISSUE(
    CASE WHEN ISSUE_REF IS NULL THEN NULL
         ELSE APP_SID ||'_'|| ISSUE_TYPE_ID ||'_'|| ISSUE_REF END)
;

CREATE INDEX csr.issue_issue_due_source ON csr.issue(app_sid, issue_due_source_id);
CREATE INDEX csr.issue_permit ON csr.issue(app_sid, permit_id);

CREATE TABLE CSR.ISSUE_ACTION(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_ACTION_ID    NUMBER(10, 0)    NOT NULL,
    TASK_SID           NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK777 PRIMARY KEY (APP_SID, ISSUE_ACTION_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_ACTION_ID_SEQ;

CREATE TABLE CSR.ISSUE_ACTION_LOG(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_ACTION_LOG_ID           NUMBER(10, 0)     NOT NULL,
    ISSUE_ACTION_TYPE_ID          NUMBER(10, 0)     NOT NULL,
    ISSUE_ID                      NUMBER(10, 0),
    ISSUE_LOG_ID                  NUMBER(10, 0),
    LOGGED_BY_USER_SID            NUMBER(10, 0),
    LOGGED_BY_CORRESPONDENT_ID    NUMBER(10, 0),
    LOGGED_DTM                    DATE              DEFAULT SYSDATE NOT NULL,
    ASSIGNED_TO_ROLE_SID          NUMBER(10, 0),
    ASSIGNED_TO_USER_SID          NUMBER(10, 0),
    RE_USER_SID                   NUMBER(10, 0),
    RE_ROLE_SID                   NUMBER(10, 0),
    OLD_LABEL                     VARCHAR2(2048),
    NEW_LABEL                     VARCHAR2(2048),
    OLD_DUE_DTM                   DATE,
    NEW_DUE_DTM                   DATE,
    OLD_PRIORITY_ID               NUMBER(10, 0),
    NEW_PRIORITY_ID               NUMBER(10, 0),
    OLD_DESCRIPTION               CLOB,
    NEW_DESCRIPTION               CLOB,
    OLD_FORECAST_DTM              DATE,
    NEW_FORECAST_DTM              DATE,
    OWNER_USER_SID                NUMBER(10, 0),
    OLD_REGION_SID                NUMBER(10, 0),
    NEW_REGION_SID                NUMBER(10, 0),
    NEW_MANUAL_COMP_DTM           DATE,
    NEW_MANUAL_COMP_DTM_SET_DTM   DATE,
	IS_PUBLIC				   	  NUMBER(1, 0),
	INVOLVED_USER_SID			  NUMBER(10, 0),
	INVOLVED_USER_SID_REMOVED	  NUMBER(10, 0),
    CONSTRAINT CHK_IAL_XOR_ASSIGNED CHECK (ISSUE_ACTION_TYPE_ID NOT IN (1)
OR
(
    (ASSIGNED_TO_USER_SID IS NOT NULL OR ASSIGNED_TO_ROLE_SID IS NOT NULL)
    AND
    (ASSIGNED_TO_USER_SID IS NULL OR ASSIGNED_TO_ROLE_SID IS NULL)
)),
    CONSTRAINT CHK_IAL_XOR_LOGGED_BY CHECK ((LOGGED_BY_USER_SID IS NOT NULL OR LOGGED_BY_CORRESPONDENT_ID IS NOT NULL)
AND
(LOGGED_BY_USER_SID IS NULL OR LOGGED_BY_CORRESPONDENT_ID IS NULL)),
    CONSTRAINT PK_ISSUE_ACTION_LOG PRIMARY KEY (APP_SID, ISSUE_ACTION_LOG_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_ACTION_LOG_ID_SEQ;

CREATE TABLE CSR.ISSUE_ACTION_TYPE(
    ISSUE_ACTION_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION             VARCHAR2(100)    NOT NULL,
    CONSTRAINT PK_ISSUE_ACTION_TYPE PRIMARY KEY (ISSUE_ACTION_TYPE_ID)
)
;

CREATE TABLE CSR.ISSUE_ALERT(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_ID             NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID         NUMBER(10, 0)    NOT NULL,
    REMINDER_SENT_DTM    DATE,
    OVERDUE_SENT_DTM     DATE,
    CONSTRAINT PK_ISSUE_ALERT PRIMARY KEY (APP_SID, ISSUE_ID, CSR_USER_SID)
)
;
CREATE SEQUENCE CSR.ISSUE_COMPLIANCE_REGION_ID_SEQ;

CREATE TABLE CSR.ISSUE_COMPLIANCE_REGION (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ISSUE_COMPLIANCE_REGION_ID		NUMBER(10) NOT NULL,
	FLOW_ITEM_ID					NUMBER(10) NOT NULL,
	CONSTRAINT PK_ISSUE_COMPLIANCE_REGION PRIMARY KEY (APP_SID, ISSUE_COMPLIANCE_REGION_ID)
);

CREATE TABLE CSR.ISSUE_CUSTOM_FIELD(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_CUSTOM_FIELD_ID    NUMBER(10, 0)    NOT NULL,
    ISSUE_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    FIELD_TYPE               CHAR             NOT NULL,
    LABEL                    VARCHAR2(64)     NOT NULL,
    POS                      NUMBER(10, 0),
    IS_MANDATORY             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    FIELD_REFERENCE_NAME     VARCHAR2(255),
	RESTRICT_TO_GROUP_SID    NUMBER(10),
    CONSTRAINT CHK_ISS_CUST_FLD_TYP CHECK (FIELD_TYPE IN ('T', 'O','M', 'D')),
    CONSTRAINT PK_ISSUE_CUSTOM_FIELD PRIMARY KEY (APP_SID, ISSUE_CUSTOM_FIELD_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_CUSTOM_FIELD_ID_SEQ;

CREATE INDEX CSR.IX_ISS_CUST_FLD_ISS_TYPE ON CSR.ISSUE_CUSTOM_FIELD(APP_SID, ISSUE_TYPE_ID)
;

CREATE TABLE CSR.ISSUE_CUSTOM_FIELD_DATE_VAL(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DATE_VALUE               DATE             NOT NULL,
    ISSUE_ID                 NUMBER(10, 0)    NOT NULL,
    ISSUE_CUSTOM_FIELD_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ISSUE_CUST_FIELD_DATE_VAL PRIMARY KEY (APP_SID, ISSUE_ID, ISSUE_CUSTOM_FIELD_ID)
)
;

CREATE INDEX CSR.IX_ISS_CUST_FLD_DTE_VAL_FLD ON CSR.ISSUE_CUSTOM_FIELD_DATE_VAL(APP_SID, ISSUE_CUSTOM_FIELD_ID)
;

CREATE INDEX CSR.IX_ISS_CUST_FLD_DTE_VAL_ISS_ID ON CSR.ISSUE_CUSTOM_FIELD_DATE_VAL(APP_SID, ISSUE_ID)
;

CREATE TABLE CSR.ISSUE_CUSTOM_FIELD_OPT_SEL(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_ID                     NUMBER(10, 0)    NOT NULL,
    ISSUE_CUSTOM_FIELD_ID        NUMBER(10, 0)    NOT NULL,
    ISSUE_CUSTOM_FIELD_OPT_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ISSUE_CUSTOM_FIELD_OPT_SEL PRIMARY KEY (APP_SID, ISSUE_ID, ISSUE_CUSTOM_FIELD_ID, ISSUE_CUSTOM_FIELD_OPT_ID)
)
;

CREATE INDEX CSR.IX_ISS_CUST_FLD_OPT_SEL_ISS_ID ON CSR.ISSUE_CUSTOM_FIELD_OPT_SEL(APP_SID, ISSUE_ID)
;

CREATE INDEX CSR.IX_ISS_CUST_FLD_OPT_SEL_SEL_ID ON CSR.ISSUE_CUSTOM_FIELD_OPT_SEL(APP_SID, ISSUE_CUSTOM_FIELD_ID, ISSUE_CUSTOM_FIELD_OPT_ID)
;

CREATE TABLE CSR.ISSUE_CUSTOM_FIELD_OPTION(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_CUSTOM_FIELD_ID        NUMBER(10, 0)    NOT NULL,
    ISSUE_CUSTOM_FIELD_OPT_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                        VARCHAR2(64)     NOT NULL,
    CONSTRAINT PK_ISSUE_CUSTOM_FIELD_OPTION PRIMARY KEY (APP_SID, ISSUE_CUSTOM_FIELD_ID, ISSUE_CUSTOM_FIELD_OPT_ID)
)
;

CREATE INDEX CSR.IX_ISS_CUST_FLD_OPT_FLD ON CSR.ISSUE_CUSTOM_FIELD_OPTION(APP_SID, ISSUE_CUSTOM_FIELD_ID)
;

CREATE TABLE CSR.ISSUE_CUSTOM_FIELD_STR_VAL(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_ID                 NUMBER(10, 0)    NOT NULL,
    ISSUE_CUSTOM_FIELD_ID    NUMBER(10, 0)    NOT NULL,
    STRING_VALUE             VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_ISSUE_CUSTOM_FIELD_STR_VAL PRIMARY KEY (APP_SID, ISSUE_ID, ISSUE_CUSTOM_FIELD_ID)
)
;

CREATE INDEX CSR.IX_ISS_CUST_FLD_STR_VAL_FLD ON CSR.ISSUE_CUSTOM_FIELD_STR_VAL(APP_SID, ISSUE_CUSTOM_FIELD_ID)
;

CREATE INDEX CSR.IX_ISS_CUST_FLD_STR_VAL_ISS_ID ON CSR.ISSUE_CUSTOM_FIELD_STR_VAL(APP_SID, ISSUE_ID)
;

CREATE TABLE CSR.ISSUE_DUE_SOURCE (
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ISSUE_DUE_SOURCE_ID				NUMBER(10,0) NOT NULL,
	ISSUE_TYPE_ID					NUMBER(10,0) NOT NULL,
	SOURCE_DESCRIPTION				VARCHAR2(1024) NOT NULL,
	FETCH_PROC						VARCHAR2(256) NOT NULL,
    CONSTRAINT PK_ISSUE_DUE_SOURCE	PRIMARY KEY (APP_SID, ISSUE_DUE_SOURCE_ID)
);

CREATE INDEX csr.issue_due_source_issue_type ON csr.issue_due_source(app_sid, issue_type_id);

CREATE TABLE CSR.ISSUE_INITIATIVE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_INITIATIVE_ID    NUMBER(10, 0)    NOT NULL,
    INITIATIVE_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ISSUE_INITIATIVE PRIMARY KEY (APP_SID, ISSUE_INITIATIVE_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_INITIATIVE_ID_SEQ;

CREATE TABLE CSR.ISSUE_INVOLVEMENT(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_ID       NUMBER(10, 0)    NOT NULL,
    USER_SID       NUMBER(10, 0),
    ROLE_SID       NUMBER(10, 0),
    IS_AN_OWNER    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    COMPANY_SID    NUMBER(10, 0),
    CONSTRAINT CHK_ISSUE_XOR_INVOLVED CHECK(
        (user_sid IS NOT NULL AND role_sid IS NULL AND company_sid IS NULL)
     OR (user_sid IS NULL AND role_sid IS NOT NULL AND company_sid IS NULL)
     OR (user_sid IS NULL AND role_sid IS NULL and company_sid IS NOT NULL)),
    CONSTRAINT UK_ISSUE_INVOLVEMENT UNIQUE (APP_SID, ISSUE_ID, USER_SID, ROLE_SID, COMPANY_SID)
)
;

CREATE INDEX CSR.IX_ISSUE_INVOLVEMENT_COMPANY ON CSR.ISSUE_INVOLVEMENT(APP_SID, COMPANY_SID)
;

CREATE TABLE CSR.ISSUE_LOG(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_LOG_ID                  NUMBER(10, 0)     NOT NULL,
    ISSUE_ID                      NUMBER(10, 0),
    MESSAGE                       CLOB,
    LOGGED_DTM                    DATE              DEFAULT SYSDATE NOT NULL,
    IS_SYSTEM_GENERATED           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    LOGGED_BY_USER_SID            NUMBER(10, 0),
    LOGGED_BY_CORRESPONDENT_ID    NUMBER(10, 0),
    PARAM_1                       VARCHAR2(2048),
    PARAM_2                       VARCHAR2(2048),
    PARAM_3                       VARCHAR2(2048),
    CONSTRAINT CHK_IL_XOR_LOGGED_BY CHECK ((LOGGED_BY_USER_SID IS NOT NULL OR LOGGED_BY_CORRESPONDENT_ID IS NOT NULL)
AND
(LOGGED_BY_USER_SID IS NULL OR LOGGED_BY_CORRESPONDENT_ID IS NULL)),
    CONSTRAINT PK_ISSUE_LOG PRIMARY KEY (APP_SID, ISSUE_LOG_ID),
    CONSTRAINT UK_ISSUE_LOG_ISSUE UNIQUE (APP_SID, ISSUE_LOG_ID, ISSUE_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_LOG_ID_SEQ;

CREATE TABLE CSR.ISSUE_LOG_FILE(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_LOG_FILE_ID    NUMBER(10, 0)    NOT NULL,
    ISSUE_LOG_ID         NUMBER(10, 0)    NOT NULL,
    FILENAME             VARCHAR2(255)    NOT NULL,
    MIME_TYPE            VARCHAR2(256)    NOT NULL,
    DATA                 BLOB             NOT NULL,
    SHA1                 RAW(20),
    UPLOADED_DTM         DATE             DEFAULT SYSDATE NOT NULL,
	ARCHIVE_FILE_ID      VARCHAR2(50),
	ARCHIVE_FILE_SIZE    NUMBER(10),
    CONSTRAINT PK_ISSUE_LOG_FILE PRIMARY KEY (APP_SID, ISSUE_LOG_FILE_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_LOG_FILE_ID_SEQ;

CREATE TABLE CSR.ISSUE_LOG_READ(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_LOG_ID    NUMBER(10, 0)    NOT NULL,
    READ_DTM        TIMESTAMP(6)     DEFAULT SYSDATE NOT NULL,
    CSR_USER_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ISSUE_LOG_READ PRIMARY KEY (APP_SID, ISSUE_LOG_ID, CSR_USER_SID)
)
;

CREATE TABLE CSR.ISSUE_METER(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_METER_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    ISSUE_DTM         DATE,
    CONSTRAINT PK914 PRIMARY KEY (APP_SID, ISSUE_METER_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_METER_ID_SEQ;

CREATE TABLE CSR.ISSUE_METER_ALARM(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_METER_ALARM_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID              NUMBER(10, 0)    NOT NULL,
    METER_ALARM_ID          NUMBER(10, 0)    NOT NULL,
    ISSUE_DTM               DATE             NOT NULL,
    CONSTRAINT PK979 PRIMARY KEY (APP_SID, ISSUE_METER_ALARM_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_METER_ALARM_ID_SEQ;

CREATE TABLE CSR.ISSUE_METER_DATA_SOURCE(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_METER_DATA_SOURCE_ID    NUMBER(10, 0)    NOT NULL,
    RAW_DATA_SOURCE_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK1193 PRIMARY KEY (APP_SID, ISSUE_METER_DATA_SOURCE_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_METER_DATA_SOURCE_ID_SEQ;

CREATE TABLE CSR.ISSUE_METER_MISSING_DATA(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID                     NUMBER(10, 0)    NOT NULL,
    ISSUE_METER_MISSING_DATA_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM                      DATE             NOT NULL,
    END_DTM                        DATE             NOT NULL,
    CONSTRAINT PK_ISSUE_METER_MISSING_DATA PRIMARY KEY (APP_SID, ISSUE_METER_MISSING_DATA_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_METER_MISSING_DATA_SEQ;

CREATE TABLE CSR.ISSUE_METER_RAW_DATA(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_METER_RAW_DATA_ID    NUMBER(10, 0)    NOT NULL,
    METER_RAW_DATA_ID          NUMBER(10, 0)    NOT NULL,
    REGION_SID                 NUMBER(10, 0),
    CONSTRAINT PK994 PRIMARY KEY (APP_SID, ISSUE_METER_RAW_DATA_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_METER_RAW_DATA_ID_SEQ;

CREATE TABLE CSR.ISSUE_NON_COMPLIANCE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_NON_COMPLIANCE_ID    NUMBER(10, 0)    NOT NULL,
    NON_COMPLIANCE_ID          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK663 PRIMARY KEY (APP_SID, ISSUE_NON_COMPLIANCE_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_NON_COMPLIANCE_ID_SEQ;

CREATE TABLE CSR.ISSUE_PENDING_VAL(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_PENDING_VAL_ID    NUMBER(10, 0)    NOT NULL,
    PENDING_REGION_ID       NUMBER(10, 0)    NOT NULL,
    PENDING_IND_ID          NUMBER(10, 0)    NOT NULL,
    PENDING_PERIOD_ID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ISSUE_PENDING_VAL PRIMARY KEY (APP_SID, ISSUE_PENDING_VAL_ID),
    CONSTRAINT UK_ISSUE_PENDING_VAL UNIQUE (APP_SID, PENDING_IND_ID, PENDING_REGION_ID, PENDING_PERIOD_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_PENDING_VAL_ID_SEQ;

CREATE TABLE CSR.ISSUE_PRIORITY(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_PRIORITY_ID    NUMBER(10, 0)     NOT NULL,
    DESCRIPTION          VARCHAR2(1000)    NOT NULL,
    DUE_DATE_OFFSET      NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_ISSUE_PRIORITY PRIMARY KEY (APP_SID, ISSUE_PRIORITY_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_PRIORITY_ID_SEQ;

CREATE TABLE CSR.ISSUE_RAISE_ALERT (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ISSUE_ID						NUMBER(10) NOT NULL,
	RAISED_BY_USER_SID				NUMBER(10) NOT NULL,
	ISSUE_COMMENT					CLOB,
	CONSTRAINT PK_ISSUE_RAISE_ALERT PRIMARY KEY (APP_SID, ISSUE_ID)
)
;

CREATE INDEX CSR.ISSUE_RAISE_ALERT_RAISED_BY ON CSR.ISSUE_RAISE_ALERT (APP_SID, RAISED_BY_USER_SID);

CREATE TABLE CSR.ISSUE_SCHEDULED_TASK (
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ISSUE_SCHEDULED_TASK_ID			NUMBER(10, 0)	NOT NULL,
	LABEL							VARCHAR2(255)	NOT NULL,
	SCHEDULE_XML					SYS.XMLType		NOT NULL,
	PERIOD_XML						SYS.XMLType		NOT NULL,
	LAST_CREATED					DATE,
	ASSIGN_TO_USER_SID				NUMBER(10, 0)	NOT NULL,
	RAISED_BY_USER_SID				NUMBER(10, 0)	NOT NULL,
	NEXT_RUN_DTM					TIMESTAMP(6),
	DUE_DTM_RELATIVE				NUMBER(10, 0),
	DUE_DTM_RELATIVE_UNIT			CHAR,
	ISSUE_TYPE_ID					NUMBER(10),
	SCHEDULED_ON_DUE_DATE			NUMBER(1) DEFAULT 0 NOT NULL,
	CREATE_CRITICAL					NUMBER(1) DEFAULT 0 NOT NULL,
	COPIED_FROM_ID					NUMBER(10) NULL,
	REGION_SID						NUMBER(10),
	CONSTRAINT PK_ISSUE_SCHEDULED_TASK PRIMARY KEY (APP_SID, ISSUE_SCHEDULED_TASK_ID),
	CONSTRAINT CHK_SCHEDULED_ON_DUE_DATE_1_0 CHECK (SCHEDULED_ON_DUE_DATE IN (1, 0)),
	CONSTRAINT CHK_CREATE_CRITICAL CHECK (CREATE_CRITICAL IN (1, 0))
)
;

CREATE SEQUENCE CSR.ISSUE_SCHEDULED_TASK_ID_SEQ;

CREATE TABLE CSR.ISSUE_SHEET_VALUE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_SHEET_VALUE_ID    NUMBER(10, 0)    NOT NULL,
    IND_SID                 NUMBER(10, 0)    NOT NULL,
    REGION_SID              NUMBER(10, 0)    NOT NULL,
    START_DTM               DATE             NOT NULL,
    END_DTM                 DATE             NOT NULL,
    CONSTRAINT PK_ISSUE_SHEET_VALUE PRIMARY KEY (APP_SID, ISSUE_SHEET_VALUE_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_SHEET_VALUE_ID_SEQ;

CREATE TABLE CSR.ISSUE_SUPPLIER(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_SUPPLIER_ID              NUMBER(10, 0)    NOT NULL,
    COMPANY_SID                    NUMBER(10, 0)    NOT NULL,
    QS_EXPR_NON_COMPL_ACTION_ID    NUMBER(10, 0),
    CONSTRAINT PK_ISSUE_SUPPLIER PRIMARY KEY (APP_SID, ISSUE_SUPPLIER_ID)
)
;

CREATE SEQUENCE CSR.ISSUE_SUPPLIER_ID_SEQ;

CREATE INDEX CSR.IX_ISSUE_SUP_SUPPLIER ON CSR.ISSUE_SUPPLIER(APP_SID, COMPANY_SID)
;

CREATE UNIQUE INDEX CSR.UK_ISSUE_SUPPLIER_NC_ACTION ON CSR.ISSUE_SUPPLIER(APP_SID, COMPANY_SID, NVL(QS_EXPR_NON_COMPL_ACTION_ID, ISSUE_SUPPLIER_ID))
;

CREATE TABLE CSR.ISSUE_SURVEY_ANSWER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_SURVEY_ANSWER_ID    NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID        NUMBER(10, 0)    NOT NULL,
    QUESTION_ID               NUMBER(10, 0)    NOT NULL,
    QUESTION_VERSION          NUMBER(10, 0)    NOT NULL,
    SURVEY_SID                NUMBER(10, 0)    NOT NULL,
    SURVEY_VERSION            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK642 PRIMARY KEY (APP_SID, ISSUE_SURVEY_ANSWER_ID),
    CONSTRAINT UK_ISSUE_SURVEY_ANSWER UNIQUE (SURVEY_RESPONSE_ID, QUESTION_ID, QUESTION_VERSION)
)
;

CREATE SEQUENCE CSR.ISSUE_SURVEY_ANSWER_ID_SEQ;

CREATE INDEX CSR.IX_ISS_SURV_ANS_QSTN ON CSR.ISSUE_SURVEY_ANSWER(APP_SID, QUESTION_ID, SURVEY_VERSION)
;

CREATE INDEX CSR.IX_ISS_SURV_ANS_RESP_ID ON CSR.ISSUE_SURVEY_ANSWER(APP_SID, SURVEY_RESPONSE_ID)
;

CREATE SEQUENCE CSR.ISSUE_TEMPLATE_ID_SEQ;

CREATE TABLE CSR.ISSUE_TEMPLATE (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ISSUE_TEMPLATE_ID				NUMBER(10)		NOT NULL,
	ISSUE_TYPE_ID					NUMBER(10)		NOT NULL,
	LABEL							VARCHAR2(2048)	NOT NULL,
	DESCRIPTION						CLOB			NULL,
	ASSIGN_TO_USER_SID				NUMBER(10)		NULL,
	DUE_DTM							DATE			NULL,
	DUE_DTM_RELATIVE				NUMBER(10)		NULL,
	DUE_DTM_RELATIVE_UNIT			VARCHAR2(1)		NULL,
	IS_URGENT						NUMBER(1)		NULL,
	IS_CRITICAL						NUMBER(1)		NULL,
	CONSTRAINT PK_ISSUE_TEMPLATE PRIMARY KEY (APP_SID, ISSUE_TEMPLATE_ID),
	CONSTRAINT CHK_IT_IS_URGENT CHECK (IS_URGENT IN (0, 1)),
	CONSTRAINT CHK_IT_IS_CRITICAL CHECK (IS_CRITICAL IN (0, 1)),
	CONSTRAINT CHK_IT_DUE_DTM CHECK((DUE_DTM_RELATIVE IS NULL AND DUE_DTM_RELATIVE_UNIT IS NULL) OR (DUE_DTM_RELATIVE IS NOT NULL AND DUE_DTM_RELATIVE_UNIT IS NOT NULL)),
	CONSTRAINT CHK_IT_DUE_DTM_REL_UNIT CHECK(DUE_DTM_RELATIVE_UNIT IN ('d','m'))
)
;

CREATE TABLE CSR.ISSUE_TEMPLATE_CUSTOM_FIELD (
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ISSUE_TEMPLATE_ID				NUMBER(10, 0)	NOT NULL,
	ISSUE_CUSTOM_FIELD_ID			NUMBER(10, 0)	NOT NULL,
	STRING_VALUE					VARCHAR2(255)	NULL,
	DATE_VALUE						DATE			NULL,
	CONSTRAINT PK_ISSUE_TEMP_CUST_FIELD PRIMARY KEY (APP_SID, ISSUE_TEMPLATE_ID, ISSUE_CUSTOM_FIELD_ID)
)
;

CREATE TABLE CSR.ISSUE_TEMPLATE_CUST_FIELD_OPT (
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ISSUE_TEMPLATE_ID				NUMBER(10, 0)	NOT NULL,
	ISSUE_CUSTOM_FIELD_ID			NUMBER(10, 0)	NOT NULL,
	ISSUE_CUSTOM_FIELD_OPT_ID		NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_ISSUE_TEMP_CUST_FIELD_OPT PRIMARY KEY (APP_SID, ISSUE_TEMPLATE_ID, ISSUE_CUSTOM_FIELD_ID, ISSUE_CUSTOM_FIELD_OPT_ID)
)
;

CREATE TABLE CSR.ISSUE_TYPE(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_TYPE_ID                     NUMBER(10, 0)    NOT NULL,
    LABEL                             VARCHAR2(255)    NOT NULL,
    DEFAULT_REGION_SID                NUMBER(10, 0),
    DEFAULT_ISSUE_PRIORITY_ID         NUMBER(10, 0),
    ALERT_MAIL_ADDRESS                VARCHAR2(100),
    ALERT_MAIL_NAME                   VARCHAR2(100),
    REQUIRE_PRIORITY                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ALLOW_CHILDREN                    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CREATE_RAW                        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    AUTO_CLOSE_AFTER_RESOLVE_DAYS     NUMBER(10, 0),
    DEFAULT_ASSIGN_TO_USER_SID        NUMBER(10, 0),
    DEFAULT_ASSIGN_TO_ROLE_SID        NUMBER(10, 0),
    ALERT_PENDING_DUE_DAYS            NUMBER(10, 0),
    ALERT_OVERDUE_DAYS                NUMBER(10, 0),
    POSITION                          NUMBER(10, 0),
    DELETED                           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CAN_SET_PUBLIC                    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ALLOW_PENDING_ASSIGNMENT          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    RESTRICT_USERS_TO_REGION          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    DELETABLE_BY_OWNER                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    DELETABLE_BY_ADMINISTRATOR        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    INVOLVE_MIN_USERS_IN_ISSUE        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SHOW_FORECAST_DTM                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REQUIRE_VAR_EXPL                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ENABLE_REJECT_ACTION              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    HELPER_PKG                        VARCHAR2(255),
    PUBLIC_BY_DEFAULT                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    OWNER_CAN_BE_CHANGED              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    DELETABLE_BY_RAISER               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SEND_ALERT_ON_ISSUE_RAISED        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    INTERNAL_ISSUE_REF_HELPER_FUNC    VARCHAR2(255),
    INTERNAL_ISSUE_REF_PREFIX         VARCHAR2(255),
    LOOKUP_KEY                        VARCHAR2(255),
    SHOW_ONE_ISSUE_POPUP              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ALLOW_OWNER_RESOLVE_AND_CLOSE     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_AUDIT                  NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    GET_ASSIGNABLES_SP                VARCHAR2(255),
    REGION_LINK_TYPE                  NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    REQUIRE_DUE_DTM_COMMENT           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_REGION_EDITABLE                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    EMAIL_INVOLVED_ROLES              NUMBER (1, 0)    DEFAULT 1 NOT NULL,
	EMAIL_INVOLVED_USERS			  NUMBER(1)        DEFAULT 1 NOT NULL,
    ENABLE_MANUAL_COMP_DATE           NUMBER(1)        DEFAULT 0 NOT NULL,
    COMMENT_IS_OPTIONAL               NUMBER(1)        DEFAULT 0 NOT NULL,
    DUE_DATE_IS_MANDATORY             NUMBER(1)        DEFAULT 0 NOT NULL,
    ALLOW_CRITICAL                    NUMBER(1)        DEFAULT 0 NOT NULL,
    ALLOW_URGENT_ALERT                NUMBER(1)        DEFAULT 1 NOT NULL,
	REGION_IS_MANDATORY				  NUMBER(1)		   DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_IT_UNIQUE_ASSIGN CHECK (NOT (DEFAULT_ASSIGN_TO_USER_SID IS NOT NULL AND DEFAULT_ASSIGN_TO_ROLE_SID IS NOT NULL)),
    CONSTRAINT CHK_IT_CREATE_RAW CHECK (CREATE_RAW IN (0, 1)),
    CONSTRAINT CHK_IT_ACARD_VALID CHECK (AUTO_CLOSE_AFTER_RESOLVE_DAYS >= 0),
    CONSTRAINT CHK_IT_ALERT_PENDING_DAYS CHECK (ALERT_PENDING_DUE_DAYS >= 1),
    CONSTRAINT CHK_IT_ALERT_OVERDUE_DAYS CHECK (ALERT_OVERDUE_DAYS >= 0),
    CONSTRAINT CHK_ISSUE_TYPE_DELETED CHECK (DELETED IN (0, 1)),
    CONSTRAINT CHK_PUBLIC_BY_DEFAULT CHECK (PUBLIC_BY_DEFAULT IN (0,1)),
    CONSTRAINT CHK_CAN_SET_PUBLIC CHECK (CAN_SET_PUBLIC IN (0,1)),
    CONSTRAINT CHK_OWNER_CAN_BE_CHANGED CHECK (OWNER_CAN_BE_CHANGED IN (0,1)),
    CONSTRAINT CHK_DELETABLE_BY_RAISER CHECK (DELETABLE_BY_RAISER IN (0,1)),
    CONSTRAINT CHK_SEND_ALERT_ON_ISSUE_RAISED CHECK (SEND_ALERT_ON_ISSUE_RAISED IN (1, 0)),
    CONSTRAINT CHK_SHOW_ONE_ISSUE_POPUP CHECK (SHOW_ONE_ISSUE_POPUP IN (1, 0)),
    CONSTRAINT CHK_IT_RLT_NONE_OPT_MAND CHECK (REGION_LINK_TYPE IN (0, 1, 2)),
    CONSTRAINT CHK_ISS_TYPE_REQ_DDTM_CMT CHECK (require_due_dtm_comment IN (0,1)),
    CONSTRAINT CHK_REGION_EDITABLE CHECK(IS_REGION_EDITABLE IN (0,1)),
    CONSTRAINT CHK_EMAIL_INVOLVED_ROLES_1_0 CHECK (EMAIL_INVOLVED_ROLES IN (1, 0)),
	CONSTRAINT CHK_ALLOW_CRITICAL CHECK(ALLOW_CRITICAL IN (0,1)),
    CONSTRAINT CK_ISSUE_TYPE_ALLOW_URGENT CHECK (ALLOW_URGENT_ALERT IN (0,1)),
    CONSTRAINT CK_ISSUE_TYPE_EMAIL_INV_USERS CHECK (EMAIL_INVOLVED_USERS IN (0,1)),
	CONSTRAINT CHK_ISS_TYPE_REG_IS_MAND CHECK (REGION_IS_MANDATORY IN (0,1)),
    CONSTRAINT PK643 PRIMARY KEY (APP_SID, ISSUE_TYPE_ID)    
)
;

CREATE SEQUENCE CSR.ISSUE_TYPE_ID_SEQ START WITH 10000;

CREATE UNIQUE INDEX CSR.UK_ISSUE_TYPE_LOOKUP ON CSR.ISSUE_TYPE(APP_SID, NVL(UPPER(LOOKUP_KEY), ISSUE_TYPE_ID))
;

CREATE TABLE CSR.ISSUE_TYPE_AGGREGATE_IND_GRP(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_TYPE_ID             NUMBER(10, 0)    NOT NULL,
    AGGREGATE_IND_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ISS_TPY_AGG_IND_GRP PRIMARY KEY (APP_SID, ISSUE_TYPE_ID, AGGREGATE_IND_GROUP_ID)
)
;

CREATE TABLE CSR.ISSUE_TYPE_RAG_STATUS(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    RAG_STATUS_ID    NUMBER(10, 0)    NOT NULL,
    POS              NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_ISSUE_TYPE_RAG_STATUS PRIMARY KEY (APP_SID, ISSUE_TYPE_ID, RAG_STATUS_ID)
)
;

CREATE TABLE CSR.ISSUE_USER_COVER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_COVER_ID             NUMBER(10, 0)    NOT NULL,
    USER_GIVING_COVER_SID     NUMBER(10, 0)    NOT NULL,
    USER_BEING_COVERED_SID    NUMBER(10, 0)    NOT NULL,
    ISSUE_ID                  NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ISSUE_USER_COVER PRIMARY KEY (APP_SID, ISSUE_ID, USER_COVER_ID)
)
;

CREATE TABLE CSR.JOB(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    JOB_ID                   NUMBER(10, 0)     NOT NULL,
    PROG_ID                  VARCHAR2(255)     NOT NULL,
    REQUESTED_BY_USER_SID    NUMBER(10, 0)     NOT NULL,
    REQUESTED_DTM            DATE              NOT NULL,
    PARAM_DIC_BLOB           BLOB,
    START_AFTER_DTM          DATE              NOT NULL,
    STARTED_DTM              DATE,
    COMPLETED_DTM            DATE,
    RESULT_CODE              NUMBER(10, 0),
    RESULT_MESSAGE           VARCHAR2(1024),
    CONSTRAINT PK_JOB PRIMARY KEY (JOB_ID)
)
;

CREATE SEQUENCE CSR.JOB_ID_SEQ CACHE 5;

CREATE TABLE CSR.JOB_PROG_ID(
    PROG_ID        VARCHAR2(255)    NOT NULL,
    DESCRIPTION    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_JOB_PROG_ID PRIMARY KEY (PROG_ID)
)
;

CREATE TABLE CSR.USER_MEASURE_CONVERSION(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CSR_USER_SID             NUMBER(10, 0)    NOT NULL,
    MEASURE_SID              NUMBER(10, 0)    NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_USER_MEASURE_CONVERSION PRIMARY KEY (APP_SID, CSR_USER_SID, MEASURE_SID)
)
;

CREATE TABLE CSR.LEASE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LEASE_ID            NUMBER(10, 0)    NOT NULL,
    START_DTM           DATE             NOT NULL,
    END_DTM             DATE,
    NEXT_BREAK_DTM      DATE,
    CURRENT_RENT        NUMBER(16, 2),
    NORMALISED_RENT     NUMBER(16, 2),
    NEXT_RENT_REVIEW    DATE,
    TENANT_ID           NUMBER(10, 0)    NOT NULL,
    CURRENCY_CODE       VARCHAR2(10)     NOT NULL,
    CONSTRAINT PK_LEASE PRIMARY KEY (APP_SID, LEASE_ID)
)
;

CREATE SEQUENCE CSR.LEASE_ID_SEQ;

CREATE TABLE CSR.LEASE_POSTIT(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LEASE_ID     NUMBER(10, 0)    NOT NULL,
    POSTIT_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_LEASE_POSTIT PRIMARY KEY (APP_SID, LEASE_ID, POSTIT_ID)
)
;

CREATE TABLE CSR.LEASE_PROPERTY(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LEASE_ID               NUMBER(10, 0)    NOT NULL,
    PROPERTY_REGION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_LEASE_PROPERTY PRIMARY KEY (APP_SID, LEASE_ID, PROPERTY_REGION_SID)
)
;

CREATE TABLE CSR.LEASE_SPACE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LEASE_ID            NUMBER(10, 0)    NOT NULL,
    SPACE_REGION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_LEASE_SPACE PRIMARY KEY (APP_SID, LEASE_ID, SPACE_REGION_SID)
)
;

CREATE TABLE CSR.LEASE_TYPE(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LEASE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_LEASE_TYPE PRIMARY KEY (APP_SID, LEASE_TYPE_ID)
)
;

CREATE SEQUENCE CSR.LEASE_TYPE_ID_SEQ;

CREATE TABLE CSR.LIKE_FOR_LIKE_EMAIL_SUB(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LIKE_FOR_LIKE_SID    NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_L4L_EMAIL PRIMARY KEY (APP_SID, LIKE_FOR_LIKE_SID, CSR_USER_SID)
)
;

CREATE TABLE CSR.LIKE_FOR_LIKE_EXCLUDED_REGIONS(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LIKE_FOR_LIKE_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID           NUMBER(10, 0)    NOT NULL,
    PERIOD_START_DTM     DATE,
    PERIOD_END_DTM       DATE,
    CONSTRAINT PK_L4L_EXCLUDED_REGIONS PRIMARY KEY (APP_SID, LIKE_FOR_LIKE_SID, REGION_SID, PERIOD_START_DTM, PERIOD_END_DTM),
    CONSTRAINT CK_L4L_EXCLUDED_REG_DATES CHECK (PERIOD_END_DTM > PERIOD_START_DTM)
)
;

CREATE TABLE CSR.LIKE_FOR_LIKE_SCENARIO_ALERT(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LIKE_FOR_LIKE_SID          NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID               NUMBER(10, 0)    NOT NULL,
    CALC_JOB_ID                NUMBER(10, 0)    NOT NULL,
    CALC_JOB_COMPLETION_DTM    DATE             NOT NULL,
    CONSTRAINT PK_L4L_SCEN_ALERT PRIMARY KEY (APP_SID, LIKE_FOR_LIKE_SID, CSR_USER_SID, CALC_JOB_ID)
)
;

CREATE TABLE CSR.LIKE_FOR_LIKE_SLOT(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LIKE_FOR_LIKE_SID           NUMBER(10, 0)    NOT NULL,
    NAME                        VARCHAR2(255)    NOT NULL,
    IND_SID                     NUMBER(10, 0)    NOT NULL,
    REGION_SID                  NUMBER(10, 0)    NOT NULL,
    INCLUDE_INACTIVE_REGIONS    NUMBER(1, 0)     NOT NULL,
    PERIOD_START_DTM            DATE             NOT NULL,
    PERIOD_END_DTM              DATE             NOT NULL,
    PERIOD_SET_ID               NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID          NUMBER(10, 0)    NOT NULL,
    RULE_TYPE                   NUMBER(1, 0)     NOT NULL,
    SCENARIO_RUN_SID            NUMBER(10, 0)    NOT NULL,
    CREATED_BY_USER_SID         NUMBER(10, 0),
    CREATED_DTM                 DATE,
    LAST_REFRESH_USER_SID       NUMBER(10, 0),
    LAST_REFRESH_DTM            DATE,
    CONSTRAINT PK_LIKE_FOR_LIKE PRIMARY KEY (APP_SID, LIKE_FOR_LIKE_SID),
    CONSTRAINT CK_L4L_RULE_TYPE CHECK (RULE_TYPE IN (0, 1)),
    CONSTRAINT CK_L4L_INCL_INACT_REG CHECK (INCLUDE_INACTIVE_REGIONS IN (0, 1))
)
;

CREATE TABLE CSR.LINK_AUDIT(
    ACTION_DTM       TIMESTAMP(6),
    FUNCTION_NAME    VARCHAR2(200),
    MESSAGE          VARCHAR2(4000)
)
;

CREATE TABLE CSR.LINKED_METER(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID          NUMBER(10, 0)    NOT NULL,
    LINKED_METER_SID    NUMBER(10, 0)    NOT NULL,
    POS                 NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_LINKED_METER PRIMARY KEY (APP_SID, REGION_SID, LINKED_METER_SID)
)
;

CREATE TABLE CSR.LOCATION(
    LOCATION_ID         NUMBER(10, 0)     NOT NULL,
    LOCATION_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    NAME                VARCHAR2(255),
    DESCRIPTION         VARCHAR2(1023),
    LONGITUDE           NUMBER(24, 10),
    LATITUDE            NUMBER(24, 10),
    IS_APPROVED         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    COUNTRY             VARCHAR2(2),
    CONSTRAINT LATLNG CHECK ((latitude IS NULL or (-90 <= latitude AND latitude <= 90))
AND
(longitude IS NULL or (-180 <= longitude AND longitude <= 180))),
    CONSTRAINT PK939 PRIMARY KEY (LOCATION_ID)
)
;

CREATE SEQUENCE CSR.LOCATION_ID_SEQ;

CREATE INDEX CSR.IX_LOCATION_NAME ON CSR.LOCATION(LOCATION_TYPE_ID, NAME)
;

CREATE INDEX CSR.UK_LOCATION ON CSR.LOCATION(LOCATION_TYPE_ID, UPPER(NAME), NVL(LONGITUDE, LOCATION_ID + 1000), NVL(LATITUDE, LOCATION_ID + 1000))
;

CREATE TABLE CSR.LOCATION_TYPE(
    LOCATION_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    NAME                VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK949 PRIMARY KEY (LOCATION_TYPE_ID)
)
;

CREATE TABLE CSR.LOGISTICS_DEFAULT(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    AUTO_APPROVE_SEARCH_LOCATION    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    AUTO_CREATE_CUSTOM_LOCATION     NUMBER(1, 0)     NOT NULL,
    STD_MEASURE_CONVERSION_ID       NUMBER(10, 0)    DEFAULT 6 NOT NULL,
    DISTANCE_BREAKDOWN              SYS.XMLType,
    SORT_COLUMN                     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_LOGISTICS_DEFAULT PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.LOGISTICS_ERROR_LOG(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LOGISTICS_ERROR_LOG_ID    NUMBER(10, 0)     NOT NULL,
    TAB_SID                   NUMBER(10, 0)     NOT NULL,
    PROCESSOR_CLASS_ID        NUMBER(10, 0)     NOT NULL,
    ID                        NUMBER(10, 0)     NOT NULL,
    MESSAGE                   VARCHAR2(2048)    NOT NULL,
    LOGGED_DTM                DATE              DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_LOGISTICS_ERROR_LOG PRIMARY KEY (APP_SID, LOGISTICS_ERROR_LOG_ID)
)
;

CREATE SEQUENCE CSR.LOGISTICS_ERROR_LOG_ID_SEQ;

CREATE TABLE CSR.LOGISTICS_PROCESSOR_CLASS(
    PROCESSOR_CLASS_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                 VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_LOGISTICS_PROCESSOR_CLASS PRIMARY KEY (PROCESSOR_CLASS_ID)
)
;

CREATE TABLE CSR.LOGISTICS_TAB_MODE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    TAB_SID                NUMBER(10, 0)    NOT NULL,
    PROCESSOR_CLASS_ID     NUMBER(10, 0)    NOT NULL,
    TRANSPORT_MODE_ID      NUMBER(10, 0),
    START_JOB_SP           VARCHAR2(255)    NOT NULL,
    GET_ROWS_SP            VARCHAR2(255),
    SET_DISTANCE_SP        VARCHAR2(255),
    DELETE_ROW_SP          VARCHAR2(255)    NOT NULL,
    GET_AGGREGATES_SP      VARCHAR2(255),
    LOCATION_CHANGED_SP    VARCHAR2(255),
    IS_DIRTY               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PROCESSING             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_LOG_TAB_TYPE_IS_DIRTY CHECK (IS_DIRTY IN (0,1)),
    CONSTRAINT CHK_LOG_TAB_TYPE_PROCESS CHECK (PROCESSING IN (0,1)),
    CONSTRAINT PK_LOGISTICS_TAB_MODE PRIMARY KEY (APP_SID, TAB_SID, PROCESSOR_CLASS_ID)
)
;

CREATE TABLE CSR.LOGON_TYPE(
    LOGON_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL            VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_LOGON_TYPE PRIMARY KEY (LOGON_TYPE_ID)
)
;

CREATE TABLE CSR.LOOKUP_TABLE(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    LOOKUP_ID      NUMBER(10, 0)    NOT NULL,
    LOOKUP_NAME    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_LOOKUP_TABLE PRIMARY KEY (APP_SID, LOOKUP_ID)
)
;

CREATE TABLE CSR.LOOKUP_TABLE_ENTRY(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    LOOKUP_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM    DATE             NOT NULL,
    VAL          NUMBER,
    CONSTRAINT PK_LOOKUP_TABLE_ENTRY PRIMARY KEY (APP_SID, LOOKUP_ID, START_DTM)
)
;

CREATE INDEX CSR.IX_LOOKUP_TAB_ENTRY_LOOKUP_ID ON CSR.LOOKUP_TABLE_ENTRY(APP_SID, LOOKUP_ID)
;

CREATE TABLE CSR.MANAGED_CONTENT_MAP(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SID                 NUMBER(10, 0)    NOT NULL,
    UNIQUE_REF          VARCHAR2(1024)    NOT NULL,
    PACKAGE_REF         VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK_MANAGED_CONTENT_MAP PRIMARY KEY (APP_SID, SID, UNIQUE_REF)
)
;

CREATE TABLE CSR.MANAGED_CONTENT_MEASURE_CONVERSION_MAP(
	APP_SID 				NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL, 
	CONVERSION_ID			NUMBER(10,0) NOT NULL, 
	UNIQUE_REF 				VARCHAR2(1024) NOT NULL, 
	PACKAGE_REF 			VARCHAR2(1024) NOT NULL, 
	CONSTRAINT PK_MANAGED_CONTENT_MC_MAP PRIMARY KEY (APP_SID, CONVERSION_ID, UNIQUE_REF)
);

CREATE TABLE CSR.MANAGED_PACKAGE (
	APP_SID                 NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PACKAGE_REF				VARCHAR2(1024) NOT NULL,
	PACKAGE_NAME			VARCHAR2(1024) NOT NULL,
	CONSTRAINT PK_MANAGED_PACKAGE PRIMARY KEY (APP_SID)
)
;

CREATE UNIQUE INDEX CSR.IDX_PACKAGE_REF ON CSR.MANAGED_PACKAGE(PACKAGE_REF)
;

CREATE TABLE CSR.MANAGED_CONTENT_UNPACKAGE_LOG_RUN (
	APP_SID		            NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	MESSAGE_ID 	            NUMBER(10, 0) NOT NULL,
	RUN_ID 		            NUMBER(10, 0) NOT NULL,
	SEVERITY            	VARCHAR2(1) NOT NULL,
	MSG_DTM		            DATE NOT NULL,
	MESSAGE		            CLOB NOT NULL,
    CONSTRAINT PK_MANAGED_CONTENT_UNPKG_LOG_RUN PRIMARY KEY (APP_SID, RUN_ID, MESSAGE_ID),
    CONSTRAINT CK_MANAGED_CONTENT_MSG_SEV CHECK (SEVERITY IN ('E','C','I','D'))
)
;

CREATE SEQUENCE CSR.MANAGED_CONTENT_UNPACKAGE_MSG_SEQ;

CREATE SEQUENCE CSR.MANAGED_CONTENT_UNPACKAGE_RUN_SEQ;

CREATE TABLE CSR.MAP_SHPFILE(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MAP_ID         NUMBER(10, 0)     NOT NULL,
    SHPFILE        VARCHAR2(1024)    NOT NULL,
    GEO_FIELD      VARCHAR2(256),
    GEO_COUNTRY    VARCHAR2(2),
    Z_ORDER        NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK2 PRIMARY KEY (APP_SID, MAP_ID, SHPFILE)
)
;

CREATE SEQUENCE CSR.MAP_ID_SEQ;

CREATE TABLE CSR.MASTER_DELEG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK924 PRIMARY KEY (APP_SID, DELEGATION_SID)
)
;

CREATE TABLE CSR.MATCHED_GIVING_POLICY(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MATCHED_GIVING_POLICY_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION                 CLOB,
    CONSTRAINT PK_MATCHED_GIVING_POLICY PRIMARY KEY (APP_SID, MATCHED_GIVING_POLICY_ID)
)
;

CREATE SEQUENCE CSR.MATCHED_GIVING_POLICY_ID_SEQ CACHE 5;

CREATE TABLE CSR.MEASURE(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MEASURE_SID                  NUMBER(10, 0)     NOT NULL,
    NAME                         VARCHAR2(255)     NOT NULL,
    DESCRIPTION                  VARCHAR2(255),
    SCALE                        NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    FORMAT_MASK                  VARCHAR2(255)     DEFAULT '#,##0' NOT NULL,
    REGIONAL_AGGREGATION         VARCHAR2(255)     DEFAULT 'sum' NOT NULL,
    CUSTOM_FIELD                 VARCHAR2(4000),
    OPTION_SET_ID                NUMBER(10, 0),
    PCT_OWNERSHIP_APPLIES        NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    FACTOR                       NUMBER(24, 10),
    M                            NUMBER(10, 0),
    KG                           NUMBER(10, 0),
    S                            NUMBER(10, 0),
    A                            NUMBER(10, 0),
    K                            NUMBER(10, 0),
    MOL                          NUMBER(10, 0),
    CD                           NUMBER(10, 0),
    LOOKUP_KEY                   VARCHAR2(64),
    DIVISIBILITY                 NUMBER(10, 0)     NOT NULL,
    CONSTRAINT CK_MEASURE_SI_DETAIL CHECK (( factor is not null and m is not null and kg is not null and s is not null and a is not null and k is not null and mol is not null and cd is not null ) or
    ( factor is null and m is null and kg is null and s is null and a is null and k is null and mol is null and cd is null )),
    CONSTRAINT PK_MEASURE PRIMARY KEY (APP_SID, MEASURE_SID)
)
;

CREATE UNIQUE INDEX CSR.UX_MEASURE_LOOKUP_KEY ON CSR.MEASURE(APP_SID, NVL(UPPER(LOOKUP_KEY), MEASURE_SID))
;

CREATE TABLE CSR.MEASURE_CONVERSION(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MEASURE_CONVERSION_ID        NUMBER(10, 0)     NOT NULL,
    MEASURE_SID                  NUMBER(10, 0)     NOT NULL,
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    DESCRIPTION                  VARCHAR2(255),
    A                            NUMBER(24, 10),
    B                            NUMBER(24, 10),
    C                            NUMBER(24, 10),
    LOOKUP_KEY                   VARCHAR2(64),
    CONSTRAINT CK_MCONV_COMPLETED CHECK ((a is null and b is null and c is null) or (a is not null and b is not null and c is not null)),
    CONSTRAINT PK_MEASURE_CONVERSION PRIMARY KEY (APP_SID, MEASURE_CONVERSION_ID),
    CONSTRAINT CONS_MEAS_CONV_MEASURE UNIQUE (APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
)
;

CREATE SEQUENCE CSR.MEASURE_CONVERSION_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_MEASURE_CONV_MEASURE ON CSR.MEASURE_CONVERSION(APP_SID, MEASURE_SID)
;

CREATE UNIQUE INDEX CSR.UX_MEASURE_CONV_LOOKUP_KEY ON CSR.MEASURE_CONVERSION(APP_SID, NVL(UPPER(LOOKUP_KEY), MEASURE_CONVERSION_ID))
;

CREATE UNIQUE INDEX CSR.UK_MEASURE_CONV_NAME ON CSR.MEASURE_CONVERSION(APP_SID, MEASURE_SID, LOWER(DESCRIPTION))
;

CREATE TABLE CSR.MEASURE_CONVERSION_PERIOD(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0)     NOT NULL,
    START_DTM                DATE              NOT NULL,
    END_DTM                  DATE,
    A                        NUMBER(24, 10)    NOT NULL,
    B                        NUMBER(24, 10)    NOT NULL,
    C                        NUMBER(24, 10)    NOT NULL,
    CONSTRAINT CK_MCONV_PERIOD_COMPLETED CHECK ((a is null and b is null and c is null) or (a is not null and b is not null and c is not null)),
    CONSTRAINT PK_MEASURE_CONVERSION_PERIOD PRIMARY KEY (APP_SID, MEASURE_CONVERSION_ID, START_DTM)
)
;

CREATE TABLE CSR.MEASURE_CONVERSION_SET(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MEASURE_CONVERSION_SET_ID    NUMBER(10, 0)     NOT NULL,
    MEASURE_SID                  NUMBER(10, 0)     NOT NULL,
    NAME                         VARCHAR2(4000)    NOT NULL,
    CONSTRAINT PK607 PRIMARY KEY (APP_SID, MEASURE_CONVERSION_SET_ID)
)
;

CREATE TABLE CSR.MEASURE_CONVERSION_SET_ENTRY(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MEASURE_CONVERSION_SET_ID    NUMBER(10, 0)    NOT NULL,
    MEASURE_CONVERSION_ID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK608 PRIMARY KEY (APP_SID, MEASURE_CONVERSION_SET_ID, MEASURE_CONVERSION_ID)
)
;

CREATE TABLE CSR.METER_AGGREGATE_TYPE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_AGGREGATE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    METER_INPUT_ID             NUMBER(10, 0)    NOT NULL,
    AGGREGATOR                 VARCHAR2(32)     NOT NULL,
    ANALYTIC_FUNCTION          NUMBER(10, 0)    NOT NULL,
    DESCRIPTION                VARCHAR2(255)    NOT NULL,
    ACCUMULATIVE               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_METER_AGGREGATE_TYPE PRIMARY KEY (APP_SID, METER_AGGREGATE_TYPE_ID),
    CONSTRAINT CHK_MTR_AGG_TYP_CUMULATIVE_1_0 CHECK (ACCUMULATIVE IN (1, 0))
)
;

CREATE SEQUENCE CSR.METER_AGGREGATE_TYPE_ID_SEQ START WITH 10000;

CREATE TABLE CSR.METER_AGGREGATOR(
    AGGREGATOR    VARCHAR2(32)     NOT NULL,
    LABEL         VARCHAR2(256)    NOT NULL,
    AGGR_PROC     VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_METER_AGGREGATOR PRIMARY KEY (AGGREGATOR)
)
;

CREATE TABLE CSR.METER_ALARM(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_ALARM_ID          NUMBER(10, 0)     NOT NULL,
    INHERITABLE             NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    ENABLED                 NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    NAME                    VARCHAR2(1024)    NOT NULL,
    TEST_TIME_ID            NUMBER(10, 0)     NOT NULL,
    LOOK_AT_STATISTIC_ID    NUMBER(10, 0)     NOT NULL,
    COMPARE_STATISTIC_ID    NUMBER(10, 0),
    COMPARISON_ID           NUMBER(10, 0)     NOT NULL,
    COMPARISON_VAL          NUMBER(10, 5)     DEFAULT 0 NOT NULL,
    ISSUE_PERIOD_ID         NUMBER(10, 0)     NOT NULL,
    ISSUE_TRIGGER_COUNT     NUMBER(10, 0)     NOT NULL,
    CHECK (INHERITABLE IN(0,1)),
    CHECK (ENABLED IN(0,1)),
    CONSTRAINT PK960 PRIMARY KEY (APP_SID, METER_ALARM_ID)
)
;

CREATE SEQUENCE CSR.METER_ALARM_ID_SEQ;

CREATE TABLE CSR.METER_ALARM_COMPARISON(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COMPARISON_ID    NUMBER(10, 0)    NOT NULL,
    NAME             VARCHAR2(256)    NOT NULL,
    SHOW_PCT         NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    OP_CODE          VARCHAR2(64)     NOT NULL,
    CHECK (SHOW_PCT IN(0,1)),
    CONSTRAINT PK962 PRIMARY KEY (APP_SID, COMPARISON_ID)
)
;

CREATE SEQUENCE CSR.METER_COMPARISON_ID_SEQ;

CREATE TABLE CSR.METER_ALARM_EVENT(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID              NUMBER(10, 0)    NOT NULL,
    METER_ALARM_ID          NUMBER(10, 0)    NOT NULL,
    METER_ALARM_EVENT_ID    NUMBER(10, 0)    NOT NULL,
    EVENT_DTM               DATE             NOT NULL,
    CONSTRAINT PK975 PRIMARY KEY (APP_SID, REGION_SID, METER_ALARM_ID, METER_ALARM_EVENT_ID)
)
;

CREATE SEQUENCE CSR.METER_ALARM_EVENT_ID_SEQ;

CREATE TABLE CSR.METER_ALARM_ISSUE_PERIOD(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_PERIOD_ID    NUMBER(10, 0)    NOT NULL,
    NAME               VARCHAR2(256)    NOT NULL,
    TEST_FUNCTION      VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK964 PRIMARY KEY (APP_SID, ISSUE_PERIOD_ID)
)
;

CREATE SEQUENCE CSR.METER_ISSUE_PERIOD_ID_SEQ;

CREATE TABLE CSR.METER_ALARM_STAT_RUN(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_ALARM_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    STATISTIC_ID      NUMBER(10, 0)    NOT NULL,
    STATISTIC_DTM     DATE             NOT NULL,
    CONSTRAINT PK977 PRIMARY KEY (APP_SID, METER_ALARM_ID, REGION_SID, STATISTIC_ID)
)
;

CREATE TABLE CSR.METER_ALARM_STATISTIC(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    STATISTIC_ID       NUMBER(10, 0)    NOT NULL,
    METER_INPUT_ID     NUMBER(10, 0)    NOT NULL,
    AGGREGATOR         VARCHAR2(32)     NOT NULL,
    METER_BUCKET_ID    NUMBER(10, 0)    NOT NULL,
    NAME               VARCHAR2(256)    NOT NULL,
    IS_AVERAGE         NUMBER(1, 0)     NOT NULL,
    IS_SUM             NUMBER(1, 0)     NOT NULL,
    COMP_PROC          VARCHAR2(256),
    ALL_METERS         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    NOT_BEFORE_DTM     DATE,
    LOOKUP_KEY         VARCHAR2(256),
    CORE_WORKING_HOURS NUMBER(1)        DEFAULT 0 NOT NULL,
    POS                NUMBER(10)       DEFAULT 0 NOT NULL,
    CHECK (IS_AVERAGE IN(0,1)),
    CHECK (IS_SUM  IN(0,1)),
    CHECK (ALL_METERS IN(0,1)),
    CONSTRAINT CK_CORE_WORKING_HOURS_MAS CHECK (CORE_WORKING_HOURS IN (0,1)),
    CONSTRAINT PK963 PRIMARY KEY (APP_SID, STATISTIC_ID)
)
;

CREATE SEQUENCE CSR.METER_STATISTIC_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_LOOKUP_KEY ON CSR.METER_ALARM_STATISTIC(APP_SID, NVL(LOOKUP_KEY, STATISTIC_ID))
;

CREATE TABLE CSR.METER_ALARM_STATISTIC_JOB(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID         NUMBER(10, 0)    NOT NULL,
    STATISTIC_ID       NUMBER(10, 0)    NOT NULL,
    START_DTM          DATE             NOT NULL,
    END_DTM            DATE             NOT NULL,
    JOB_CREATED_DTM    DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK966 PRIMARY KEY (APP_SID, REGION_SID, STATISTIC_ID)
)
;

CREATE TABLE CSR.METER_ALARM_STATISTIC_PERIOD(
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID       NUMBER(10, 0)     NOT NULL,
    STATISTIC_ID     NUMBER(10, 0)     NOT NULL,
    STATISTIC_DTM    DATE              NOT NULL,
    VAL              NUMBER(24, 10),
    AVERAGE_COUNT    NUMBER(10, 0),
    CONSTRAINT PK978 PRIMARY KEY (APP_SID, REGION_SID, STATISTIC_ID, STATISTIC_DTM)
)
;

CREATE TABLE CSR.METER_ALARM_TEST_TIME(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEST_TIME_ID     NUMBER(10, 0)    NOT NULL,
    NAME             VARCHAR2(256)    NOT NULL,
    TEST_FUNCTION    VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK961 PRIMARY KEY (APP_SID, TEST_TIME_ID)
)
;

CREATE SEQUENCE CSR.CORE_WORKING_HOURS_ID_SEQ;

CREATE TABLE CSR.CORE_WORKING_HOURS (
	APP_SID						NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CORE_WORKING_HOURS_ID		NUMBER(10)		NOT NULL,
	START_TIME					VARCHAR2(16)	NOT NULL,
	END_TIME					VARCHAR2(16)	NOT NULL,
	CONSTRAINT PK_CORE_WORKING_HOURS PRIMARY KEY (APP_SID, CORE_WORKING_HOURS_ID)
);

CREATE TABLE CSR.CORE_WORKING_HOURS_DAY (
	APP_SID						NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CORE_WORKING_HOURS_ID		NUMBER(10)		NOT NULL,
	DAY							NUMBER(1)		NOT NULL,
	CONSTRAINT PK_CORE_WORKING_HOURS_DAY PRIMARY KEY (APP_SID, CORE_WORKING_HOURS_ID, DAY),
	CONSTRAINT CK_CORE_WORKING_HOURS_DAY CHECK (DAY IN (1,2,3,4,5,6,7))
);

CREATE TABLE CSR.CORE_WORKING_HOURS_REGION (
	APP_SID						NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	REGION_SID					NUMBER(10)		NOT NULL,
	CORE_WORKING_HOURS_ID		NUMBER(10)		NOT NULL,
	CONSTRAINT PK_CORE_WORKING_HOURS_REGION PRIMARY KEY (APP_SID, REGION_SID, CORE_WORKING_HOURS_ID)
);

CREATE SEQUENCE CSR.METER_TEST_TIME_ID_SEQ;

CREATE TABLE CSR.METER_BUCKET(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_BUCKET_ID         NUMBER(10, 0)    NOT NULL,
    DURATION                NUMBER(10, 0),
    DESCRIPTION             VARCHAR2(256)    NOT NULL,
    IS_HOURS                NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    IS_WEEKS                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_MINUTES              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_MONTHS               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    WEEK_START_DAY          NUMBER(10, 0),
    START_MONTH             NUMBER(10, 0),
    IS_EXPORT_PERIOD        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PERIOD_SET_ID           NUMBER(10, 0),
    PERIOD_INTERVAL_ID      NUMBER(10, 0),
    HIGH_RESOLUTION_ONLY    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CORE_WORKING_HOURS      NUMBER(1)        DEFAULT 0 NOT NULL,
    CHECK (IS_HOURS = 0 OR (IS_HOURS  = 1 AND IS_MINUTES = 0 AND IS_WEEKS = 0 AND IS_MONTHS = 0 AND PERIOD_SET_ID IS NULL AND PERIOD_INTERVAL_ID IS NULL)),
    CHECK (IS_WEEKS = 0 OR (IS_WEEKS = 1 AND IS_MINUTES = 0 AND IS_HOURS = 0 AND IS_MONTHS = 0 AND PERIOD_SET_ID IS NULL AND PERIOD_INTERVAL_ID IS NULL)),
    CHECK (IS_MINUTES = 0 OR (IS_MINUTES  = 1 AND IS_HOURS = 0 AND IS_WEEKS = 0 AND IS_MONTHS = 0 AND PERIOD_SET_ID IS NULL AND PERIOD_INTERVAL_ID IS NULL)),
    CHECK (IS_MONTHS = 0 OR (IS_MONTHS = 1 AND IS_MINUTES = 0 AND IS_HOURS = 0 AND IS_WEEKS = 0 AND (IS_EXPORT_PERIOD = 0 OR (PERIOD_SET_ID = 1 AND PERIOD_INTERVAL_ID = 1)))),
    CHECK (WEEK_START_DAY IS NULL OR IS_WEEKS = 1),
    CHECK (START_MONTH IS NULL OR IS_MONTHS = 1),
    CHECK (IS_EXPORT_PERIOD IN (0,1) AND (IS_EXPORT_PERIOD = 0 OR (PERIOD_SET_ID IS NOT NULL AND PERIOD_INTERVAL_ID IS NOT NULL))),
    CHECK ((PERIOD_SET_ID IS NULL AND PERIOD_INTERVAL_ID IS NULL) OR (PERIOD_SET_ID IS NOT NULL AND PERIOD_INTERVAL_ID IS NOT NULL AND IS_MONTHS = 0 AND IS_MINUTES = 0 AND IS_HOURS = 0 AND IS_WEEKS = 0)),
    CHECK (HIGH_RESOLUTION_ONLY IN(0,1)),
    CONSTRAINT CK_CORE_WORKING_HOURS CHECK (CORE_WORKING_HOURS IN (0,1)),
    CONSTRAINT PK_METER_BUCKET PRIMARY KEY (APP_SID, METER_BUCKET_ID)
)
;

CREATE SEQUENCE CSR.METER_BUCKET_ID_SEQ;

CREATE TABLE CSR.METER_DATA_COVERAGE_IND(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_INPUT_ID    NUMBER(10, 0)    NOT NULL,
    PRIORITY          NUMBER(10, 0)    NOT NULL,
    IND_SID           NUMBER(10, 0),
    CONSTRAINT PK_METER_DATA_COVERAGE_IND PRIMARY KEY (APP_SID, METER_INPUT_ID, PRIORITY)
)
;

CREATE SEQUENCE CSR.METER_DATA_ID_SEQ NOCACHE;


CREATE TABLE CSR.METER_DATA_PRIORITY(
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PRIORITY         NUMBER(10, 0)     NOT NULL,
    LABEL            VARCHAR2(1024)    NOT NULL,
    LOOKUP_KEY       VARCHAR2(256),
    IS_INPUT         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_OUTPUT        NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_PATCH         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_AUTO_PATCH    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (IS_PATCH IN(0,1)),
    CHECK (IS_INPUT IN(0,1)),
    CHECK (IS_OUTPUT IN(0,1)),
    CHECK (IS_AUTO_PATCH IN(0,1)),
    CONSTRAINT PK_METER_DATA_PRIORITY PRIMARY KEY (APP_SID, PRIORITY)
)
;

CREATE TABLE CSR.METER_DATA_SOURCE_HI_RES_INPUT (
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	RAW_DATA_SOURCE_ID			NUMBER(10) NOT NULL,
	METER_INPUT_ID				NUMBER(10) NOT NULL,
	CONSTRAINT PK_METER_DATA_SRC_HI_RES_INPUT PRIMARY KEY (APP_SID, RAW_DATA_SOURCE_ID, METER_INPUT_ID)
);

CREATE TABLE CSR.METER_DOCUMENT(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_DOCUMENT_ID    NUMBER(10, 0)     NOT NULL,
    MIME_TYPE            VARCHAR2(256)     NOT NULL,
    FILE_NAME            VARCHAR2(1024)    NOT NULL,
    DATA                 BLOB              NOT NULL,
    CONSTRAINT PK574 PRIMARY KEY (APP_SID, METER_DOCUMENT_ID)
)
;

CREATE SEQUENCE CSR.METER_DOCUMENT_ID_SEQ;

CREATE TABLE CSR.METER_ELEMENT_LAYOUT(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    METER_ELEMENT_LAYOUT_ID    NUMBER(10, 0)    NOT NULL,
    POS                        NUMBER(10, 0)    NOT NULL,
    IND_SID                    NUMBER(10, 0),
    TAG_GROUP_ID               NUMBER(10, 0),
    CONSTRAINT PK_METER_ELEMENT_LAYOUT PRIMARY KEY (APP_SID, METER_ELEMENT_LAYOUT_ID),
    CONSTRAINT CHK_METER_EL_LAYOUT_IND_TG_GRP
        CHECK ((IND_SID IS NOT NULL AND TAG_GROUP_ID IS NULL) OR (IND_SID IS NULL AND TAG_GROUP_ID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.METER_ELEMENT_LAYOUT_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_METER_EL_LAYOUT ON CSR.METER_ELEMENT_LAYOUT(APP_SID, IND_SID, TAG_GROUP_ID)
;

CREATE TABLE CSR.METER_EXCEL_MAPPING(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RAW_DATA_SOURCE_ID          NUMBER(10, 0)    NOT NULL,
    FIELD_NAME                  VARCHAR2(256)    NOT NULL,
    COLUMN_NAME                 VARCHAR2(256)    NOT NULL,
    COLUMN_INDEX                NUMBER(10, 0)    NOT NULL,
    CREATE_METERS_MAP_COLUMN    VARCHAR2(255),
    CONSTRAINT PK1203 PRIMARY KEY (APP_SID, RAW_DATA_SOURCE_ID, FIELD_NAME)
)
;

CREATE TABLE CSR.METER_EXCEL_OPTION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RAW_DATA_SOURCE_ID    NUMBER(10, 0)    NOT NULL,
    WORKSHEET_INDEX       NUMBER(10, 0)    NOT NULL,
    ROW_INDEX             NUMBER(10, 0)    NOT NULL,
    CSV_DELIMITER         VARCHAR2(1),
    METER_DATE_FORMAT     VARCHAR2(255),
    CONSTRAINT PK1202 PRIMARY KEY (APP_SID, RAW_DATA_SOURCE_ID)
)
;

CREATE TABLE CSR.METER_HEADER_ELEMENT(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    METER_HEADER_ELEMENT_ID         NUMBER(10, 0)    NOT NULL,
    POS                             NUMBER(10, 0)    NOT NULL,
    COL                             NUMBER(10, 0)    NOT NULL,
    IND_SID                         NUMBER(10, 0),
    TAG_GROUP_ID                    NUMBER(10, 0),
    METER_HEADER_CORE_ELEMENT_ID    NUMBER(10, 0),
    CONSTRAINT PK_METER_HEADER_ELEMENT PRIMARY KEY (APP_SID, METER_HEADER_ELEMENT_ID),
    CONSTRAINT CHK_METER_HEADER_ELEMENT
        CHECK ((IND_SID IS NOT NULL AND TAG_GROUP_ID IS NULL AND METER_HEADER_CORE_ELEMENT_ID IS NULL) OR
                (IND_SID IS NULL AND TAG_GROUP_ID IS NOT NULL AND METER_HEADER_CORE_ELEMENT_ID IS NULL) OR
                (IND_SID IS NULL AND TAG_GROUP_ID IS NULL AND METER_HEADER_CORE_ELEMENT_ID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.METER_HEADER_ELEMENT_ID_SEQ NOCACHE;

CREATE UNIQUE INDEX CSR.UK_METER_HEADER_ELEMENT ON CSR.METER_HEADER_ELEMENT(APP_SID, IND_SID, TAG_GROUP_ID, METER_HEADER_CORE_ELEMENT_ID)
;

CREATE TABLE CSR.METER_INPUT(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_INPUT_ID          NUMBER(10, 0)     NOT NULL,
    LOOKUP_KEY              VARCHAR2(256)     NOT NULL,
    LABEL                   VARCHAR2(1024)    NOT NULL,
    IS_CONSUMPTION_BASED    NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    PATCH_HELPER            VARCHAR2(256),
    GAP_FINDER              VARCHAR2(256),
    IS_VIRTUAL              NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    VALUE_HELPER            VARCHAR2(256),
    CONSTRAINT CHK_METER_INPUT_IS_VIRTUAL_1_0 CHECK (IS_VIRTUAL IN(0,1)),
    CHECK (IS_CONSUMPTION_BASED IN(0,1)),
    CONSTRAINT PK_METER_INPUT PRIMARY KEY (APP_SID, METER_INPUT_ID)
)
;

CREATE SEQUENCE CSR.METER_INPUT_ID_SEQ START WITH 100;

CREATE UNIQUE INDEX CSR.UK_INPUT_LOOKUP_KEY ON CSR.METER_INPUT(APP_SID, LOOKUP_KEY)
;

CREATE TABLE CSR.METER_INPUT_AGGR_IND(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID               NUMBER(10, 0)    NOT NULL,
    METER_INPUT_ID           NUMBER(10, 0)    NOT NULL,
    AGGREGATOR               VARCHAR2(32)     NOT NULL,
    METER_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    MEASURE_SID              NUMBER(10, 0),
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    CONSTRAINT PK_METER_INPUT_AGGR_IND PRIMARY KEY (APP_SID, REGION_SID, METER_INPUT_ID, AGGREGATOR)
)
;

CREATE TABLE CSR.METER_INPUT_AGGREGATOR(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_INPUT_ID    NUMBER(10, 0)    NOT NULL,
    AGGREGATOR        VARCHAR2(32)     NOT NULL,
    AGGR_PROC         VARCHAR2(256),
    IS_MANDATORY      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_METER_INPUT_AGG_MAND_1_0 CHECK (IS_MANDATORY IN(0,1)),
    CONSTRAINT PK_METER_INPUT_AGGREGATOR PRIMARY KEY (APP_SID, METER_INPUT_ID, AGGREGATOR)
)
;

CREATE TABLE CSR.METER_LIST_CACHE(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID              NUMBER(10, 0)     NOT NULL,
    LAST_READING_DTM        DATE,
    ENTERED_DTM             DATE,
    VAL_NUMBER              NUMBER(24, 10),
    AVG_CONSUMPTION         NUMBER(24, 10),
    COST_NUMBER             NUMBER(24, 10),
    DEMAND_NUMBER           NUMBER(24, 10),
    READ_BY_SID             NUMBER(10, 0),
    REALTIME_LAST_PERIOD    DATE,
    REALTIME_CONSUMPTION    NUMBER(24, 10),
    FIRST_READING_DTM       DATE,
    READING_COUNT           NUMBER(24, 10),
    CONSTRAINT PK1319 PRIMARY KEY (APP_SID, REGION_SID)
)
;

CREATE TABLE CSR.METER_LIVE_DATA(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID           NUMBER(10, 0)     NOT NULL,
    METER_BUCKET_ID      NUMBER(10, 0)     NOT NULL,
    METER_INPUT_ID       NUMBER(10, 0)     NOT NULL,
    AGGREGATOR           VARCHAR2(32)      NOT NULL,
    PRIORITY             NUMBER(10, 0)     NOT NULL,
    START_DTM            DATE              NOT NULL,
    METER_RAW_DATA_ID    NUMBER(10, 0),
    END_DTM              DATE              NOT NULL,
    MODIFIED_DTM         DATE              DEFAULT SYSDATE NOT NULL,
    CONSUMPTION          NUMBER(24, 10),
    METER_DATA_ID        NUMBER(10)        NOT NULL,
    CONSTRAINT PK_METER_LIVE_DATA PRIMARY KEY (APP_SID, REGION_SID, METER_BUCKET_ID, METER_INPUT_ID, AGGREGATOR, PRIORITY, START_DTM),
    CONSTRAINT UK_METER_DATA_ID UNIQUE (APP_SID, METER_DATA_ID)
)
;

CREATE INDEX CSR.IDX_METER_LIVE_DURATION ON CSR.METER_LIVE_DATA(APP_SID, REGION_SID, METER_BUCKET_ID)
;

CREATE INDEX CSR.IDX_METER_LIVE_PERIOD ON CSR.METER_LIVE_DATA(APP_SID, REGION_SID, METER_BUCKET_ID, START_DTM, END_DTM)
;

CREATE INDEX CSR.IDX_METER_LIVE_REGION ON CSR.METER_LIVE_DATA(APP_SID, REGION_SID)
;

CREATE INDEX CSR.IX_METER_LIVE_DATA_APP ON CSR.METER_LIVE_DATA(APP_SID)
;

CREATE INDEX CSR.IX_METLD_BUINPR ON CSR.METER_LIVE_DATA(APP_SID, METER_BUCKET_ID, METER_INPUT_ID, PRIORITY)
;

CREATE INDEX CSR.IX_METLD_BUINPRAG ON CSR.METER_LIVE_DATA(APP_SID, METER_BUCKET_ID, METER_INPUT_ID, PRIORITY, AGGREGATOR)
;

CREATE INDEX CSR.IX_METLD_RGBUINAGPR ON CSR.METER_LIVE_DATA(APP_SID, REGION_SID, METER_BUCKET_ID, METER_INPUT_ID, AGGREGATOR, PRIORITY)
;

CREATE INDEX CSR.IX_METLD_RGBUINPR ON CSR.METER_LIVE_DATA(APP_SID, REGION_SID, METER_BUCKET_ID, METER_INPUT_ID, PRIORITY)
;

CREATE INDEX CSR.IX_METLD_RGINAGPR ON CSR.METER_LIVE_DATA(APP_SID, REGION_SID, METER_INPUT_ID, AGGREGATOR, PRIORITY)
;


CREATE TABLE CSR.METER_MATCH_BATCH_JOB (
	APP_SID					NUMBER(10)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BATCH_JOB_ID			NUMBER(10)	NOT NULL,
	METER_RAW_DATA_ID		NUMBER(10),
	CONSTRAINT PK_METER_MATCH_BATCH_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
);

CREATE TABLE CSR.METER_RAW_DATA_IMPORT_JOB (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BATCH_JOB_ID					NUMBER(10)		NOT NULL,
	METER_RAW_DATA_ID				NUMBER(10),
	RAW_DATA_SOURCE_ID				NUMBER(10),
	CONSTRAINT PK_METER_RAW_DATA_IMPORT_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
);

CREATE TABLE CSR.METER_METER_ALARM_STATISTIC(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    STATISTIC_ID      NUMBER(10, 0)    NOT NULL,
    NOT_BEFORE_DTM    DATE,
    LAST_COMP_DTM     DATE,
    CONSTRAINT PK965 PRIMARY KEY (APP_SID, REGION_SID, STATISTIC_ID)
)
;

CREATE TABLE CSR.METER_ORPHAN_DATA(
    APP_SID               NUMBER(10, 0)               DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SERIAL_ID             VARCHAR2(256)               NOT NULL,
    METER_INPUT_ID        NUMBER(10, 0)               NOT NULL,
    PRIORITY              NUMBER(10, 0)               NOT NULL,
    START_DTM             TIMESTAMP WITH TIME ZONE    NOT NULL,
    END_DTM               TIMESTAMP WITH TIME ZONE,
    METER_RAW_DATA_ID     NUMBER(10, 0)               NOT NULL,
    CONSUMPTION           NUMBER(24, 10)              NOT NULL,
    UOM                   VARCHAR2(256),
    NOTE                  VARCHAR2(4000),
    RELATED_LOCATION_1    VARCHAR2(256),
    RELATED_LOCATION_2    VARCHAR2(256),
    REGION_SID            NUMBER(10, 0),
    HAS_OVERLAP           NUMBER(1)                   DEFAULT 0 NOT NULL,
    ERROR_TYPE_ID         NUMBER(10)                  NOT NULL,
    STATEMENT_ID          VARCHAR2(256),
    CHECK (HAS_OVERLAP IN (0,1))
)
;

CREATE INDEX CSR.IDX_ORPHAN_DATE_RANGE ON CSR.METER_ORPHAN_DATA(APP_SID, START_DTM, END_DTM)
;

CREATE INDEX CSR.IDX_ORPHAN_RAW_DATA_ID ON CSR.METER_ORPHAN_DATA(APP_SID, METER_RAW_DATA_ID)
;

CREATE INDEX CSR.IDX_ORPHAN_SERIAL ON CSR.METER_ORPHAN_DATA(APP_SID, SERIAL_ID)
;

CREATE INDEX CSR.IDX_ORPHAN_SOURCE_DATE_RANGE ON CSR.METER_ORPHAN_DATA(APP_SID, METER_RAW_DATA_ID, START_DTM, END_DTM)
;

CREATE UNIQUE INDEX CSR.UK_METER_ORPHAN_DATA ON CSR.METER_ORPHAN_DATA(
	DECODE(STATEMENT_ID, NULL, APP_SID, NULL),
	DECODE(STATEMENT_ID, NULL, SERIAL_ID, NULL),
	DECODE(STATEMENT_ID, NULL, METER_INPUT_ID, NULL),
	DECODE(STATEMENT_ID, NULL, PRIORITY, NULL),
	DECODE(STATEMENT_ID, NULL, UOM, NULL),
	DECODE(STATEMENT_ID, NULL, START_DTM, NULL),
	DECODE(STATEMENT_ID, NULL, END_DTM, NULL)
);

CREATE TABLE CSR.METER_PATCH_BATCH_DATA(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID      NUMBER(10, 0)     NOT NULL,
    METER_INPUT_ID    NUMBER(10, 0)     NOT NULL,
    PRIORITY          NUMBER(10, 0)     NOT NULL,
    START_DTM         DATE              NOT NULL,
    END_DTM           DATE              NOT NULL,
    PERIOD_TYPE       VARCHAR2(32),
    CONSUMPTION       NUMBER(24, 10),
    CONSTRAINT PK_METER_PATCH_BATCH_DATA PRIMARY KEY (APP_SID, BATCH_JOB_ID, METER_INPUT_ID, PRIORITY, START_DTM)
)
;

CREATE TABLE CSR.METER_PATCH_BATCH_JOB(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID      NUMBER(10, 0)    NOT NULL,
    IS_REMOVE       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CREATED_DTM     DATE             DEFAULT SYSDATE NOT NULL,
    CHECK (IS_REMOVE IN(0,1)),
    CONSTRAINT PK_METER_PATCH_BATCH_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.METER_PATCH_DATA(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID        NUMBER(10, 0)     NOT NULL,
    METER_INPUT_ID    NUMBER(10, 0)     NOT NULL,
    PRIORITY          NUMBER(10, 0)     NOT NULL,
    START_DTM         DATE              NOT NULL,
    END_DTM           DATE              NOT NULL,
    CONSUMPTION       NUMBER(24, 10),
    UPDATED_DTM       DATE              DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_METER_PATCH_DATA PRIMARY KEY (APP_SID, REGION_SID, METER_INPUT_ID, PRIORITY, START_DTM)
)
;

CREATE TABLE CSR.METER_PATCH_JOB(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    METER_INPUT_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM         DATE             NOT NULL,
    END_DTM           DATE             NOT NULL,
    CREATED_DTM       DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_METER_PATCH_JOB PRIMARY KEY (APP_SID, REGION_SID, METER_INPUT_ID)
)
;

CREATE TABLE CSR.METER_PHOTO(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_PHOTO_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    FILENAME          VARCHAR2(256)    NOT NULL,
    MIME_TYPE         VARCHAR2(255)    NOT NULL,
    DATA              BLOB             NOT NULL,
    CONSTRAINT PK_METER_PHOTO PRIMARY KEY (APP_SID, METER_PHOTO_ID)
)
;

CREATE SEQUENCE CSR.METER_PHOTO_ID_SEQ NOCACHE;

CREATE TABLE CSR.METER_PROCESSING_JOB (
	APP_SID				NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CONTAINER_ID		VARCHAR2(256)	NOT NULL,
	JOB_ID				VARCHAR2(256)	NOT NULL,
	JOB_DTM				DATE			DEFAULT SYSDATE NOT NULL,
	FETCH_COUNT			NUMBER(10)		DEFAULT 0 NOT NULL,
	EXPIRED_COUNT		NUMBER(10)		DEFAULT 0 NOT NULL,
	LAST_FETCH_DTM		DATE			NULL,
	HIDE_UNTIL			DATE			NULL,
	METER_RAW_DATA_ID	NUMBER(10)		NULL,
	LOCAL_STATUS		VARCHAR2(256)	NOT NULL,
	LOCAL_RESULT_PATH	VARCHAR2(2048)	NULL,
	REMOTE_STATUS		VARCHAR2(256)	NULL,
	UPLOAD_URI			VARCHAR2(2048)	NULL,
	RESULT_URI			VARCHAR2(2048)	NULL,
	REMOTE_RESULT_PATH	VARCHAR2(2048)	NULL,
	CONSTRAINT PK_METER_PROCESSING_JOB PRIMARY KEY (APP_SID, CONTAINER_ID, JOB_ID)
);

CREATE TABLE CSR.METER_PROCESSING_PIPELINE_INFO (
	APP_SID						NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CONTAINER_ID				VARCHAR2(256)	NOT NULL,
	JOB_ID						VARCHAR2(256)	NOT NULL,
	PIPELINE_ID					VARCHAR2(256)	NULL,
	PIPELINE_STATUS				VARCHAR2(256)	NULL,
	PIPELINE_MESSAGE			VARCHAR2(2048)	NULL,		
	PIPELINE_RUN_START			DATE			NULL,	
	PIPELINE_RUN_END			DATE			NULL,		
	PIPELINE_LAST_UPDATED		DATE			NULL,
	PIPELINE_LA_RUN_ID			VARCHAR2(2048)	NULL,
	PIPELINE_LA_NAME			VARCHAR2(2048)	NULL,	
	PIPELINE_LA_STATUS			VARCHAR2(2048)	NULL,
	PIPELINE_LA_ERRORCODE		VARCHAR2(2048)	NULL,
	PIPELINE_LA_ERRORMESSAGE	VARCHAR2(2048)	NULL,
	PIPELINE_LA_ERRORLOG		CLOB			NULL,	
	CONSTRAINT PK_METER_PROC_PIPELINE_INFO PRIMARY KEY (APP_SID, CONTAINER_ID, JOB_ID)
);

CREATE TABLE CSR.METER_RAW_DATA(
    APP_SID                         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_RAW_DATA_ID               NUMBER(10, 0)     NOT NULL,
    RAW_DATA_SOURCE_ID              NUMBER(10, 0)     NOT NULL,
    RECEIVED_DTM                    DATE              NOT NULL,
    START_DTM                       DATE,
    END_DTM                         DATE,
    MIME_TYPE                       VARCHAR2(256)     NOT NULL,
    ENCODING_NAME                   VARCHAR2(256)     NOT NULL,
    MESSAGE_UID                     NUMBER(10, 0),
    FILE_NAME                       VARCHAR2(1024),
    DATA                            BLOB              NOT NULL,
    ORIGINAL_MIME_TYPE              VARCHAR2(256),
    ORIGINAL_FILE_NAME              VARCHAR2(1024),
    ORIGINAL_DATA                   BLOB,
    STATUS_ID                       NUMBER(10, 0)     NOT NULL,
    ORPHAN_COUNT                    NUMBER(10, 0),
    MATCHED_COUNT                   NUMBER(10, 0),
    AUTOMATED_IMPORT_INSTANCE_ID    NUMBER(10, 0),
    CONSTRAINT PK913 PRIMARY KEY (APP_SID, METER_RAW_DATA_ID)
)
;

CREATE SEQUENCE CSR.METER_RAW_DATA_ID_SEQ;

CREATE INDEX CSR.IDX_RAW_DATA_SOURCE_ID ON CSR.METER_RAW_DATA(APP_SID, RAW_DATA_SOURCE_ID)
;

CREATE INDEX CSR.IDX_RAW_DATA_SOURCE_STATUS_ID ON CSR.METER_RAW_DATA(APP_SID, RAW_DATA_SOURCE_ID, STATUS_ID)
;

CREATE INDEX CSR.IDX_RAW_DATA_STATUS_ID ON CSR.METER_RAW_DATA(APP_SID, STATUS_ID)
;

CREATE TABLE CSR.METER_RAW_DATA_ERROR(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_RAW_DATA_ID    NUMBER(10, 0)     NOT NULL,
    ERROR_ID             NUMBER(10, 0)     NOT NULL,
    MESSAGE              VARCHAR2(4000)    NOT NULL,
    RAISED_DTM           DATE              DEFAULT SYSDATE NOT NULL,
    DATA_DTM             DATE,
    CONSTRAINT PK931 PRIMARY KEY (APP_SID, METER_RAW_DATA_ID, ERROR_ID)
)
;

CREATE SEQUENCE CSR.METER_RAW_DATA_ERROR_ID_SEQ;

CREATE INDEX CSR.IDX_RAW_DATA_ERROR_ID ON CSR.METER_RAW_DATA_ERROR(APP_SID, ERROR_ID)
;

CREATE INDEX CSR.IDX_RAW_DATA_ERROR_SOURCE_ID ON CSR.METER_RAW_DATA_ERROR(APP_SID, METER_RAW_DATA_ID)
;

CREATE TABLE CSR.METER_RAW_DATA_LOG(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_RAW_DATA_ID    NUMBER(10, 0)     NOT NULL,
    LOG_ID               NUMBER(10, 0)     NOT NULL,
    USER_SID             NUMBER(10, 0),
    LOG_TEXT             VARCHAR2(4000)    NOT NULL,
    LOG_DTM              DATE              DEFAULT SYSDATE NOT NULL,
    MIME_TYPE            VARCHAR2(256),
    FILE_NAME            VARCHAR2(1024),
    DATA                 BLOB,
    CONSTRAINT PK_METER_RAW_DATA_LOG PRIMARY KEY (APP_SID, METER_RAW_DATA_ID, LOG_ID)
)
;

CREATE SEQUENCE CSR.METER_RAW_DATA_LOG_ID_SEQ;

CREATE TABLE CSR.METER_RAW_DATA_SOURCE(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RAW_DATA_SOURCE_ID            NUMBER(10, 0)     NOT NULL,
    LABEL                         VARCHAR2(1024)    NOT NULL,
    PARSER_TYPE                   VARCHAR2(256)     NOT NULL,
    HELPER_PKG                    VARCHAR2(256)     DEFAULT 'meter_monitor_pkg' NOT NULL,
    EXPORT_SYSTEM_VALUES          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    EXPORT_AFTER_DTM              DATE,
    DEFAULT_ISSUE_USER_SID        NUMBER(10, 0),
    ORPHAN_COUNT                  NUMBER(10, 0),
    MATCHED_COUNT                 NUMBER(10, 0),
    CREATE_METERS                 NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    AUTOMATED_IMPORT_CLASS_SID    NUMBER(10, 0),
    HOLDING_REGION_SID            NUMBER(10, 0),
    METER_DATE_FORMAT             VARCHAR2(255),
    PROCESS_BODY                  NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    PROC_USE_REMOTE_SERVICE       NUMBER(1)         DEFAULT 0 NOT NULL,
    CHECK (EXPORT_SYSTEM_VALUES IN(0,1)),
    CONSTRAINT CK_PROC_USE_REMOTE_SERVICE CHECK (PROC_USE_REMOTE_SERVICE IN (0,1)),
    CONSTRAINT PK919 PRIMARY KEY (APP_SID, RAW_DATA_SOURCE_ID)
)
;

CREATE SEQUENCE CSR.RAW_DATA_SOURCE_ID_SEQ;

CREATE TABLE CSR.METER_RAW_DATA_STATUS(
    STATUS_ID           NUMBER(10, 0)    NOT NULL,
    DESCRIPTION         VARCHAR2(256)    NOT NULL,
    NEEDS_PROCESSING    NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CHECK (NEEDS_PROCESSING IN(0,1)),
    CONSTRAINT PK932 PRIMARY KEY (STATUS_ID)
)
;

CREATE TABLE CSR.METER_READING(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID              NUMBER(10, 0)     NOT NULL,
    METER_READING_ID        NUMBER(10, 0)     NOT NULL,
    START_DTM               DATE              NOT NULL,
    END_DTM                 DATE,
    VAL_NUMBER              NUMBER(24, 10),
    BASELINE_VAL            NUMBER(24, 10),
    ENTERED_BY_USER_SID     NUMBER(10, 0)     NOT NULL,
    ENTERED_DTM             DATE              DEFAULT SYSDATE NOT NULL,
    NOTE                    VARCHAR2(4000),
    REFERENCE               VARCHAR2(1024),
    COST                    NUMBER(24, 10),
    DEMAND                  NUMBER(24, 10),
    METER_DOCUMENT_ID       NUMBER(10, 0),
    CREATED_INVOICE_ID      NUMBER(10, 0),
    METER_SOURCE_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    REQ_APPROVAL            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ACTIVE                  NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    IS_DELETE               NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    REPLACES_READING_ID     NUMBER(10, 0),
    APPROVED_DTM            DATE,
    APPROVED_BY_SID         NUMBER(10, 0),
    FLOW_ITEM_ID            NUMBER(10, 0),
    PM_READING_ID           NUMBER(10, 0),
    IS_ESTIMATE             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (REQ_APPROVAL IN(0,1)),
    CHECK (ACTIVE IN(0,1)),
    CHECK (IS_DELETE IN(0,1)),
    CONSTRAINT PK_METER_READING PRIMARY KEY (APP_SID, METER_READING_ID),
    CONSTRAINT UC_METER_READING_FLOW_ITEM UNIQUE (FLOW_ITEM_ID)
)
;

CREATE SEQUENCE CSR.METER_READING_ID_SEQ;

CREATE TABLE CSR.METER_READING_DATA(
    APP_SID              NUMBER(10, 0)               DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID           NUMBER(10, 0)               NOT NULL,
    METER_INPUT_ID       NUMBER(10, 0)               NOT NULL,
    PRIORITY             NUMBER(10, 0)               NOT NULL,
    READING_DTM          TIMESTAMP WITH TIME ZONE    NOT NULL,
    METER_RAW_DATA_ID    NUMBER(10, 0),
    RAW_UOM              VARCHAR2(256),
    RAW_VAL              NUMBER(24, 10),
    VAL                  NUMBER(24, 10),
    NOTE                 VARCHAR2(4000)
)
;

CREATE INDEX CSR.IDX_METER_READING_DATA_REGION ON CSR.METER_READING_DATA(APP_SID, REGION_SID)
;

CREATE INDEX CSR.IX_METRDNG_RGIN ON CSR.METER_READING_DATA(APP_SID, REGION_SID, METER_INPUT_ID)
;

CREATE UNIQUE INDEX CSR.UK_METER_READING_DATA ON CSR.METER_READING_DATA(APP_SID, REGION_SID, METER_INPUT_ID, PRIORITY, READING_DTM)
;

CREATE INDEX CSR.IX_METRDNG_RGNDTM ON CSR.METER_READING_DATA(APP_SID, REGION_SID, READING_DTM)
;

CREATE TABLE CSR.METER_RECOMPUTE_BATCH_JOB(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID      NUMBER(10, 0)    NOT NULL,
    BATCH_JOB_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_METER_RECOMPUTE_BATCH_JOB PRIMARY KEY (APP_SID, REGION_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.METER_SOURCE_DATA(
    APP_SID              NUMBER(10, 0)               DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID           NUMBER(10, 0)               NOT NULL,
    METER_INPUT_ID       NUMBER(10, 0)               NOT NULL,
    PRIORITY             NUMBER(10, 0)               NOT NULL,
    START_DTM            TIMESTAMP WITH TIME ZONE    NOT NULL,
    METER_RAW_DATA_ID    NUMBER(10, 0),
    END_DTM              TIMESTAMP WITH TIME ZONE    NOT NULL,
    RAW_UOM              VARCHAR2(256),
    RAW_CONSUMPTION      NUMBER(24, 10)              NOT NULL,
    CONSUMPTION          NUMBER(24, 10)              NOT NULL,
    NOTE                 VARCHAR2(4000),
    STATEMENT_ID         VARCHAR2(256)
)
;

CREATE INDEX CSR.IDX_METER_SOURCE_DATA_REGION ON CSR.METER_SOURCE_DATA(APP_SID, REGION_SID, PRIORITY)
;

CREATE INDEX CSR.IX_METSRC_RGIN ON CSR.METER_SOURCE_DATA(APP_SID, REGION_SID, METER_INPUT_ID)
;

CREATE UNIQUE INDEX CSR.UK_METER_SOURCE_DATA ON CSR.METER_SOURCE_DATA(
	DECODE(STATEMENT_ID, NULL, APP_SID, NULL),
	DECODE(STATEMENT_ID, NULL, REGION_SID, NULL),
	DECODE(STATEMENT_ID, NULL, METER_INPUT_ID, NULL),
	DECODE(STATEMENT_ID, NULL, PRIORITY, NULL),
	DECODE(STATEMENT_ID, NULL, START_DTM, NULL),
	DECODE(STATEMENT_ID, NULL, END_DTM, NULL)
);

CREATE TABLE CSR.METER_SOURCE_TYPE(
    APP_SID                    NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_SOURCE_TYPE_ID       NUMBER(10, 0)     NOT NULL,
    NAME                       VARCHAR2(256)     NOT NULL,
    DESCRIPTION                VARCHAR2(512)     NOT NULL,
    ARBITRARY_PERIOD           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ADD_INVOICE_DATA           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SHOW_IN_METER_LIST         NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    DESCENDING                 NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ALLOW_RESET                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_CALCULATED_SUB_METER    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ALLOW_NULL_START_DTM       NUMBER(1)         DEFAULT 0 NOT NULL,
    CHECK (ARBITRARY_PERIOD IN (0,1)),
    CHECK (ADD_INVOICE_DATA IN (0,1)),
    CHECK (SHOW_IN_METER_LIST IN(0,1)),
    CHECK (DESCENDING IN (0,1)),
    CHECK (ALLOW_RESET IN(0,1)),
    CONSTRAINT PK570 PRIMARY KEY (APP_SID, METER_SOURCE_TYPE_ID)
)
;

CREATE TABLE CSR.METER_TAB(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PLUGIN_ID         NUMBER(10, 0)    NOT NULL,
    PLUGIN_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    POS               NUMBER(10, 0)    NOT NULL,
    TAB_LABEL         VARCHAR2(50),
    CONSTRAINT PK_METER_TAB PRIMARY KEY (APP_SID, PLUGIN_ID),
    CONSTRAINT CHK_METER_TAB_PLUGIN_TYPE CHECK (PLUGIN_TYPE_ID = 16)
)
;

CREATE TABLE CSR.METER_TAB_GROUP(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PLUGIN_ID    NUMBER(10, 0)    NOT NULL,
    GROUP_SID    NUMBER(10, 0),
    ROLE_SID     NUMBER(10, 0),
    CONSTRAINT PK_METER_TAB_GROUP PRIMARY KEY (APP_SID, PLUGIN_ID, GROUP_SID),
    CONSTRAINT CHK_METER_TAB_GROUP_GRP_ROLE CHECK ((GROUP_SID IS NULL AND ROLE_SID IS NOT NULL) OR (GROUP_SID IS NOT NULL AND ROLE_SID IS NULL))
)
;

CREATE TABLE CSR.METER_TYPE(
	APP_SID		 				NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	METER_TYPE_ID				NUMBER(10, 0)    NOT NULL,
	LABEL		 				VARCHAR2(255)    NOT NULL,
	GROUP_KEY					VARCHAR2(255),
	DAYS_IND_SID				NUMBER(10, 0),
	COSTDAYS_IND_SID			NUMBER(10, 0),
	REQ_APPROVAL				NUMBER(1) DEFAULT 0 NOT NULL,
	FLOW_SID					NUMBER(10),
	CONSTRAINT CHK_REQ_APPROVAL_1_0 CHECK (REQ_APPROVAL IN (1,0)),
	CONSTRAINT PK_METER_TYPE PRIMARY KEY (APP_SID, METER_TYPE_ID)
)
;

CREATE SEQUENCE CSR.METER_TYPE_ID_SEQ;

CREATE TABLE CSR.METER_TYPE_CHANGE_BATCH_JOB(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    METER_INPUT_ID    NUMBER(10, 0)    NOT NULL,
    AGGREGATOR        VARCHAR2(32)     NOT NULL,
    BATCH_JOB_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_METER_TYPE_CHNG_BATCH_JOB PRIMARY KEY (APP_SID, METER_TYPE_ID, METER_INPUT_ID, AGGREGATOR, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.METER_TYPE_INPUT(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    METER_INPUT_ID    NUMBER(10, 0)    NOT NULL,
    AGGREGATOR        VARCHAR2(32)     NOT NULL,
    IND_SID           NUMBER(10, 0),
    MEASURE_SID       NUMBER(10, 0),
    CONSTRAINT PK_METER_TYPE_INPUT PRIMARY KEY (APP_SID, METER_TYPE_ID, METER_INPUT_ID, AGGREGATOR),
    CONSTRAINT CONS_METER_TYPE_INPUT_MEASURE UNIQUE (APP_SID, METER_TYPE_ID, METER_INPUT_ID, AGGREGATOR, MEASURE_SID)
)
;

CREATE TABLE CSR.METER_UTILITY_CONTRACT(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID             NUMBER(10, 0)    NOT NULL,
    UTILITY_CONTRACT_ID    NUMBER(10, 0)    NOT NULL,
    ACTIVE                 NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CHECK (ACTIVE IN (0,1)),
    CONSTRAINT PK908 PRIMARY KEY (APP_SID, REGION_SID, UTILITY_CONTRACT_ID)
)
;

COMMENT ON COLUMN CSR.METER_UTILITY_CONTRACT.APP_SID IS 'desc="App SID",app'
;
COMMENT ON COLUMN CSR.METER_UTILITY_CONTRACT.UTILITY_CONTRACT_ID IS 'desc="Contract ID",auto'
;

CREATE TABLE CSR.METER_XML_OPTION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RAW_DATA_SOURCE_ID    NUMBER(10, 0)    NOT NULL,
    DATA_TYPE             VARCHAR2(256)    NOT NULL,
    XSLT                  SYS.XMLType      NOT NULL,
    CONSTRAINT PK1269 PRIMARY KEY (APP_SID, RAW_DATA_SOURCE_ID)
)
;

CREATE TABLE CSR.METER_IMPORT_REVERT_BATCH_JOB(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID        NUMBER(10, 0)    NOT NULL,
    METER_RAW_DATA_ID   NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_IMPORT_REVERT_BATCH_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID, METER_RAW_DATA_ID)
);


CREATE TABLE CSR.USER_ANONYMISATION_BATCH_JOB(
	APP_SID			NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	USER_SID		NUMBER(10, 0)    NOT NULL,
	BATCH_JOB_ID	NUMBER(10, 0)    NOT NULL,
	CONSTRAINT PK_USER_ANONYMISATION_BATCH_JOB PRIMARY KEY (APP_SID, USER_SID, BATCH_JOB_ID)
);

CREATE INDEX CSR.IX_USER_ANONBATJOB ON CSR.USER_ANONYMISATION_BATCH_JOB (APP_SID, USER_SID);

CREATE TABLE CSR.METERING_OPTIONS(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ANALYTICS_MONTHS			NUMBER(10, 0),
	ANALYTICS_CURRENT_MONTH		NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	METER_PAGE_URL				VARCHAR2(255)	DEFAULT '/csr/site/meter/meter.acds' NOT NULL,
	METERING_HELPER_PKG			VARCHAR2(255),
	SHOW_INHERITED_ROLES		NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	PERIOD_SET_ID				NUMBER(10)		NOT NULL,
	PERIOD_INTERVAL_ID			NUMBER(10)		NOT NULL,
	SHOW_INVOICE_REMINDER		NUMBER(1)		DEFAULT 0 NOT NULL,
	INVOICE_REMINDER			VARCHAR2(1024),
	SUPPLIER_DATA_MANDATORY		NUMBER(1)		DEFAULT 0 NOT NULL,
	REGION_DATE_CLIPPING		NUMBER(1)		DEFAULT 0 NOT NULL,
	FWD_ESTIMATE_METERS			NUMBER(1)		DEFAULT 0 NOT NULL,
	REFERENCE_MANDATORY			NUMBER(1)		DEFAULT 0 NOT NULL,
	REALTIME_METERING_ENABLED	NUMBER(1)		DEFAULT 0 NOT NULL,
	PREVENT_MANUAL_FUTURE_READINGS	NUMBER(1)	DEFAULT 0 NOT NULL,
	PROC_USE_SERVICE			NUMBER(1)		DEFAULT 0 NOT NULL,
	PROC_API_BASE_URI			VARCHAR2(1024),
	PROC_LOCAL_PATH				VARCHAR2(1024),
	PROC_KICK_TIMEOUT			NUMBER(10),
	PROC_API_KEY				VARCHAR2(256),
	RAW_FEED_DATA_JOBS_ENABLED	NUMBER(1)		DEFAULT 1 NOT NULL,
	CONSTRAINT CHK_SHOW_INVOICE_REMINDER_1_0 CHECK (SHOW_INVOICE_REMINDER IN (1,0)),
	CONSTRAINT CHK_SUPPLIER_DATA_MAND_1_0 CHECK (SUPPLIER_DATA_MANDATORY IN (1,0)),
	CONSTRAINT CHK_REGION_DATE_CLIPPING_1_0 CHECK (REGION_DATE_CLIPPING IN (1,0)),
	CONSTRAINT CHK_FWD_ESTIMATE_METERS_1_0 CHECK (FWD_ESTIMATE_METERS IN (1,0)),
	CONSTRAINT CHK_REFERENCE_MANDATORY_1_0 CHECK (REFERENCE_MANDATORY IN (1,0)),
	CONSTRAINT CHK_REALTIME_METER_ENBLD_1_0 CHECK (REALTIME_METERING_ENABLED IN (1,0)),
	CONSTRAINT CK_MET_OPT_CURR_MON_0_1 CHECK (ANALYTICS_CURRENT_MONTH IN(0,1)),
	CONSTRAINT CK_MET_OPT_PMFR_0_1 CHECK (PREVENT_MANUAL_FUTURE_READINGS IN(0,1)),
	CONSTRAINT PK_METERING_OPTIONS PRIMARY KEY (APP_SID),
	CONSTRAINT CK_METER_SHOW_INHERITED_ROLES CHECK(SHOW_INHERITED_ROLES IN (1, 0)),
	CONSTRAINT CK_PROC_USE_SERVICE CHECK (PROC_USE_SERVICE IN (0, 1)),
	CONSTRAINT CK_PROC_OPRIONS_IN_USE CHECK (PROC_USE_SERVICE = 0 OR (PROC_API_BASE_URI IS NOT NULL AND PROC_LOCAL_PATH IS NOT NULL AND PROC_KICK_TIMEOUT IS NOT NULL)),
	CONSTRAINT CK_RAW_FEED_DATA_JOBS_ENABLED CHECK (RAW_FEED_DATA_JOBS_ENABLED IN (0, 1))
)
;

CREATE TABLE CSR.METRIC_DASHBOARD(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METRIC_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    NAME                    VARCHAR2(255)    NOT NULL,
    START_DTM               DATE             NOT NULL,
    END_DTM                 DATE,
    PERIOD_SET_ID           NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID      NUMBER(10, 0)    NOT NULL,
    LOOKUP_KEY              VARCHAR2(255),
    CONSTRAINT PK_METRIC_DASHBOARD PRIMARY KEY (APP_SID, METRIC_DASHBOARD_SID)
)
;

CREATE UNIQUE INDEX CSR.UK_METRIC_DASH_LOOKUP ON CSR.METRIC_DASHBOARD(APP_SID, NVL(UPPER(LOOKUP_KEY), TO_CHAR(METRIC_DASHBOARD_SID)))
;

CREATE TABLE CSR.METRIC_DASHBOARD_IND(
    APP_SID                          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METRIC_DASHBOARD_SID             NUMBER(10, 0)    NOT NULL,
    IND_SID                          NUMBER(10, 0)    NOT NULL,
    POS                              NUMBER(10, 0)    NOT NULL,
    BLOCK_TITLE                      VARCHAR2(32)     NOT NULL,
    BLOCK_CSS_CLASS                  VARCHAR2(32)     NOT NULL,
    INTEN_VIEW_SCENARIO_RUN_SID      NUMBER(10, 0),
    INTEN_VIEW_FLOOR_AREA_IND_SID    NUMBER(10, 0)    NOT NULL,
    ABSOL_VIEW_SCENARIO_RUN_SID      NUMBER(10, 0),
    CONSTRAINT PK_METRIC_DASHBOARD_IND PRIMARY KEY (APP_SID, METRIC_DASHBOARD_SID, IND_SID)
)
;

CREATE TABLE CSR.METRIC_DASHBOARD_PLUGIN(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METRIC_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_METRIC_DASHBOARD_PLUGIN PRIMARY KEY (APP_SID, METRIC_DASHBOARD_SID, PLUGIN_ID)
)
;

CREATE TABLE CSR.MIGRATED_AUDIT (
	APP_SID					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	INTERNAL_AUDIT_SID		NUMBER(10) NOT NULL,
	MIGRATED_DTM			DATE DEFAULT SYSDATE NOT NULL,
	CONSTRAINT PK_MIGRATED_AUDIT PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID)
)
;

CREATE TABLE CSR.MGMT_COMPANY(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MGMT_COMPANY_ID    NUMBER(10, 0)    NOT NULL,
    NAME               VARCHAR2(255)    NOT NULL,
    COMPANY_SID        NUMBER(10, 0),
    CONSTRAINT PK_MGMT_COMPANY PRIMARY KEY (APP_SID, MGMT_COMPANY_ID)
)
;

CREATE SEQUENCE CSR.MGMT_COMPANY_ID_SEQ;

CREATE TABLE CSR.MGMT_COMPANY_CONTACT(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MGMT_COMPANY_CONTACT_ID    NUMBER(10, 0)    NOT NULL,
    NAME                       VARCHAR2(255)    NOT NULL,
    EMAIL                      VARCHAR2(255),
    PHONE                      VARCHAR2(255),
    MGMT_COMPANY_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_MGMT_COMPANY_CONTACT PRIMARY KEY (APP_SID, MGMT_COMPANY_CONTACT_ID),
    CONSTRAINT UK_MGMT_COMPANY_CONTACT UNIQUE (APP_SID, MGMT_COMPANY_CONTACT_ID, MGMT_COMPANY_ID)
)
;

CREATE SEQUENCE CSR.MGMT_COMPANY_CONTACT_ID_SEQ;

CREATE TABLE CSR.MGMT_COMPANY_FUND_CONTACT(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FUND_ID                    NUMBER(10, 0)    NOT NULL,
    MGMT_COMPANY_CONTACT_ID    NUMBER(10, 0)    NOT NULL,
    MGMT_COMPANY_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_MGMT_COMP_FUND_CONT PRIMARY KEY (APP_SID, FUND_ID, MGMT_COMPANY_CONTACT_ID, MGMT_COMPANY_ID)
)
;

CREATE TABLE CSR.MGT_COMPANY_TREE_SYNC_JOB(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TREE_ROOT_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_MGT_COMPANY_TREE_SYNC_JOB PRIMARY KEY (APP_SID, TREE_ROOT_SID)
)
;

CREATE TABLE CSR.MODEL(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REVISION             NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    MODEL_SID            NUMBER(10, 0)     NOT NULL,
    NAME                 VARCHAR2(255)     NOT NULL,
    DESCRIPTION          VARCHAR2(4000),
    EXCEL_DOC            BLOB,
    FILE_NAME            VARCHAR2(255),
    THUMB_IMG            BLOB,
    CREATED_DTM          DATE              DEFAULT sysdate NOT NULL,
    TEMP_ONLY_BOO        NUMBER(1, 0)      DEFAULT 1,
    LOAD_STATE           VARCHAR2(1)       DEFAULT 'N' NOT NULL,
    LOOKUP_KEY           VARCHAR2(255),
    SCENARIO_RUN_TYPE    NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    SCENARIO_RUN_SID     NUMBER(10, 0),
    CONSTRAINT CK_LOAD_STATE CHECK (LOAD_STATE IN ('N','L','U')),
    CONSTRAINT CK_MODEL_SCN_RUN_SID CHECK(
        (SCENARIO_RUN_TYPE = 2 AND SCENARIO_RUN_SID IS NOT NULL) OR
        (SCENARIO_RUN_TYPE IN (0, 1) AND SCENARIO_RUN_SID IS NULL)
    ),
    CONSTRAINT PK_MODEL PRIMARY KEY (APP_SID, MODEL_SID)
)
;

CREATE UNIQUE INDEX CSR.IX_MODEL_LOOKUP_KEY ON CSR.MODEL(APP_SID, UPPER(NVL(LOOKUP_KEY, 'MODEL_'||model_sid)))
;

CREATE TABLE CSR.MODEL_DELEG_IMPORT(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    MODEL_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_MODEL_DELEG_IMPORT PRIMARY KEY (APP_SID, DELEGATION_SID, MODEL_SID)
)
;

CREATE TABLE CSR.MODEL_INSTANCE(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_INSTANCE_SID    NUMBER(10, 0)     NOT NULL,
    BASE_MODEL_SID        NUMBER(10, 0)     NOT NULL,
    START_DTM             DATE              NOT NULL,
    END_DTM               DATE              NOT NULL,
    OWNER_SID             NUMBER(10, 0)     NOT NULL,
    CREATED_DTM           DATE              NOT NULL,
    EXCEL_DOC             BLOB,
    DESCRIPTION           VARCHAR2(1000),
    RUN_STATE             VARCHAR2(1)       DEFAULT 'N' NOT NULL,
    CONSTRAINT CHK_MI_RUN_STATE CHECK (RUN_STATE IN ('N','W','R')),
    CONSTRAINT PK_MODEL_INSTANCE PRIMARY KEY (APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID)
)
;

CREATE TABLE CSR.MODEL_INSTANCE_CHART(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_INSTANCE_SID    NUMBER(10, 0)     NOT NULL,
    BASE_MODEL_SID        NUMBER(10, 0)     NOT NULL,
    SHEET_ID              NUMBER(10, 0)     NOT NULL,
    CHART_INDEX           NUMBER(10, 0)     NOT NULL,
    TOP                   NUMBER(10, 0)     NOT NULL,
    LEFT                  NUMBER(10, 0)     NOT NULL,
    WIDTH                 NUMBER(10, 0)     NOT NULL,
    HEIGHT                NUMBER(10, 0)     NOT NULL,
    SOURCE_DATA           VARCHAR2(4000),
    CONSTRAINT PK_MODEL_INSTANCE_CHART PRIMARY KEY (APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID, SHEET_ID, CHART_INDEX)
)
;

CREATE TABLE CSR.MODEL_INSTANCE_MAP(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_INSTANCE_SID      NUMBER(10, 0)     NOT NULL,
    BASE_MODEL_SID          NUMBER(10, 0)     NOT NULL,
    SHEET_ID                NUMBER(10, 0)     NOT NULL,
    CELL_NAME               VARCHAR2(20)      NOT NULL,
    SOURCE_CELL_NAME        VARCHAR2(20)      NOT NULL,
    CELL_VALUE              VARCHAR2(4000),
    MAP_TO_INDICATOR_SID    NUMBER(10, 0),
    MAP_TO_REGION_SID       NUMBER(10, 0),
    PERIOD_YEAR_OFFSET      NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    PERIOD_OFFSET           NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_MODEL_INSTANCE_MAP PRIMARY KEY (APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID, SHEET_ID, CELL_NAME)
)
;

CREATE INDEX CSR.IX_MODEL_INSTANCE_MAP_TO_IND ON CSR.MODEL_INSTANCE_MAP(APP_SID, MAP_TO_INDICATOR_SID)
;

CREATE TABLE CSR.MODEL_INSTANCE_REGION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_INSTANCE_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID            NUMBER(10, 0)    NOT NULL,
    POS                   NUMBER(10, 0)    NOT NULL,
    BASE_MODEL_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_MODEL_INSTANCE_REGION PRIMARY KEY (APP_SID, MODEL_INSTANCE_SID, REGION_SID, BASE_MODEL_SID)
)
;

CREATE TABLE CSR.MODEL_INSTANCE_SHEET(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_INSTANCE_SID    NUMBER(10, 0)    NOT NULL,
    BASE_MODEL_SID        NUMBER(10, 0)    NOT NULL,
    SHEET_ID              NUMBER(10, 0)    NOT NULL,
    STRUCTURE             SYS.XMLType,
    CONSTRAINT PK_MODEL_INSTANCE_SHEET PRIMARY KEY (APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID, SHEET_ID)
)
;

CREATE TABLE CSR.MODEL_MAP(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_SID               NUMBER(10, 0)    NOT NULL,
    SHEET_ID                NUMBER(10, 0)    NOT NULL,
    CELL_NAME               VARCHAR2(20)     NOT NULL,
    MODEL_MAP_TYPE_ID       NUMBER(10, 0)    NOT NULL,
    MAP_TO_INDICATOR_SID    NUMBER(10, 0),
    CELL_COMMENT            CLOB,
    IS_TEMP                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REGION_TYPE_OFFSET      NUMBER(10, 0),
    REGION_OFFSET_TAG_ID    NUMBER(10, 0),
    PERIOD_YEAR_OFFSET      NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    PERIOD_OFFSET           NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_MODEL_MAP PRIMARY KEY (APP_SID, MODEL_SID, SHEET_ID, CELL_NAME)
)
;

CREATE TABLE CSR.MODEL_MAP_TYPE(
    MODEL_MAP_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    MAP_TYPE             VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_MODEL_MAP_TYPE PRIMARY KEY (MODEL_MAP_TYPE_ID)
)
;

CREATE TABLE CSR.MODEL_RANGE(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_SID    NUMBER(10, 0)    NOT NULL,
    RANGE_ID     NUMBER(10, 0)    NOT NULL,
    SHEET_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_MODEL_RANGE PRIMARY KEY (APP_SID, MODEL_SID, RANGE_ID),
    CONSTRAINT UK_MODEL_RANGE UNIQUE (APP_SID, RANGE_ID)
)
;

CREATE SEQUENCE CSR.MODEL_RANGE_ID_SEQ;

CREATE TABLE CSR.MODEL_RANGE_CELL(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_SID    NUMBER(10, 0)    NOT NULL,
    RANGE_ID     NUMBER(10, 0)    NOT NULL,
    CELL_NAME    VARCHAR2(20)     NOT NULL,
    CONSTRAINT PK_MODEL_RANGE_CELL PRIMARY KEY (APP_SID, MODEL_SID, RANGE_ID, CELL_NAME)
)
;

CREATE TABLE CSR.MODEL_REGION_RANGE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_SID           NUMBER(10, 0)    NOT NULL,
    RANGE_ID            NUMBER(10, 0)    NOT NULL,
    REGION_REPEAT_ID    NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    CONSTRAINT CK_MRR_RRI CHECK (REGION_REPEAT_ID >= 1 AND REGION_REPEAT_ID <= 4),
    CONSTRAINT PK_MODEL_REGION_RANGE PRIMARY KEY (APP_SID, MODEL_SID, RANGE_ID)
)
;

CREATE TABLE CSR.MODEL_SHEET(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_SID             NUMBER(10, 0)    NOT NULL,
    SHEET_NAME            VARCHAR2(255)    NOT NULL,
    USER_EDITABLE_BOO     NUMBER(1, 0),
    SHEET_INDEX           NUMBER(10, 0)    NOT NULL,
    DISPLAY_CHARTS_BOO    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHART_COUNT           NUMBER(10, 0)    NOT NULL,
    SHEET_ID              NUMBER(10, 0)    NOT NULL,
    STRUCTURE             SYS.XMLType,
    CONSTRAINT PK_MODEL_SHEET PRIMARY KEY (APP_SID, MODEL_SID, SHEET_ID)
)
;

CREATE SEQUENCE CSR.MODEL_SHEET_ID_SEQ;

CREATE TABLE CSR.MODEL_VALIDATION(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODEL_SID          NUMBER(10, 0)    NOT NULL,
    CELL_NAME          VARCHAR2(20)     NOT NULL,
    DISPLAY_SEQ        NUMBER(10, 0)    NOT NULL,
    VALIDATION_TEXT    VARCHAR2(50),
    SHEET_ID           NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK565 PRIMARY KEY (APP_SID, MODEL_SID, CELL_NAME, DISPLAY_SEQ, SHEET_ID)
)
;

CREATE TABLE CSR.MODULE (
	MODULE_ID			NUMBER(10) NOT NULL,
	MODULE_NAME			VARCHAR2(1023) NOT NULL,
	ENABLE_SP			VARCHAR2(1023),
	ENABLE_CLASS		VARCHAR2(1023),
	POST_ENABLE_CLASS	VARCHAR2(1023),
	DESCRIPTION			VARCHAR2(1023),
	LICENSE_WARNING		NUMBER(1) DEFAULT NULL,
	WARNING_MSG			VARCHAR2(1023),
	CONSTRAINT PK_MODULE_ID PRIMARY KEY (MODULE_ID)
);

CREATE SEQUENCE CSR.MODULE_ID CACHE 5;

CREATE TABLE CSR.MODULE_PARAM(
    MODULE_ID     NUMBER(10, 0)     NOT NULL,
    PARAM_NAME    VARCHAR2(1023)    NOT NULL,
    PARAM_HINT    VARCHAR2(1023),
    POS           NUMBER(2, 0)      NOT NULL,
    ALLOW_BLANK   NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT MODULE_PARAM_UNIQUE UNIQUE (MODULE_ID, POS),
    CONSTRAINT CHK_ALLOW_BLANK CHECK (ALLOW_BLANK IN (0,1))
)
;

CREATE TABLE CSR.MODULE_HISTORY(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	MODULE_ID			NUMBER(10, 0)	NOT NULL,
	ENABLED_DTM			DATE,
	LAST_ENABLED_DTM	DATE,
	DISABLED_DTM		DATE,
	CONSTRAINT PK_MODULE_HSTORY_MODULE_ID PRIMARY KEY (APP_SID, MODULE_ID)
)
;

CREATE TABLE CSR.NEW_DELEGATION_ALERT(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NEW_DELEGATION_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID            NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID         NUMBER(10, 0)    NOT NULL,
    SHEET_ID                   NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_NEW_DELEGATION_ALERT PRIMARY KEY (APP_SID, NEW_DELEGATION_ALERT_ID)
)
;

CREATE SEQUENCE CSR.NEW_DELEGATION_ALERT_ID_SEQ;

CREATE TABLE CSR.NEW_PLANNED_DELEG_ALERT(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NEW_PLANNED_DELEG_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID               NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID            NUMBER(10, 0)    NOT NULL,
    SHEET_ID                      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_NEW_PLANNED_DELEG_ALERT PRIMARY KEY (APP_SID, NEW_PLANNED_DELEG_ALERT_ID)
)
;

CREATE SEQUENCE CSR.SHEET_CREATED_ALERT_ID_SEQ;

CREATE TABLE CSR.SHEET_CREATED_ALERT(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_CREATED_ALERT_ID         NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID                NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID             NUMBER(10, 0)    NOT NULL,
    SHEET_ID                       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SHEET_CREATED_ALERT PRIMARY KEY (APP_SID, SHEET_CREATED_ALERT_ID)
)
;

CREATE SEQUENCE CSR.NEW_PLANDELEG_ALERT_ID_SEQ;

CREATE TABLE CSR.NON_COMP_DEFAULT(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMP_DEFAULT_ID           NUMBER(10, 0)     NOT NULL,
    LABEL                         VARCHAR2(2048)    NOT NULL,
    DETAIL                        CLOB,
    NON_COMPLIANCE_TYPE_ID        NUMBER(10, 0),
    ROOT_CAUSE                    CLOB,
    SUGGESTED_ACTION              CLOB,
    NON_COMP_DEFAULT_FOLDER_ID    NUMBER(10, 0),
    UNIQUE_REFERENCE              VARCHAR2(255),
    CONSTRAINT PK_NON_COMP_DEFAULT PRIMARY KEY (APP_SID, NON_COMP_DEFAULT_ID)
)
;

CREATE SEQUENCE CSR.NON_COMP_DEFAULT_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_NON_COMP_DEFAULT_REF ON CSR.NON_COMP_DEFAULT(
    CASE WHEN UNIQUE_REFERENCE IS NULL THEN NULL ELSE APP_SID END,
    UPPER(UNIQUE_REFERENCE)
)
;

CREATE TABLE CSR.NON_COMP_DEFAULT_FOLDER(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMP_DEFAULT_FOLDER_ID    NUMBER(10, 0)     NOT NULL,
    PARENT_FOLDER_ID              NUMBER(10, 0),
    LABEL                         VARCHAR2(4000)    NOT NULL,
    CONSTRAINT PK_NON_COMP_DEFAULT_FOLDER PRIMARY KEY (APP_SID, NON_COMP_DEFAULT_FOLDER_ID)
)
;

CREATE SEQUENCE CSR.NON_COMP_DEFAULT_FOLDER_ID_SEQ START WITH 2;

CREATE UNIQUE INDEX CSR.UK_NON_COMP_DEF_FLDR_LBL ON CSR.NON_COMP_DEFAULT_FOLDER(APP_SID, PARENT_FOLDER_ID, LOWER(LABEL))
;

CREATE TABLE CSR.NON_COMP_DEFAULT_ISSUE(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMP_DEFAULT_ISSUE_ID    NUMBER(10, 0)     NOT NULL,
    NON_COMP_DEFAULT_ID          NUMBER(10, 0)     NOT NULL,
    LABEL                        VARCHAR2(2048)    NOT NULL,
    DESCRIPTION                  CLOB,
    DUE_DTM_RELATIVE             NUMBER(10, 0),
    DUE_DTM_RELATIVE_UNIT        VARCHAR2(1),
    CONSTRAINT CHK_NON_COMP_DEF_ISS_DUE_UNIT CHECK (DUE_DTM_RELATIVE_UNIT IN ('d','m')), -- TO MATCH QS_EXPR_NON_COMPL_ACTION
    CONSTRAINT CHK_NON_COMP_DEF_ISS_DUE_REL CHECK ((DUE_DTM_RELATIVE IS NULL AND DUE_DTM_RELATIVE_UNIT IS NULL) OR (DUE_DTM_RELATIVE IS NOT NULL AND DUE_DTM_RELATIVE_UNIT IS NOT NULL)),
    CONSTRAINT PK_NON_COMP_DEFAULT_ISSUE PRIMARY KEY (APP_SID, NON_COMP_DEFAULT_ISSUE_ID)
)
;

CREATE SEQUENCE CSR.NON_COMP_DEFAULT_ISSUE_ID_SEQ;

CREATE TABLE CSR.NON_COMP_DEFAULT_TAG(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMP_DEFAULT_ID    NUMBER(10, 0)    NOT NULL,
    TAG_ID                 NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_NON_COMP_DEFAULT_TAG PRIMARY KEY (APP_SID, NON_COMP_DEFAULT_ID, TAG_ID)
)
;

CREATE TABLE CSR.NON_COMP_TYPE_AUDIT_TYPE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_NON_COMP_TYPE_AUDIT_TYPE PRIMARY KEY (APP_SID, NON_COMPLIANCE_TYPE_ID, INTERNAL_AUDIT_TYPE_ID)
)
;

CREATE TABLE CSR.NON_COMP_TYPE_RPT_AUDIT_TYPE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_NC_TYPE_RPT_IA_TYPE PRIMARY KEY (APP_SID, NON_COMPLIANCE_TYPE_ID, INTERNAL_AUDIT_TYPE_ID)
)
;

CREATE TABLE CSR.NON_COMPLIANCE(
    APP_SID                     NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_ID           NUMBER(10, 0)     NOT NULL,
    CREATED_IN_AUDIT_SID        NUMBER(10, 0)     NOT NULL,
    LABEL                       VARCHAR2(2048)    NOT NULL,
    DETAIL                      CLOB,
    CREATED_DTM                 DATE              DEFAULT SYSDATE NOT NULL,
    CREATED_BY_USER_SID         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    FROM_NON_COMP_DEFAULT_ID    NUMBER(10, 0),
    QUESTION_ID                 NUMBER(10, 0)     DEFAULT NULL,
    QUESTION_VERSION            NUMBER(10, 0)     DEFAULT NULL,
    QUESTION_DRAFT              NUMBER(1)         NULL,
    REGION_SID                  NUMBER(10, 0),
    NON_COMPLIANCE_TYPE_ID      NUMBER(10, 0),
    IS_CLOSED                   NUMBER(1, 0),
    NON_COMPLIANCE_REF          VARCHAR2(255),
    OVERRIDE_SCORE              NUMBER(15, 5),
    QUESTION_OPTION_ID          NUMBER(10, 0),
    ROOT_CAUSE                  CLOB,
    SUGGESTED_ACTION            CLOB,
	CONSTRAINT CHK_NC_QUESTION_DRAFT CHECK (QUESTION_DRAFT IN (0,1)),
    CONSTRAINT CHK_NON_COMP_IS_CLOSED_1_0 CHECK (IS_CLOSED IS NULL OR IS_CLOSED IN (1,0)),
    CONSTRAINT CHK_NON_COMPL_OPTION_HAS_Q CHECK (QUESTION_OPTION_ID IS NULL OR QUESTION_ID IS NOT NULL),
    CONSTRAINT PK662 PRIMARY KEY (APP_SID, NON_COMPLIANCE_ID)
)
;

CREATE SEQUENCE CSR.NON_COMPLIANCE_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_NON_COMPLIANCE_OPTION_ID ON CSR.NON_COMPLIANCE(
    CASE WHEN QUESTION_OPTION_ID IS NULL THEN NULL ELSE APP_SID END,
    CASE WHEN QUESTION_OPTION_ID IS NULL THEN NULL ELSE CREATED_IN_AUDIT_SID END,
    QUESTION_OPTION_ID
)
;

CREATE UNIQUE INDEX CSR.UK_NON_COMPLIANCE_REF ON CSR.NON_COMPLIANCE(
    CASE WHEN NON_COMPLIANCE_REF IS NULL THEN NULL
         ELSE APP_SID ||'_' || NON_COMPLIANCE_REF END
)
;

CREATE TABLE CSR.NON_COMPLIANCE_EXPR_ACTION(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_ID              NUMBER(10, 0)    NOT NULL,
    QS_EXPR_NON_COMPL_ACTION_ID    NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID             NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_NON_COMPL_EXPR_ACTION PRIMARY KEY (APP_SID, QS_EXPR_NON_COMPL_ACTION_ID, SURVEY_RESPONSE_ID)
)
;

CREATE TABLE CSR.NON_COMPLIANCE_FILE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_FILE_ID    NUMBER(10, 0)    NOT NULL,
    NON_COMPLIANCE_ID         NUMBER(10, 0)    NOT NULL,
    FILENAME                  VARCHAR2(255)    NOT NULL,
    MIME_TYPE                 VARCHAR2(256)    NOT NULL,
    DATA                      BLOB             NOT NULL,
    SHA1                      RAW(20)          NOT NULL,
    UPLOADED_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_NON_COMPLIANCE_FILE PRIMARY KEY (APP_SID, NON_COMPLIANCE_FILE_ID)
)
;

CREATE SEQUENCE CSR.NON_COMPLIANCE_FILE_ID_SEQ;

CREATE TABLE CSR.NON_COMPLIANCE_TAG(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAG_ID               NUMBER(10, 0)    NOT NULL,
    NON_COMPLIANCE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_NON_COMPLIANCE_TAG PRIMARY KEY (APP_SID, TAG_ID, NON_COMPLIANCE_ID)
)
;

CREATE INDEX CSR.IX_NON_CMPL_TAG_NON_CMPL ON CSR.NON_COMPLIANCE_TAG(APP_SID, NON_COMPLIANCE_ID)
;

CREATE TABLE CSR.NON_COMPLIANCE_TYPE(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    LABEL                             VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY                        VARCHAR2(255)    NOT NULL,
    POSITION                          NUMBER(10, 0)    NOT NULL,
    COLOUR_WHEN_OPEN                  NUMBER(10, 0)    NOT NULL,
    COLOUR_WHEN_CLOSED                NUMBER(10, 0)    NOT NULL,
    CAN_HAVE_ACTIONS                  NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CLOSURE_BEHAVIOUR_ID              NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    INTER_NON_COMP_REF_HELPER_FUNC    VARCHAR2(255),
    INTER_NON_COMP_REF_PREFIX         VARCHAR2(255),
    SCORE                             NUMBER(15, 5),
    REPEAT_SCORE                      NUMBER(15, 5),
    ROOT_CAUSE_ENABLED                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    MATCH_REPEATS_BY_CARRY_FWD        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    MATCH_REPEATS_BY_DEFAULT_NCS      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    MATCH_REPEATS_BY_SURVEYS          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    FIND_REPEATS_IN_UNIT              VARCHAR2(10)     DEFAULT 'none' NOT NULL,
    FIND_REPEATS_IN_QTY               NUMBER(10, 0),
    CARRY_FWD_REPEAT_TYPE             VARCHAR2(10)     DEFAULT 'normal' NOT NULL,
    SUGGESTED_ACTION_ENABLED          NUMBER(1, 0)     DEFAULT 0,
    IS_DEFAULT_SURVEY_FINDING         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_NON_COMPLIANCE_TYPE PRIMARY KEY (APP_SID, NON_COMPLIANCE_TYPE_ID),
    CONSTRAINT UK_NC_TYPE_LOOKUP_KEY UNIQUE (APP_SID, LOOKUP_KEY),
    CONSTRAINT CHK_NC_TYP_CAN_HAVE_ACTNS_1_0 CHECK (CAN_HAVE_ACTIONS IN (1, 0)),
    CONSTRAINT CHK_NC_TYP_CLOSURE_BEHAVIOUR CHECK (CLOSURE_BEHAVIOUR_ID IN (1, 2, 3)),
    CONSTRAINT CHK_NON_COMP_TYP_RT_CAUSE_1_0 CHECK (ROOT_CAUSE_ENABLED IN (1, 0)),
    CONSTRAINT CHK_NON_COMP_TYP_SUGG_ACT_1_0 CHECK (SUGGESTED_ACTION_ENABLED IN (1, 0)),
    CONSTRAINT CK_NCT_MTCH_RPT_BY_CRRY_FWD CHECK (MATCH_REPEATS_BY_CARRY_FWD IN (0, 1)),
    CONSTRAINT CK_NCT_MTCH_RPT_BY_DFLT_NCS CHECK (MATCH_REPEATS_BY_CARRY_FWD IN (0, 1)),
    CONSTRAINT CK_NCT_MTCH_RPT_BY_SURVEYS CHECK (MATCH_REPEATS_BY_CARRY_FWD IN (0, 1)),
    CONSTRAINT CK_NCT_FIND_RPT_IN CHECK ((FIND_REPEATS_IN_UNIT IN ('all', 'none') AND FIND_REPEATS_IN_QTY IS NULL) OR
                                         (FIND_REPEATS_IN_UNIT IN ('audits', 'months', 'years') AND FIND_REPEATS_IN_QTY > 0)),
    CONSTRAINT CK_NCT_CRRY_FWD_RPT_TYPE CHECK (CARRY_FWD_REPEAT_TYPE IN ('normal', 'as_created', 'never')),
    CONSTRAINT CHK_IS_DEFAULT_SURVEY_FINDING CHECK (IS_DEFAULT_SURVEY_FINDING IN (1, 0))
)
;

CREATE SEQUENCE CSR.NON_COMPLIANCE_TYPE_ID_SEQ;

CREATE TABLE CSR.NON_COMPLIANCE_TYPE_TAG_GROUP(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    TAG_GROUP_ID              NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_NON_COMPLIANCE_TYPE_TAG_GR PRIMARY KEY (APP_SID, NON_COMPLIANCE_TYPE_ID, TAG_GROUP_ID)
)
;

CREATE TABLE CSR.NON_COMPLIANCE_TYPE_FLOW_CAP(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_CAPABILITY_ID        NUMBER(10, 0)    NOT NULL,
    BASE_FLOW_CAPABILITY_ID   NUMBER(10 ,0)    NOT NULL,
    CONSTRAINT PK_NON_COMPLIANCE_TYP_FLOW_CAP PRIMARY KEY (APP_SID, NON_COMPLIANCE_TYPE_ID, FLOW_CAPABILITY_ID),
    CONSTRAINT UK_NC_TYPE_BASE_FLOW_CAP UNIQUE (APP_SID, NON_COMPLIANCE_TYPE_ID, BASE_FLOW_CAPABILITY_ID)
)
;

CREATE TABLE CSR.NOTE(
    NOTE_ID                     NUMBER(10, 0)    NOT NULL,
    IND_SID                     NUMBER(10, 0)    NOT NULL,
    REGION_SID                  NUMBER(10, 0)    NOT NULL,
    NOTE_KEY                    VARCHAR2(128)    NOT NULL,
    NOTE                        CLOB,
    LAST_AMENDED_BY_USER_SID    NUMBER(10, 0)    NOT NULL,
    LAST_AMENDED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_NOTE PRIMARY KEY (IND_SID, REGION_SID, NOTE_KEY)
)
;

CREATE SEQUENCE CSR.NOTE_ID_SEQ CACHE 5;

CREATE TABLE CSR.NOTIFICATION_TYPE(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	NOTIFICATION_TYPE_ID		VARCHAR2(36) NOT NULL,
	DESCRIPTION					VARCHAR2(255) NOT NULL,
	SEND_TRIGGER				VARCHAR2(2000) NOT NULL,
	SENT_FROM					VARCHAR2(2000) NOT NULL,
	GROUP_NAME					VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_NOTIFICATION_TYPE PRIMARY KEY (APP_SID, NOTIFICATION_TYPE_ID)
);

CREATE TABLE CSR.NOTIFICATION_TYPE_PARAM(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	NOTIFICATION_TYPE_ID		VARCHAR2(36) NOT NULL,
	FIELD_NAME					VARCHAR2(100) NOT NULL,
	DESCRIPTION					VARCHAR2(200) NOT NULL,
	HELP_TEXT					VARCHAR2(2000) NOT NULL,
	REPEATS						NUMBER(1) NOT NULL,
	DISPLAY_POS					NUMBER(10) NOT NULL,
	CONSTRAINT PK_NOTIFICATION_TYPE_PARAM PRIMARY KEY (APP_SID, NOTIFICATION_TYPE_ID, FIELD_NAME),
	CONSTRAINT CK_NOTIFICATION_TYPE_PARAM_REPEATS CHECK (REPEATS IN (0, 1)),
	CONSTRAINT CK_NOTIFICATION_TYPE_PARAM_NAME_UPPER CHECK (FIELD_NAME = UPPER(FIELD_NAME))
);

CREATE TABLE CSR.OBJECTIVE(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    OBJECTIVE_SID           NUMBER(10, 0)     NOT NULL,
    NAME                    VARCHAR2(1024)    NOT NULL,
    DESCRIPTION             VARCHAR2(1024),
    RESPONSIBLE_USER_SID    NUMBER(10, 0),
    DELIVERY_USER_SID       NUMBER(10, 0),
    XML_TEMPLATE            CLOB              DEFAULT EMPTY_CLOB(),
    POS                     NUMBER(10, 0)     DEFAULT (0) NOT NULL,
    CONSTRAINT PK_OBJECTIVE PRIMARY KEY (APP_SID, OBJECTIVE_SID)
)
;

CREATE INDEX CSR.IDX_OBJECTIVE_DELIVERY_USER ON CSR.OBJECTIVE(APP_SID, DELIVERY_USER_SID)
;

CREATE INDEX CSR.IDX_OBJECTIVE_RESPON_USER ON CSR.OBJECTIVE(APP_SID, RESPONSIBLE_USER_SID)
;

CREATE TABLE CSR.OBJECTIVE_STATUS(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    OBJECTIVE_SID         NUMBER(10, 0)     NOT NULL,
    START_DTM             DATE              NOT NULL,
    END_DTM               DATE              NOT NULL,
    SCORE                 NUMBER(10, 0)     DEFAULT (0) NOT NULL,
    STATUS_DESCRIPTION    VARCHAR2(1024),
    STATUS_XML            CLOB              DEFAULT EMPTY_CLOB(),
    LAST_UPDATED_DTM      DATE              DEFAULT (SYSDATE) NOT NULL,
    UPDATED_BY_SID        NUMBER(10, 0)     NOT NULL,
    ROLLED_FORWARD        NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_OBJECTIVE_STATUS PRIMARY KEY (APP_SID, OBJECTIVE_SID, START_DTM, END_DTM)
)
;

CREATE INDEX CSR.IDX_OBJCTV_STAT_OBJCTV ON CSR.OBJECTIVE_STATUS(APP_SID, OBJECTIVE_SID)
;

CREATE INDEX CSR.IDX_OBJCTV_STAT_UPDATD_BY ON CSR.OBJECTIVE_STATUS(APP_SID, UPDATED_BY_SID)
;

CREATE TABLE CSR.OPTION_ITEM(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    OPTION_SET_ID    NUMBER(10, 0)    NOT NULL,
    POS              NUMBER(10, 0)    NOT NULL,
    VALUE            NUMBER(10, 0)    NOT NULL,
    DESCRIPTION      VARCHAR2(255)    NOT NULL,
    INFO_XML         CLOB             DEFAULT EMPTY_CLOB() NOT NULL,
    CONSTRAINT PK_OPTION_ITEM PRIMARY KEY (APP_SID, OPTION_SET_ID, POS)
)
;

CREATE TABLE CSR.OPTION_SET(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    OPTION_SET_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_OPTION_SET PRIMARY KEY (APP_SID, OPTION_SET_ID)
)
;

CREATE SEQUENCE CSR.OPTION_SET_ID_SEQ CACHE 5;

CREATE TABLE CSR.OSHA_BASE_DATA(
	OSHA_BASE_DATA_ID				NUMBER(10,0)	NOT NULL,
	DATA_ELEMENT					VARCHAR2(50),
	DEFINITION_AND_VALIDATIONS		VARCHAR2(2000),
	FORMAT							VARCHAR2(10),
	LENGTH							NUMBER(3,0),
	REQUIRED						NUMBER(1)		NOT NULL,
	AGG_TYPE                        NUMBER(1) DEFAULT 0 NOT NULL,
	OSHA_MAP_FIELD_ID				NUMBER(10),
	CONSTRAINT PK_OSHA_BASE_DATA 	PRIMARY KEY (OSHA_BASE_DATA_ID)
)
;

CREATE TABLE CSR.OSHA_CONFIG(
	APP_SID					NUMBER(10,0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CMS_TAB_SID				NUMBER(10,0),
	DATE_CMS_COL_SID		NUMBER(10,0),
	REGION_CMS_COL_SID		NUMBER(10,0),
	CONSTRAINT PK_OSHA_CONFIG PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.OSHA_MAPPING(
	APP_SID						NUMBER(10,0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	OSHA_MAP_FIELD_ID			NUMBER(10,0)	NOT NULL,
	IND_SID						NUMBER(10,0),
	CMS_COL_SID					NUMBER(10,0),
	REGION_DATA_MAP_ID 			NUMBER(10,0),
	CONSTRAINT PK_OSHA_MAPPING PRIMARY KEY (APP_SID, OSHA_MAP_FIELD_ID)
)
;

CREATE TABLE CSR.OSHA_MAP_FIELD (
	OSHA_MAP_FIELD_ID				NUMBER(10) NOT NULL,
	LABEL							VARCHAR2(356),
	POS								NUMBER(10),
	CONSTRAINT PK_OSHA_MAP_FIELD 	PRIMARY KEY (OSHA_MAP_FIELD_ID)
);

CREATE TABLE CSR.OSHA_MAP_TYPE (
	OSHA_MAP_TYPE_ID				NUMBER(10) NOT NULL,
	LABEL							VARCHAR2(256) NOT NULL,
	CONSTRAINT PK_OSHA_MAP_TYPE 	PRIMARY KEY (OSHA_MAP_TYPE_ID)
);

CREATE TABLE CSR.OSHA_MAP_FIELD_TYPE (
	OSHA_MAP_FIELD_ID				NUMBER(10) NOT NULL,
	OSHA_MAP_TYPE_ID				NUMBER(10) NOT NULL,
	CONSTRAINT PK_OSHA_MAP_FIELD_TYPE 	PRIMARY KEY (OSHA_MAP_FIELD_ID, OSHA_MAP_TYPE_ID)
);

CREATE TABLE CSR.OUTSTANDING_REQUESTS_JOB(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    BATCH_JOB_ID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_OUTSTANDING_REQUESTS_JOB PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.PACKAGED_CONTENT_SITE(
	APP_SID					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	VERSION					VARCHAR2(100) NOT NULL,
	PACKAGE_NAME			VARCHAR2(1024) NOT NULL,
	ENABLED_MODULES_JSON	CLOB,
	CONSTRAINT PK_PACKAGED_CONTENT_SITE PRIMARY KEY (APP_SID)
);

CREATE TABLE CSR.PACKAGED_CONTENT_OBJECT_MAP(
	APP_SID					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	OBJECT_REF				VARCHAR2(1024) NOT NULL,
	CREATED_OBJECT_ID		NUMBER(10, 0) NOT NULL,
	CONSTRAINT PK_PACKAGED_CONTENT_OBJECT_MAP PRIMARY KEY (APP_SID, OBJECT_REF, CREATED_OBJECT_ID)
);

CREATE TABLE CSR.PCT_OWNERSHIP(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID    NUMBER(10, 0)    NOT NULL,
    START_DTM     DATE             NOT NULL,
    END_DTM       DATE,
    PCT           NUMBER(10, 5)    NOT NULL,
    CONSTRAINT CK_PCT_OWNERSHIP_DATES CHECK (start_dtm = TRUNC(start_dtm, 'MON') AND start_dtm >= TO_DATE('01/01/1900', 'DD/MM/YYYY') AND (end_dtm IS NULL OR (end_dtm = TRUNC(end_dtm, 'MON') AND end_dtm >= TO_DATE('01/01/1900', 'DD/MM/YYYY') AND end_dtm > start_dtm))),
    CONSTRAINT PK315 PRIMARY KEY (APP_SID, REGION_SID, START_DTM)
)
;

CREATE TABLE CSR.PCT_OWNERSHIP_CHANGE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PCT_OWNERSHIP_CHANGE_ID    NUMBER(10, 0)    NOT NULL,
    ADDED_DTM                  DATE             DEFAULT SYSDATE NOT NULL,
    ADDED_BY_SID               NUMBER(10, 0)    NOT NULL,
    MEASURE_SID                NUMBER(10, 0),
    PCT_OWNERSHIP_APPLIES      NUMBER(1, 0),
    REGION_SID                 NUMBER(10, 0),
    START_DTM                  DATE,
    END_DTM                    DATE,
    PCT                        NUMBER(10, 5),
    STARTED_PROCESSING_DTM     DATE,
    CONSTRAINT PK_PCT_OWNERSHIP_CHANGE PRIMARY KEY (APP_SID, PCT_OWNERSHIP_CHANGE_ID)
)
;

CREATE SEQUENCE CSR.PCT_OWNERSHIP_CHANGE_ID_SEQ;

CREATE TABLE CSR.PENDING_DATASET(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_DATASET_ID      NUMBER(10, 0)    NOT NULL,
    LABEL                   VARCHAR2(255)    NOT NULL,
    REPORTING_PERIOD_SID    NUMBER(10, 0)    NOT NULL,
    HELPER_PKG              VARCHAR2(255),
    CONSTRAINT PK_PENDING_DATASET PRIMARY KEY (APP_SID, PENDING_DATASET_ID)
)
;

CREATE TABLE CSR.PENDING_ELEMENT_TYPE(
    ELEMENT_TYPE    NUMBER(10, 0)    NOT NULL,
    IS_NUMBER       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_STRING       NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    LABEL           VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK302 PRIMARY KEY (ELEMENT_TYPE)
)
;

CREATE TABLE CSR.PENDING_IND(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_IND_ID           NUMBER(10, 0)     NOT NULL,
    PENDING_DATASET_ID       NUMBER(10, 0),
    PARENT_IND_ID            NUMBER(10, 0),
    MAPS_TO_IND_SID          NUMBER(10, 0),
    LINK_TO_IND_ID           NUMBER(10, 0),
    DESCRIPTION              VARCHAR2(2047)    NOT NULL,
    TOLERANCE_TYPE           NUMBER(2, 0)      DEFAULT 0 NOT NULL,
    PCT_UPPER_TOLERANCE      NUMBER(10, 4)     DEFAULT 1 NOT NULL,
    PCT_LOWER_TOLERANCE      NUMBER(10, 4)     DEFAULT 1 NOT NULL,
    VAL_MANDATORY            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    NOTE_MANDATORY           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    FILE_UPLOAD_MANDATORY    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    MEASURE_SID              NUMBER(10, 0),
    POS                      NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    FORMAT_XML               SYS.XMLType,
    ELEMENT_TYPE             NUMBER(10, 0)     NOT NULL,
    READ_ONLY                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DP                       NUMBER(10, 0),
    INFO_XML                 SYS.XMLType,
    DEFAULT_VAL_NUMBER       NUMBER(24, 10),
    DEFAULT_VAL_STRING       VARCHAR2(255),
    LOOKUP_KEY               VARCHAR2(64),
    AGGREGATE                VARCHAR2(24)      DEFAULT 'SUM' NOT NULL,
    ALLOW_FILE_UPLOAD        NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    CONSTRAINT PENDING_IND_TOLERANCE CHECK (tolerance_type = 0 OR (pct_upper_tolerance IS NOT NULL AND pct_lower_tolerance IS NOT NULL)),
    CONSTRAINT CK_PENDING_IND_FILUPLOAD_MAND CHECK (FILE_UPLOAD_MANDATORY IN (0,1)),
    CONSTRAINT PK_PENDING_IND PRIMARY KEY (APP_SID, PENDING_IND_ID)
)
;

CREATE SEQUENCE CSR.PENDING_IND_ID_SEQ;

CREATE INDEX CSR.IX_PEND_IND_MAP_IND ON CSR.PENDING_IND(APP_SID, MAPS_TO_IND_SID)
;

CREATE TABLE CSR.PENDING_IND_ACCURACY_TYPE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_IND_ID      NUMBER(10, 0)    NOT NULL,
    ACCURACY_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PENDING_IND_ACCURACY_TYPE PRIMARY KEY (APP_SID, PENDING_IND_ID, ACCURACY_TYPE_ID)
)
;

CREATE TABLE CSR.PENDING_PERIOD(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_PERIOD_ID     NUMBER(10, 0)    NOT NULL,
    PENDING_DATASET_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM             DATE             NOT NULL,
    END_DTM               DATE             NOT NULL,
    LABEL                 VARCHAR2(255)    NOT NULL,
    DEFAULT_DUE_DTM       DATE             NOT NULL,
    CONSTRAINT PK_PENDING_PERIOD PRIMARY KEY (APP_SID, PENDING_PERIOD_ID),
    CONSTRAINT CK_PENDING_PERIOD_DATES CHECK (TRUNC(START_DTM, 'MON') = START_DTM AND TRUNC(END_DTM, 'MON') = END_DTM AND END_DTM > START_DTM)
)
;

CREATE SEQUENCE CSR.PENDING_PERIOD_ID_SEQ;

CREATE TABLE CSR.PENDING_REGION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_REGION_ID     NUMBER(10, 0)    NOT NULL,
    PARENT_REGION_ID      NUMBER(10, 0),
    PENDING_DATASET_ID    NUMBER(10, 0)    NOT NULL,
    MAPS_TO_REGION_SID    NUMBER(10, 0),
    DESCRIPTION           VARCHAR2(255)    NOT NULL,
    POS                   NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_PENDING_REGION PRIMARY KEY (APP_SID, PENDING_REGION_ID)
)
;

CREATE SEQUENCE CSR.PENDING_REGION_ID_SEQ;

CREATE INDEX CSR.IDX_PENDING_REGION_PARENT ON CSR.PENDING_REGION(APP_SID, PARENT_REGION_ID)
;

CREATE TABLE CSR.PENDING_VAL(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_VAL_ID                NUMBER(10, 0)     NOT NULL,
    PENDING_IND_ID                NUMBER(10, 0)     NOT NULL,
    PENDING_REGION_ID             NUMBER(10, 0)     NOT NULL,
    PENDING_PERIOD_ID             NUMBER(10, 0)     NOT NULL,
    APPROVAL_STEP_ID              NUMBER(10, 0),
    VAL_NUMBER                    NUMBER(24, 10),
    VAL_STRING                    VARCHAR2(4000),
    FROM_VAL_NUMBER               NUMBER(24, 10),
    FROM_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    NOTE                          CLOB,
    ACTION                        CHAR              DEFAULT 'S' NOT NULL,
    MERGED_STATE                  CHAR              DEFAULT 'U' NOT NULL,
    CONSTRAINT CK_MERGED_STATE CHECK (MERGED_STATE IN ('U', 'S', 'R')),
    CONSTRAINT PK_PENDING_VAL PRIMARY KEY (APP_SID, PENDING_VAL_ID),
    CONSTRAINT UK_PENDING_VAL_IRP UNIQUE (APP_SID, PENDING_IND_ID, PENDING_REGION_ID, PENDING_PERIOD_ID)
)
;

CREATE SEQUENCE CSR.PENDING_VAL_ID_SEQ;

CREATE INDEX CSR.IDX_PEND_VAL_MSR_CVT ON CSR.PENDING_VAL(APP_SID, FROM_MEASURE_CONVERSION_ID)
;

CREATE INDEX CSR.IDX_PEND_VAL_PEND_IND ON CSR.PENDING_VAL(APP_SID, PENDING_IND_ID)
;

CREATE INDEX CSR.IDX_PEND_VAL_PEND_PERIOD ON CSR.PENDING_VAL(APP_SID, PENDING_PERIOD_ID)
;

CREATE INDEX CSR.IDX_PEND_VAL_PEND_REG ON CSR.PENDING_VAL(APP_SID, PENDING_REGION_ID)
;

CREATE INDEX CSR.IDX_PEND_VAL_STEP ON CSR.PENDING_VAL(APP_SID, APPROVAL_STEP_ID, PENDING_IND_ID, PENDING_REGION_ID, PENDING_PERIOD_ID)
;

CREATE TABLE CSR.PENDING_VAL_ACCURACY_TYPE_OPT(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_VAL_ID             NUMBER(10, 0)    NOT NULL,
    ACCURACY_TYPE_OPTION_ID    NUMBER(10, 0)    NOT NULL,
    PCT                        NUMBER(10, 4)    DEFAULT 1 NOT NULL,
    CONSTRAINT PK_PENDING_VAL_ACC_TYPE_OPT PRIMARY KEY (APP_SID, PENDING_VAL_ID, ACCURACY_TYPE_OPTION_ID)
)
;

CREATE TABLE CSR.PENDING_VAL_CACHE(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_IND_ID       NUMBER(10, 0)     NOT NULL,
    PENDING_REGION_ID    NUMBER(10, 0)     NOT NULL,
    PENDING_PERIOD_ID    NUMBER(10, 0)     NOT NULL,
    VAL_NUMBER           NUMBER(24, 10),
    CONSTRAINT PK_PENDING_VAL_CACHE PRIMARY KEY (APP_SID, PENDING_IND_ID, PENDING_REGION_ID, PENDING_PERIOD_ID)
)
;

CREATE TABLE CSR.PENDING_VAL_FILE_UPLOAD(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_VAL_ID     NUMBER(10, 0)    NOT NULL,
    FILE_UPLOAD_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PENDING_VAL_FILE_UPLOAD PRIMARY KEY (APP_SID, PENDING_VAL_ID, FILE_UPLOAD_SID)
)
;

CREATE INDEX CSR.IDX_PENDING_UPLOAD_UPLOAD ON CSR.PENDING_VAL_FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

CREATE TABLE CSR.PENDING_VAL_LOG(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_VAL_LOG_ID    NUMBER(10, 0)     NOT NULL,
    PENDING_VAL_ID        NUMBER(10, 0)     NOT NULL,
    SET_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    SET_BY_USER_SID       NUMBER(10, 0)     NOT NULL,
    DESCRIPTION           VARCHAR2(255)     NOT NULL,
    PARAM_1               VARCHAR2(4000),
    PARAM_2               VARCHAR2(4000),
    PARAM_3               VARCHAR2(4000),
    CONSTRAINT PK_PENDING_VAL_LOG PRIMARY KEY (APP_SID, PENDING_VAL_LOG_ID)
)
;

CREATE SEQUENCE CSR.PENDING_VAL_LOG_ID_SEQ;

CREATE TABLE CSR.PENDING_VAL_VARIANCE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_VAL_ID             NUMBER(10, 0)    NOT NULL,
    COMPARED_WITH_START_DTM    DATE             NOT NULL,
    COMPARED_WITH_END_DTM      DATE             NOT NULL,
    VARIANCE                   NUMBER(14, 4)    NOT NULL,
    EXPLANATION                CLOB,
    CONSTRAINT PK_PENDING_VAL_VARIANCE PRIMARY KEY (APP_SID, PENDING_VAL_ID)
)
;

CREATE TABLE CSR.PERIOD(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PERIOD_SET_ID    NUMBER(10, 0)    NOT NULL,
    PERIOD_ID        NUMBER(10, 0)    NOT NULL,
    LABEL            VARCHAR2(200)    NOT NULL,
    START_DTM        DATE,
    END_DTM          DATE,
    CONSTRAINT PK_PERIOD PRIMARY KEY (APP_SID, PERIOD_SET_ID, PERIOD_ID)
)
;

CREATE TABLE CSR.PERIOD_DATES(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PERIOD_SET_ID    NUMBER(10, 0)    NOT NULL,
    PERIOD_ID        NUMBER(10, 0)    NOT NULL,
    YEAR             NUMBER(10, 0)    NOT NULL,
    START_DTM        DATE             NOT NULL,
    END_DTM          DATE             NOT NULL,
    CONSTRAINT PK_PERIOD_DATES PRIMARY KEY (APP_SID, PERIOD_SET_ID, PERIOD_ID, YEAR), -- ARGH
    CONSTRAINT CK_PERIOD_DATES_SPAN CHECK (start_dtm < end_dtm)
)
;

CREATE TABLE CSR.PERIOD_INTERVAL(
    APP_SID                          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PERIOD_SET_ID                    NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID               NUMBER(10, 0)    NOT NULL,
    SINGLE_INTERVAL_LABEL            VARCHAR2(200)    NOT NULL,
    MULTIPLE_INTERVAL_LABEL          VARCHAR2(200)    NOT NULL,
    LABEL                            VARCHAR2(200)    NOT NULL,
    SINGLE_INTERVAL_NO_YEAR_LABEL    VARCHAR2(200)    NOT NULL,
    CONSTRAINT PK_PERIOD_INTERVAL PRIMARY KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
)
;

CREATE TABLE CSR.PERIOD_INTERVAL_MEMBER(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PERIOD_SET_ID         NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID    NUMBER(10, 0)    NOT NULL,
    START_PERIOD_ID       NUMBER(10, 0)    NOT NULL,
    END_PERIOD_ID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PERIOD_INTERVAL_MEMBER PRIMARY KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID, START_PERIOD_ID) -- HMM
)
;

CREATE TABLE CSR.PERIOD_SET(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PERIOD_SET_ID     NUMBER(10, 0)    NOT NULL,
    ANNUAL_PERIODS    NUMBER(1, 0)     NOT NULL,
    LABEL             VARCHAR2(200)    NOT NULL,
    CONSTRAINT PK_PERIOD_SET PRIMARY KEY (APP_SID, PERIOD_SET_ID),
    CONSTRAINT CK_PERIOD_SET_ANNUAL_PERIODS CHECK (ANNUAL_PERIODS IN (0, 1)),
	CONSTRAINT UK_PERIOD_SET_LABEL UNIQUE (APP_SID, LABEL)
)
;

CREATE TABLE CSR.PERIOD_SPAN_PATTERN(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PERIOD_SPAN_PATTERN_ID         NUMBER(10, 0)    NOT NULL,
    PERIOD_SPAN_PATTERN_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    PERIOD_SET_ID                  NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID             NUMBER(10, 0)    NOT NULL,
    DATE_FROM                      DATE,
    DATE_TO                        DATE,
    PERIODS_OFFSET_FROM_NOW        NUMBER(2, 0)     DEFAULT 0 NOT NULL,
    NUMBER_ROLLING_PERIODS         NUMBER(2, 0)     DEFAULT 0 NOT NULL,
    PERIOD_IN_YEAR                 NUMBER(2, 0)     DEFAULT 0 NOT NULL,
    YEAR_OFFSET                    NUMBER(2, 0)     DEFAULT 0 NOT NULL,
    PERIOD_IN_YEAR_2               NUMBER(2)        DEFAULT 0 NOT NULL,
    YEAR_OFFSET_2                  NUMBER(2)        DEFAULT 0 NOT NULL,
    CONSTRAINT PK_PERIOD_SPAN_PATTERN PRIMARY KEY (APP_SID, PERIOD_SPAN_PATTERN_ID)
)
;

CREATE SEQUENCE CSR.PERIOD_SPAN_PATTERN_ID_SEQ;

CREATE TABLE CSR.PERIOD_SPAN_PATTERN_TYPE(
    PERIOD_SPAN_PATTERN_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                          VARCHAR2(128)    NOT NULL,
    CONSTRAINT PK_PERIOD_SPAN_PATTERN_TYPE PRIMARY KEY (PERIOD_SPAN_PATTERN_TYPE_ID),
    CONSTRAINT UK_PERIOD_SPAN_PATTERN_LABEL UNIQUE (LABEL)
)
;

CREATE TABLE CSR.PLACE(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PLACE_ID        NUMBER(10, 0)    NOT NULL,
    STREET_ADDR1    VARCHAR2(200)    NOT NULL,
    STREET_ADDR2    VARCHAR2(200),
    TOWN            VARCHAR2(200)    NOT NULL,
    STATE           VARCHAR2(200),
    POSTCODE        VARCHAR2(200),
    COUNTRY_CODE    VARCHAR2(10)     NOT NULL,
    LAT             NUMBER(10, 8)    NOT NULL,
    LNG             NUMBER(10, 8)    NOT NULL,
    CONSTRAINT PK_LOCATION PRIMARY KEY (APP_SID, PLACE_ID)
)
;

CREATE SEQUENCE CSR.PLACE_ID_SEQ;

CREATE TABLE CSR.PLUGIN(
    PLUGIN_ID               NUMBER(10, 0)     NOT NULL,
    PLUGIN_TYPE_ID          NUMBER(10, 0)     NOT NULL,
    DESCRIPTION             VARCHAR2(50)      NOT NULL,
    JS_INCLUDE              VARCHAR2(255)     NOT NULL,
    JS_CLASS                VARCHAR2(255)     NOT NULL,
    CS_CLASS                VARCHAR2(255)     NOT NULL,
    APP_SID                 NUMBER(10, 0), --NULLABLE. ICK. NEVER DO THIS.
    DETAILS                 VARCHAR2(4000),
    PREVIEW_IMAGE_PATH      VARCHAR2(255),
    TAB_SID                 NUMBER(10, 0),
    FORM_PATH               VARCHAR2(255),
    FORM_SID                        NUMBER(10),
    GROUP_KEY               VARCHAR2(255),
    CONTROL_LOOKUP_KEYS     VARCHAR2(255),
    SAVED_FILTER_SID        NUMBER(10, 0),
    RESULT_MODE             NUMBER(10, 0),
    R_SCRIPT_PATH           VARCHAR2(1024),
    PORTAL_SID              NUMBER(10, 0),
    USE_REPORTING_PERIOD    NUMBER(10, 0)     DEFAULT 0,
	CARD_GROUP_ID 			NUMBER(10),
    PRE_FILTER_SID			NUMBER(10, 0),
	ALLOW_MULTIPLE			NUMBER(10, 0)     DEFAULT 0,
	CONSTRAINT CHK_CORE_PLUGIN_IS_CORE CHECK (APP_SID IS NOT NULL OR (APP_SID IS NULL AND JS_INCLUDE LIKE '/csr/%')),
    CONSTRAINT CK_PLUGIN_REFS CHECK(
        (TAB_SID IS NULL AND (FORM_PATH IS NULL AND FORM_SID IS NULL) AND
		 GROUP_KEY IS NULL AND
         (SAVED_FILTER_SID IS NULL AND PRE_FILTER_SID IS NULL) AND
         CONTROL_LOOKUP_KEYS IS NULL AND PORTAL_SID IS NULL)
        OR
        (APP_SID IS NOT NULL AND(
            (TAB_SID IS NOT NULL AND (FORM_PATH IS NOT NULL OR FORM_SID IS NOT NULL) AND
             GROUP_KEY IS NULL AND
             (SAVED_FILTER_SID IS NULL AND PRE_FILTER_SID IS NULL) AND
             PORTAL_SID IS NULL)
            OR
            (TAB_SID IS NULL AND (FORM_PATH IS NULL AND FORM_SID IS NULL) AND
			 GROUP_KEY IS NOT NULL AND
             (SAVED_FILTER_SID IS NULL AND PRE_FILTER_SID IS NULL) AND
             PORTAL_SID IS NULL)
            OR
            (TAB_SID IS NULL AND (FORM_PATH IS NULL AND FORM_SID IS NULL) AND
             GROUP_KEY IS NULL AND
             (SAVED_FILTER_SID IS NOT NULL OR PRE_FILTER_SID IS NOT NULL) AND
             PORTAL_SID IS NULL)
            OR
            (TAB_SID IS NULL AND (FORM_PATH IS NULL AND FORM_SID IS NULL) AND
             GROUP_KEY IS NULL AND
             (SAVED_FILTER_SID IS NULL AND PRE_FILTER_SID IS NULL) AND
             PORTAL_SID IS NOT NULL)
        ))
    ),
    CONSTRAINT PK_PLUGIN PRIMARY KEY (PLUGIN_ID),
    CONSTRAINT UK_PLUGIN_ID_AND_TYPE_ID UNIQUE (PLUGIN_ID, PLUGIN_TYPE_ID),
	CONSTRAINT CK_ALLOW_MULTIPLE CHECK (ALLOW_MULTIPLE IN (1,0))
)
;

CREATE SEQUENCE CSR.PLUGIN_ID_SEQ START WITH 10000 NOCACHE;

CREATE UNIQUE INDEX CSR.PLUGIN_JS_CLASS ON CSR.PLUGIN(APP_SID, JS_CLASS, FORM_PATH, GROUP_KEY, SAVED_FILTER_SID, RESULT_MODE, PORTAL_SID, R_SCRIPT_PATH, FORM_SID, PRE_FILTER_SID)
;
CREATE INDEX CSR.IX_PLUGIN_CARD_GROUP_ID ON CSR.PLUGIN(CARD_GROUP_ID);

CREATE TABLE CSR.PLUGIN_INDICATOR(
    PLUGIN_INDICATOR_ID    NUMBER(10, 0)    NOT NULL,
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PLUGIN_ID              NUMBER(10, 0)    NOT NULL,
    LOOKUP_KEY             VARCHAR2(64)     NOT NULL,
    LABEL                  VARCHAR2(128)    NOT NULL,
    POS                    NUMBER(10, 0),
    CONSTRAINT PK_PLUGIN_INDICATOR PRIMARY KEY (PLUGIN_INDICATOR_ID)
)
;

CREATE SEQUENCE CSR.PLUGIN_IND_ID_SEQ CACHE 5;

CREATE TABLE CSR.PLUGIN_LOOKUP(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP'),
    PLUGIN_NAME    VARCHAR2(255)    NOT NULL,
    LABEL          VARCHAR2(255)    NOT NULL,
    FORM_PATH      VARCHAR2(255)    NOT NULL,
    TABLE_NAME     VARCHAR2(255)    NOT NULL,
    TABLE_USER     VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_PLUGIN_LOOKUP PRIMARY KEY (APP_SID, PLUGIN_NAME)
)
;

CREATE TABLE CSR.PLUGIN_LOOKUP_FLOW_STATE(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP'),
    PLUGIN_NAME      VARCHAR2(255)    NOT NULL,
    FLOW_SID         NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PLUGIN_LOOKUP_FLOW_STATE PRIMARY KEY (APP_SID, PLUGIN_NAME, FLOW_SID, FLOW_STATE_ID)
)
;

CREATE TABLE CSR.PLUGIN_TYPE(
    PLUGIN_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION       VARCHAR2(50)     NOT NULL,
    CONSTRAINT PK_PLUGIN_TYPE PRIMARY KEY (PLUGIN_TYPE_ID)
)
;

CREATE TABLE CSR.PORTAL_DASHBOARD(
    APP_SID         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PORTAL_SID      NUMBER(10, 0)     NOT NULL,
    PORTAL_GROUP    VARCHAR2(50)      NOT NULL,
    MENU_SID        NUMBER(10, 0),
    MESSAGE         VARCHAR2(2048),
    CONSTRAINT PK_PORTAL_DASHBOARD_SID PRIMARY KEY (APP_SID, PORTAL_SID),
    CONSTRAINT UK_PORTAL_DASHBOARD_GROUP UNIQUE (APP_SID, PORTAL_GROUP)
)
;

CREATE UNIQUE INDEX CSR.UX_PORTAL_DASHBOARD_MENU_SID ON CSR.PORTAL_DASHBOARD(CASE WHEN MENU_SID IS NOT NULL THEN APP_SID END, MENU_SID)
;

CREATE TABLE CSR.PORTLET(
    PORTLET_ID                      NUMBER(10, 0)    NOT NULL,
    NAME                            VARCHAR2(255)    NOT NULL,
    TYPE                            VARCHAR2(255)    NOT NULL,
    DEFAULT_STATE                   CLOB,
    SCRIPT_PATH                     VARCHAR2(255),
    AVAILABLE_ON_HOME_PORTAL        NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    AVAILABLE_ON_APPROVAL_PORTAL    NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    AVAILABLE_ON_CHAIN_PORTAL       NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT PK411 PRIMARY KEY (PORTLET_ID),
    CONSTRAINT PORTLET_TYPE UNIQUE (TYPE)
)
;

CREATE UNIQUE INDEX CSR.UK_PORTLET ON CSR.PORTLET(UPPER(TYPE))
;

CREATE TABLE CSR.POSTCODE_EGRID(
    COUNTRY      VARCHAR2(2)     NOT NULL,
    POSTCODE     VARCHAR2(20)    NOT NULL,
    EGRID_REF    VARCHAR2(4)     NOT NULL,
    CONSTRAINT PK_POSTCODE_EGRID PRIMARY KEY (COUNTRY, POSTCODE, EGRID_REF)
)
;

CREATE TABLE CSR.POSTIT(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    LABEL              VARCHAR2(1024),
    POSTIT_ID          NUMBER(10, 0)     NOT NULL,
    MESSAGE            CLOB,
    CREATED_DTM        DATE              DEFAULT SYSDATE NOT NULL,
    CREATED_BY_SID     NUMBER(10, 0)     NOT NULL,
    SECURED_VIA_SID    NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_POSTIT PRIMARY KEY (APP_SID, POSTIT_ID)
)
;

CREATE SEQUENCE CSR.POSTIT_ID_SEQ;

CREATE TABLE CSR.POSTIT_FILE(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    POSTIT_FILE_ID    NUMBER(10, 0)    NOT NULL,
    POSTIT_ID         NUMBER(10, 0)    NOT NULL,
    FILENAME          VARCHAR2(255)    NOT NULL,
    MIME_TYPE         VARCHAR2(256)    NOT NULL,
    DATA              BLOB             NOT NULL,
    SHA1              RAW(20)          NOT NULL,
    UPLOADED_DTM      DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_POSTIT_FILE PRIMARY KEY (APP_SID, POSTIT_FILE_ID)
)
;

CREATE SEQUENCE CSR.POSTIT_FILE_ID_SEQ;

CREATE TABLE CSR.PROJECT_DOC_FOLDER(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID    NUMBER(10, 0)     NOT NULL,
    NAME           VARCHAR2(256)     NOT NULL,
    LABEL          VARCHAR2(1024)    NOT NULL,
    INFO_TEXT      VARCHAR2(4000),
    CONSTRAINT PK_PROJECT_DOC_FOLDER PRIMARY KEY (APP_SID, PROJECT_SID, NAME)
)
;

CREATE UNIQUE INDEX CSR.UK_PROJECT_DOC_FOLDER ON CSR.PROJECT_DOC_FOLDER(APP_SID, PROJECT_SID, UPPER(NAME))
;

CREATE TABLE CSR.PROJECT_INIT_METRIC_FLOW_STATE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID           NUMBER(10, 0)    NOT NULL,
    MANDATORY               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    VISIBLE                 NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    PROJECT_SID             NUMBER(10, 0)    NOT NULL,
    FLOW_SID                NUMBER(10, 0)    NOT NULL,
    CHECK (MANDATORY  IN (0,1)),
    CHECK (VISIBLE IN(0,1)),
    CONSTRAINT PK_PRJ_INIT_METRIC_FLOW_STATE PRIMARY KEY (APP_SID, INITIATIVE_METRIC_ID, FLOW_STATE_ID, PROJECT_SID)
)
;

CREATE TABLE CSR.PROJECT_INITIATIVE_METRIC(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID             NUMBER(10, 0)     NOT NULL,
    POS                     NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    POS_GROUP               NUMBER(10, 0)     NOT NULL,
    UPDATE_PER_PERIOD       NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DEFAULT_VALUE           NUMBER(24, 10),
    INPUT_DP                NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    DISPLAY_CONTEXT         VARCHAR2(255)     DEFAULT 'ALL',
    INITIATIVE_METRIC_ID    NUMBER(10, 0)     NOT NULL,
    FLOW_SID                NUMBER(10, 0)     NOT NULL,
    INFO_TEXT               VARCHAR2(4000),
    CHECK (UPDATE_PER_PERIOD IN(0,1)),
    CHECK (DISPLAY_CONTEXT IN('ALL', 'CREATE', 'PORTLET')),
    CONSTRAINT PK_PROJECT_INITIATIVE_METRIC PRIMARY KEY (APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
)
;

CREATE TABLE CSR.PROJECT_INITIATIVE_PERIOD_STAT(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID                    NUMBER(10, 0)    NOT NULL,
    INITIATIVE_PERIOD_STATUS_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PROJECT_INIT_PERIOD_STAT PRIMARY KEY (APP_SID, PROJECT_SID, INITIATIVE_PERIOD_STATUS_ID)
)
;

CREATE TABLE CSR.PROJECT_TAG_FILTER(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID     NUMBER(10, 0)    NOT NULL,
    TAG_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    TAG_ID          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PROJECT_TAG_FILTER PRIMARY KEY (APP_SID, PROJECT_SID, TAG_GROUP_ID, TAG_ID)
)
;

CREATE TABLE CSR.PROJECT_TAG_GROUP(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID       NUMBER(10, 0)    NOT NULL,
    POS               NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    TAG_GROUP_ID      NUMBER(10, 0)    NOT NULL,
    DEFAULT_TAG_ID    NUMBER(10, 0),
    CONSTRAINT PK_PROJECT_TAG_GROUP PRIMARY KEY (APP_SID, PROJECT_SID, TAG_GROUP_ID)
)
;

CREATE TABLE CSR.PROPERTY_ADDRESS_OPTIONS(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ELEMENT_NAME    VARCHAR2(255)    NOT NULL,
    MANDATORY       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_PROPERTY_ADDRESS_OPTIONS PRIMARY KEY (APP_SID, ELEMENT_NAME)
)
;

CREATE TABLE CSR.PROPERTY_CHARACTER_LAYOUT(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ELEMENT_NAME    VARCHAR2(255)    NOT NULL,
    POS             NUMBER(10, 0)    NOT NULL,
    COL             NUMBER(10, 0)    NOT NULL,
    IND_SID         NUMBER(10, 0),
    TAG_GROUP_ID    NUMBER(10, 0),
    CONSTRAINT CHK_PROP_CHAR_LAYT_IND_TG_GRP CHECK(
        (IND_SID IS NULL AND TAG_GROUP_ID IS NULL)
     OR (IND_SID IS NOT NULL AND TAG_GROUP_ID IS NULL)
     OR (IND_SID IS NULL AND TAG_GROUP_ID IS NOT NULL)),
    CONSTRAINT PK_PROPERTY_CHAR_LAYOUT PRIMARY KEY (APP_SID, ELEMENT_NAME)
)
;

CREATE UNIQUE INDEX CSR.IDX_PROP_CHR_LAYOUT_IND_SID ON CSR.PROPERTY_CHARACTER_LAYOUT(APP_SID, NVL(TO_CHAR(IND_SID), ELEMENT_NAME))
;

CREATE UNIQUE INDEX CSR.IDX_PROP_CHR_LAYOUT_TAG_GRP_ID ON CSR.PROPERTY_CHARACTER_LAYOUT(APP_SID, NVL(TO_CHAR(TAG_GROUP_ID), ELEMENT_NAME))
;

CREATE TABLE CSR.PROPERTY_DIVISION(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DIVISION_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID     NUMBER(10, 0)    NOT NULL,
    OWNERSHIP      NUMBER(10, 0)    NOT NULL,
    AREA           NUMBER(10, 0)    NOT NULL,
    START_DTM      TIMESTAMP(6)     NOT NULL,
    END_DTM        TIMESTAMP(6),
    CONSTRAINT PK_PROPERTY_DIVISION PRIMARY KEY (APP_SID, DIVISION_ID, REGION_SID, START_DTM)
)
;

CREATE TABLE CSR.PROPERTY_ELEMENT_LAYOUT(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    ELEMENT_NAME    VARCHAR2(255)    NOT NULL,
    POS             NUMBER(10, 0)    NOT NULL,
    IND_SID         NUMBER(10, 0),
    TAG_GROUP_ID    NUMBER(10, 0),
    CONSTRAINT CHK_PROP_EL_LAYOUT_IND_TG_GRP CHECK(
        (IND_SID IS NULL AND TAG_GROUP_ID IS NULL)
     OR (IND_SID IS NOT NULL AND TAG_GROUP_ID IS NULL)
     OR (IND_SID IS NULL AND TAG_GROUP_ID IS NOT NULL)),
    CONSTRAINT PK_PROPERTY_ELEMENT_LAYOUT PRIMARY KEY (APP_SID, ELEMENT_NAME)
)
;

CREATE UNIQUE INDEX CSR.IDX_PROP_EL_LAYOUT_IND_SID ON CSR.PROPERTY_ELEMENT_LAYOUT(APP_SID, NVL(TO_CHAR(IND_SID), ELEMENT_NAME))
;

CREATE UNIQUE INDEX CSR.IDX_PROP_EL_LAYOUT_TAG_GRP_ID ON CSR.PROPERTY_ELEMENT_LAYOUT(APP_SID, NVL(TO_CHAR(TAG_GROUP_ID), ELEMENT_NAME))
;

CREATE TABLE CSR.PROPERTY_FUND(
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    REGION_SID       NUMBER(10, 0)     NOT NULL,
    FUND_ID          NUMBER(10, 0)     NOT NULL,
    CONTAINER_SID    NUMBER(10, 0),
    CONSTRAINT PK_PROPERTY_FUND PRIMARY KEY (APP_SID, REGION_SID, FUND_ID)
)
;

CREATE INDEX CSR.IX_PROPERTY_FUND_FUND_ID ON CSR.PROPERTY_FUND(APP_SID, FUND_ID)
;

CREATE TABLE CSR.PROPERTY_FUND_OWNERSHIP (
    APP_SID							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	REGION_SID						NUMBER(10, 0) NOT NULL,
	FUND_ID							NUMBER(10, 0) NOT NULL,
	START_DTM						DATE NOT NULL,
	OWNERSHIP						NUMBER(29, 28) NOT NULL,
	CONSTRAINT PK_PROPERTY_FUND_OWNERSHIP PRIMARY KEY (APP_SID, REGION_SID, FUND_ID, START_DTM),
    CONSTRAINT CK_OWNERSHIP CHECK (OWNERSHIP > 0 AND OWNERSHIP <= 1)
);

CREATE TABLE csr.property_gresb(
	app_sid			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	region_sid		NUMBER(10, 0)	NOT NULL,
	asset_id		NUMBER(10, 0)	NOT NULL,
	CONSTRAINT pk_property_gresb PRIMARY KEY (app_sid, region_sid),
	CONSTRAINT uk_property_gresb_asset_id UNIQUE (app_sid, asset_id)
);

CREATE TABLE CSR.PROPERTY_OPTIONS(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    PROPERTY_HELPER_PKG            VARCHAR2(255),
    FUND_COMPANY_TYPE_ID           NUMBER(10, 0)    DEFAULT NULL,
    PROPERTIES_GEO_MAP_SID         NUMBER(10, 0),
    GRESB_SERVICE_CONFIG           VARCHAR2(255),
    ENABLE_MULTI_FUND_OWNERSHIP    NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    AUTO_ASSIGN_MANAGER            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SHOW_INHERITED_ROLES           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_PROPERTY_OPTIONS PRIMARY KEY (APP_SID),
    CONSTRAINT CK_PROP_SHOW_INHERITED_ROLES CHECK(SHOW_INHERITED_ROLES IN (1, 0))
)
;

CREATE TABLE CSR.PROPERTY_PHOTO(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROPERTY_PHOTO_ID      NUMBER(10, 0)    NOT NULL,
    PROPERTY_REGION_SID    NUMBER(10, 0)    NOT NULL,
    SPACE_REGION_SID       NUMBER(10, 0),
    FILENAME               VARCHAR2(256)    NOT NULL,
    MIME_TYPE              VARCHAR2(255)    NOT NULL,
    DATA                   BLOB             NOT NULL,
    CONSTRAINT PK_PROPERTY_PHOTO PRIMARY KEY (APP_SID, PROPERTY_PHOTO_ID)
)
;

CREATE SEQUENCE CSR.PROPERTY_PHOTO_ID_SEQ;

CREATE TABLE CSR.PROPERTY_MANDATORY_ROLES (
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ROLE_SID                        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PROPERTY_MANDATORY_ROLES PRIMARY KEY (APP_SID, ROLE_SID)
);

CREATE TABLE CSR.PROPERTY_SUB_TYPE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROPERTY_SUB_TYPE_ID        NUMBER(10, 0)    NOT NULL,
    PROPERTY_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    LABEL                       VARCHAR2(255)    NOT NULL,
	GRESB_PROPERTY_TYPE_ID      NUMBER(10, 0),
	GRESB_PROPERTY_SUB_TYPE_ID  NUMBER(10, 0),
    CONSTRAINT PK_PROPERTY_SUB_TYPE PRIMARY KEY (APP_SID, PROPERTY_SUB_TYPE_ID),
    CONSTRAINT UK_PROPERTY_SUB_TYPE UNIQUE (APP_SID, PROPERTY_TYPE_ID, PROPERTY_SUB_TYPE_ID)
)
;

CREATE SEQUENCE CSR.PROPERTY_SUB_TYPE_ID_SEQ;

CREATE TABLE CSR.PROPERTY_TAB(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PLUGIN_ID         NUMBER(10, 0)    NOT NULL,
    PLUGIN_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    POS               NUMBER(10, 0)    NOT NULL,
    TAB_LABEL         VARCHAR2(50),
    CONSTRAINT PK_PROPERTY_TAB PRIMARY KEY (APP_SID, PLUGIN_ID),
    CONSTRAINT CHK_PROPERTY_TAB_PLUGIN_TYPE CHECK (PLUGIN_TYPE_ID=1)
)
;

CREATE TABLE CSR.PROPERTY_TAB_GROUP(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PLUGIN_ID    NUMBER(10, 0)    NOT NULL,
    GROUP_SID    NUMBER(10, 0),
    ROLE_SID     NUMBER(10, 0),
    CONSTRAINT PK_PROPERTY_TAB_GROUP PRIMARY KEY (APP_SID, PLUGIN_ID, GROUP_SID),
    CONSTRAINT CHK_PRPTY_TAB_GROUP_GRP_ROLE CHECK ((GROUP_SID IS NULL AND ROLE_SID IS NOT NULL) OR (GROUP_SID IS NOT NULL AND ROLE_SID IS NULL))
)
;

CREATE TABLE CSR.PROPERTY_TYPE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROPERTY_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    LABEL                       VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY                  VARCHAR2(255),
    GRESB_PROPERTY_TYPE_ID      NUMBER(10, 0),
    CONSTRAINT PK_PROPERTY_TYPE PRIMARY KEY (APP_SID, PROPERTY_TYPE_ID)
)
;

CREATE SEQUENCE CSR.PROPERTY_TYPE_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_PROPERTY_TYPE ON CSR.PROPERTY_TYPE(APP_SID, UPPER(LABEL))
;

CREATE UNIQUE INDEX CSR.UK_PROPERTY_TYPE_LOOKUP_KEY ON CSR.PROPERTY_TYPE(APP_SID, NVL(UPPER(LOOKUP_KEY),'PT'||TO_CHAR(PROPERTY_TYPE_ID)))
;

CREATE TABLE CSR.PROPERTY_TYPE_SPACE_TYPE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROPERTY_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    SPACE_TYPE_ID       NUMBER(10, 0)    NOT NULL,
    IS_HIDDEN           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_PT_ST_HIDDEN CHECK (IS_HIDDEN IN (0,1)),
    CONSTRAINT PK_PROP_TYPE_SPACE_TYPE PRIMARY KEY (APP_SID, PROPERTY_TYPE_ID, SPACE_TYPE_ID)
)
;

CREATE TABLE CSR.PROP_TYPE_PROP_TAB (
	APP_SID				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PROPERTY_TYPE_ID	NUMBER(10) NOT NULL,
	PLUGIN_ID			NUMBER(10) NOT NULL,
	CONSTRAINT PK_PROP_TYPE_PROP_TAB PRIMARY KEY (APP_SID, PROPERTY_TYPE_ID, PLUGIN_ID),
	CONSTRAINT FK_PROP_TYPE_PROP_TAB FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID) REFERENCES CSR.PROPERTY_TYPE(APP_SID, PROPERTY_TYPE_ID),
	CONSTRAINT FK_PLUGIN_PROP_TAB FOREIGN KEY (PLUGIN_ID) REFERENCES CSR.PLUGIN(PLUGIN_ID)
)
;

CREATE TABLE CSR.PROVISION(
    PROVISION_ID    NUMBER(10, 0)    NOT NULL,
    LABEL           VARCHAR2(40)     NOT NULL,
    CONSTRAINT PK_PROVISION PRIMARY KEY (PROVISION_ID)
)
;

CREATE TABLE CSR.PVC_REGION_RECALC_JOB(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_IND_ID        NUMBER(10, 0)    NOT NULL,
    PENDING_DATASET_ID    NUMBER(10, 0)    NOT NULL,
    PROCESSING            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_PVC_REGION_RECALC_JOB PRIMARY KEY (APP_SID, PENDING_IND_ID, PENDING_DATASET_ID, PROCESSING)
)
;

CREATE TABLE CSR.PVC_STORED_CALC_JOB(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PENDING_DATASET_ID     NUMBER(10, 0)    NOT NULL,
    CALC_PENDING_IND_ID    NUMBER(10, 0)    NOT NULL,
    PENDING_REGION_ID      NUMBER(10, 0)    NOT NULL,
    PENDING_PERIOD_ID      NUMBER(10, 0)    NOT NULL,
    PROCESSING             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_PVC_STORED_CALC_JOB PRIMARY KEY (APP_SID, PENDING_DATASET_ID, CALC_PENDING_IND_ID, PENDING_REGION_ID, PENDING_PERIOD_ID, PROCESSING)
)
;

CREATE TABLE CSR.QUESTION_TYPE(
    QUESTION_TYPE    VARCHAR2(20)     NOT NULL,
    LABEL            VARCHAR2(255)    NOT NULL,
    ANSWER_TYPE      VARCHAR2(10),
    CONSTRAINT CK_QUES_TYPE_ANS_TYPE CHECK (ANSWER_TYPE IN ('val','option')),
    CONSTRAINT PK_QUESTION_TYPE PRIMARY KEY (QUESTION_TYPE)
)
;

CREATE TABLE CSR.QUESTION(
	APP_SID					NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	QUESTION_ID				NUMBER(10, 0)	 NOT NULL,
	OWNED_BY_SURVEY_SID		NUMBER(10, 0)	 NULL,
	QUESTION_TYPE			VARCHAR2(20)	 NOT NULL,
	CUSTOM_QUESTION_TYPE_ID	NUMBER(10, 0),
	LOOKUP_KEY				VARCHAR2(255),
	MAPS_TO_IND_SID			NUMBER(10, 0),
	MEASURE_SID				NUMBER(10, 0),
	LATEST_QUESTION_VERSION	NUMBER(10) NOT NULL,
	LATEST_QUESTION_DRAFT	NUMBER(1) NOT NULL,
	CONSTRAINT PK_QUESTION PRIMARY KEY (APP_SID, QUESTION_ID),
	CONSTRAINT CONS_QUESTION_MEASURE UNIQUE (APP_SID, QUESTION_ID, MEASURE_SID),
	CONSTRAINT CHK_Q_CUSTOM_QUESTION_ID CHECK ((QUESTION_TYPE!='custom' AND CUSTOM_QUESTION_TYPE_ID IS NULL) OR (QUESTION_TYPE='custom' AND CUSTOM_QUESTION_TYPE_ID IS NOT NULL))
)
;

CREATE TABLE CSR.QUESTION_VERSION(
	APP_SID					NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	QUESTION_ID				NUMBER(10, 0)	 NOT NULL,
	QUESTION_VERSION		NUMBER(10, 0)	 NOT NULL,
	QUESTION_DRAFT			NUMBER(1)		 DEFAULT 1 NOT NULL,
	PARENT_ID				NUMBER(10, 0),
	PARENT_VERSION			NUMBER(10, 0),
	PARENT_DRAFT			NUMBER(10, 0),
	POS						NUMBER(10, 0),
	LABEL					VARCHAR2(4000),
	SCORE					NUMBER(13, 3),
	MAX_SCORE				NUMBER(10, 0),
	UPLOAD_SCORE			NUMBER(10, 0),
	WEIGHT					NUMBER(15, 5)	 DEFAULT 1 NOT NULL,
	DONT_NORMALISE_SCORE	NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	HAS_SCORE_EXPRESSION	NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	HAS_MAX_SCORE_EXPR		NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	REMEMBER_ANSWER			NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	COUNT_QUESTION			NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	ACTION					VARCHAR2(50),
	QUESTION_XML			CLOB 			 NOT NULL,
	CONSTRAINT CHK_QV_DNT_NORM_SC_0_1 CHECK (DONT_NORMALISE_SCORE IN (0,1)),
	CONSTRAINT CHK_QV_HAS_SC_EXPR_0_1 CHECK (HAS_SCORE_EXPRESSION IN (0,1)),
	CONSTRAINT CHK_QV_MAX_SC_EXPR_0_1 CHECK (HAS_MAX_SCORE_EXPR IN (0,1)),
	CONSTRAINT CHK_QV_QUESTION_DRAFT CHECK (QUESTION_DRAFT IN (0,1)),
	CONSTRAINT PK_QUESTION_VERSION PRIMARY KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT),
	CONSTRAINT FK_QUESTION_VERSION_QUESTION FOREIGN KEY (APP_SID, QUESTION_ID) REFERENCES CSR.QUESTION(APP_SID, QUESTION_ID),
	CONSTRAINT FK_QUESTION_VERSION_PARENT FOREIGN KEY (APP_SID, PARENT_ID) REFERENCES CSR.QUESTION(APP_SID, QUESTION_ID)
)
;

CREATE TABLE CSR.QUESTION_OPTION(
	APP_SID						NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	QUESTION_OPTION_ID			NUMBER(10, 0)	 NOT NULL,
	QUESTION_ID					NUMBER(10, 0)	 NOT NULL,
	QUESTION_VERSION			NUMBER(10, 0)	 NOT NULL,
	QUESTION_DRAFT				NUMBER(1)		 NOT NULL,
	POS							NUMBER(10, 0)	 DEFAULT 0 NOT NULL,
	LABEL						VARCHAR2(4000)	 NOT NULL,
    SCORE						NUMBER(13, 3),
	COLOR						NUMBER(10, 0),
	LOOKUP_KEY					VARCHAR2(1000),
	MAPS_TO_IND_SID				NUMBER(10, 0),
	OPTION_ACTION				VARCHAR2(50),
	NON_COMPLIANCE_POPUP		NUMBER(1, 0),
	NON_COMP_DEFAULT_ID			NUMBER(10, 0),
	NON_COMPLIANCE_TYPE_ID		NUMBER(10, 0),
	NON_COMPLIANCE_LABEL		VARCHAR2(255),
	NON_COMPLIANCE_DETAIL		VARCHAR2(4000),
	NON_COMP_ROOT_CAUSE			VARCHAR2(4000),
	NON_COMP_SUGGESTED_ACTION	VARCHAR2(4000),
	QUESTION_OPTION_XML			CLOB 			 NOT NULL,
	CONSTRAINT CHK_QO_NON_COMP_POPUP_0_1 CHECK (NON_COMPLIANCE_POPUP IN (0,1)),
	CONSTRAINT PK_QUESTION_OPTION PRIMARY KEY (APP_SID, QUESTION_OPTION_ID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT)
)
;

CREATE SEQUENCE CSR.QUESTION_OPTION_ID_SEQ;

CREATE TABLE CSR.QUESTION_OPTION_NC_TAG(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QUESTION_ID           NUMBER(10, 0)    NOT NULL,
    QUESTION_OPTION_ID    NUMBER(10, 0)    NOT NULL,
    QUESTION_VERSION      NUMBER(10, 0)    NOT NULL,
    QUESTION_DRAFT        NUMBER(1)        NOT NULL,
    TAG_ID                NUMBER(10, 0)    NOT NULL,
	CONSTRAINT CHK_QONT_QUESTION_DRAFT CHECK (QUESTION_DRAFT IN (0,1)),
	CONSTRAINT PK_QUESTION_OPTION_NC_TAG PRIMARY KEY (APP_SID, QUESTION_ID, QUESTION_OPTION_ID, QUESTION_VERSION, QUESTION_DRAFT, TAG_ID)
)
;

CREATE TABLE CSR.QUESTION_TAG(
    APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    QUESTION_ID			NUMBER(10, 0)	NOT NULL,
    QUESTION_VERSION	NUMBER(10, 0)	NOT NULL,
    TAG_ID				NUMBER(10, 0)	NOT NULL,
	QUESTION_DRAFT		NUMBER(1)		DEFAULT 0 NOT NULL,
	SHOW_IN_SURVEY		NUMBER(1)		DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_QT_QUESTION_DRAFT CHECK (QUESTION_DRAFT IN (0,1)),
    CONSTRAINT PK_QUESTION_TAG PRIMARY KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, TAG_ID),
	CONSTRAINT CHK_QT_SHOW_IN_SURVEY CHECK (SHOW_IN_SURVEY IN (0,1))
)
;

CREATE TABLE CSR.QS_ANSWER_FILE(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QS_ANSWER_FILE_ID     NUMBER(10, 0)     NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)     NOT NULL,
    QUESTION_ID           NUMBER(10, 0)     NOT NULL,
    QUESTION_VERSION      NUMBER(10, 0)     NOT NULL,
    FILENAME              VARCHAR2(255)     NOT NULL,
    MIME_TYPE             VARCHAR2(256)     NOT NULL,
    SHA1                  RAW(20)           NOT NULL,
    CAPTION               VARCHAR2(1023),
    SURVEY_SID            NUMBER(10, 0)     NOT NULL,
    SURVEY_VERSION        NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_QS_ANSWER_FILE PRIMARY KEY (APP_SID, QS_ANSWER_FILE_ID),
    CONSTRAINT UK_QS_ANSWER_FILE UNIQUE (APP_SID, QS_ANSWER_FILE_ID, SURVEY_RESPONSE_ID),
    CONSTRAINT UK_QS_ANSWER_FILE_A UNIQUE (APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID, SHA1, FILENAME, MIME_TYPE)
)
;

CREATE SEQUENCE CSR.QS_ANSWER_FILE_ID_SEQ;

CREATE INDEX CSR.IX_QS_ANS_FILE_RESP_ID ON CSR.QS_ANSWER_FILE(APP_SID, SURVEY_RESPONSE_ID)
;

CREATE TABLE CSR.QS_ANSWER_LOG(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QS_ANSWER_LOG_ID      NUMBER(10, 0)     NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)     NOT NULL,
    SET_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    SET_BY_USER_SID       NUMBER(10, 0)     NOT NULL,
    SUBMISSION_ID         NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    QUESTION_ID           NUMBER(10, 0)     NOT NULL,
    QUESTION_VERSION      NUMBER(10, 0)     NOT NULL,
    VERSION_STAMP         NUMBER(10, 0)     DEFAULT(0) NOT NULL,
    LOG_ITEM              CLOB,
    CONSTRAINT PK_PENDING_VAL_LOG_1 PRIMARY KEY (APP_SID, QS_ANSWER_LOG_ID)
)
;

CREATE SEQUENCE CSR.QS_ANSWER_LOG_ID_SEQ;

CREATE INDEX CSR.IX_QS_ANSWER_LOG_DATE ON CSR.QS_ANSWER_LOG(APP_SID, SURVEY_RESPONSE_ID, SET_DTM DESC, SET_BY_USER_SID)
;

CREATE INDEX CSR.IX_QS_ANS_LOG_ANS ON CSR.QS_ANSWER_LOG(APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID, SUBMISSION_ID)
;

CREATE TABLE CSR.QS_CUSTOM_QUESTION_TYPE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOM_QUESTION_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION                VARCHAR2(255)    NOT NULL,
    JS_INCLUDE                 VARCHAR2(255)    NOT NULL,
    JS_CLASS                   VARCHAR2(255)    NOT NULL,
    CS_CLASS                   VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_QS_CUST_QUESTION_TYPE PRIMARY KEY (APP_SID, CUSTOM_QUESTION_TYPE_ID),
    CONSTRAINT UK_CUST_QUEST_TYPE_JS_CLASS UNIQUE (APP_SID, JS_CLASS)
)
;

CREATE SEQUENCE CSR.CUSTOM_QUESTION_TYPE_ID_SEQ;

CREATE TABLE CSR.QS_EXPR_MSG_ACTION(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QS_EXPR_MSG_ACTION_ID    NUMBER(10, 0)     NOT NULL,
    MSG                      VARCHAR2(4000)    NOT NULL,
    CSS_CLASS                VARCHAR2(255)     NOT NULL,
    CONSTRAINT PK_QS_EXPR_MSG_ACTION PRIMARY KEY (APP_SID, QS_EXPR_MSG_ACTION_ID)
)
;

CREATE SEQUENCE CSR.QS_EXPR_MSG_ACTION_ID_SEQ;

CREATE TABLE CSR.QS_EXPR_NC_ACTION_INVOLVE_ROLE(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QS_EXPR_NON_COMPL_ACTION_ID    NUMBER(10, 0)    NOT NULL,
    INVOLVE_ROLE_SID               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_QS_EXPR_NC_ACTION_INV PRIMARY KEY (APP_SID, QS_EXPR_NON_COMPL_ACTION_ID, INVOLVE_ROLE_SID)
)
;

CREATE SEQUENCE CSR.QS_EXPR_NC_ACTION_ID_SEQ;

CREATE TABLE CSR.QS_EXPR_NON_COMPL_ACTION(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QS_EXPR_NON_COMPL_ACTION_ID    NUMBER(10, 0)     NOT NULL,
    ASSIGN_TO_ROLE_SID             NUMBER(10, 0),
    DUE_DTM_ABS                    DATE,
    DUE_DTM_RELATIVE               NUMBER(10, 0),
    DUE_DTM_RELATIVE_UNIT          VARCHAR2(1),
    TITLE                          VARCHAR2(2048)    NOT NULL,
    DETAIL                         VARCHAR2(2048),
    SEND_EMAIL_ON_CREATION         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    NON_COMP_DEFAULT_ID            NUMBER(10, 0),
    NON_COMPLIANCE_TYPE_ID         NUMBER(10, 0),
    CONSTRAINT CHK_QS_EXPR_NC_ACT_DUE_DTM CHECK ((DUE_DTM_RELATIVE IS NULL AND DUE_DTM_RELATIVE_UNIT IS NULL) OR (DUE_DTM_RELATIVE IS NOT NULL AND DUE_DTM_RELATIVE_UNIT IS NOT NULL)),
    CONSTRAINT CHK_NC_DUE_DTM_REL_UNIT CHECK (DUE_DTM_RELATIVE_UNIT IN ('d','m')),
    CONSTRAINT PK_QS_EXPR_NC_ACTION PRIMARY KEY (APP_SID, QS_EXPR_NON_COMPL_ACTION_ID)
)
;

CREATE TABLE CSR.QS_FILTER_COND_GEN_TYPE(
    QS_FILTER_COND_GEN_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONDITION_CLASS               VARCHAR2(50)     NOT NULL,
    QUESTION_LABEL                VARCHAR2(100)    NOT NULL,
    CONSTRAINT PK_QS_FILTER_COND_GEN_TYPE PRIMARY KEY (QS_FILTER_COND_GEN_TYPE_ID)
)
;

CREATE SEQUENCE CSR.QS_FILTER_CONDITION_ID_SEQ;

CREATE TABLE CSR.QS_FILTER_CONDITION(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    FILTER_ID                 NUMBER(10, 0)     NOT NULL,
    QS_FILTER_CONDITION_ID    NUMBER(10, 0)     NOT NULL,
    POS                       NUMBER(10, 0)     NOT NULL,
    SURVEY_SID                NUMBER(10, 0)     NOT NULL,
    QUESTION_ID               NUMBER(10, 0)     NOT NULL,
    QUESTION_VERSION          NUMBER(10, 0)     NOT NULL,
    COMPARATOR                VARCHAR2(20),
    COMPARE_TO_STR_VAL        VARCHAR2(2047),
    COMPARE_TO_NUM_VAL        NUMBER(10, 0),
    COMPARE_TO_OPTION_ID      NUMBER(10, 0),
    SURVEY_VERSION            NUMBER(10, 0)     NOT NULL,
    QS_CAMPAIGN_SID           NUMBER(10),
    CONSTRAINT PK_QS_FILTER_CONDITION PRIMARY KEY (APP_SID, QS_FILTER_CONDITION_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_QS_FILTER_CONDITION ON CSR.QS_FILTER_CONDITION (APP_SID, FILTER_ID, POS, NVL(QS_CAMPAIGN_SID, SURVEY_SID));

CREATE SEQUENCE CSR.QS_FILTER_CONDITION_GEN_ID_SEQ;

CREATE TABLE CSR.QS_FILTER_CONDITION_GENERAL(
    APP_SID                           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    FILTER_ID                         NUMBER(10, 0)     NOT NULL,
    QS_FILTER_CONDITION_GENERAL_ID    NUMBER(10, 0)     NOT NULL,
    POS                               NUMBER(10, 0)     NOT NULL,
    SURVEY_SID                        NUMBER(10, 0)     NOT NULL,
    QS_FILTER_COND_GEN_TYPE_ID        NUMBER(10, 0)     NOT NULL,
    COMPARATOR                        VARCHAR2(20),
    COMPARE_TO_STR_VAL                VARCHAR2(2047),
    COMPARE_TO_NUM_VAL                NUMBER(10, 0),
    QS_CAMPAIGN_SID                   NUMBER(10),
    CONSTRAINT PK_QS_FILTER_CONDITION_GENERAL PRIMARY KEY (APP_SID, QS_FILTER_CONDITION_GENERAL_ID)
)
;

CREATE INDEX CSR.IX_QS_FILTER_COND_GEN_SURVEY ON CSR.QS_FILTER_CONDITION_GENERAL(APP_SID, SURVEY_SID)
;

CREATE UNIQUE INDEX CSR.UK_QS_FILTER_CONDITION_GENERAL ON CSR.QS_FILTER_CONDITION_GENERAL (APP_SID, FILTER_ID, POS, NVL(QS_CAMPAIGN_SID, SURVEY_SID));

CREATE TABLE CSR.QS_QUESTION_OPTION(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QUESTION_OPTION_ID           NUMBER(10, 0)     NOT NULL,
    QUESTION_ID                  NUMBER(10, 0)     NOT NULL,
    QUESTION_VERSION             NUMBER(10, 0)     NOT NULL,
    QUESTION_DRAFT               NUMBER(1)         DEFAULT 0 NOT NULL,
    PARENT_OPTION_ID             NUMBER(10, 0),
    POS                          NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    LABEL                        VARCHAR2(4000)    NOT NULL,
    IS_VISIBLE                   NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    SCORE                        NUMBER(13, 3),
    COLOR                        NUMBER(10, 0),
    LOOKUP_KEY                   VARCHAR2(1000),
    MAPS_TO_IND_SID              NUMBER(10, 0),
    OPTION_ACTION                VARCHAR2(50),
    SURVEY_SID                   NUMBER(10, 0)     NOT NULL,
    SURVEY_VERSION               NUMBER(10, 0)     NOT NULL,
    NON_COMPLIANCE_POPUP         NUMBER(1, 0),
    NON_COMP_DEFAULT_ID          NUMBER(10, 0),
    NON_COMPLIANCE_TYPE_ID       NUMBER(10, 0),
    NON_COMPLIANCE_LABEL         VARCHAR2(255),
    NON_COMPLIANCE_DETAIL        VARCHAR2(4000),
    NON_COMP_ROOT_CAUSE          VARCHAR2(4000),
    NON_COMP_SUGGESTED_ACTION    VARCHAR2(4000),
    CONSTRAINT CHK_NON_COMP_POPUP_0_1 CHECK (NON_COMPLIANCE_POPUP IN (0,1)),
    CONSTRAINT CHK_QS_QUES_OPT_VIS CHECK (IS_VISIBLE IN (0,1)),
	CONSTRAINT CHK_QSQO_QUESTION_DRAFT CHECK (QUESTION_DRAFT IN (0,1)),
    CONSTRAINT PK_QS_QUESTION_OPTION PRIMARY KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
)
;

CREATE SEQUENCE CSR.QS_QUESTION_OPTION_ID_SEQ;

CREATE INDEX CSR.IX_QS_Q_OPT_PARENT_OPT ON CSR.QS_QUESTION_OPTION(APP_SID, QUESTION_ID, PARENT_OPTION_ID, SURVEY_VERSION)
;

CREATE UNIQUE INDEX CSR.IX_QS_QUESTION_OPTION ON CSR.QS_QUESTION_OPTION(APP_SID, QUESTION_ID, SURVEY_VERSION, NVL(UPPER(LOOKUP_KEY),'QOID_'||TO_CHAR(QUESTION_OPTION_ID)))
;

CREATE INDEX CSR.IX_QSQ_OPTION_DEF_NON_COMP ON CSR.QS_QUESTION_OPTION(APP_SID, NON_COMP_DEFAULT_ID)
;

CREATE INDEX CSR.IX_QSQ_OPTION_NON_COMP_TYP ON CSR.QS_QUESTION_OPTION(APP_SID, NON_COMPLIANCE_TYPE_ID)
;

CREATE INDEX CSR.IX_QS_Q_OPT_ACTION ON CSR.QS_QUESTION_OPTION (APP_SID, OPTION_ACTION)
;

CREATE TABLE CSR.QS_QUESTION_OPTION_NC_TAG(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QUESTION_ID           NUMBER(10, 0)    NOT NULL,
    QUESTION_OPTION_ID    NUMBER(10, 0)    NOT NULL,
	QUESTION_VERSION	  NUMBER(10, 0)    NOT NULL,
	SURVEY_SID			  NUMBER(10, 0)    NOT NULL,
    SURVEY_VERSION        NUMBER(10, 0)    NOT NULL,
    TAG_ID                NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_QS_QUESTION_OPTION_NC_TAG PRIMARY KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION, TAG_ID)
)
;

CREATE INDEX CSR.IX_QSQ_OPT_TAG_OPTION ON CSR.QS_QUESTION_OPTION_NC_TAG(APP_SID, QUESTION_ID, QUESTION_OPTION_ID, SURVEY_VERSION)
;

CREATE INDEX CSR.IX_QSQ_OPT_TAG_TAG ON CSR.QS_QUESTION_OPTION_NC_TAG(APP_SID, TAG_ID)
;

CREATE TABLE CSR.QS_RESPONSE_FILE(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)    NOT NULL,
    FILENAME              VARCHAR2(255)    NOT NULL,
    MIME_TYPE             VARCHAR2(256)    NOT NULL,
    DATA                  BLOB             NOT NULL,
    SHA1                  RAW(20)          NOT NULL,
    UPLOADED_DTM          DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_QS_RESPONSE_FILE PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID, SHA1, FILENAME, MIME_TYPE)
)
;

CREATE INDEX CSR.IX_QS_RESP_FILE_BY_SHA1 ON CSR.QS_RESPONSE_FILE(APP_SID, SHA1, FILENAME, MIME_TYPE)
;

CREATE TABLE CSR.QS_RESPONSE_POSTIT(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)    NOT NULL,
    POSTIT_ID             NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_QS_RESPONSE_POSTIT PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID, POSTIT_ID)
)
;

CREATE TABLE CSR.QS_SUBMISSION_FILE(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QS_ANSWER_FILE_ID     NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)    NOT NULL,
    SUBMISSION_ID         NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    SURVEY_VERSION        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_QS_SUBMISSION_FILE PRIMARY KEY (APP_SID, QS_ANSWER_FILE_ID, SURVEY_RESPONSE_ID, SUBMISSION_ID)
)
;

CREATE TABLE CSR.QUICK_SURVEY(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_SID                    NUMBER(10, 0)    NOT NULL,
    CREATED_DTM                   DATE             DEFAULT SYSDATE NOT NULL,
    AUDIENCE                      VARCHAR2(32)     DEFAULT 'existing' NOT NULL,
    AGGREGATE_IND_GROUP_ID        NUMBER(10, 0),
    QUICK_SURVEY_TYPE_ID          NUMBER(10, 0),
    ROOT_IND_SID                  NUMBER(10, 0),
    SUBMISSION_VALIDITY_MONTHS    NUMBER(10, 0)    DEFAULT 36 NOT NULL,
    SCORE_TYPE_ID                 NUMBER(10, 0),
    LAST_MODIFIED_DTM             DATE             NOT NULL,
    CURRENT_VERSION               NUMBER(10, 0),
    AUDITING_AUDIT_TYPE_ID        NUMBER(10, 0),
    GROUP_KEY                     VARCHAR2(256),
    FROM_QUESTION_LIBRARY		  NUMBER(1) 	   DEFAULT 0 NOT NULL,
    LOOKUP_KEY                    VARCHAR2(256),
    CONSTRAINT CHK_QUICK_SURVEY_AUDIENCE CHECK (AUDIENCE IN ('everyone','existing','chain','audit','chain.product')),
    CONSTRAINT CHK_QS_VALID_MONTHS_POSITIVE CHECK (SUBMISSION_VALIDITY_MONTHS > 0),
    CONSTRAINT CHK_QUICK_SURVEY_CURR_VERSION CHECK (CURRENT_VERSION > 0),
    CONSTRAINT CHK_FROM_QUESTION_LIBRARY_0_1 CHECK (FROM_QUESTION_LIBRARY IN (0,1)),
    CONSTRAINT PK_QUICK_SURVEY PRIMARY KEY (APP_SID, SURVEY_SID)
)
;

CREATE INDEX CSR.IX_QS_AGG_GRP_ID ON CSR.QUICK_SURVEY(APP_SID, AGGREGATE_IND_GROUP_ID)
;

CREATE INDEX CSR.IX_QS_AUD_AUD_TYPE ON CSR.QUICK_SURVEY(APP_SID, AUDITING_AUDIT_TYPE_ID)
;

CREATE INDEX CSR.IX_QS_TYPE_ID ON CSR.QUICK_SURVEY(APP_SID, QUICK_SURVEY_TYPE_ID)
;

CREATE INDEX CSR.IX_QUICK_SURVEY_CURR_VERSION ON CSR.QUICK_SURVEY(APP_SID, SURVEY_SID, CURRENT_VERSION)
;

CREATE INDEX CSR.IX_QUICK_SURVEY_SCORE_TYPE ON CSR.QUICK_SURVEY(APP_SID, SCORE_TYPE_ID)
;

CREATE UNIQUE INDEX CSR.IX_QUICK_SURVEY_LK ON CSR.QUICK_SURVEY(APP_SID, NVL(UPPER(LOOKUP_KEY), 'QS:' || SURVEY_SID));

CREATE TABLE CSR.QUICK_SURVEY_ANSWER(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_RESPONSE_ID       NUMBER(10, 0)     NOT NULL,
    QUESTION_ID              NUMBER(10, 0)     NOT NULL,
    QUESTION_VERSION         NUMBER(10, 0)     NOT NULL,
    ANSWER                   CLOB,
    NOTE                     CLOB,
    SCORE                    NUMBER(15, 5),
    QUESTION_OPTION_ID       NUMBER(10, 0),
    VAL_NUMBER               NUMBER(24, 10),
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    REGION_SID               NUMBER(10, 0),
    HTML_DISPLAY             CLOB,
    MAX_SCORE                NUMBER(15, 5),
    VERSION_STAMP            NUMBER(10, 0)     NOT NULL,
    SUBMISSION_ID            NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    MEASURE_SID              NUMBER(10, 0),
    WEIGHT_OVERRIDE          NUMBER(15, 5),
    LOG_ITEM                 CLOB,
    SURVEY_SID               NUMBER(10, 0)     NOT NULL,
    SURVEY_VERSION           NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_QUICK_SURVEY_RESP_ANSWR PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID, SUBMISSION_ID)
)
;

CREATE SEQUENCE CSR.VERSION_STAMP_SEQ;

CREATE INDEX CSR.IX_QSA_SUBMSN_ID ON CSR.QUICK_SURVEY_ANSWER(APP_SID, SURVEY_RESPONSE_ID, SUBMISSION_ID, SURVEY_VERSION)
;

CREATE INDEX CSR.IX_QSQ_QSA_MEASUREX ON CSR.QUICK_SURVEY_ANSWER(APP_SID, QUESTION_ID, SURVEY_VERSION)
;

CREATE TABLE CSR.QUICK_SURVEY_CSS(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CLASS_NAME     VARCHAR2(1024)    NOT NULL,
    DESCRIPTION    VARCHAR2(1024)    NOT NULL,
    TYPE           NUMBER(1, 0)      NOT NULL,
    POSITION       NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_QUICK_SURVEY_CSS PRIMARY KEY (APP_SID, CLASS_NAME)
)
;

CREATE TABLE CSR.QUICK_SURVEY_EXPR(
	APP_SID							NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SURVEY_SID						NUMBER(10, 0)     NOT NULL,
	EXPR_ID							NUMBER(10, 0)     NOT NULL,
	EXPR							VARCHAR2(4000),
	SURVEY_VERSION					NUMBER(10, 0)     NOT NULL,
	QUESTION_ID						NUMBER(10),
	QUESTION_VERSION				NUMBER(10, 0)     NULL,
	QUESTION_OPTION_ID				NUMBER(10),
	CONSTRAINT CHK_QS_EXPR_OR_QUESTION CHECK (
		(EXPR IS NOT NULL AND QUESTION_ID IS NULL AND QUESTION_OPTION_ID IS NULL) OR
		(EXPR IS NULL AND QUESTION_ID IS NOT NULL AND QUESTION_OPTION_ID IS NOT NULL)),
    CONSTRAINT PK_QS_EXPR PRIMARY KEY (APP_SID, EXPR_ID, SURVEY_VERSION)
)
;

CREATE UNIQUE INDEX CSR.UK_QUICK_SURVEY_EXPR_QUESTION
	ON CSR.QUICK_SURVEY_EXPR (APP_SID, SURVEY_SID, SURVEY_VERSION, NVL2(EXPR, EXPR_ID, NULL), QUESTION_ID, QUESTION_OPTION_ID);

CREATE SEQUENCE CSR.EXPR_ID_SEQ;

CREATE INDEX CSR.IX_QS_QS_EXPR ON CSR.QUICK_SURVEY_EXPR(APP_SID, SURVEY_SID, SURVEY_VERSION)
;

CREATE TABLE CSR.QUICK_SURVEY_EXPR_ACTION(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QUICK_SURVEY_EXPR_ACTION_ID    NUMBER(10, 0)    NOT NULL,
    ACTION_TYPE                    VARCHAR2(20)     NOT NULL,
    SURVEY_SID                     NUMBER(10, 0)    NOT NULL,
    EXPR_ID                        NUMBER(10, 0)    NOT NULL,
    QS_EXPR_NON_COMPL_ACTION_ID    NUMBER(10, 0),
    QS_EXPR_MSG_ACTION_ID          NUMBER(10, 0),
    SHOW_QUESTION_ID               NUMBER(10, 0),
    SHOW_QUESTION_VERSION          NUMBER(10, 0),
    SURVEY_VERSION                 NUMBER(10, 0)    NOT NULL,
    MANDATORY_QUESTION_ID          NUMBER(10, 0),
    MANDATORY_QUESTION_VERSION     NUMBER(10, 0),
    SHOW_PAGE_ID                   NUMBER(10, 0),
    SHOW_PAGE_VERSION              NUMBER(10, 0),
    ISSUE_TEMPLATE_ID              NUMBER(10, 0) NULL,
    CONSTRAINT CHK_QS_EXPR_ACTION_TYPE_FK CHECK (
		(ACTION_TYPE = 'nc' AND QS_EXPR_NON_COMPL_ACTION_ID IS NOT NULL
		  AND QS_EXPR_MSG_ACTION_ID IS NULL AND SHOW_QUESTION_ID IS NULL
		  AND MANDATORY_QUESTION_ID IS NULL AND SHOW_PAGE_ID IS NULL
		  AND ISSUE_TEMPLATE_ID IS NULL)
		OR
		(ACTION_TYPE = 'msg' AND QS_EXPR_NON_COMPL_ACTION_ID IS NULL
		  AND QS_EXPR_MSG_ACTION_ID IS NOT NULL AND SHOW_QUESTION_ID IS NULL
		  AND MANDATORY_QUESTION_ID IS NULL AND SHOW_PAGE_ID IS NULL
		  AND ISSUE_TEMPLATE_ID IS NULL)
		OR
		(ACTION_TYPE = 'show_q' AND QS_EXPR_NON_COMPL_ACTION_ID IS NULL
		  AND QS_EXPR_MSG_ACTION_ID IS NULL AND SHOW_QUESTION_ID IS NOT NULL
		  AND MANDATORY_QUESTION_ID IS NULL AND SHOW_PAGE_ID IS NULL
		  AND ISSUE_TEMPLATE_ID IS NULL)
		OR
		(ACTION_TYPE = 'mand_q' AND QS_EXPR_NON_COMPL_ACTION_ID IS NULL
		  AND QS_EXPR_MSG_ACTION_ID IS NULL AND SHOW_QUESTION_ID IS NULL
		  AND MANDATORY_QUESTION_ID IS NOT NULL AND SHOW_PAGE_ID IS NULL
		  AND ISSUE_TEMPLATE_ID IS NULL)
		OR
		(ACTION_TYPE = 'show_p' AND QS_EXPR_NON_COMPL_ACTION_ID IS NULL
		  AND QS_EXPR_MSG_ACTION_ID IS NULL AND SHOW_QUESTION_ID IS NULL
		  AND MANDATORY_QUESTION_ID IS NULL AND SHOW_PAGE_ID IS NOT NULL
		  AND ISSUE_TEMPLATE_ID IS NULL)
		OR
		(ACTION_TYPE = 'issue' AND QS_EXPR_NON_COMPL_ACTION_ID IS NULL
		  AND QS_EXPR_MSG_ACTION_ID IS NULL AND SHOW_QUESTION_ID IS NULL
		  AND MANDATORY_QUESTION_ID IS NULL AND SHOW_PAGE_ID IS NULL
		  AND ISSUE_TEMPLATE_ID IS NOT NULL)
	),
    CONSTRAINT PK_QS_EXPR_ACTION PRIMARY KEY (APP_SID, QUICK_SURVEY_EXPR_ACTION_ID),
    CONSTRAINT UK_QS_EXPR_ACTION UNIQUE (APP_SID, QUICK_SURVEY_EXPR_ACTION_ID, SURVEY_SID, SURVEY_VERSION, EXPR_ID)
)
;

CREATE SEQUENCE CSR.QS_EXPR_ACTION_ID_SEQ;

CREATE INDEX CSR.IX_QS_EXPR_QS_EXPR_ACTION ON CSR.QUICK_SURVEY_EXPR_ACTION(APP_SID, EXPR_ID, SURVEY_VERSION)
;

CREATE TABLE CSR.QUICK_SURVEY_LANG(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_SID    NUMBER(10, 0)    NOT NULL,
    LANG          VARCHAR2(10)     NOT NULL,
    CONSTRAINT PK_QS_LANG PRIMARY KEY (APP_SID, SURVEY_SID, LANG)
)
;

CREATE TABLE CSR.QUICK_SURVEY_QUESTION(
    APP_SID                    NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QUESTION_ID                NUMBER(10, 0)     NOT NULL,
    QUESTION_VERSION           NUMBER(10, 0)     NOT NULL,
    QUESTION_DRAFT             NUMBER(1)         DEFAULT 0 NOT NULL,
    SURVEY_VERSION             NUMBER(10, 0)     NOT NULL,
    PARENT_ID                  NUMBER(10, 0),
    PARENT_VERSION             NUMBER(10, 0),
    SURVEY_SID                 NUMBER(10, 0)     NOT NULL,
    POS                        NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    LABEL                      VARCHAR2(4000),
    IS_VISIBLE                 NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    QUESTION_TYPE              VARCHAR2(20)      NOT NULL,
    SCORE                      NUMBER(13, 3),
    LOOKUP_KEY                 VARCHAR2(255),
    MAPS_TO_IND_SID            NUMBER(10, 0),
    MAX_SCORE                  NUMBER(10, 0),
    UPLOAD_SCORE               NUMBER(10, 0),
    CUSTOM_QUESTION_TYPE_ID    NUMBER(10, 0),
    WEIGHT                     NUMBER(15, 5)     DEFAULT 1 NOT NULL,
    MEASURE_SID                NUMBER(10, 0),
    DONT_NORMALISE_SCORE       NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    HAS_SCORE_EXPRESSION       NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    HAS_MAX_SCORE_EXPR         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    REMEMBER_ANSWER            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    COUNT_QUESTION             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
	ACTION					   VARCHAR2(50),
    CONSTRAINT CHK_QSQ_DNT_NORM_SC_0_1 CHECK (DONT_NORMALISE_SCORE IN (0,1)),
    CONSTRAINT CHK_QSQ_HAS_SC_EXPR_0_1 CHECK (HAS_SCORE_EXPRESSION IN (0,1)),
    CONSTRAINT CHK_QSQ_MAX_SC_EXPR_0_1 CHECK (HAS_MAX_SCORE_EXPR IN (0,1)),
    CONSTRAINT CHK_QSQ_COUNT_QUESTION CHECK (COUNT_QUESTION = 0 OR (COUNT_QUESTION = 1 AND QUESTION_TYPE
        IN ('note', 'date', 'number', 'radio', 'radiorow', 'regionpicker', 'files', 'richtext', 'slider'))),
    CONSTRAINT CK_QSQ_IS_VISIBLE CHECK (IS_VISIBLE IN (0,1)),
	CONSTRAINT CHK_QSQ_QUESTION_DRAFT CHECK (QUESTION_DRAFT IN (0,1)),
    CONSTRAINT CHK_CUSTOM_QUESTION_ID CHECK ((QUESTION_TYPE!='custom' AND CUSTOM_QUESTION_TYPE_ID IS NULL) OR (QUESTION_TYPE='custom' AND CUSTOM_QUESTION_TYPE_ID IS NOT NULL)),
    CONSTRAINT PK_QUICK_SURVEY_QUESTION PRIMARY KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION),
    CONSTRAINT CONS_QS_QUES_MEASURE UNIQUE (APP_SID, QUESTION_ID, SURVEY_VERSION, MEASURE_SID),
	CONSTRAINT CHK_QSQ_PARENT CHECK ((PARENT_ID IS NULL AND PARENT_VERSION IS NULL) OR (PARENT_ID IS NOT NULL AND PARENT_VERSION IS NOT NULL)),
	CONSTRAINT UK_QSQ UNIQUE (APP_SID, QUESTION_ID, SURVEY_SID, SURVEY_VERSION)
)
;

CREATE SEQUENCE CSR.QUESTION_ID_SEQ;

CREATE INDEX CSR.IX_QS_QUEST_CUSTOM_TYPE_ID ON CSR.QUICK_SURVEY_QUESTION(APP_SID, CUSTOM_QUESTION_TYPE_ID)
;

CREATE UNIQUE INDEX CSR.IX_QS_QUESTION ON CSR.QUICK_SURVEY_QUESTION(APP_SID, SURVEY_SID, SURVEY_VERSION, NVL(UPPER(LOOKUP_KEY),'QID_'||TO_CHAR(QUESTION_ID)))
;

CREATE INDEX CSR.IX_QS_QUESTION_LOOKUP ON CSR.QUICK_SURVEY_QUESTION(APP_SID, SURVEY_SID, SURVEY_VERSION, UPPER(LOOKUP_KEY))
;

CREATE INDEX CSR.IX_QS_QUESTION_ACTION ON CSR.QUICK_SURVEY_QUESTION (APP_SID, ACTION)
;

CREATE TABLE CSR.QUICK_SURVEY_QUESTION_TAG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    QUESTION_ID       NUMBER(10, 0)    NOT NULL,
    QUESTION_VERSION  NUMBER(10, 0)    NOT NULL,
    SURVEY_SID        NUMBER(10, 0)    NOT NULL,
    SURVEY_VERSION    NUMBER(10, 0)    NOT NULL,
    TAG_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_QS_QUESTION_TAG PRIMARY KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION, TAG_ID)
)
;

CREATE TABLE CSR.QUICK_SURVEY_RESPONSE(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_RESPONSE_ID       NUMBER(10, 0)    NOT NULL,
    SURVEY_SID               NUMBER(10, 0)    NOT NULL,
    USER_SID                 NUMBER(10, 0),
    USER_NAME                VARCHAR2(255),
    CREATED_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    GUID                     VARCHAR2(36)     NOT NULL,
    QS_CAMPAIGN_SID          NUMBER(10, 0),
    LAST_SUBMISSION_ID       NUMBER(10, 0),
    SURVEY_VERSION           NUMBER(10, 0)    NOT NULL,
    QUESTION_XML_OVERRIDE    CLOB,
    HIDDEN                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_QS_RESPONSE_HIDDEN_0_1 CHECK (HIDDEN IN (0,1)),
    CONSTRAINT PK_QUICK_SURVEY_RESPONSE PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID),
    CONSTRAINT UK_QUICK_SURVEY_RESPONSE UNIQUE (APP_SID, SURVEY_SID, SURVEY_RESPONSE_ID)
)
;

CREATE SEQUENCE CSR.SURVEY_RESPONSE_ID_SEQ CACHE 5;

CREATE INDEX CSR.IX_QS_RESP_LAST_SUBMSN ON CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID, LAST_SUBMISSION_ID)
;

CREATE TABLE CSR.QUICK_SURVEY_SCORE_THRESHOLD(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_SID            NUMBER(10, 0)    NOT NULL,
    SCORE_THRESHOLD_ID    NUMBER(10, 0)    NOT NULL,
    MAPS_TO_IND_SID       NUMBER(10, 0),
    CONSTRAINT PK_QUICK_SURVEY_SCORE_THRESHOL PRIMARY KEY (APP_SID, SURVEY_SID, SCORE_THRESHOLD_ID)
)
;

CREATE TABLE CSR.QUICK_SURVEY_SUBMISSION(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_RESPONSE_ID       NUMBER(10, 0)    NOT NULL,
    SUBMISSION_ID            NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    SUBMITTED_DTM            DATE,
    SUBMITTED_BY_USER_SID    NUMBER(10, 0),
    OVERALL_SCORE            NUMBER(15, 5),
    OVERALL_MAX_SCORE        NUMBER(15, 5),
    SCORE_THRESHOLD_ID       NUMBER(10, 0),
    SURVEY_VERSION           NUMBER(10, 0)    NOT NULL,
    GEO_LATITUDE             NUMBER(24,10),
    GEO_LONGITUDE            NUMBER(24,10),
    GEO_ALTITUDE             NUMBER(24,10),
    GEO_H_ACCURACY           NUMBER(24,10),
    GEO_V_ACCURACY           NUMBER(24,10),
    CONSTRAINT PK_QUICK_SURVEY_SUBMISSION PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID, SUBMISSION_ID, SURVEY_VERSION),
    CONSTRAINT UK_QUICK_SURVEY_SUBMISSION UNIQUE (APP_SID, SURVEY_RESPONSE_ID, SUBMISSION_ID),
    CONSTRAINT CK_QSS_GEOLOCATION CHECK ((
        (GEO_LATITUDE IS NULL AND GEO_LONGITUDE IS NULL AND GEO_H_ACCURACY IS NULL) OR
        (GEO_LATITUDE IS NOT NULL AND GEO_LONGITUDE IS NOT NULL AND GEO_H_ACCURACY IS NOT NULL)
    ) AND (
        (GEO_ALTITUDE IS NULL AND GEO_V_ACCURACY IS NULL) OR
        (GEO_ALTITUDE IS NOT NULL AND GEO_V_ACCURACY IS NOT NULL)
    ))
)
;

CREATE SEQUENCE CSR.QS_SUBMISSION_ID_SEQ;

CREATE INDEX CSR.IX_QSS_THRES_ID ON CSR.QUICK_SURVEY_SUBMISSION(APP_SID, SCORE_THRESHOLD_ID)
;

CREATE TABLE CSR.QUICK_SURVEY_TYPE(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QUICK_SURVEY_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    DESCRIPTION              VARCHAR2(255)    NOT NULL,
    CS_CLASS                 VARCHAR2(255)    NULL,
    HELPER_PKG               VARCHAR2(255),
    ENABLE_QUESTION_COUNT    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SHOW_ANSWER_SET_DTM      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	OTHER_TEXT_REQ_FOR_SCORE NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TEAROFF_TOOLBAR          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	CAPTURE_GEO_LOCATION     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	ENABLE_RESPONSE_IMPORT	 NUMBER(1, 0) DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_QST_ENABLE_QUESTION_COUNT CHECK (ENABLE_QUESTION_COUNT IN (0,1)),
    CONSTRAINT PK_QS_TYPE PRIMARY KEY (APP_SID, QUICK_SURVEY_TYPE_ID),
	CONSTRAINT CHK_QST_OTH_TXT_REQ_FOR_SCORE CHECK (OTHER_TEXT_REQ_FOR_SCORE IN (0,1)),
    CONSTRAINT CHK_TEAROFF_TOOLBAR CHECK (TEAROFF_TOOLBAR IN (0,1)),
    CONSTRAINT CHK_CAPTURE_GEO_LOCATION CHECK (CAPTURE_GEO_LOCATION IN (0,1))
)
;

CREATE SEQUENCE CSR.QUICK_SURVEY_TYPE_ID_SEQ;

CREATE TABLE CSR.QUICK_SURVEY_VERSION(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_SID          NUMBER(10, 0)    NOT NULL,
    SURVEY_VERSION      NUMBER(10, 0)    NOT NULL,
    QUESTION_XML        CLOB             NOT NULL,
    LABEL               VARCHAR2(256)    NOT NULL,
    START_DTM           DATE,
    END_DTM             DATE,
    PUBLISHED_DTM       DATE,
    PUBLISHED_BY_SID    NUMBER(10, 0),
    CONSTRAINT PK_QUICK_SURVEY_VERSION PRIMARY KEY (APP_SID, SURVEY_SID, SURVEY_VERSION)
)
;

CREATE INDEX CSR.IX_QS_VERSION_SURVEY ON CSR.QUICK_SURVEY_VERSION(APP_SID, SURVEY_SID)
;

CREATE TABLE CSR.R_REPORT(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    R_REPORT_SID             NUMBER(10, 0)    NOT NULL,
    R_REPORT_TYPE_ID         NUMBER(10, 0)    NOT NULL,
    JS_DATA                  CLOB,
    REQUESTED_BY_USER_SID    NUMBER(10, 0)    NOT NULL,
    PREPARED_DTM             DATE             NOT NULL,
    CONSTRAINT PK_R_REPORT PRIMARY KEY (APP_SID, R_REPORT_SID)
)
;

CREATE TABLE CSR.R_REPORT_FILE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    R_REPORT_FILE_ID    NUMBER(10, 0)    NOT NULL,
    R_REPORT_SID        NUMBER(10, 0)    NOT NULL,
    SHOW_AS_TAB         NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SHOW_AS_DOWNLOAD    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    TITLE               VARCHAR2(255)    NOT NULL,
    FILENAME            VARCHAR2(255)    NOT NULL,
    MIME_TYPE           VARCHAR2(255)    NOT NULL,
    DATA                BLOB             NOT NULL,
    CONSTRAINT PK_R_REPORT_FILE PRIMARY KEY (APP_SID, R_REPORT_FILE_ID),
    CONSTRAINT CK_R_REPORT_FILE_TAB CHECK (SHOW_AS_TAB IN (0, 1)),
    CONSTRAINT CK_R_REPORT_FILE_DL CHECK (SHOW_AS_DOWNLOAD IN (0, 1)),
    CONSTRAINT CK_R_REPORT_FILE_VISIBLE CHECK (SHOW_AS_TAB = 1 OR SHOW_AS_DOWNLOAD = 1)
)
;

CREATE SEQUENCE CSR.R_REPORT_FILE_ID_SEQ;

CREATE TABLE CSR.R_REPORT_JOB(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    BATCH_JOB_ID        NUMBER(10, 0)    NOT NULL,
    R_REPORT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    JS_DATA             CLOB,
    CONSTRAINT PK_R_REPORT_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.R_REPORT_TYPE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    R_REPORT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL               VARCHAR2(100)    NOT NULL,
    PLUGIN_TYPE_ID      NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID           NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_R_REPORT_TYPE PRIMARY KEY (APP_SID, R_REPORT_TYPE_ID),
    CONSTRAINT UK_R_REPORT_TYPE_LABEL UNIQUE (APP_SID, LABEL),
    CONSTRAINT CK_R_REPORT_TYPE_PLUGIN CHECK (PLUGIN_TYPE_ID = 15)
)
;

CREATE SEQUENCE CSR.R_REPORT_TYPE_ID_SEQ;

CREATE TABLE CSR.RAG_STATUS(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RAG_STATUS_ID    NUMBER(10, 0)    NOT NULL,
    COLOUR           NUMBER(10, 0)    NOT NULL,
    LABEL            VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY       VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_RAG_STATUS PRIMARY KEY (APP_SID, RAG_STATUS_ID)
)
;

CREATE SEQUENCE CSR.RAG_STATUS_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_ISSUE_RAG_STATUS_LKP ON CSR.RAG_STATUS(APP_SID, UPPER(LOOKUP_KEY))
;

CREATE TABLE CSR.REGION(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID              NUMBER(10, 0)     NOT NULL,
    LINK_TO_REGION_SID      NUMBER(10, 0),
    PARENT_SID              NUMBER(10, 0)     NOT NULL,
    NAME                    VARCHAR2(255)     NOT NULL,
    ACTIVE                  NUMBER(10, 0)     DEFAULT 1,
    POS                     NUMBER(10, 0)     DEFAULT 1 NOT NULL,
    INFO_XML                SYS.XMLType,
    FLAG                    NUMBER(1, 0),
    ACQUISITION_DTM         DATE,
    DISPOSAL_DTM            DATE,
    REGION_TYPE             NUMBER(2, 0)      DEFAULT 0 NOT NULL,
    LOOKUP_KEY              VARCHAR2(1024),
    GEO_COUNTRY             VARCHAR2(2),
    GEO_REGION              VARCHAR2(2),
    GEO_CITY_ID             NUMBER(10, 0),
    GEO_LONGITUDE           NUMBER,
    GEO_LATITUDE            NUMBER,
    GEO_TYPE                NUMBER(10, 0)     DEFAULT 6,
    MAP_ENTITY              VARCHAR2(32),
    EGRID_REF               VARCHAR2(4),
    EGRID_REF_OVERRIDDEN    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    LAST_MODIFIED_DTM       DATE              DEFAULT SYSDATE NOT NULL,
    REGION_REF              VARCHAR2(255),
    CONSTRAINT CK_GEO_TYPE CHECK ((GEO_TYPE = 0 AND GEO_LONGITUDE IS NOT NULL AND GEO_LATITUDE IS NOT NULL) OR
(GEO_TYPE = 1 AND GEO_COUNTRY IS NOT NULL AND GEO_LONGITUDE IS NOT NULL AND GEO_LATITUDE IS NOT NULL) OR
(GEO_TYPE = 2 AND MAP_ENTITY IS NOT NULL) OR
(GEO_TYPE = 3 AND GEO_COUNTRY IS NOT NULL AND GEO_REGION IS NOT NULL) OR
(GEO_TYPE = 4 AND GEO_COUNTRY IS NOT NULL AND GEO_REGION IS NOT NULL AND GEO_CITY_ID IS NOT NULL AND GEO_LONGITUDE IS NOT NULL AND GEO_LATITUDE IS NOT NULL) OR
(GEO_TYPE = 5 AND GEO_COUNTRY IS NULL AND GEO_REGION IS NULL AND GEO_CITY_ID IS NULL AND GEO_LONGITUDE IS NULL AND GEO_LATITUDE IS NULL) OR
(GEO_TYPE = 6)),
    CHECK (EGRID_REF_OVERRIDDEN IN (0,1)),
    CONSTRAINT PK_REGION PRIMARY KEY (APP_SID, REGION_SID),
    CONSTRAINT UK_REGION_REGION_SID UNIQUE (REGION_SID)
)
;

CREATE INDEX CSR.IDX_REGION_BACK_LINK ON CSR.REGION(APP_SID, LINK_TO_REGION_SID, REGION_SID)
;

CREATE INDEX CSR.IDX_REGION_PARENT_SID ON CSR.REGION(APP_SID, PARENT_SID)
;

CREATE SEQUENCE CSR.REGION_CERTIFICATE_ID_SEQ;
CREATE TABLE CSR.REGION_CERTIFICATE (
	APP_SID						NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	REGION_CERTIFICATE_ID		NUMBER(24,0) NOT NULL,
	REGION_SID					NUMBER(10,0) NOT NULL,
	CERTIFICATION_ID			NUMBER(10,0) NOT NULL,
	CERTIFICATION_LEVEL_ID		NUMBER(10,0),
	CERTIFICATE_NUMBER			NUMBER(10,0),
	FLOOR_AREA					NUMBER(10,2) NOT NULL,
	ISSUED_DTM					DATE,
	EXPIRY_DTM					DATE,
	EXTERNAL_CERTIFICATE_ID		NUMBER(10,0),
	NOTE						VARCHAR2(2048) NULL,
	SUBMIT_TO_GRESB				NUMBER(1) DEFAULT 0 NOT NULL,
	DELETED						NUMBER(1, 0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_REGION_CERTS PRIMARY KEY (APP_SID, REGION_CERTIFICATE_ID),
	CONSTRAINT CHK_REGION_CERT_EXP_AFTER_ISS CHECK ((ISSUED_DTM IS NULL OR EXPIRY_DTM IS NULL) OR (ISSUED_DTM IS NOT NULL AND EXPIRY_DTM IS NOT NULL AND ISSUED_DTM < EXPIRY_DTM)),
	CONSTRAINT CK_REGION_CERT_DELETED CHECK (DELETED in (0,1))
)
;

CREATE TABLE CSR.REGION_DATA_MAP(
	REGION_DATA_MAP_ID				NUMBER(10,0)	NOT NULL,
	DATA_ELEMENT					VARCHAR2(50)	NOT NULL,
	DESCRIPTION						VARCHAR2(4000)	NOT NULL,
	IS_PROPERTY						NUMBER(1)		DEFAULT 0 NOT NULL,
	IS_METER						NUMBER(1)		DEFAULT 0 NOT NULL,
	CONSTRAINT PK_REGION_DATA_MAP 	PRIMARY KEY (REGION_DATA_MAP_ID)
)
;

CREATE TABLE CSR.REGION_DESCRIPTION(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID           NUMBER(10, 0)     NOT NULL,
    LANG                 VARCHAR2(10)      NOT NULL,
    DESCRIPTION          VARCHAR2(1023)    NOT NULL,
    LAST_CHANGED_DTM     DATE,
    CONSTRAINT PK_REGION_DESCRIPTION PRIMARY KEY (APP_SID, REGION_SID, LANG)
)
;

CREATE SEQUENCE CSR.REGION_ENERGY_RATING_ID_SEQ;
CREATE TABLE CSR.REGION_ENERGY_RATING (
	APP_SID						NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	REGION_ENERGY_RATING_ID		NUMBER(10,0) NOT NULL,
	REGION_SID					NUMBER(10,0) NOT NULL,
	ENERGY_RATING_ID			NUMBER(10,0) NOT NULL,
	FLOOR_AREA					NUMBER(10,2) NOT NULL,
	ISSUED_DTM					DATE,
	EXPIRY_DTM					DATE,
	NOTE						VARCHAR2(2048),
	SUBMIT_TO_GRESB				NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_REGION_ENERGY_RAT PRIMARY KEY (APP_SID, REGION_ENERGY_RATING_ID),
	CONSTRAINT CHK_REGION_ENERGY_RAT_EXP_AFTER_ISS CHECK ((ISSUED_DTM IS NULL OR EXPIRY_DTM IS NULL) OR (ISSUED_DTM IS NOT NULL AND EXPIRY_DTM IS NOT NULL AND ISSUED_DTM < EXPIRY_DTM))
)
;

CREATE TABLE CSR.REGION_EVENT(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID    NUMBER(10, 0)    NOT NULL,
    EVENT_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK3 PRIMARY KEY (APP_SID, REGION_SID, EVENT_ID)
)
;

CREATE TABLE CSR.REGION_INTERNAL_AUDIT(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID                NUMBER(10, 0)    NOT NULL,
    NEXT_AUDIT_DTM            DATE,
    CONSTRAINT PK_REGION_INTERNAL_AUDIT PRIMARY KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID, REGION_SID)
)
;

CREATE TABLE CSR.REGION_GROUP
(
	REGION_GROUP_ID				VARCHAR2(3),
	GROUP_NAME					VARCHAR2(1024),
	CONSTRAINT PK_REG_GRP PRIMARY KEY (REGION_GROUP_ID)
)
;

CREATE TABLE CSR.REGION_GROUP_REGION
(
	REGION_GROUP_ID				VARCHAR2(3) NOT NULL,
	COUNTRY						VARCHAR2(2),
	REGION						VARCHAR2(2),
	CONSTRAINT PK_REG_GRP_REG PRIMARY KEY (REGION_GROUP_ID, COUNTRY, REGION)
)
;

CREATE INDEX CSR.IX_REG_GRP_REG_CR ON CSR.REGION_GROUP_REGION(COUNTRY, REGION);
CREATE INDEX CSR.IX_REG_GRP_REG_RG ON CSR.REGION_GROUP_REGION(REGION_GROUP_ID);

CREATE TABLE CSR.REGION_METER_ALARM(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID            NUMBER(10, 0)    NOT NULL,
    INHERITED_FROM_SID    NUMBER(10, 0)    NOT NULL,
    METER_ALARM_ID        NUMBER(10, 0)    NOT NULL,
    IGNORE                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IGNORE_CHILDREN       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IGNORE IN(0,1)),
    CHECK (IGNORE_CHILDREN IN(0,1)),
    CONSTRAINT PK959 PRIMARY KEY (APP_SID, REGION_SID, METER_ALARM_ID)
)
;

CREATE TABLE CSR.REGION_METRIC(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID         NUMBER(10, 0)    NOT NULL,
    MEASURE_SID     NUMBER(10, 0)    NOT NULL,
    IS_MANDATORY    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SHOW_MEASURE    NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_REG_METRIC_MAND CHECK (IS_MANDATORY IN (0,1)),
    CONSTRAINT PK_REGION_METRIC PRIMARY KEY (APP_SID, IND_SID),
    CONSTRAINT UK_REGION_METRIC UNIQUE (APP_SID, IND_SID, MEASURE_SID)
)
;

CREATE TABLE CSR.REGION_METRIC_VAL(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_METRIC_VAL_ID           NUMBER(10, 0)     NOT NULL,
    IND_SID                        NUMBER(10, 0)     NOT NULL,
    REGION_SID                     NUMBER(10, 0)     NOT NULL,
    EFFECTIVE_DTM                  DATE              NOT NULL,
    ENTERED_BY_SID                 NUMBER(10, 0)     NOT NULL,
    ENTERED_DTM                    DATE              NOT NULL,
    VAL                            NUMBER(24, 10),
    NOTE                           VARCHAR2(4000),
    MEASURE_SID                    NUMBER(10, 0)     NOT NULL,
    SOURCE_TYPE_ID                 NUMBER(10, 0)     NOT NULL,
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    ENTRY_VAL                      NUMBER(24, 10),
    CONSTRAINT PK_REGION_METRIC_VAL PRIMARY KEY (APP_SID, REGION_METRIC_VAL_ID),
    CONSTRAINT UK_REGION_METRIC_VAL UNIQUE (APP_SID, IND_SID, REGION_SID, EFFECTIVE_DTM),
    CONSTRAINT CK_REGION_METRIC_VAL_EFF_DTM CHECK (EFFECTIVE_DTM = TRUNC(EFFECTIVE_DTM, 'DD'))
)
;

CREATE SEQUENCE CSR.REGION_METRIC_VAL_ID_SEQ;

CREATE TABLE CSR.REGION_OWNER(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID    NUMBER(10, 0)    NOT NULL,
    USER_SID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK51 PRIMARY KEY (APP_SID, REGION_SID, USER_SID)
)
;

CREATE TABLE CSR.REGION_POSTIT(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID    NUMBER(10, 0)    NOT NULL,
    POSTIT_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_REGION_POSTIT PRIMARY KEY (APP_SID, REGION_SID, POSTIT_ID)
)
;

CREATE TABLE CSR.REGION_PROC_DOC(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID    NUMBER(10, 0)    NOT NULL,
    DOC_ID        NUMBER(10, 0)    NOT NULL,
    INHERITED     NUMBER(1, 0)     NOT NULL,
    CHECK (INHERITED IN (0,1)),
    CONSTRAINT PK586 PRIMARY KEY (APP_SID, REGION_SID, DOC_ID)
)
;

CREATE TABLE CSR.REGION_PROC_FILE(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID           NUMBER(10, 0)    NOT NULL,
    METER_DOCUMENT_ID    NUMBER(10, 0)    NOT NULL,
    INHERITED            NUMBER(1, 0)     NOT NULL,
    CHECK (INHERITED IN (0,1)),
    CONSTRAINT PK587 PRIMARY KEY (APP_SID, REGION_SID, METER_DOCUMENT_ID)
)
;

CREATE TABLE CSR.REGION_ROLE_MEMBER(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_SID              NUMBER(10, 0)    NOT NULL,
    REGION_SID            NUMBER(10, 0)    NOT NULL,
    ROLE_SID              NUMBER(10, 0)    NOT NULL,
    INHERITED_FROM_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_REGION_ROLE_MEMBER PRIMARY KEY (APP_SID, USER_SID, REGION_SID, ROLE_SID, INHERITED_FROM_SID)
)
;

CREATE TABLE CSR.REGION_SCORE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCORE_TYPE_ID               NUMBER(10, 0)    NOT NULL,
    REGION_SID                  NUMBER(10, 0)    NOT NULL,
    LAST_REGION_SCORE_LOG_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_REGION_SCORE PRIMARY KEY (APP_SID, SCORE_TYPE_ID, REGION_SID)
)
;

CREATE TABLE CSR.REGION_SCORE_LOG(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SCORE_LOG_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID             NUMBER(10, 0)    NOT NULL,
    SCORE_TYPE_ID          NUMBER(10, 0)    NOT NULL,
    SCORE_THRESHOLD_ID     NUMBER(10, 0),
    SCORE                  NUMBER(15, 5),
    SET_DTM                DATE             DEFAULT SYSDATE NOT NULL,
    CHANGED_BY_USER_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'SID'),
    COMMENT_TEXT           CLOB,
    CONSTRAINT PK_REGION_SCORE_LOG PRIMARY KEY (APP_SID, REGION_SCORE_LOG_ID)
)
;

CREATE SEQUENCE CSR.REGION_SCORE_LOG_ID_SEQ;

CREATE TABLE CSR.REGION_SELECTION_TYPE(
    REGION_SELECTION_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                       VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_REGION_SELECTION_TYPE PRIMARY KEY (REGION_SELECTION_TYPE_ID)
)
;

CREATE TABLE CSR.REGION_SET(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SET_ID    NUMBER(10, 0)    NOT NULL,
    OWNER_SID        NUMBER(10, 0),
    NAME             VARCHAR2(255)    NOT NULL,
    DISPOSAL_DTM     DATE,
    CONSTRAINT PK_REGION_SET PRIMARY KEY (APP_SID, REGION_SET_ID),
    CONSTRAINT UK_REGION_SET_OWNER_NAME UNIQUE (APP_SID, OWNER_SID, NAME, DISPOSAL_DTM)
)
;

CREATE SEQUENCE CSR.REGION_SET_ID_SEQ;

CREATE TABLE CSR.REGION_SET_REGION(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SET_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID       NUMBER(10, 0)    NOT NULL,
    POS              NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_REGION_SET_REGION PRIMARY KEY (APP_SID, REGION_SET_ID, REGION_SID)
)
;

CREATE TABLE CSR.REGION_START_POINT(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_SID      NUMBER(10, 0)    NOT NULL,
    REGION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_REGION_START_POINT PRIMARY KEY (APP_SID, USER_SID, REGION_SID)
)
;

CREATE INDEX CSR.IX_REGION_START_POINT_REGION ON CSR.REGION_START_POINT(APP_SID, REGION_SID)
;

CREATE TABLE CSR.REGION_SURVEY_RESPONSE(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_SID            NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)    NOT NULL,
    REGION_SID            NUMBER(10, 0)    NOT NULL,
    PERIOD_START_DTM      DATE             NOT NULL,
    PERIOD_END_DTM        DATE             NOT NULL,
    CONSTRAINT PK_REGION_SURVEY_RESPONSE PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID)
)
;

CREATE INDEX CSR.IX_RQSR_REG_SID ON CSR.REGION_SURVEY_RESPONSE(APP_SID, REGION_SID)
;

CREATE INDEX CSR.IX_RQSR_SURV_RESP_ID ON CSR.REGION_SURVEY_RESPONSE(APP_SID, SURVEY_SID, SURVEY_RESPONSE_ID)
;

CREATE TABLE CSR.REGION_TAG(
    APP_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAG_ID        NUMBER(10, 0)    NOT NULL,
    REGION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK137 PRIMARY KEY (APP_SID, TAG_ID, REGION_SID)
)
;

CREATE TABLE CSR.REGION_TREE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_TREE_ROOT_SID    NUMBER(10, 0)    NOT NULL,
    LAST_RECALC_DTM         DATE,
    IS_PRIMARY              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_DIVISIONS            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_FUND                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_SYSTEM_MANAGED       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_DIVISIONS IN (0,1)),
    CONSTRAINT PK_REGION_TREE PRIMARY KEY (APP_SID, REGION_TREE_ROOT_SID)
)
;

CREATE TABLE CSR.REGION_TYPE(
    REGION_TYPE    NUMBER(2, 0)     NOT NULL,
    LABEL          VARCHAR2(256)    NOT NULL,
    CLASS_NAME     VARCHAR2(64)     NOT NULL,
    CONSTRAINT PK784 PRIMARY KEY (REGION_TYPE)
)
;

CREATE TABLE CSR.REGION_TYPE_METRIC(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_TYPE    NUMBER(2, 0)     NOT NULL,
    IND_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_REGION_TYPE_METRIC PRIMARY KEY (APP_SID, REGION_TYPE, IND_SID)
)
;

CREATE TABLE CSR.REGION_TYPE_TAG_GROUP(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_TYPE     NUMBER(2, 0)     NOT NULL,
    TAG_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_REGION_TYPE_TAG_GROUP PRIMARY KEY (APP_SID, REGION_TYPE, TAG_GROUP_ID)
)
;

CREATE TABLE CSR.REPORTING_PERIOD(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REPORTING_PERIOD_SID    NUMBER(10, 0)    NOT NULL,
    NAME                    VARCHAR2(255)    NOT NULL,
    START_DTM               DATE             NOT NULL,
    END_DTM                 DATE             NOT NULL,
    CONSTRAINT CK_REPORTING_PERIOD_DATES CHECK (END_DTM > START_DTM),
    CONSTRAINT PK_REPORTING_PERIOD PRIMARY KEY (APP_SID, REPORTING_PERIOD_SID)
)
;

CREATE TABLE CSR.RISKS(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ORACLE_USER    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_RISKS PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.ROLE(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ROLE_SID                 NUMBER(10, 0)    NOT NULL,
    NAME                     VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY               VARCHAR2(255),
    REGION_PERMISSION_SET    NUMBER(10, 0),
    IS_METERING              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_PROPERTY_MANAGER      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_DELEGATION            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_SUPPLIER              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_HIDDEN                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_SYSTEM_MANAGED        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_ROLE_IS_METERING CHECK (IS_METERING IN (0,1)),
    CONSTRAINT CHK_ROLE_IS_PROP_MGR CHECK (IS_PROPERTY_MANAGER IN (0,1)),
    CONSTRAINT CHK_ROLE_IS_DELEG CHECK (IS_DELEGATION IN (0,1)),
    CONSTRAINT CHK_ROLE_IS_SUPPLIER CHECK (IS_SUPPLIER IN (0,1)),
    CONSTRAINT CHK_IS_SYSTEM_MANAGED_1_0 CHECK (IS_SYSTEM_MANAGED IN (1, 0)),
    CONSTRAINT CHK_ROLE_IS_HIDDEN CHECK (IS_HIDDEN IN(0,1)),
    CONSTRAINT PK_ROLE PRIMARY KEY (APP_SID, ROLE_SID)
)
;

CREATE UNIQUE INDEX CSR.UK_ROLE_LOOKUP_KEY ON CSR.ROLE(APP_SID, UPPER(NVL(LOOKUP_KEY, ROLE_SID)))
;

CREATE TABLE CSR.ROLE_GRANT(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ROLE_SID          NUMBER(10, 0)    NOT NULL,
    GRANT_ROLE_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ROLE_GRANT PRIMARY KEY (APP_SID, ROLE_SID, GRANT_ROLE_SID)
)
;

CREATE TABLE CSR.ROLE_USER_COVER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    USER_COVER_ID             NUMBER(10, 0)    NOT NULL,
    USER_GIVING_COVER_SID     NUMBER(10, 0)    NOT NULL,
    USER_BEING_COVERED_SID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID                  NUMBER(10, 0)    NOT NULL,
    REGION_SID                NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ROLE_USER_COVER PRIMARY KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID, ROLE_SID, REGION_SID)
)
;

CREATE TABLE CSR.ROUTE(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ROUTE_ID         NUMBER(10, 0)    NOT NULL,
    SECTION_SID      NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_SID         NUMBER(10, 0)    NOT NULL,
    DUE_DTM          DATE             NOT NULL,
    COMPLETED_DTM    DATE,
    CONSTRAINT PK_ROUTE PRIMARY KEY (APP_SID, ROUTE_ID),
    CONSTRAINT UK_ROUTE UNIQUE (APP_SID, SECTION_SID, FLOW_STATE_ID)
)
;

CREATE SEQUENCE CSR.ROUTE_ID_SEQ CACHE 5;

CREATE TABLE CSR.ROUTE_LOG(
    LOG_DATE         DATE              DEFAULT SYSDATE NOT NULL,
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ROUTE_STEP_ID    NUMBER(10, 0)     NOT NULL,
    ROUTE_ID         NUMBER(10, 0)     NOT NULL,
    ROUTE_LOG_ID     NUMBER(10, 0)     NOT NULL,
    CSR_USER_SID     NUMBER(10, 0)     NOT NULL,
    SUMMARY          VARCHAR2(1023)    NOT NULL,
    DESCRIPTION      CLOB,
    PARAM_1          VARCHAR2(2048),
    PARAM_2          VARCHAR2(2048),
    PARAM_3          VARCHAR2(2048),
    CONSTRAINT PK_ROUTE_LOG PRIMARY KEY (APP_SID, ROUTE_LOG_ID)
)
;

CREATE SEQUENCE CSR.ROUTE_LOG_ID_SEQ CACHE 5;

CREATE TABLE CSR.ROUTE_STEP(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ROUTE_STEP_ID       NUMBER(10, 0)    NOT NULL,
    ROUTE_ID            NUMBER(10, 0)    NOT NULL,
    WORK_DAYS_OFFSET    NUMBER(10, 0)    NOT NULL,
    STEP_DUE_DTM        DATE             NOT NULL,
    POS                 NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_ROUTE_STEP PRIMARY KEY (APP_SID, ROUTE_STEP_ID)
)
;

CREATE SEQUENCE CSR.ROUTE_STEP_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.UK_ROUTE_STEP_POS ON CSR.ROUTE_STEP(APP_SID, ROUTE_ID, POS)
;

CREATE TABLE CSR.ROUTE_STEP_USER(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ROUTE_STEP_ID        NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID         NUMBER(10, 0)    NOT NULL,
    REMINDER_SENT_DTM    DATE,
    OVERDUE_SENT_DTM     DATE,
    DECLINED_SENT_DTM    DATE,
    CONSTRAINT PK_ROUTE_STEP_USER PRIMARY KEY (APP_SID, ROUTE_STEP_ID, CSR_USER_SID)
)
;

CREATE TABLE CSR.ROUTE_STEP_VOTE(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ROUTE_STEP_ID         NUMBER(10, 0)    NOT NULL,
    USER_SID              NUMBER(10, 0)    NOT NULL,
    VOTE_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    VOTE_DIRECTION        NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    DEST_ROUTE_STEP_ID    NUMBER(10, 0),
    DEST_FLOW_STATE_ID    NUMBER(10, 0),
    IS_RETURN             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_ROUTE_STEP_VOTE_DIR CHECK (VOTE_DIRECTION IN (-1, 1)),
    CONSTRAINT CHK_RETURN CHECK (IS_RETURN IN (0,1)),
    CONSTRAINT PK_ROUTE_STEP_APPROVED PRIMARY KEY (APP_SID, ROUTE_STEP_ID, USER_SID)
)
;

CREATE TABLE CSR.RSS_CACHE(
    RSS_URL         VARCHAR2(1024)    NOT NULL,
    LAST_UPDATED    DATE,
    XML             SYS.XMLType,
    LAST_ERROR      VARCHAR2(2040),
    ERROR_COUNT     NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_RSS_CACHE PRIMARY KEY (RSS_URL)
)
;

CREATE TABLE CSR.RSS_FEED(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RSS_FEED_SID         NUMBER(10, 0)     NOT NULL,
    NAME                 VARCHAR2(256),
    DESCRIPTION          VARCHAR2(1024),
    OWNER_SID            NUMBER(10, 0)     NOT NULL,
    XML                  SYS.XMLType,
    LAST_MODIFIED_DTM    DATE,
    CONSTRAINT PK_RSS_FEED PRIMARY KEY (APP_SID, RSS_FEED_SID)
)
;

CREATE TABLE CSR.RSS_FEED_ITEM(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RSS_FEED_ITEM_ID    NUMBER(10, 0)     NOT NULL,
    RSS_FEED_SID        NUMBER(10, 0)     NOT NULL,
    TITLE               VARCHAR2(255)     NOT NULL,
    DESCRIPTION         CLOB,
    PUBLISHED_DTM       DATE              DEFAULT SYSDATE,
    LINK                VARCHAR2(1024)    NOT NULL,
    OWNER_SID           NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_RSS_FEED_ITEM PRIMARY KEY (APP_SID, RSS_FEED_ITEM_ID)
)
;

CREATE SEQUENCE CSR.RSS_FEED_ITEM_ID_SEQ;

CREATE TABLE CSR.RULESET(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RULESET_SID             NUMBER(10, 0)    NOT NULL,
    REPORTING_PERIOD_SID    NUMBER(10, 0)    NOT NULL,
    INTERVAL                VARCHAR2(1)      DEFAULT 'y' NOT NULL,
    ENABLED                 NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    NAME                    VARCHAR2(255)    NOT NULL,
    PERIOD_SET_ID           NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT CHK_RULESET_INTERVAL CHECK (INTERVAL IN ('m','q','h','y')),
    CONSTRAINT CHK_RULESET_ENABLED CHECK (ENABLED IN (0,1)),
    CONSTRAINT PK_RULESET PRIMARY KEY (APP_SID, RULESET_SID)
)
;

CREATE TABLE CSR.RULESET_MEMBER(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RULESET_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_RULESET_MEMBER PRIMARY KEY (APP_SID, RULESET_SID, IND_SID)
)
;

CREATE TABLE CSR.RULESET_RUN(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RULESET_SID     NUMBER(10, 0)    NOT NULL,
    REGION_SID      NUMBER(10, 0)    NOT NULL,
    LAST_RUN_DTM    DATE             DEFAULT SYSDATE,
    CONSTRAINT PK_RULESET_RUN PRIMARY KEY (APP_SID, RULESET_SID, REGION_SID)
)
;

CREATE TABLE CSR.RULESET_RUN_FINDING(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    RULESET_SID                    NUMBER(10, 0)     NOT NULL,
    REGION_SID                     NUMBER(10, 0)     NOT NULL,
    IND_SID                        NUMBER(10, 0)     NOT NULL,
    FINDING_KEY                    VARCHAR2(255)     NOT NULL,
    START_DTM                      DATE              NOT NULL,
    END_DTM                        DATE              NOT NULL,
    LABEL                          VARCHAR2(255)     NOT NULL,
    ENTRY_VAL_NUMBER               NUMBER(24, 10),
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    PARAM_1                        VARCHAR2(255),
    PARAM_2                        VARCHAR2(255),
    PARAM_3                        VARCHAR2(255),
    EXPLANATION                    VARCHAR2(4000),
    EXPLAINED_BY_USER_SID          NUMBER(10, 0),
    EXPLAINED_DTM                  DATE,
    APPROVED_BY_USER_SID           NUMBER(10, 0),
    APPROVED_DTM                   DATE,
    IS_CURRENTLY_VALID             NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_RULESET_FND_VALID CHECK (IS_CURRENTLY_VALID IN (0,1)),
    CONSTRAINT CK_RULESET_RUN_FND_DATES CHECK (START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM),
    CONSTRAINT PK_RULESET_RUN_FINDING PRIMARY KEY (APP_SID, RULESET_SID, REGION_SID, IND_SID, FINDING_KEY, START_DTM, END_DTM)
)
;

CREATE TABLE CSR.SAML_ASSERTION_CACHE(
    APP_SID         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ASSERTION_ID    VARCHAR2(4000)    NOT NULL,
    EXPIRES         DATE,
    CONSTRAINT PK_SAML_ASSERTION_CACHE PRIMARY KEY (APP_SID, ASSERTION_ID)
)
;

CREATE TABLE CSR.SAML_ASSERTION_LOG(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SAML_REQUEST_ID    NUMBER(10, 0)    NOT NULL,
    RECEIVED_DTM       DATE             DEFAULT SYSDATE NOT NULL,
    SAML_ASSERTION     CLOB,
    CONSTRAINT PK_SAML_ASSERTION_LOG PRIMARY KEY (APP_SID, SAML_REQUEST_ID)
)
;

CREATE SEQUENCE CSR.SAML_REQUEST_ID_SEQ;

CREATE TABLE CSR.SAML_LOG(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SAML_REQUEST_ID     NUMBER(10, 0)     NOT NULL,
    MESSAGE_SEQUENCE    NUMBER(10, 0)     NOT NULL,
    MESSAGE             VARCHAR2(4000),
    LOG_DTM             DATE              DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_SAML_LOG PRIMARY KEY (APP_SID, SAML_REQUEST_ID, MESSAGE_SEQUENCE)
)
;

CREATE TABLE csr.schema_table (
	owner							VARCHAR2(30),
	table_name						VARCHAR2(30),
	enable_export					NUMBER(1) DEFAULT 1,
	enable_import					NUMBER(1) DEFAULT 1,
	csrimp_table_name				VARCHAR2(30) NULL,
	module_name						VARCHAR2(255) NULL,
    CONSTRAINT pk_schema_table		PRIMARY KEY (owner, table_name),
	CONSTRAINT ck_schema_table_uc	CHECK (owner = UPPER(owner) AND table_name = UPPER(table_name)),
	CONSTRAINT ck_schema_table_mod	CHECK (LOWER(module_name) NOT IN ('all', 'none'))
);

CREATE TABLE csr.schema_column (
	owner							VARCHAR2(30),
	table_name						VARCHAR2(30),
	column_name						VARCHAR2(30),
	enable_export					NUMBER(1) DEFAULT 1,
	enable_import					NUMBER(1) DEFAULT 1,
	is_map_source					NUMBER(1) DEFAULT 1,
	is_sid							NUMBER(1) NULL,	
	sequence_owner					VARCHAR2(30) NULL,	
	sequence_name					VARCHAR2(30) NULL,
	map_table						VARCHAR2(30) NULL,		
	map_old_id_col					VARCHAR2(30) NULL,
	map_new_id_col					VARCHAR2(30) NULL,
    CONSTRAINT pk_schema_column		PRIMARY KEY (owner, table_name, column_name),
	CONSTRAINT ck_schema_column_uc	CHECK (owner = UPPER(owner) AND 
										   table_name = UPPER(table_name) AND 
										   column_name = UPPER(column_name) AND
										   sequence_owner = UPPER(sequence_owner))
);

CREATE TABLE CSR.SCENARIO(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_SID                  NUMBER(10, 0)     NOT NULL,
    DESCRIPTION                   VARCHAR2(1000)    NOT NULL,
    START_DTM                     DATE              NOT NULL,
    END_DTM                       DATE,
    EQUALITY_EPSILON              NUMBER,
    FILE_BASED                    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    AUTO_UPDATE_RUN_SID           NUMBER(10, 0),
    RECALC_TRIGGER_TYPE           NUMBER(10, 0),
    DATA_SOURCE                   NUMBER(10, 0),
    DATA_SOURCE_SP                VARCHAR2(100),
    PERIOD_SET_ID                 NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID            NUMBER(10, 0)     NOT NULL,
    DATA_SOURCE_SP_ARGS           VARCHAR2(4000),
    DATA_SOURCE_RUN_SID           NUMBER(10),
    CREATED_BY_USER_SID           NUMBER(10)        DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
    CREATED_DTM                   DATE              DEFAULT SYSDATE NOT NULL,
    INCLUDE_ALL_INDS              NUMBER(1)         NOT NULL,
    DONT_RUN_AGGREGATE_INDICATORS NUMBER(1)         DEFAULT 0 NOT NULL,
    CONSTRAINT CK_SCENARIO_DATES CHECK (START_DTM = TRUNC(START_DTM, 'MON') AND (END_DTM IS NULL OR (END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM))),
    CONSTRAINT CK_SCENARIO_FILE_BASED CHECK (FILE_BASED IN (0,1)),
    CONSTRAINT CK_SCENARIO_RECALC_TRIG_TYPE CHECK (RECALC_TRIGGER_TYPE IN (0, 1, 2)),
    CONSTRAINT CK_SCENARIO_DATA_SOURCE CHECK(
        (DATA_SOURCE IN (0, 1) AND DATA_SOURCE_SP IS NULL AND DATA_SOURCE_SP_ARGS IS NULL AND DATA_SOURCE_RUN_SID IS NULL) OR
        (DATA_SOURCE = 2 AND DATA_SOURCE_SP IS NOT NULL AND DATA_SOURCE_SP_ARGS IS NOT NULL AND DATA_SOURCE_RUN_SID IS NULL) OR
        (DATA_SOURCE = 3 AND DATA_SOURCE_SP IS NULL AND DATA_SOURCE_SP_ARGS IS NULL AND DATA_SOURCE_RUN_SID IS NOT NULL)
    ),
	CONSTRAINT CK_DONT_RUN_AGG_INDS CHECK (DONT_RUN_AGGREGATE_INDICATORS IN (0, 1)),
    CONSTRAINT PK_SCENARIO PRIMARY KEY (APP_SID, SCENARIO_SID)
)
;

CREATE TABLE CSR.SCENARIO_ALERT(
	APP_SID						NUMBER(10, 0) 	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SCENARIO_SID				NUMBER(10, 0) 	NOT NULL,
	CSR_USER_SID				NUMBER(10, 0) 	NOT NULL,
	CALC_JOB_ID					NUMBER(10, 0) 	NOT NULL,
	CALC_JOB_COMPLETION_DTM		DATE 			NOT NULL,
	CONSTRAINT PK_SCENARIO_ALERT PRIMARY KEY (APP_SID, SCENARIO_SID, CSR_USER_SID, CALC_JOB_ID)
)
;

CREATE TABLE CSR.SCENARIO_EMAIL_SUB (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SCENARIO_SID		NUMBER(10, 0) NOT NULL,
	CSR_USER_SID		NUMBER(10, 0) NOT NULL,
	CONSTRAINT PK_SCENARIO_EMAIL_SUB				PRIMARY KEY (APP_SID, SCENARIO_SID, CSR_USER_SID)
)
;

CREATE TABLE CSR.SCENARIO_AUTO_RUN_REQUEST(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_SID              NUMBER(10, 0)    NOT NULL,
    DELAY_PUBLISH_SCENARIO    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    FULL_RECOMPUTE            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CK_SCN_AR_REQ_DLY_PUBLISH_SCN CHECK (DELAY_PUBLISH_SCENARIO IN (0,1)),
    CONSTRAINT CK_SCN_AUTO_RUN_REQ_FRECOMPUT CHECK (FULL_RECOMPUTE IN (0, 1)),
    CONSTRAINT PK_SCENARIO_AUTO_RUN_REQUEST PRIMARY KEY (APP_SID, SCENARIO_SID)
)
;

CREATE TABLE CSR.SCENARIO_IND(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCENARIO_IND PRIMARY KEY (APP_SID, SCENARIO_SID, IND_SID)
)
;

CREATE TABLE CSR.SCENARIO_LIKE_FOR_LIKE_RULE(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCENARIO_SID                  NUMBER(10, 0)    NOT NULL,
    RULE_ID                       NUMBER(10, 0)    NOT NULL,
    APPLIES_TO_REGION_TYPE        NUMBER(10, 0)    NOT NULL,
    CONTIGUOUS_DATA_CHECK_TYPE    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCN_LIKE_FOR_LIKE_RULE PRIMARY KEY (APP_SID, SCENARIO_SID, RULE_ID)
)
;

CREATE TABLE CSR.SCENARIO_MAN_RUN_REQUEST(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_MAN_RUN_REQUEST_ID    NUMBER(10, 0)     NOT NULL,
    SCENARIO_SID                   NUMBER(10, 0)     NOT NULL,
    DESCRIPTION                    VARCHAR2(4000),
    DATA_SOURCE                    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT CK_SCN_MAN_RUN_REQ_DATA_SRC CHECK (DATA_SOURCE in (0,1,2)),
    CONSTRAINT PK_SCENARIO_MAN_RUN_REQUEST PRIMARY KEY (APP_SID, SCENARIO_MAN_RUN_REQUEST_ID)
)
;

CREATE SEQUENCE CSR.SCENARIO_MAN_RUN_REQ_ID_SEQ;

CREATE TABLE CSR.SCENARIO_OPTIONS(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHOW_CHART         NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    SHOW_BAU_OPTION    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    BAU_DEFAULT        NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CHECK (SHOW_CHART IN(0,1)),
    CHECK (SHOW_BAU_OPTION IN(0,1)),
    CHECK (BAU_DEFAULT IN(0,1)),
    CONSTRAINT PK902 PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.SCENARIO_REGION(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCENARIO_REGION PRIMARY KEY (APP_SID, SCENARIO_SID, REGION_SID)
)
;

CREATE TABLE CSR.SCENARIO_RULE(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_SID             NUMBER(10, 0)     NOT NULL,
    RULE_ID                  NUMBER(10, 0)     NOT NULL,
    DESCRIPTION              VARCHAR2(1000)    NOT NULL,
    RULE_TYPE                NUMBER(1, 0)      NOT NULL,
    AMOUNT                   NUMBER(24, 10)    NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    START_DTM                DATE              NOT NULL,
    END_DTM                  DATE,
    CONSTRAINT CK_SCENARIO_RULE_DATES CHECK (START_DTM = TRUNC(START_DTM, 'MON') AND (END_DTM IS NULL OR (END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM))),
    CONSTRAINT PK_SCENARIO_RULE PRIMARY KEY (APP_SID, SCENARIO_SID, RULE_ID)
)
;

CREATE TABLE CSR.SCENARIO_RULE_IND(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_SID    NUMBER(10, 0)    NOT NULL,
    RULE_ID         NUMBER(10, 0)    NOT NULL,
    IND_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCENARIO_RULE_IND PRIMARY KEY (APP_SID, SCENARIO_SID, RULE_ID, IND_SID)
)
;

CREATE TABLE CSR.SCENARIO_RULE_LIKE_CONTIG_IND(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_SID    NUMBER(10, 0)    NOT NULL,
    RULE_ID         NUMBER(10, 0)    NOT NULL,
    IND_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCENARIO_RULE_LIKE_CTG_IND PRIMARY KEY (APP_SID, SCENARIO_SID, RULE_ID, IND_SID)
)
;

CREATE TABLE CSR.SCENARIO_RULE_REGION(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_SID    NUMBER(10, 0)    NOT NULL,
    RULE_ID         NUMBER(10, 0)    NOT NULL,
    REGION_SID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCENARIO_RULE_REGION PRIMARY KEY (APP_SID, SCENARIO_SID, RULE_ID, REGION_SID)
)
;

CREATE TABLE CSR.SCENARIO_RUN(
    APP_SID                NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCENARIO_RUN_SID       NUMBER(10, 0)     NOT NULL,
    SCENARIO_SID           NUMBER(10, 0)     NOT NULL,
    RUN_DTM                DATE              DEFAULT SYSDATE NOT NULL,
    DESCRIPTION            VARCHAR2(4000),
    LAST_SUCCESS_DTM       DATE,
    ON_COMPLETION_SP       VARCHAR2(255),
    VERSION                NUMBER(10, 0),
    LAST_RUN_BY_USER_SID   NUMBER(10)        DEFAULT 3 NOT NULL,
    CONSTRAINT PK_SCENARIO_RUN PRIMARY KEY (APP_SID, SCENARIO_RUN_SID)
)
;

CREATE TABLE CSR.SCENARIO_RUN_SNAPSHOT(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCENARIO_RUN_SNAPSHOT_SID    NUMBER(10, 0)    NOT NULL,
    SCENARIO_RUN_SID             NUMBER(10, 0)    NOT NULL,
    START_DTM                    DATE             NOT NULL,
    END_DTM                      DATE             NOT NULL,
    PERIOD_SET_ID                NUMBER(10, 0),
    PERIOD_INTERVAL_ID           NUMBER(10, 0),
    LAST_UPDATED_DTM             DATE             DEFAULT SYSDATE NOT NULL,
    VERSION                      NUMBER(10, 0)    NOT NULL DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT PK_SCENARIO_RUN_SNAPSHOT PRIMARY KEY (APP_SID, SCENARIO_RUN_SNAPSHOT_SID),
    CONSTRAINT CK_SCN_RUN_SNAP_PERIOD_INT CHECK(
        (PERIOD_SET_ID IS NULL AND PERIOD_INTERVAL_ID IS NULL) OR
        (PERIOD_SET_ID IS NOT NULL AND PERIOD_INTERVAL_ID IS NOT NULL)
    )
)
;

CREATE INDEX CSR.IX_SCN_RUN_SNAP_FILE_VER ON CSR.SCENARIO_RUN_SNAPSHOT(APP_SID, SCENARIO_RUN_SNAPSHOT_SID, VERSION)
;

CREATE INDEX CSR.IX_SCN_RUN_SNAP_PERIOD_INT ON CSR.SCENARIO_RUN_SNAPSHOT(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

CREATE INDEX CSR.IX_SCN_RUN_SNAP_SCN_RUN ON CSR.SCENARIO_RUN_SNAPSHOT(APP_SID, SCENARIO_RUN_SID)
;

CREATE TABLE CSR.SCENARIO_RUN_SNAPSHOT_FILE(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCENARIO_RUN_SNAPSHOT_SID    NUMBER(10, 0)     NOT NULL,
    VERSION                      NUMBER(10, 0)     NOT NULL,
    FILE_PATH                    VARCHAR2(4000),
    SHA1                         RAW(20),
    CONSTRAINT PK_SCENARIO_RUN_SNAPSHOT_FILE PRIMARY KEY (APP_SID, SCENARIO_RUN_SNAPSHOT_SID, VERSION)
)
;

CREATE TABLE CSR.SCENARIO_RUN_SNAPSHOT_IND(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCENARIO_RUN_SNAPSHOT_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID                      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCENARIO_RUN_SNAPSHOT_IND PRIMARY KEY (APP_SID, SCENARIO_RUN_SNAPSHOT_SID, IND_SID)
)
;

CREATE INDEX CSR.IX_SCN_RUN_SNAPSHOT_IND_IND ON CSR.SCENARIO_RUN_SNAPSHOT_IND(APP_SID, IND_SID)
;

CREATE TABLE CSR.SCENARIO_RUN_SNAPSHOT_REGION(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCENARIO_RUN_SNAPSHOT_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID                   NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCENARIO_RUN_SNAPSHOT_REG PRIMARY KEY (APP_SID, SCENARIO_RUN_SNAPSHOT_SID, REGION_SID)
)
;

CREATE INDEX CSR.IX_SCN_RUN_SNAPSHOT_REG_REG ON CSR.SCENARIO_RUN_SNAPSHOT_REGION(APP_SID, REGION_SID)
;

CREATE TABLE CSR.SCENARIO_RUN_VAL(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID             NUMBER(10, 0)     NOT NULL,
    REGION_SID          NUMBER(10, 0)     NOT NULL,
    PERIOD_START_DTM    DATE              NOT NULL,
    PERIOD_END_DTM      DATE              NOT NULL,
    VAL_NUMBER          NUMBER(24, 10),
    ERROR_CODE          NUMBER(10, 0),
    SOURCE_TYPE_ID      NUMBER(10, 0)     NOT NULL,
    SOURCE_ID           NUMBER(10, 0),
    SCENARIO_RUN_SID    NUMBER(10, 0)     NOT NULL,
    CONSTRAINT CK_VAL_NULL CHECK ((val_number is not null and error_code is null) or (val_number is null and error_code is not null)),
    CONSTRAINT CK_SCENARIO_RUN_VAL_DATES CHECK (period_start_dtm = trunc(period_start_dtm, 'MON') and period_end_dtm = trunc(period_end_dtm, 'MON') and period_end_dtm > period_start_dtm),
    CONSTRAINT PK_SCENARIO_RUN_VAL PRIMARY KEY (APP_SID, SCENARIO_RUN_SID, IND_SID, REGION_SID, PERIOD_START_DTM, PERIOD_END_DTM)
)
;

CREATE SEQUENCE CSR.SCENARIO_RUN_VAL_ID_SEQ;

CREATE INDEX CSR.SCENARIO_RUN_VAL_AS ON CSR.SCENARIO_RUN_VAL(APP_SID);

CREATE TABLE CSR.SCENARIO_RUN_VERSION(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCENARIO_RUN_SID    NUMBER(10, 0)    NOT NULL,
    VERSION             NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SCENARIO_RUN_VERSION PRIMARY KEY (APP_SID, SCENARIO_RUN_SID, VERSION)
)
;

CREATE TABLE CSR.SCENARIO_RUN_VERSION_FILE(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCENARIO_RUN_SID    NUMBER(10, 0)     NOT NULL,
    VERSION             NUMBER(10, 0)     NOT NULL,
    FILE_PATH           VARCHAR2(4000)    NOT NULL,
    SHA1                RAW(20)           NOT NULL,
    CONSTRAINT PK_SCENARIO_RUN_VERSION_FILE PRIMARY KEY (APP_SID, SCENARIO_RUN_SID, VERSION)
)
;

CREATE SEQUENCE csr.scheduled_task_stat_id CACHE 5;

CREATE TABLE csr.scheduled_task_stat(
	scheduled_task_stat_run_id		NUMBER(10,0) NOT NULL,
	task_group						VARCHAR2(255) NOT NULL,
	task_name						VARCHAR2(255) NOT NULL,
	ran_on							VARCHAR2(255) NOT NULL,
	run_start_dtm					DATE DEFAULT SYSDATE NOT NULL,
	run_end_dtm						DATE,
	number_of_apps					NUMBER(10,0),
	number_of_items					NUMBER(10,0),
	number_of_handled_failures		NUMBER(10,0),
	fetch_time_secs					NUMBER(10,0),
	work_time_secs					NUMBER(10,0),
	was_unhandled_failure			NUMBER(1,0),
	run_guid 						VARCHAR2(38),
	CONSTRAINT pk_scheduled_task_stat PRIMARY KEY (scheduled_task_stat_run_id),
	CONSTRAINT ck_scheduled_task_stat_fail CHECK (was_unhandled_failure IS NULL OR was_unhandled_failure IN (0,1))
)
PARTITION BY RANGE (run_start_dtm)
INTERVAL(NUMTOYMINTERVAL(1, 'MONTH'))
( 
	PARTITION sched_task_stat_p1 VALUES LESS THAN (TO_DATE('01-09-2020', 'DD-MM-YYYY'))
)
;

CREATE INDEX CSR.SCHED_TASK_STAT_IDX1 ON CSR.SCHEDULED_TASK_STAT
    (TASK_GROUP, TASK_NAME) LOCAL;


CREATE SEQUENCE CSR.SSP_ID_SEQ;

CREATE TABLE CSR.SCHEDULED_STORED_PROC(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SSP_ID             NUMBER(10, 0)     NOT NULL,
    SP                 VARCHAR2(255)     NOT NULL,
	ARGS			   VARCHAR2(1024),
    DESCRIPTION        VARCHAR2(1024),
    INTRVAL            CHAR              NOT NULL,
    FREQUENCY          NUMBER(10, 0)     NOT NULL,
	SCHEDULE_RUN_DTM   TIMESTAMP,
    NEXT_RUN_DTM       TIMESTAMP,
	ENABLED            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
	LAST_SSP_LOG_ID    NUMBER(10, 0),
	ONE_OFF				NUMBER(1, 0)		NOT NULL,
	ONE_OFF_USER		NUMBER(10, 0),
	ONE_OFF_DATE		TIMESTAMP,
    CONSTRAINT PK_SSP PRIMARY KEY (APP_SID, SSP_ID)
)
;

CREATE UNIQUE INDEX CSR.UK_SSP ON CSR.SCHEDULED_STORED_PROC(APP_SID, SP,  NVL(ARGS, ' '));
CREATE INDEX CSR.IX_SSP_SSPL ON CSR.SCHEDULED_STORED_PROC(APP_SID, LAST_SSP_LOG_ID);

CREATE SEQUENCE CSR.SSPL_ID_SEQ;

CREATE TABLE CSR.SCHEDULED_STORED_PROC_LOG (
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SSP_LOG_ID						NUMBER(10, 0)	NOT NULL,
	SSP_ID							NUMBER(10, 0)	NOT NULL,
	RUN_DTM							TIMESTAMP,
	RESULT_CODE						NUMBER(10, 0),
	RESULT_MSG						VARCHAR2(1024),
	RESULT_EX						CLOB,
	ONE_OFF							NUMBER(1, 0),
	ONE_OFF_USER					NUMBER(10, 0),
	ONE_OFF_DATE					TIMESTAMP,
	CONSTRAINT PK_SSPL PRIMARY KEY (APP_SID, SSP_LOG_ID)
)
;

CREATE UNIQUE INDEX CSR.IX_SSPL_SSP ON CSR.SCHEDULED_STORED_PROC_LOG(APP_SID, SSP_ID);

CREATE TABLE CSR.SCORE_THRESHOLD(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SCORE_THRESHOLD_ID        NUMBER(10, 0)    NOT NULL,
    MAX_VALUE                 NUMBER(15, 5)    NOT NULL,
    DESCRIPTION               VARCHAR2(255)    NOT NULL,
    TEXT_COLOUR               NUMBER(10, 0)    NOT NULL,
    BACKGROUND_COLOUR         NUMBER(10, 0),
    BAR_COLOUR                NUMBER(10, 0),
    ICON_IMAGE                BLOB,
    ICON_IMAGE_FILENAME       VARCHAR2(255),
    ICON_IMAGE_MIME_TYPE      VARCHAR2(255),
    ICON_IMAGE_SHA1           RAW(20),
    DASHBOARD_IMAGE           BLOB,
    DASHBOARD_FILENAME        VARCHAR2(255),
    DASHBOARD_MIME_TYPE       VARCHAR2(255),
    DASHBOARD_SHA1            RAW(20),
    SUPPLIER_SCORE_IND_SID    NUMBER(10, 0),
    MEASURE_LIST_INDEX        NUMBER(10, 0),
    SCORE_TYPE_ID             NUMBER(10, 0)    NOT NULL,
	LOOKUP_KEY				  VARCHAR2(255),
    CONSTRAINT PK_SCORE_THRESHOLD PRIMARY KEY (APP_SID, SCORE_THRESHOLD_ID)
)
;

CREATE SEQUENCE CSR.SCORE_THRESHOLD_ID_SEQ;

CREATE INDEX CSR.IX_SCORE_THRESHOLD_TYPE ON CSR.SCORE_THRESHOLD(APP_SID, SCORE_TYPE_ID)
;

CREATE UNIQUE INDEX CSR.UK_SCORE_THRESH_MAX_SCORE ON CSR.SCORE_THRESHOLD(APP_SID, SCORE_TYPE_ID, MAX_VALUE)
;

CREATE UNIQUE INDEX CSR.UK_SCORE_THRESH_LOOKUP_KEY ON CSR.SCORE_THRESHOLD(APP_SID, SCORE_TYPE_ID, NVL(UPPER(LOOKUP_KEY),TO_CHAR(SCORE_THRESHOLD_ID)))
;

CREATE TABLE CSR.SCORE_TYPE(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCORE_TYPE_ID                 NUMBER(10, 0)    NOT NULL,
    LABEL                         VARCHAR2(255)    NOT NULL,
    POS                           NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    HIDDEN                        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ALLOW_MANUAL_SET              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    LOOKUP_KEY                    VARCHAR2(255),
    APPLIES_TO_SUPPLIER           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    REPORTABLE_MONTHS             NUMBER(10, 0)    DEFAULT 36 NOT NULL,
    MEASURE_SID                   NUMBER(10, 0),
    SUPPLIER_SCORE_IND_SID        NUMBER(10, 0),
    FORMAT_MASK                   VARCHAR2(20)     DEFAULT ('#,##0.0%') NOT NULL,
    ASK_FOR_COMMENT               VARCHAR2(16)     DEFAULT 'none' NOT NULL,
    APPLIES_TO_SURVEYS            NUMBER(1, 0)	   DEFAULT 0 NOT NULL,
    APPLIES_TO_NON_COMPLIANCES    NUMBER(1, 0)	   DEFAULT 0 NOT NULL,
    MIN_SCORE                     NUMBER(15, 5),
    MAX_SCORE                     NUMBER(15, 5),
    START_SCORE                   NUMBER(15, 5)    DEFAULT 0 NOT NULL,
    NORMALISE_TO_MAX_SCORE        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_REGIONS            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	APPLIES_TO_AUDITS			  NUMBER(1, 0)	   DEFAULT 0 NOT NULL,
	APPLIES_TO_SUPP_RELS		  NUMBER(1, 0)	   DEFAULT 0 NOT NULL,
	APPLIES_TO_PERMITS			  NUMBER(1, 0)	   DEFAULT 0 NOT NULL,
	SHOW_EXPIRED_SCORES		  	  NUMBER(1, 0) 	   DEFAULT 0 NOT NULL,  	
    CONSTRAINT PK_SCORE_TYPE PRIMARY KEY (APP_SID, SCORE_TYPE_ID),
    CONSTRAINT CHK_SCORE_TYPE_APPL2SUP CHECK (APPLIES_TO_SUPPLIER IN (0,1)),
    CONSTRAINT CHK_SCORE_TYPE_HIDDEN CHECK (HIDDEN IN (0,1)),
    CONSTRAINT CHK_SCORE_TYPE_AL_MAN_SET CHECK (ALLOW_MANUAL_SET IN (0,1)),
    CHECK (ASK_FOR_COMMENT IN ('none','required','optional')),
    CONSTRAINT CK_SCORE_TYPE_APPL2SURV CHECK (APPLIES_TO_SURVEYS IN (0, 1)),
    CONSTRAINT CK_SCORE_TYPE_APPL2NCS CHECK (APPLIES_TO_NON_COMPLIANCES IN (0, 1)),
    CONSTRAINT CK_SCORE_TYPE_NORM2MS CHECK (NORMALISE_TO_MAX_SCORE IN (0, 1)),
    CONSTRAINT CK_SCORE_TYPE_APP_TO_REG_1_0 CHECK (APPLIES_TO_REGIONS IN (0, 1)),
    CONSTRAINT CK_SCORE_TYPE_APP_TO_AUD_1_0 CHECK (APPLIES_TO_AUDITS IN (0, 1)),
	CONSTRAINT CK_SCORE_TYPE_NOT_AUD_AND_NC	CHECK (APPLIES_TO_AUDITS = 0 OR APPLIES_TO_NON_COMPLIANCES = 0),
	CONSTRAINT chk_score_type_appl_suprel CHECK (APPLIES_TO_SUPP_RELS IN (0,1)),
	CONSTRAINT chk_score_type_not_sup_and_sr CHECK (APPLIES_TO_SUPPLIER = 0 OR APPLIES_TO_SUPP_RELS = 0),
	CONSTRAINT ck_score_type_app_to_perm CHECK (applies_to_permits IN (0, 1)), 
	CONSTRAINT chk_score_type_show_exp CHECK (SHOW_EXPIRED_SCORES IN (0, 1))
)
;

CREATE SEQUENCE CSR.SCORE_TYPE_ID_SEQ;

CREATE INDEX CSR.IX_SCORE_TYPE_MEASURE ON CSR.SCORE_TYPE(APP_SID, MEASURE_SID)
;

CREATE INDEX CSR.IX_SCORE_TYPE_SUP_IND ON CSR.SCORE_TYPE(APP_SID, SUPPLIER_SCORE_IND_SID)
;

CREATE UNIQUE INDEX CSR.UK_SCORE_TYPE_LOOKUP_KEY ON CSR.SCORE_TYPE(APP_SID, NVL(LOOKUP_KEY, 'NULL_'||SCORE_TYPE_ID))
;

CREATE TABLE CSR.SCORE_TYPE_AGG_TYPE(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCORE_TYPE_AGG_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    ANALYTIC_FUNCTION                 NUMBER(10, 0)    NOT NULL,
    SCORE_TYPE_ID                     NUMBER(10, 0)    NOT NULL,
    APPLIES_TO_NC_SCORE               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_PRIMARY_AUDIT_SURVY    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	APPLIES_TO_AUDITS 				  NUMBER(1, 0) 	   DEFAULT 0 NOT NULL,
    IA_TYPE_SURVEY_GROUP_ID           NUMBER(10, 0),
    CONSTRAINT PK_SCORE_TYPE_AGG_TYPE PRIMARY KEY (APP_SID, SCORE_TYPE_AGG_TYPE_ID),
    CONSTRAINT CHK_SCORE_TYPE_AGG_TYPE CHECK(
		(APPLIES_TO_NC_SCORE = 1 AND APPLIES_TO_PRIMARY_AUDIT_SURVY = 0 AND IA_TYPE_SURVEY_GROUP_ID IS NULL AND APPLIES_TO_AUDITS = 0) OR
		(APPLIES_TO_NC_SCORE = 0 AND APPLIES_TO_PRIMARY_AUDIT_SURVY = 1 AND IA_TYPE_SURVEY_GROUP_ID IS NULL AND APPLIES_TO_AUDITS = 0) OR
		(APPLIES_TO_NC_SCORE = 0 AND APPLIES_TO_PRIMARY_AUDIT_SURVY = 0 AND IA_TYPE_SURVEY_GROUP_ID IS NOT NULL AND APPLIES_TO_AUDITS = 0) OR
		(APPLIES_TO_NC_SCORE = 0 AND APPLIES_TO_PRIMARY_AUDIT_SURVY = 0 AND IA_TYPE_SURVEY_GROUP_ID IS NULL AND APPLIES_TO_AUDITS = 1)
    )
)
;

CREATE SEQUENCE CSR.SCORE_TYPE_AGG_TYPE_ID_SEQ;

CREATE TABLE CSR.SCRAG_CONFIG
(
	FIXED_ANALYSIS_SERVER			VARCHAR2(255),
	FINDER_BROADCAST_ADDRESSES 		VARCHAR2(4000),
	ONLY_ONE_ROW NUMBER(1) CHECK (ONLY_ONE_ROW = 0),
	CONSTRAINT PK_SCRAG_CONFIG PRIMARY KEY (ONLY_ONE_ROW)
);

CREATE TABLE CSR.SCRAGPP_AUDIT_LOG(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ACTION					VARCHAR2(1023)	NOT NULL,
	ACTION_DTM				DATE,
	USER_SID				NUMBER(10, 0) NOT NULL,
	CONSTRAINT PK_SCRAGPP_AUDIT_LOG PRIMARY KEY (APP_SID, ACTION, ACTION_DTM)
)
;

CREATE TABLE CSR.SCRAGPP_STATUS(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	OLD_SCRAG					NUMBER(1)	DEFAULT 1 NOT NULL,
	TESTCUBE_ENABLED			NUMBER(1)	DEFAULT 0 NOT NULL,
	VALIDATION_APPROVED_REF		VARCHAR2(1023),
	SCRAGPP_ENABLED				NUMBER(1)	DEFAULT 0 NOT NULL,
	CONSTRAINT PK_SCRAGPP_STATUS PRIMARY KEY (APP_SID),
	CONSTRAINT CHK_SCRAGPP_STATUS_OLD_SCRAG CHECK (OLD_SCRAG IN (0,1)),
	CONSTRAINT CHK_SCRAGPP_STATUS_TESTCUBE CHECK (TESTCUBE_ENABLED IN (0,1)),
	CONSTRAINT CHK_SCRAGPP_STATUS_SCRAGPP CHECK (SCRAGPP_ENABLED IN (0,1))
)
;

CREATE TABLE CSR.SECONDARY_REGION_TREE_CTRL(
	APP_SID				NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	REGION_SID			NUMBER(10, 0)		NOT NULL,
	SP_NAME				VARCHAR2(30)		NOT NULL,
	REGION_ROOT_SID		NUMBER(10, 0),
	TAG_ID				NUMBER(10, 0),
	TAG_GROUP_IDS		VARCHAR2(1024),
	ACTIVE_ONLY			NUMBER(1)			DEFAULT NULL,
	REDUCE_CONTENTION	NUMBER(1)			DEFAULT 0,
	APPLY_DELEG_PLANS	NUMBER(1)			DEFAULT 0,
	IGNORE_SIDS			CLOB				DEFAULT NULL,
	USER_SID			NUMBER(10, 0),
	LAST_RUN_DTM		DATE,
	CONSTRAINT PK_SECONDARY_REGION_TREE_CTRL PRIMARY KEY (APP_SID, REGION_SID),
	CONSTRAINT CK_SRT_ACTIVE_ONLY CHECK (ACTIVE_ONLY IN (1,0)),
	CONSTRAINT CK_SRT_REDUCE_CONTENTION CHECK (REDUCE_CONTENTION IN (1,0)),
	CONSTRAINT CK_SRT_APPLY_DELEG_PLANS CHECK (APPLY_DELEG_PLANS IN (1,0))
);

CREATE SEQUENCE csr.scndry_region_tree_log_id_seq;
CREATE TABLE CSR.SECONDARY_REGION_TREE_LOG
(
	APP_SID 			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	LOG_ID				NUMBER(10,0) NOT NULL,
	REGION_SID			NUMBER(10, 0) NOT NULL,
	USER_SID			NUMBER(10, 0) NOT NULL,
	LOG_DTM				DATE NOT NULL,
	PRESYNC_TREE		BLOB,
	POSTSYNC_TREE		BLOB,
	CONSTRAINT PK_SCNDRY_REGION_TREE_LOG PRIMARY KEY (APP_SID, LOG_ID, REGION_SID)
);

CREATE TABLE CSR.SECTION(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_SID                    NUMBER(10, 0)     NOT NULL,
    PARENT_SID                     NUMBER(10, 0),
    CHECKED_OUT_TO_SID             NUMBER(10, 0),
    CHECKED_OUT_DTM                DATE,
    CHECKED_OUT_VERSION_NUMBER     NUMBER(10, 0),
    VISIBLE_VERSION_NUMBER         NUMBER(10, 0),
    SECTION_POSITION               NUMBER(10, 0)     NOT NULL,
    ACTIVE                         NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    MODULE_ROOT_SID                NUMBER(10, 0)     NOT NULL,
    TITLE_ONLY                     NUMBER(10, 0)     NOT NULL,
    REF                            VARCHAR2(64),
    PLUGIN                         VARCHAR2(255),
    PLUGIN_CONFIG                  VARCHAR2(2048),
    SECTION_STATUS_SID             NUMBER(10, 0)     NOT NULL,
    FURTHER_INFO_URL               VARCHAR2(1024),
    HELP_TEXT                      CLOB,
    CURRENT_ROUTE_STEP_ID          NUMBER(10, 0),
    IS_SPLIT                       NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    FLOW_ITEM_ID                   NUMBER(10, 0),
    PREVIOUS_SECTION_SID           NUMBER(10, 0),
    DISABLE_GENERAL_ATTACHMENTS    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT CK_SECTION_IS_SPLIT CHECK (IS_SPLIT IN (0,1)),
    CONSTRAINT PK_SECTION PRIMARY KEY (APP_SID, SECTION_SID),
    CONSTRAINT UC_SECTION_FLOW_ITEM UNIQUE (FLOW_ITEM_ID)
)
;

ALTER TABLE CSR.SECTION ADD CHECK
    (VISIBLE_VERSION_NUMBER IS NOT NULL)
    DEFERRABLE INITIALLY DEFERRED
;

CREATE TABLE CSR.SECTION_ALERT(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_ALERT_ID          NUMBER(10, 0)    NOT NULL,
    CUSTOMER_ALERT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    SECTION_SID               NUMBER(10, 0)    NOT NULL,
    RAISED_DTM                DATE             NOT NULL,
    FROM_USER_SID             NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID           NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID             NUMBER(10, 0)    NOT NULL,
    ROUTE_STEP_ID             NUMBER(10, 0),
    SENT_DTM                  DATE,
    CANCELLED_DTM             DATE,
    CONSTRAINT PK_SECTION_ALERT PRIMARY KEY (APP_SID, SECTION_ALERT_ID, SECTION_SID)
)
;

CREATE SEQUENCE CSR.SECTION_ALERT_ID_SEQ;

CREATE TABLE CSR.SECTION_ATTACH_LOG(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_ATTACH_LOG_ID    NUMBER(10, 0)     NOT NULL,
    SECTION_SID              NUMBER(10, 0)     NOT NULL,
    ATTACHMENT_ID            NUMBER(10, 0)     NOT NULL,
    LOG_DATE                 DATE              NOT NULL,
    CSR_USER_SID             NUMBER(10, 0)     NOT NULL,
    SUMMARY                  VARCHAR2(1023)    NOT NULL,
    DESCRIPTION              CLOB,
    PARAM_1                  VARCHAR2(2048),
    PARAM_2                  VARCHAR2(2048),
    PARAM_3                  VARCHAR2(2048),
    CONSTRAINT PK_SEC_ATTACH_LOG PRIMARY KEY (app_sid, section_attach_log_id)
)
;

CREATE SEQUENCE CSR.SEC_ATTACH_LOG_ID_SEQ CACHE 5;

CREATE TABLE CSR.SECTION_CART(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_CART_ID           NUMBER(10, 0)    NOT NULL,
    NAME                      VARCHAR2(255)    NOT NULL,
    SECTION_CART_FOLDER_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SECTION_CART PRIMARY KEY (APP_SID, SECTION_CART_ID)
)
;

CREATE SEQUENCE CSR.SECTION_CART_ID_SEQ CACHE 5;

CREATE TABLE CSR.SECTION_CART_FOLDER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_CART_FOLDER_ID    NUMBER(10, 0)    NOT NULL,
    PARENT_ID                 NUMBER(10, 0),
    NAME                      VARCHAR2(255)    NOT NULL,
    IS_VISIBLE                NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    IS_ROOT                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_SECTION_CART_FOLDER PRIMARY KEY (APP_SID, SECTION_CART_FOLDER_ID),
    CONSTRAINT UK_SECTION_CART_FOLDER UNIQUE (SECTION_CART_FOLDER_ID),
    CONSTRAINT CK_SECTION_CART_FOLDER CHECK ((PARENT_ID IS NULL AND IS_ROOT = 1) OR (PARENT_ID IS NOT NULL))
)
;

CREATE SEQUENCE CSR.SECTION_CART_FOLDER_ID_SEQ CACHE 5;

CREATE UNIQUE INDEX CSR.UK_SECTION_FOLDER_ROOT ON CSR.SECTION_CART_FOLDER(DECODE(IS_ROOT, 1, APP_SID, SECTION_CART_FOLDER_ID))
;

CREATE TABLE CSR.SECTION_CART_MEMBER(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_CART_ID    NUMBER(10, 0)    NOT NULL,
    SECTION_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SECTION_CART_MEMBER PRIMARY KEY (APP_SID, SECTION_CART_ID, SECTION_SID)
)
;

CREATE TABLE CSR.SECTION_COMMENT(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_COMMENT_ID    NUMBER(10, 0)    NOT NULL,
    SECTION_SID           NUMBER(10, 0),
    IN_REPLY_TO_ID        NUMBER(10, 0),
    COMMENT_TEXT          CLOB             NOT NULL,
    ENTERED_BY_SID        NUMBER(10, 0)    NOT NULL,
    ENTERED_DTM           DATE             DEFAULT SYSDATE,
    IS_CLOSED             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_SECTION_COMMENT PRIMARY KEY (APP_SID, SECTION_COMMENT_ID)
)
;

CREATE SEQUENCE CSR.SECTION_COMMENT_ID_SEQ;

CREATE TABLE CSR.SECTION_CONTENT_DOC(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_SID                   NUMBER(10, 0)    NOT NULL,
    DOC_ID                        NUMBER(10, 0)    NOT NULL,
    CHECKED_OUT_TO_SID            NUMBER(10, 0),
    CHECKED_OUT_DTM               DATE,
    CHECKED_OUT_VERSION_NUMBER    NUMBER(10, 0),
    CONSTRAINT PK_SECTION_CONTENT_DOC PRIMARY KEY (APP_SID, SECTION_SID, DOC_ID)
)
;

CREATE TABLE CSR.SECTION_CONTENT_DOC_WAIT(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_SID     NUMBER(10, 0)    NOT NULL,
    DOC_ID          NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SECTION_CONTENT_DOC_WAIT PRIMARY KEY (APP_SID, SECTION_SID, DOC_ID, CSR_USER_SID)
)
;

CREATE SEQUENCE csr.section_fact_id_seq
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOORDER
;

CREATE TABLE CSR.SECTION_FACT(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_SID                  NUMBER(10, 0)    NOT NULL,
    FACT_ID                      VARCHAR2(255)    NOT NULL,
    MAP_TO_IND_SID               NUMBER(10, 0),
    MAP_TO_REGION_SID            NUMBER(10, 0),
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    DATA_TYPE                    VARCHAR2(30),
    MAX_LENGTH                   NUMBER(4, 0),
    IS_ACTIVE                    NUMBER(1, 0)     DEFAULT (1) NOT NULL,
    CONSTRAINT PK_SECTION_FACT PRIMARY KEY (APP_SID, SECTION_SID, FACT_ID)
)
;

CREATE TABLE CSR.SECTION_FACT_ATTACH(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_SID      NUMBER(10, 0)    NOT NULL,
    FACT_ID          VARCHAR2(255)    NOT NULL,
    FACT_IDX         NUMBER(10, 0)    NOT NULL,
    ATTACHMENT_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SECTION_FACT_ATTACH PRIMARY KEY (APP_SID, SECTION_SID, FACT_ID, ATTACHMENT_ID, FACT_IDX)
)
;

CREATE TABLE CSR.SECTION_FACT_ENUM(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_SID    NUMBER(10, 0)    NOT NULL,
    FACT_ID        VARCHAR2(255)    NOT NULL,
    IDX            NUMBER(10, 0)    NOT NULL,
    ENUMERATION    VARCHAR2(255),
    FACT_TYPE      VARCHAR2(255),
    CONSTRAINT PK_SECTION_FACT_ENUM PRIMARY KEY (APP_SID, SECTION_SID, FACT_ID, IDX)
)
;

CREATE TABLE CSR.SECTION_FLOW(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID                        NUMBER(10, 0)    NOT NULL,
    SPLIT_QUESTION_FLOW_STATE_ID    NUMBER(10, 0),
    DFLT_RET_AFT_INC_USR_SUBMIT     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_SECTION_FLOW PRIMARY KEY (APP_SID, FLOW_SID)
)
;

CREATE TABLE CSR.SECTION_MODULE(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MODULE_ROOT_SID          NUMBER(10, 0)     NOT NULL,
    LABEL                    VARCHAR2(1024)    NOT NULL,
    SHOW_SUMMARY_TAB         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DEFAULT_STATUS_SID       NUMBER(10, 0)     NOT NULL,
    FLOW_SID                 NUMBER(10, 0),
    REGION_SID               NUMBER(10, 0),
    SHOW_FLOW_SUMMARY_TAB    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    PREVIOUS_MODULE_SID      NUMBER(10, 0),
    LIBRARY_SID              NUMBER(10, 0),
    ACTIVE                   NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    REMINDER_OFFSET          NUMBER(10, 0)     DEFAULT 2 NOT NULL,
    START_DTM                DATE,
    END_DTM                  DATE,
	SHOW_FACT_ICON	         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_SECTION_MODULE PRIMARY KEY (APP_SID, MODULE_ROOT_SID)
)
;

CREATE UNIQUE INDEX CSR.AK_SECTION_MODULE ON CSR.SECTION_MODULE(MODULE_ROOT_SID)
;

CREATE TABLE CSR.SECTION_PLUGIN_LOOKUP(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP'),
    PLUGIN_NAME    VARCHAR2(255)    NOT NULL,
    SECTION_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SECTION_PLUGIN_LOOKUP PRIMARY KEY (APP_SID, PLUGIN_NAME, SECTION_SID)
)
;

CREATE TABLE CSR.SECTION_ROUTED_FLOW_STATE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID                   NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID              NUMBER(10, 0)    NOT NULL,
    REJECT_FS_TRANSITION_ID    NUMBER(10, 0),
    CONSTRAINT PK_SECTION_ROUTED_FLOW_STATE PRIMARY KEY (APP_SID, FLOW_SID, FLOW_STATE_ID)
)
;

CREATE TABLE CSR.SECTION_STATUS(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_STATUS_SID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION           VARCHAR2(255)    NOT NULL,
    COLOUR                NUMBER(10, 0)    NOT NULL,
    POS                   NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    ICON_PATH             VARCHAR2(256),
    CONSTRAINT PK543 PRIMARY KEY (APP_SID, SECTION_STATUS_SID)
)
;

CREATE TABLE CSR.SECTION_TAG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PARENT_ID         NUMBER(10, 0),
    SECTION_TAG_ID    NUMBER(10, 0)    NOT NULL,
    TAG               VARCHAR2(255)    NOT NULL,
    ACTIVE            NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT CK_SECTION_TAG_ACTIVE CHECK (ACTIVE IN(0,1)),
    CONSTRAINT PK_SECTION_TAG PRIMARY KEY (APP_SID, SECTION_TAG_ID)
)
;

CREATE SEQUENCE CSR.SECTION_TAG_ID_SEQ CACHE 5;

CREATE TABLE CSR.SECTION_TAG_MEMBER(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_TAG_ID    NUMBER(10, 0)    NOT NULL,
    SECTION_SID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SECTION_TAG_MEMBER PRIMARY KEY (APP_SID, SECTION_TAG_ID, SECTION_SID)
)
;

CREATE TABLE CSR.SECTION_TRANS_COMMENT(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_TRANS_COMMENT_ID    NUMBER(10, 0)    NOT NULL,
    SECTION_SID                 NUMBER(10, 0)    NOT NULL,
    ENTERED_BY_SID              NUMBER(10, 0)    NOT NULL,
    ENTERED_DTM                 DATE             NOT NULL,
    COMMENT_TEXT                CLOB             NOT NULL,
    CONSTRAINT PK_SECTION_TRANS_COMMENT PRIMARY KEY (APP_SID, SECTION_TRANS_COMMENT_ID)
)
;

CREATE SEQUENCE CSR.SECTION_TRANS_COMMENT_ID_SEQ;

CREATE TABLE CSR.SECTION_TRANSITION(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_TRANSITION_SID     NUMBER(10, 0)    NOT NULL,
    FROM_SECTION_STATUS_SID    NUMBER(10, 0)    NOT NULL,
    TO_SECTION_STATUS_SID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK542 PRIMARY KEY (APP_SID, SECTION_TRANSITION_SID)
)
;

CREATE TABLE CSR.SECTION_VAL(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_VAL_ID          NUMBER(20, 0)     NOT NULL,
    SECTION_SID             NUMBER(10, 0)     NOT NULL,
    FACT_ID                 VARCHAR2(255)     NOT NULL,
    IDX                     NUMBER(10, 0)     NOT NULL,
    START_DTM               DATE,
    END_DTM                 DATE,
    VAL_NUMBER              NUMBER(24, 10),
    NOTE                    CLOB,
    ENTRY_TYPE              VARCHAR2(100)     DEFAULT 'MANUAL' NOT NULL,
    PERIOD_SET_ID           NUMBER(10, 0),
    PERIOD_INTERVAL_ID      NUMBER(10, 0),
    CONSTRAINT PK_SECTION_VAL PRIMARY KEY (APP_SID, SECTION_VAL_ID),
    CONSTRAINT UK_SECTION_VAL UNIQUE (APP_SID, SECTION_SID, FACT_ID, IDX)
)
;

CREATE SEQUENCE CSR.SECTION_VAL_ID_SEQ;

CREATE TABLE CSR.SECTION_VERSION(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SECTION_SID          NUMBER(10, 0)     NOT NULL,
    VERSION_NUMBER       NUMBER(10, 0)     NOT NULL,
    TITLE                VARCHAR2(2047)    NOT NULL,
    BODY                 CLOB,
    CHANGED_BY_SID       NUMBER(10, 0),
    CHANGED_DTM          DATE,
    REASON_FOR_CHANGE    CLOB,
    APPROVED_BY_SID      NUMBER(10, 0),
    APPROVED_DTM         DATE,
    CONSTRAINT PK_SECTION_VERSION PRIMARY KEY (APP_SID, SECTION_SID, VERSION_NUMBER)
)
;

CREATE TABLE csr.service_user_map(
	SERVICE_IDENTIFIER		VARCHAR2(255)				NOT NULL,
	USER_SID				NUMBER(10)					NOT NULL,
	FULL_NAME				VARCHAR2(256)				NOT NULL,
	CAN_IMPERSONATE			NUMBER(1)		DEFAULT 0	NOT NULL,
	CONSTRAINT PK_SERVICE_USER_MAP PRIMARY KEY (SERVICE_IDENTIFIER),
	CONSTRAINT CK_SERVICE_USER_MAP_IMPERSONATE CHECK (CAN_IMPERSONATE IN (0,1))
)
;

CREATE TABLE CSR.SESSION_EXTRA(
    APP_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ACT_ID     CHAR(36)         NOT NULL,
    KEY        VARCHAR2(255)    NOT NULL,
    BINARY     BLOB,
    TEXT       CLOB,
    CONSTRAINT PK_SESSION_EXTRA PRIMARY KEY (APP_SID, ACT_ID, KEY)
)
;

CREATE TABLE CSR.SHEET(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_ID                     NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID               NUMBER(10, 0)    NOT NULL,
    START_DTM                    DATE             NOT NULL,
    END_DTM                      DATE             NOT NULL,
    SUBMISSION_DTM               DATE             NOT NULL,
    REMINDER_DTM                 DATE             NOT NULL,
    LAST_SHEET_HISTORY_ID        NUMBER(10, 0),
    IS_VISIBLE                   NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    IS_COPIED_FORWARD            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    AUTOMATIC_APPROVAL_DTM       DATE             DEFAULT NULL,
    AUTOMATIC_APPROVAL_STATUS    CHAR             DEFAULT 'P',
    IS_READ_ONLY                 NUMBER(1, 0)     DEFAULT 0,
    PERCENT_COMPLETE             NUMBER(10, 0),
    CONSTRAINT CK_SHEET_DATES CHECK (END_DTM > START_DTM),
    CONSTRAINT CK_AASTATUS CHECK (AUTOMATIC_APPROVAL_STATUS IN ('P', 'Q', 'A', 'R')),
    CONSTRAINT PK_SHEET PRIMARY KEY (APP_SID, SHEET_ID)
)
;

CREATE SEQUENCE CSR.SHEET_ID_SEQ;

CREATE INDEX CSR.IDX_SHEET_DELEGATION ON CSR.SHEET(APP_SID, DELEGATION_SID)
;

CREATE INDEX CSR.IDX_SHEET_END ON CSR.SHEET(END_DTM, APP_SID)
;

CREATE TABLE CSR.SHEET_ACTION(
    SHEET_ACTION_ID           NUMBER(10, 0)    NOT NULL,
    DESCRIPTION               VARCHAR2(64),
    COLOUR                    CHAR,
    DOWNSTREAM_DESCRIPTION    VARCHAR2(64)     NOT NULL,
    CONSTRAINT PK81 PRIMARY KEY (SHEET_ACTION_ID)
)
;

CREATE TABLE CSR.SHEET_ACTION_PERMISSION(
    SHEET_ACTION_ID    NUMBER(10, 0)    NOT NULL,
    USER_LEVEL         NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CAN_SAVE           NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CAN_SUBMIT         NUMBER(10, 0)    NOT NULL,
    CAN_ACCEPT         NUMBER(10, 0)    NOT NULL,
    CAN_RETURN         NUMBER(10, 0)    NOT NULL,
    CAN_DELEGATE       NUMBER(10, 0)    NOT NULL,
    CAN_VIEW           NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK81_1 PRIMARY KEY (SHEET_ACTION_ID, USER_LEVEL)
)
;

CREATE TABLE CSR.SHEET_ALERT(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_ID             NUMBER(10, 0)    NOT NULL,
    USER_SID             NUMBER(10, 0)    NOT NULL,
    REMINDER_SENT_DTM    DATE,
    OVERDUE_SENT_DTM     DATE,
    CONSTRAINT PK_SHEET_ALERT PRIMARY KEY (APP_SID, SHEET_ID, USER_SID)
)
;

CREATE TABLE CSR.SHEET_AUTOMATIC_APPROVAL(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    BATCH_JOB_ID    NUMBER(10, 0)    NOT NULL,
    SHEET_ID        NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SHEETAA PRIMARY KEY (APP_SID, BATCH_JOB_ID)
)
;

CREATE TABLE CSR.SHEET_CHANGE_LOG(
    APP_SID     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CHANGE_LOG PRIMARY KEY (APP_SID, SHEET_ID)
)
;

CREATE TABLE CSR.SHEET_CHANGE_REQ(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_CHANGE_REQ_ID       NUMBER(10, 0)    NOT NULL,
    REQ_TO_CHANGE_SHEET_ID    NUMBER(10, 0)    NOT NULL,
    ACTIVE_SHEET_ID           NUMBER(10, 0)    NOT NULL,
    RAISED_DTM                DATE             DEFAULT SYSDATE NOT NULL,
    RAISED_BY_SID             NUMBER(10, 0)    NOT NULL,
    RAISED_NOTE               CLOB,
    PROCESSED_DTM             DATE,
    PROCESSED_BY_SID          NUMBER(10, 0),
    PROCESSED_NOTE            CLOB,
    IS_APPROVED               NUMBER(1, 0),
    CONSTRAINT CHK_SHEET_CHANGE_REQ_PROC CHECK (IS_APPROVED IS NULL OR (IS_APPROVED IN (1,0) AND PROCESSED_DTM IS NOT NULL AND PROCESSED_BY_SID IS NOT NULL)),
    CONSTRAINT PK_SHEET_CHANGE_REQ PRIMARY KEY (APP_SID, SHEET_CHANGE_REQ_ID)
)
;

CREATE SEQUENCE CSR.SHEET_CHANGE_REQ_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_SHEET_CHANGE_REQ_SINGLE ON CSR.SHEET_CHANGE_REQ(REQ_TO_CHANGE_SHEET_ID, DECODE(IS_APPROVED, null, -1, sheet_change_req_id))
;

CREATE TABLE CSR.SHEET_CHANGE_REQ_ALERT(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_CHANGE_REQ_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID              NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID           NUMBER(10, 0)    NOT NULL,
    SHEET_CHANGE_REQ_ID          NUMBER(10, 0)    NOT NULL,
    ACTION_TYPE                  VARCHAR2(1)      NOT NULL,
    CONSTRAINT CHK_SCR_ALERT_TYPE CHECK (ACTION_TYPE IN ('S', 'A', 'R')),
    CONSTRAINT PK_DELEG_DATA_CHANGE_ALERT_1 PRIMARY KEY (APP_SID, SHEET_CHANGE_REQ_ALERT_ID)
)
;

CREATE SEQUENCE CSR.SHEET_CHANGE_REQ_ALERT_ID_SEQ;

CREATE TABLE CSR.SHEET_COMPLETENESS_SHEET (
	APP_SID		NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SHEET_ID	NUMBER(10, 0)		NOT NULL,
	CONSTRAINT PK_SHEET_COMPLETENESS_SHEET PRIMARY KEY (APP_SID, SHEET_ID)
)
;

CREATE TABLE CSR.SHEET_DATE_SCHEDULE(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_DATE_SCHEDULE_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM                      DATE             NOT NULL,
    CREATION_DTM                   DATE             NOT NULL,
    SUBMISSION_DTM                 DATE             NOT NULL,
    REMINDER_DTM                   DATE             NOT NULL,
    CONSTRAINT CK_SUBMISSION_DTM CHECK (SUBMISSION_DTM >= START_DTM),
    CONSTRAINT CK_REMINDER_DTM CHECK (REMINDER_DTM <= SUBMISSION_DTM),
    CONSTRAINT PK_SHEET_DATE_SCHEDULE PRIMARY KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID, START_DTM)
)
;

CREATE INDEX CSR.IX_SHEET_DATE_SCHDL_SCHDL_ID ON CSR.SHEET_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

CREATE TABLE CSR.SHEET_HISTORY(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_HISTORY_ID     NUMBER(10, 0)    NOT NULL,
    SHEET_ID             NUMBER(10, 0)    NOT NULL,
    FROM_USER_SID        NUMBER(10, 0)    NOT NULL,
    TO_DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    ACTION_DTM           DATE             NOT NULL,
    NOTE                 CLOB             DEFAULT EMPTY_CLOB(),
    SHEET_ACTION_ID      NUMBER(10, 0)    NOT NULL,
	IS_SYSTEM_NOTE	     NUMBER (1, 0)	  DEFAULT 0 NOT NULL,
    CONSTRAINT PK_SHEET_HISTORY PRIMARY KEY (APP_SID, SHEET_HISTORY_ID)
)
;

CREATE SEQUENCE CSR.SHEET_HISTORY_ID_SEQ;

CREATE TABLE CSR.SHEET_INHERITED_VALUE(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_ID        NUMBER(10, 0)    NOT NULL,
    INHERITED_VALUE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SHEET_INHERITED_VALUE PRIMARY KEY (APP_SID, SHEET_VALUE_ID, INHERITED_VALUE_ID)
)
;

CREATE INDEX CSR.IX_SHT_INHRT_VAL_APP_INHRT_ID ON CSR.SHEET_INHERITED_VALUE(APP_SID, INHERITED_VALUE_ID)
;

CREATE TABLE CSR.SHEET_POTENTIAL_ORPHAN_FILES
(
    APP_SID                 NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SHEET_VALUE_ID          NUMBER(10, 0) NOT NULL,
    FILE_UPLOAD_SID         NUMBER(10, 0) NOT NULL,
	SUBMISSION_DTM			DATE
);

CREATE TABLE CSR.SHEET_VAL_CHANGE_LOG(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID      NUMBER(10, 0)    NOT NULL,
    START_DTM    DATE             NOT NULL,
    END_DTM      DATE             NOT NULL,
    CONSTRAINT CK_SHEET_VAL_CHANGE_LOG_DATES CHECK (end_dtm > start_dtm),
    CONSTRAINT PK_SHEET_VAL_CHANGE_LOG PRIMARY KEY (APP_SID, IND_SID)
)
;

CREATE TABLE CSR.SHEET_VALUE(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_ID                 NUMBER(10, 0)     NOT NULL,
    SHEET_ID                       NUMBER(10, 0)     NOT NULL,
    IND_SID                        NUMBER(10, 0)     NOT NULL,
    REGION_SID                     NUMBER(10, 0)     NOT NULL,
    VAL_NUMBER                     NUMBER(24, 10),
    SET_BY_USER_SID                NUMBER(10, 0)     NOT NULL,
    SET_DTM                        DATE              DEFAULT SYSDATE NOT NULL,
    NOTE                           CLOB              DEFAULT EMPTY_CLOB(),
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    ENTRY_VAL_NUMBER               NUMBER(24, 10),
    IS_INHERITED                   NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    STATUS                         NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    LAST_SHEET_VALUE_CHANGE_ID     NUMBER(10, 0),
    ALERT                          VARCHAR2(255),
    FLAG                           NUMBER(10, 0),
    VAR_EXPL_NOTE                  VARCHAR2(2000),
    IS_NA                          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_SHEET_VALUE PRIMARY KEY (APP_SID, SHEET_VALUE_ID),
    CONSTRAINT UK_SHT_VAL_SHT_IND_REG UNIQUE (APP_SID, SHEET_ID, IND_SID, REGION_SID)
)
;

CREATE SEQUENCE CSR.SHEET_VALUE_ID_SEQ;

CREATE INDEX CSR.IDX_SHEET_IND ON CSR.SHEET_VALUE(APP_SID, IND_SID)
;

CREATE INDEX CSR.IDX_SHEET_REGION ON CSR.SHEET_VALUE(APP_SID, REGION_SID)
;

CREATE INDEX CSR.IDX_SHEET_VALUE ON CSR.SHEET_VALUE(APP_SID, REGION_SID, STATUS, IND_SID)
;

CREATE TABLE CSR.SHEET_VALUE_ACCURACY(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_ID             NUMBER(10, 0)    NOT NULL,
    ACCURACY_TYPE_OPTION_ID    NUMBER(10, 0)    NOT NULL,
    PCT                        NUMBER(10, 4)    DEFAULT 1 NOT NULL,
    CONSTRAINT PK_SHEET_VALUE_ACCURACY PRIMARY KEY (APP_SID, SHEET_VALUE_ID, ACCURACY_TYPE_OPTION_ID)
)
;

CREATE TABLE CSR.SHEET_VALUE_CHANGE(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_CHANGE_ID          NUMBER(10, 0)     NOT NULL,
    SHEET_VALUE_ID                 NUMBER(10, 0)     NOT NULL,
    IND_SID                        NUMBER(10, 0)     NOT NULL,
    REGION_SID                     NUMBER(10, 0)     NOT NULL,
    VAL_NUMBER                     NUMBER(24, 10),
    REASON                         VARCHAR2(1024),
    CHANGED_BY_SID                 NUMBER(10, 0)     NOT NULL,
    CHANGED_DTM                    DATE              DEFAULT SYSDATE NOT NULL,
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    ENTRY_VAL_NUMBER               NUMBER(24, 10),
    NOTE                           CLOB              DEFAULT EMPTY_CLOB(),
    FLAG                           NUMBER(10, 0),
    CONSTRAINT PK_SHEET_VALUE_CHANGE PRIMARY KEY (APP_SID, SHEET_VALUE_CHANGE_ID)
)
;

CREATE SEQUENCE CSR.SHEET_VALUE_CHANGE_ID_SEQ;

CREATE INDEX CSR.IDX_SV_CHANGE_IND ON CSR.SHEET_VALUE_CHANGE(APP_SID, IND_SID)
;

CREATE INDEX CSR.IDX_SV_CHANGE_REGION ON CSR.SHEET_VALUE_CHANGE(APP_SID, REGION_SID)
;

CREATE INDEX CSR.IDX_SV_CHANGE_SVID ON CSR.SHEET_VALUE_CHANGE(SHEET_VALUE_ID, APP_SID)
;

CREATE TABLE CSR.SHEET_VALUE_CHANGE_FILE(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_CHANGE_ID    NUMBER(10, 0)    NOT NULL,
    FILE_UPLOAD_SID          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SHEET_VALUE_CHANGE_FILE PRIMARY KEY (APP_SID, SHEET_VALUE_CHANGE_ID, FILE_UPLOAD_SID)
)
;

CREATE TABLE CSR.SHEET_VALUE_FILE(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_ID     NUMBER(10, 0)    NOT NULL,
    FILE_UPLOAD_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SHEET_VALUE_FILE PRIMARY KEY (APP_SID, SHEET_VALUE_ID, FILE_UPLOAD_SID)
)
;

CREATE TABLE CSR.SHEET_VALUE_FILE_HIDDEN_CACHE(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_ID                 NUMBER(10, 0)     NOT NULL,
	FILE_UPLOAD_SID                NUMBER(10,0)      NOT NULL,
    CONSTRAINT PK_SVFHC PRIMARY KEY (APP_SID, SHEET_VALUE_ID, FILE_UPLOAD_SID)
)
;

CREATE TABLE CSR.SHEET_VALUE_HIDDEN_CACHE(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_ID                 NUMBER(10, 0)     NOT NULL,
    VAL_NUMBER                     NUMBER(24, 10),
    NOTE                           CLOB,
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    ENTRY_VAL_NUMBER               NUMBER(24, 10),
    CONSTRAINT PK_SHEET_VALUE_HIDDEN_CACHE PRIMARY KEY (APP_SID, SHEET_VALUE_ID)
)
;

CREATE TABLE CSR.SHEET_VALUE_VAR_EXPL(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SHEET_VALUE_ID    NUMBER(10, 0)    NOT NULL,
    VAR_EXPL_ID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SHEET_VALUE_VAR_EXPL PRIMARY KEY (APP_SID, SHEET_VALUE_ID, VAR_EXPL_ID)
)
;

CREATE TABLE CSR.SITE_AUDIT_DETAILS (
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ORIGINAL_SITENAME	VARCHAR2(255)	NOT NULL,
	CREATED_BY			VARCHAR2(255)	NOT NULL,
	CREATED_DTM			DATE,
	ORIGINAL_EXPIRY_DTM	DATE			DEFAULT SYSDATE+365 NOT NULL,
	ACTIVE_EXPIRY_DTM	DATE			NOT NULL,
	ENABLED_MODULES		CLOB			NOT NULL,
	ADDED_TO_EXISTING	NUMBER(1)		DEFAULT 0 NOT NULL,
	CONSTRAINT PK_SITE_AUDIT_DETAILS PRIMARY KEY (APP_SID),
	CONSTRAINT CK_SITE_AUDIT_DETAILS_EXISTING CHECK (ADDED_TO_EXISTING IN (0, 1))
);

CREATE TABLE CSR.SITE_AUDIT_DETAILS_EXPIRY (
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	EXPIRY_DTM			DATE			NOT NULL,
	ENTERED_BY_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
	ENTERED_AT_DTM		DATE			DEFAULT SYSDATE,
	REASON				CLOB			NOT NULL
)
;
create index csr.ix_site_audit_de_exp_entered_by on csr.site_audit_details_expiry (app_sid, entered_by_sid);

CREATE TABLE CSR.SITE_AUDIT_DETAILS_CLIENT_NAME (
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CLIENT_NAME			VARCHAR2(1024)	NOT NULL,
	ENTERED_BY_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','SID'),
	ENTERED_AT_DTM		DATE			DEFAULT SYSDATE,
	CONSTRAINT PK_SITE_AUDIT_DETAILS_CLIENT_NAME PRIMARY KEY (APP_SID, CLIENT_NAME)
)
;
create index csr.ix_site_audit_de_cn_entered_by on csr.site_audit_details_client_name (app_sid, entered_by_sid);

CREATE TABLE CSR.SITE_AUDIT_DETAILS_REASON (
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	REASON				CLOB			NOT NULL,
	ENTERED_BY_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','SID'),
	ENTERED_AT_DTM		DATE			DEFAULT SYSDATE
)
;
create index csr.ix_site_audit_de_rea_entered_by on csr.site_audit_details_reason (app_sid, entered_by_sid);

CREATE TABLE CSR.SITE_AUDIT_DETAILS_CONTRACT_REF (
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CONTRACT_REFERENCE	VARCHAR2(1024)	NOT NULL,
	ENTERED_BY_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','SID'),
	ENTERED_AT_DTM		DATE			DEFAULT SYSDATE
)
;
create index csr.ix_site_audit_de_cr_entered_by on csr.site_audit_details_contract_ref (app_sid, entered_by_sid);

CREATE TABLE CSR.SNAPSHOT(
    APP_SID                    NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NAME                       VARCHAR2(255)     NOT NULL,
    TITLE                      VARCHAR2(1024)    NOT NULL,
    DESCRIPTION                VARCHAR2(1024),
    SNAPSHOT_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    NEXT_UPDATE_AFTER_DTM      DATE              NOT NULL,
    REFRESH_XML                SYS.XMLType       NOT NULL,
    START_DTM                  DATE              NOT NULL,
    END_DTM                    DATE              NOT NULL,
    INTERVAL                   VARCHAR2(1)       DEFAULT 'y' NOT NULL,
    PERIOD_SET_ID              NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID         NUMBER(10, 0)     NOT NULL,
    USE_UNMERGED               NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHART_TEMPLATE_ROOT_SID    NUMBER(10, 0),
    IS_SUPPLIER                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    IS_PROPERTY                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_SNAPSHOT_INTERVAL CHECK (INTERVAL IN ('y','h','q','m')),
    CONSTRAINT CHK_SNAPSHOT_USE_UNMERGED CHECK (USE_UNMERGED IN (0,1)),
    CONSTRAINT CHK_SNPSHT_IS_SUP_0_OR_1 CHECK (IS_SUPPLIER IN (0,1)),
    CONSTRAINT CHK_SNPSHT_IS_PROP_0_OR_1 CHECK (IS_PROPERTY IN (0,1)),
    CONSTRAINT PK_SNAPSHOT PRIMARY KEY (APP_SID, NAME)
)
;

CREATE TABLE CSR.SNAPSHOT_IND(
    APP_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NAME       VARCHAR2(255)    NOT NULL,
    IND_SID    NUMBER(10, 0)    NOT NULL,
    POS        NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK440 PRIMARY KEY (APP_SID, NAME, IND_SID)
)
;

CREATE TABLE CSR.SNAPSHOT_REGION(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NAME               VARCHAR2(255)    NOT NULL,
    REGION_SID         NUMBER(10, 0)    NOT NULL,
    ALL_DESCENDENTS    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK567 PRIMARY KEY (APP_SID, NAME, REGION_SID)
)
;

CREATE TABLE CSR.SNAPSHOT_TAG_GROUP(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NAME            VARCHAR2(255)    NOT NULL,
    TAG_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK674 PRIMARY KEY (APP_SID, NAME, TAG_GROUP_ID)
)
;

CREATE TABLE CSR.SOURCE_TYPE(
    SOURCE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION       VARCHAR2(255)    NOT NULL,
    HELPER_PKG        VARCHAR2(64),
    AUDIT_URL         VARCHAR2(128),
    CONSTRAINT PK92 PRIMARY KEY (SOURCE_TYPE_ID)
)
;

CREATE TABLE CSR.SOURCE_TYPE_ERROR_CODE(
    SOURCE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    ERROR_CODE        NUMBER(10, 0)    NOT NULL,
    LABEL             VARCHAR2(128)    NOT NULL,
    DETAIL_URL        VARCHAR2(128),
    CONSTRAINT PK158 PRIMARY KEY (SOURCE_TYPE_ID, ERROR_CODE)
)
;

CREATE TABLE CSR.SPACE_TYPE(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SPACE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL            VARCHAR2(255)    NOT NULL,
    IS_TENANTABLE    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_SPACE_TYPE_IS_TENANT CHECK (IS_TENANTABLE IN (0,1)),
    CONSTRAINT PK_SPACE_TYPE PRIMARY KEY (APP_SID, SPACE_TYPE_ID)
)
;

CREATE SEQUENCE CSR.SPACE_TYPE_ID_SEQ;

CREATE UNIQUE INDEX CSR.UK_SPACE_TYPE ON CSR.SPACE_TYPE(APP_SID, UPPER(LABEL))
;

CREATE TABLE CSR.SPACE_TYPE_REGION_METRIC(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SPACE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    IND_SID          NUMBER(10, 0)    NOT NULL,
    REGION_TYPE      NUMBER(2, 0)     DEFAULT 9 NOT NULL,
    CONSTRAINT PK_SPACE_TYPE_REGION_METRIC PRIMARY KEY (APP_SID, SPACE_TYPE_ID, IND_SID)
)
;

CREATE TABLE CSR.SSO_CERTIFICATE_STATUS(
    SSO_CERT_ID       NUMBER(10, 0),
    HOST              VARCHAR2(255),
    SUBJECT           VARCHAR2(1024),
    NOT_BEFORE_DTM    DATE,
    NOT_AFTER_DTM     DATE,
    CERT_HASH         RAW(64),
    CONSTRAINT UK_SSO_CERT_STATUS UNIQUE (CERT_HASH, SSO_CERT_ID)
)
;

CREATE TABLE CSR.STATUS(
    STATUS_ID    NUMBER(10, 0)    NOT NULL,
    LABEL        VARCHAR2(50)     NOT NULL,
    CONSTRAINT PK_STATUS PRIMARY KEY (STATUS_ID)
)
;

CREATE TABLE CSR.STD_ALERT_TYPE(
    STD_ALERT_TYPE_ID              NUMBER(10, 0)     NOT NULL,
    PARENT_ALERT_TYPE_ID           NUMBER(10, 0),
    DESCRIPTION                    VARCHAR2(255)     NOT NULL,
    SEND_TRIGGER                   VARCHAR2(2000)    NOT NULL,
    SENT_FROM                      VARCHAR2(2000)    NOT NULL,
    OVERRIDE_USER_SEND_SETTING     NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    STD_ALERT_TYPE_GROUP_ID        NUMBER(10, 0),
    OVERRIDE_TEMPLATE_SEND_TYPE    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK101 PRIMARY KEY (STD_ALERT_TYPE_ID)
)
;

CREATE TABLE CSR.STD_ALERT_TYPE_GROUP(
    STD_ALERT_TYPE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION                VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_STD_ALERT_TYPE_GROUP PRIMARY KEY (STD_ALERT_TYPE_GROUP_ID)
)
;

CREATE TABLE CSR.STD_ALERT_TYPE_PARAM(
    STD_ALERT_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    FIELD_NAME           VARCHAR2(100)     NOT NULL,
    DESCRIPTION          VARCHAR2(200)     NOT NULL,
    HELP_TEXT            VARCHAR2(2000)    NOT NULL,
    REPEATS              NUMBER(1, 0)      NOT NULL,
    DISPLAY_POS          NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_ALERT_TYPE_PARAM PRIMARY KEY (STD_ALERT_TYPE_ID, FIELD_NAME)
)
;

CREATE TABLE CSR.STD_CURRENCY(
    CURRENCY_CODE    VARCHAR2(10)     NOT NULL,
    LABEL            VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_STD_CURRENCY PRIMARY KEY (CURRENCY_CODE)
)
;

CREATE TABLE CSR.STD_FACTOR(
    STD_FACTOR_ID                NUMBER(10, 0)     NOT NULL,
    STD_FACTOR_SET_ID            NUMBER(10, 0)     NOT NULL,
    FACTOR_TYPE_ID               NUMBER(10, 0)     NOT NULL,
    GAS_TYPE_ID                  NUMBER(10, 0)     NOT NULL,
    GEO_COUNTRY                  VARCHAR2(2),
    GEO_REGION                   VARCHAR2(2),
    EGRID_REF                    VARCHAR2(4),
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0)     NOT NULL,
    START_DTM                    DATE              NOT NULL,
    END_DTM                      DATE,
    VALUE                        NUMBER(24, 10)    NOT NULL,
    NOTE                         CLOB,
    SOURCE                       VARCHAR2(1000),
    CONSTRAINT CK_STD_FACTOR_DATES CHECK ((START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM)),
    CONSTRAINT PK_FACTOR_1 PRIMARY KEY (STD_FACTOR_ID)
)
;

CREATE SEQUENCE CSR.STD_FACTOR_ID_SEQ;

CREATE TABLE CSR.STD_FACTOR_SET(
	STD_FACTOR_SET_ID		NUMBER(10, 0)	NOT NULL,
	NAME					VARCHAR2(1000)	NOT NULL,
	CREATED_BY_SID			NUMBER(10, 0),
	CREATED_DTM				DATE,
	PUBLISHED				NUMBER(1, 0)	DEFAULT 0	NOT NULL,
	PUBLISHED_BY_SID		NUMBER(10, 0),
	PUBLISHED_DTM			DATE,
	FACTOR_SET_GROUP_ID		NUMBER(10, 0),
	VISIBLE_IN_CLASSIC_TOOL	NUMBER(1)		DEFAULT 0	NOT NULL,
	INFO_NOTE				CLOB,
	VISIBLE NUMBER(1,0) DEFAULT 0 NOT NULL,
	CONSTRAINT CK_STD_FACTOR_SET_PUBLISHED CHECK (PUBLISHED IN (1, 0)),
	CONSTRAINT PK599 PRIMARY KEY (STD_FACTOR_SET_ID)
)
;

CREATE SEQUENCE CSR.FACTOR_SET_ID_SEQ START WITH 1000;

CREATE TABLE CSR.STD_FACTOR_SET_ACTIVE(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    STD_FACTOR_SET_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT FK_STD_FCTR_SET_ACTIVE_SET_ID FOREIGN KEY (STD_FACTOR_SET_ID) REFERENCES CSR.STD_FACTOR_SET(STD_FACTOR_SET_ID),
    CONSTRAINT PK_STD_FACTOR_SET_ACTIVE PRIMARY KEY (APP_SID, STD_FACTOR_SET_ID)
)
;

CREATE TABLE CSR.STD_MEASURE(
    STD_MEASURE_ID           NUMBER(10, 0)     NOT NULL,
    NAME                     VARCHAR2(255)     NOT NULL,
    DESCRIPTION              VARCHAR2(255),
    SCALE                    NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    FORMAT_MASK              VARCHAR2(255)     DEFAULT '#,##0' NOT NULL,
    REGIONAL_AGGREGATION     VARCHAR2(255)     DEFAULT 'sum' NOT NULL,
    CUSTOM_FIELD             VARCHAR2(1024),
    PCT_OWNERSHIP_APPLIES    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    M                        NUMBER(10, 0)     NOT NULL,
    KG                       NUMBER(10, 0)     NOT NULL,
    S                        NUMBER(10, 0)     NOT NULL,
    A                        NUMBER(10, 0)     NOT NULL,
    K                        NUMBER(10, 0)     NOT NULL,
    MOL                      NUMBER(10, 0)     NOT NULL,
    CD                       NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_MEASURE_1 PRIMARY KEY (STD_MEASURE_ID)
)
;

CREATE TABLE CSR.STD_MEASURE_CONV_PERIOD(
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM                    DATE             NOT NULL,
    END_DTM                      DATE,
    A                            NUMBER(10, 0)    NOT NULL,
    B                            NUMBER(10, 0)    NOT NULL,
    C                            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_MEASURE_CONVERSION_PERIOD_1 PRIMARY KEY (STD_MEASURE_CONVERSION_ID, START_DTM)
)
;

CREATE TABLE CSR.STD_MEASURE_CONVERSION(
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0)     NOT NULL,
    STD_MEASURE_ID               NUMBER(10, 0)     NOT NULL,
    DESCRIPTION                  VARCHAR2(255),
    A                            NUMBER            NOT NULL,
    B                            NUMBER(38, 10)    NOT NULL,
    C                            NUMBER(38, 10)    NOT NULL,
    DIVISIBLE                    NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    CONSTRAINT PK_MEASURE_CONVERSION_1 PRIMARY KEY (STD_MEASURE_CONVERSION_ID)
)
;

CREATE TABLE CSR.SUPERADMIN(
    CSR_USER_SID     NUMBER(10, 0)    NOT NULL,
    EMAIL            VARCHAR2(256),
    GUID             CHAR(36)         NOT NULL,
    FULL_NAME        VARCHAR2(256),
    USER_NAME        VARCHAR2(256)    NOT NULL,
    FRIENDLY_NAME    VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_SUPERADMIN PRIMARY KEY (CSR_USER_SID)
)
;

CREATE UNIQUE INDEX CSR.IX_SUPERADMIN_UNIQ_USER_NAME ON CSR.SUPERADMIN(LOWER(USER_NAME))
;

CREATE TABLE CSR.SUPPLIER(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COMPANY_SID                 NUMBER(10, 0)    NOT NULL,
    REGION_SID                  NUMBER(10, 0),
    LOGO_FILE_SID               NUMBER(10, 0),
    RECIPIENT_SID               NUMBER(10, 0),
    DEFAULT_REGION_MOUNT_SID    NUMBER(10, 0)    DEFAULT NULL,
    CONSTRAINT PK_SUPPLIER PRIMARY KEY (APP_SID, COMPANY_SID)
)
;

CREATE TABLE CSR.SUPPLIER_DELEGATION(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SUPPLIER_SID          NUMBER(10, 0)    NOT NULL,
    TPL_DELEGATION_SID    NUMBER(10, 0)    NOT NULL,
    DELEGATION_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_SUPPLIER_DELEGATION PRIMARY KEY (APP_SID, SUPPLIER_SID, TPL_DELEGATION_SID)
)
;

CREATE TABLE CSR.SUPPLIER_SCORE_LOG(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SUPPLIER_SCORE_ID      NUMBER(10, 0)    NOT NULL,
    SUPPLIER_SID           NUMBER(10, 0)    NOT NULL,
    SCORE_THRESHOLD_ID     NUMBER(10, 0),
    SET_DTM                DATE             DEFAULT SYSDATE NOT NULL,
    SCORE                  NUMBER(15, 5),
    SCORE_TYPE_ID          NUMBER(10, 0)    NOT NULL,
    CHANGED_BY_USER_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'SID'),
    COMMENT_TEXT           CLOB,
    VALID_UNTIL_DTM        DATE,
    SCORE_SOURCE_TYPE      NUMBER(10),
    SCORE_SOURCE_ID        NUMBER(10),
    CONSTRAINT PK_SUPPLIER_SCORE PRIMARY KEY (APP_SID, SUPPLIER_SCORE_ID)
)
;

CREATE SEQUENCE CSR.SUPPLIER_SCORE_ID_SEQ;

CREATE INDEX CSR.IX_SUP_SCORE_SUPPLIER_SID ON CSR.SUPPLIER_SCORE_LOG(APP_SID, SUPPLIER_SID)
;

CREATE INDEX CSR.IX_SUP_SCORE_THRESH_ID ON CSR.SUPPLIER_SCORE_LOG(APP_SID, SCORE_THRESHOLD_ID)
;

CREATE TABLE CSR.SUPPLIER_SURVEY_RESPONSE(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SUPPLIER_SID          NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)    NOT NULL,
    SURVEY_SID            NUMBER(10, 0)    NOT NULL,
    COMPONENT_ID          NUMBER(10, 0),
    CONSTRAINT PK_SUPPLIER_SURVEY_RESPONSE PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID)
)
;

CREATE UNIQUE INDEX CSR.UX_SUPPLIER_CMP_SURV_RESPONSE ON CSR.SUPPLIER_SURVEY_RESPONSE(APP_SID, SUPPLIER_SID, COMPONENT_ID, SURVEY_RESPONSE_ID)
;

CREATE UNIQUE INDEX CSR.UX_SUPPLIER_SURVEY_RESPONSE ON CSR.SUPPLIER_SURVEY_RESPONSE(APP_SID, SUPPLIER_SID, SURVEY_SID, CASE WHEN COMPONENT_ID IS NULL THEN 1 ELSE COMPONENT_ID END)
;

CREATE SEQUENCE CSR.SYS_TRANS_AUDIT_LOG_SEQ;

CREATE TABLE CSR.SYS_TRANSLATIONS_AUDIT_LOG(
	SYS_TRANSLATIONS_AUDIT_LOG_ID	NUMBER(10)        NOT NULL,
	AUDIT_DATE						DATE DEFAULT      SYSDATE NOT NULL,
	APP_SID							NUMBER(10,0)      DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	TRANSLATED_ID					NUMBER(10,0)      NOT NULL,
	USER_SID						NUMBER(10,0)      NOT NULL,
	DESCRIPTION						VARCHAR2(4000)    NOT NULL,
	CONSTRAINT PK_SYS_TRANS_AUDIT_LOG PRIMARY KEY (SYS_TRANSLATIONS_AUDIT_LOG_ID)
)
;

CREATE TABLE CSR.SYS_TRANSLATIONS_AUDIT_DATA(
	SYS_TRANSLATIONS_AUDIT_LOG_ID	NUMBER(10)        NOT NULL,
	AUDIT_DATE						DATE DEFAULT      SYSDATE NOT NULL,
	APP_SID							NUMBER(10,0)      DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	IS_DELETE						NUMBER(1,0)       NOT NULL,
	ORIGINAL						VARCHAR2(4000),
	TRANSLATION						VARCHAR2(4000),
	OLD_TRANSLATION					VARCHAR2(4000),
	CONSTRAINT PK_SYS_TRANS_AUDIT_DATA PRIMARY KEY (SYS_TRANSLATIONS_AUDIT_LOG_ID)
)
;

CREATE TABLE CSR.TAB(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAB_ID          NUMBER(10, 0)    NOT NULL,
    LAYOUT          NUMBER(10, 0)    NOT NULL,
    NAME            VARCHAR2(255)    NOT NULL,
    IS_SHARED       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    PORTAL_GROUP    VARCHAR2(50),
    OVERRIDE_POS    NUMBER(10, 0),
    IS_HIDEABLE     NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT PK_TAB PRIMARY KEY (APP_SID, TAB_ID)
)
;

CREATE SEQUENCE CSR.TAB_ID_SEQ;

CREATE TABLE CSR.TAB_GROUP(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	TAB_ID				NUMBER(10, 0)	NOT NULL,
	GROUP_SID			NUMBER(10, 0)	NOT NULL,
	POS					NUMBER(10, 0),
	CONSTRAINT PK_TAB_GROUP PRIMARY KEY (APP_SID, TAB_ID, GROUP_SID)
)
;

CREATE SEQUENCE CSR.TAG_GROUP_ID_SEQ CACHE 5;

CREATE TABLE CSR.TAB_PORTLET(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAB_PORTLET_ID          NUMBER(10, 0)    NOT NULL,
    TAB_ID                  NUMBER(10, 0)    NOT NULL,
    COLUMN_NUM              NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    POS                     NUMBER(10, 0)    NOT NULL,
    STATE                   CLOB,
    CUSTOMER_PORTLET_SID    NUMBER(10, 0)    NOT NULL,
    ADDED_BY_USER_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','SID'),
    ADDED_DTM               DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_TAB_PORTLET PRIMARY KEY (APP_SID, TAB_PORTLET_ID)
)
;

CREATE SEQUENCE CSR.TAB_PORTLET_ID_SEQ;

CREATE TABLE CSR.TAB_PORTLET_RSS_FEED(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAB_PORTLET_ID    NUMBER(10, 0)     NOT NULL,
    RSS_URL           VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK_TAB_PORTLET_RSS_FEED PRIMARY KEY (APP_SID, TAB_PORTLET_ID, RSS_URL)
)
;

CREATE TABLE CSR.TAB_PORTLET_USER_REGION(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAB_PORTLET_ID    NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID      NUMBER(10, 0)    NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TAB_PORTLET_USER_REGION PRIMARY KEY (APP_SID, TAB_PORTLET_ID, CSR_USER_SID, REGION_SID)
)
;

CREATE TABLE CSR.TAB_USER(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAB_ID       NUMBER(10, 0)    NOT NULL,
    USER_SID     NUMBER(10, 0)    NOT NULL,
    POS          NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    IS_OWNER     NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    IS_HIDDEN    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_TAB_USER PRIMARY KEY (APP_SID, TAB_ID, USER_SID)
)
;

CREATE TABLE CSR.TAB_DESCRIPTION(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	TAB_ID				NUMBER(10, 0)	NOT NULL,
	LANG				VARCHAR2(10)	NOT NULL,
	DESCRIPTION			VARCHAR2(1023)	NOT NULL,
	LAST_CHANGED_DTM	DATE,
	CONSTRAINT PK_TAB_DESCRIPTION PRIMARY KEY (APP_SID, TAB_ID, LANG)
)
;

CREATE TABLE CSR.TAG(
    APP_SID                           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAG_ID                            NUMBER(10, 0)     NOT NULL,
    TAG_OLD                           VARCHAR2(255),
    EXPLANATION_OLD                   VARCHAR2(1024),
    LOOKUP_KEY                        VARCHAR2(30),
    EXCLUDE_FROM_DATAVIEW_GROUPING    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
	PARENT_ID						  NUMBER(10),
    CONSTRAINT PK_TAG PRIMARY KEY (APP_SID, TAG_ID)
)
;

CREATE TABLE CSR.TAG_DESCRIPTION(
	APP_SID				NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	TAG_ID				NUMBER(10, 0)		NOT NULL,
	LANG				VARCHAR2(10)		NOT NULL,
	TAG					VARCHAR2(255)		NOT NULL,
	EXPLANATION			VARCHAR2(1024),
	LAST_CHANGED_DTM	DATE,
	CONSTRAINT PK_TAG_DESCRIPTION PRIMARY KEY (APP_SID, TAG_ID, LANG)
);

CREATE SEQUENCE CSR.TAG_ID_SEQ CACHE 5;

CREATE TABLE CSR.TAG_GROUP(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAG_GROUP_ID                      NUMBER(10, 0)    NOT NULL,
    MULTI_SELECT                      NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    MANDATORY                         NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    APPLIES_TO_INDS                   NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_REGIONS                NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_NON_COMPLIANCES        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_SUPPLIERS              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_INITIATIVES            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_CHAIN                  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_CHAIN_ACTIVITIES       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_CHAIN_PRODUCT_TYPES    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	APPLIES_TO_CHAIN_PRODUCTS		  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
	APPLIES_TO_CHAIN_PRODUCT_SUPPS	  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_QUICK_SURVEY           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_AUDITS                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    APPLIES_TO_COMPLIANCES            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    LOOKUP_KEY                        VARCHAR2(64),
	IS_HIERARCHICAL					  NUMBER(1, 0)		   DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_TAG_GRP_APPL_SUP_0_1 CHECK (APPLIES_TO_SUPPLIERS IN (0,1)),
    CHECK (APPLIES_TO_INITIATIVES IN(0,1)),
    CHECK (APPLIES_TO_COMPLIANCES IN(0,1)),
    CONSTRAINT PK_TAG_GROUP PRIMARY KEY (APP_SID, TAG_GROUP_ID),
    CONSTRAINT CHK_APPLIES_TO_CHAIN_ACTVS_1_0 CHECK (APPLIES_TO_CHAIN_ACTIVITIES IN (1, 0)),
    CONSTRAINT CHK_APPLIES_TO_CHAIN_PRD_T_1_0 CHECK (APPLIES_TO_CHAIN_PRODUCT_TYPES IN (1, 0)),
    CONSTRAINT CHK_APPLIES_TO_CHAIN_PRD_1_0 CHECK (APPLIES_TO_CHAIN_PRODUCTS IN (1, 0)),
    CONSTRAINT CHK_APPLIES_TO_CHAIN_PRD_S_1_0 CHECK (APPLIES_TO_CHAIN_PRODUCT_SUPPS IN (1, 0)),
    CONSTRAINT CHK_APPLIES_TO_QK_SURVEY_1_0 CHECK (APPLIES_TO_QUICK_SURVEY IN (1, 0)),
	CONSTRAINT CHK_IS_HIERARCHICAL CHECK (IS_HIERARCHICAL IN (0, 1))
)
;

CREATE TABLE CSR.TAG_GROUP_DESCRIPTION(
	APP_SID				NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	TAG_GROUP_ID		NUMBER(10, 0)		NOT NULL,
	LANG				VARCHAR2(10)		NOT NULL,
	NAME				VARCHAR2(255)		NOT NULL,
	LAST_CHANGED_DTM	DATE,
	CONSTRAINT PK_TAG_GROUP_DESCRIPTION PRIMARY KEY (APP_SID, TAG_GROUP_ID, LANG)
);

CREATE UNIQUE INDEX CSR.UK_TAG_GROUP_LOOKUP ON CSR.TAG_GROUP(APP_SID, NVL(UPPER(LOOKUP_KEY), TAG_GROUP_ID));

CREATE UNIQUE INDEX CSR.UK_TAG_GROUP_DESCRIPTION_NAME ON CSR.TAG_GROUP_DESCRIPTION(APP_SID, NAME, LANG);

CREATE TABLE CSR.TAG_GROUP_MEMBER(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TAG_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    TAG_ID          NUMBER(10, 0)    NOT NULL,
    POS             NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    ACTIVE          NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT CHK_TAG_GRP_MEM_ACTIVE CHECK (ACTIVE IN (0,1)),
    CONSTRAINT PK_TAG_GROUP_MEMBER PRIMARY KEY (APP_SID, TAG_GROUP_ID, TAG_ID),
    CONSTRAINT UK_TAG_GROUP_MEMBER UNIQUE (APP_SID, TAG_ID)
)
;

CREATE TABLE CSR.TARGET_DASHBOARD(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TARGET_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    START_DTM               DATE             NOT NULL,
    END_DTM                 DATE,
    PERIOD_SET_ID           NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID      NUMBER(10, 0)    NOT NULL,
    NAME                    VARCHAR2(255)    NOT NULL,
    PARENT_SID              NUMBER(10, 0)    NOT NULL,
    USE_ROOT_REGION_SID     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_TGT_DASH_USE_ROOT_REG CHECK (USE_ROOT_REGION_SID IN (0,1)),
    CONSTRAINT PK_TARGET_DASHBOARD PRIMARY KEY (APP_SID, TARGET_DASHBOARD_SID)
)
;

CREATE TABLE CSR.TARGET_DASHBOARD_IND_MEMBER(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TARGET_DASHBOARD_SID    NUMBER(10, 0)     NOT NULL,
    TARGET_IND_SID          NUMBER(10, 0),
    IND_SID                 NUMBER(10, 0)     NOT NULL,
    POS                     NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_TARGET_DASHBOARD_IND_MEMBER PRIMARY KEY (APP_SID, TARGET_DASHBOARD_SID, IND_SID)
)
;

CREATE TABLE CSR.TARGET_DASHBOARD_REG_MEMBER(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TARGET_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID              NUMBER(10, 0)    NOT NULL,
    POS                     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TARGET_DASH_REG_MEMBER PRIMARY KEY (APP_SID, TARGET_DASHBOARD_SID, REGION_SID)
)
;

CREATE TABLE CSR.TARGET_DASHBOARD_VALUE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TARGET_DASHBOARD_SID    NUMBER(10, 0)    NOT NULL,
    IND_SID                 NUMBER(10, 0)    NOT NULL,
    REGION_SID              NUMBER(10, 0)    NOT NULL,
    VAL_NUMBER              NUMBER(18, 4)    NOT NULL,
    CONSTRAINT PK_TARGET_DASHBOARD_VALUE PRIMARY KEY (APP_SID, TARGET_DASHBOARD_SID, IND_SID, REGION_SID)
)
;

CREATE TABLE CSR.TEAMROOM(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_SID             NUMBER(10, 0)     NOT NULL,
    NAME                     VARCHAR2(255),
    DESCRIPTION              CLOB,
    TEAMROOM_TYPE_ID         NUMBER(10, 0)     NOT NULL,
    DOC_LIBRARY_SID          NUMBER(10, 0),
    IMG_DATA                 BLOB,
    IMG_SHA1                 RAW(20),
    IMG_LAST_MODIFIED_DTM    DATE,
    IMG_MIME_TYPE            VARCHAR2(2000),
    CONSTRAINT CK_TEAMROOM_IMG CHECK ((IMG_DATA IS NULL AND IMG_SHA1 IS NULL AND IMG_LAST_MODIFIED_DTM IS NULL AND IMG_MIME_TYPE IS NULL) OR (IMG_DATA IS NOT NULL AND IMG_SHA1 IS NOT NULL AND IMG_LAST_MODIFIED_DTM IS NOT NULL AND IMG_MIME_TYPE IS NOT NULL)),
    CONSTRAINT PK_TEAMROOM PRIMARY KEY (APP_SID, TEAMROOM_SID)
)
;

CREATE TABLE CSR.TEAMROOM_COMPANY(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_SID    NUMBER(10, 0)    NOT NULL,
    COMPANY_SID     NUMBER(10, 0)    NOT NULL,
    ADDED_BY_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    ADDED_DTM       DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_TEAMROOM_COMPANY PRIMARY KEY (APP_SID, TEAMROOM_SID, COMPANY_SID)
)
;

CREATE TABLE CSR.TEAMROOM_EVENT(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_SID         NUMBER(10, 0)    NOT NULL,
    CALENDAR_EVENT_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TEAMROOM_EVENT PRIMARY KEY (APP_SID, TEAMROOM_SID, CALENDAR_EVENT_ID)
)
;

CREATE TABLE CSR.TEAMROOM_INITIATIVE(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_SID      NUMBER(10, 0)    NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TEAMROOM_INITIATIVES PRIMARY KEY (APP_SID, TEAMROOM_SID, INITIATIVE_SID)
)
;

CREATE TABLE CSR.TEAMROOM_ISSUE(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_SID    NUMBER(10, 0)    NOT NULL,
    ISSUE_ID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TEAMROOM_ISSUE PRIMARY KEY (APP_SID, TEAMROOM_SID, ISSUE_ID)
)
;

CREATE TABLE CSR.TEAMROOM_MEMBER(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_SID         NUMBER(10, 0)    NOT NULL,
    USER_SID             NUMBER(10, 0)    NOT NULL,
    INVITED_DTM          DATE             DEFAULT SYSDATE NOT NULL,
    INVITED_BY_SID       NUMBER(10, 0)    NOT NULL,
    ACCEPTED_DTM         DATE,
    DEACTIVATED_DTM      DATE,
    CAN_INVITE_OTHERS    NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CONSTRAINT CK_TEAMROOM_MBR_CAN_INV CHECK (CAN_INVITE_OTHERS IN (0,1)),
    CONSTRAINT PK_TEAMROOM_MEMBER PRIMARY KEY (APP_SID, TEAMROOM_SID, USER_SID)
)
;

CREATE TABLE CSR.TEAMROOM_TYPE(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_TYPE_ID              NUMBER(10, 0)    NOT NULL,
    LABEL                         VARCHAR2(255),
    BASE_CSS_CLASS                VARCHAR2(255)    NOT NULL,
    HIDDEN                        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    DEFAULT_NEW_USER_GROUP_SID    NUMBER(10, 0),
    DEFAULT_COMPANY_SID           NUMBER(10, 0),
    HELPER_PKG                    VARCHAR2(255),
    CONSTRAINT CHK_TEAMROOM_TYPE_HIDDEN CHECK (HIDDEN IN (0,1)),
    CONSTRAINT PK_TEAMROOM_TYPE PRIMARY KEY (APP_SID, TEAMROOM_TYPE_ID)
)
;

CREATE SEQUENCE CSR.TEAMROOM_TYPE_ID_SEQ;

CREATE TABLE CSR.TEAMROOM_TYPE_TAB(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID           NUMBER(10, 0)    NOT NULL,
    PLUGIN_TYPE_ID      NUMBER(10, 0)    NOT NULL,
    POS                 NUMBER(10, 0)    NOT NULL,
    TAB_LABEL           VARCHAR2(50),
    CONSTRAINT CHK_TEAMROOM_TAB_PLUGIN_TYPE CHECK (PLUGIN_TYPE_ID IN (5,6,7,8,9)),
    CONSTRAINT PK_TEAMROOM_TYPE_TAB PRIMARY KEY (APP_SID, TEAMROOM_TYPE_ID, PLUGIN_ID)
)
;

CREATE TABLE CSR.TEAMROOM_TYPE_TAB_GROUP(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    PLUGIN_ID           NUMBER(10, 0)    NOT NULL,
    GROUP_SID           NUMBER(10, 0)    NOT NULL,
    IS_READ_ONLY        NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    CHECK (IS_READ_ONLY IN (0,1)),
    CONSTRAINT PK_TEAMROOM_TAB_GROUP PRIMARY KEY (APP_SID, TEAMROOM_TYPE_ID, PLUGIN_ID, GROUP_SID)
)
;

CREATE TABLE CSR.TEAMROOM_USER_MSG(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEAMROOM_SID    NUMBER(10, 0)    NOT NULL,
    USER_MSG_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TEAMROOM_USER_MSG PRIMARY KEY (APP_SID, TEAMROOM_SID, USER_MSG_ID)
)
;

CREATE TABLE CSR.TEMPLATE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEMPLATE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DATA                BLOB             NOT NULL,
    MIME_TYPE           VARCHAR2(255)    NOT NULL,
    UPLOADED_DTM        DATE             DEFAULT SYSDATE NOT NULL,
    UPLOADED_BY_SID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TEMPLATE PRIMARY KEY (APP_SID, TEMPLATE_TYPE_ID)
)
;

CREATE TABLE CSR.TEMPLATE_TYPE(
    TEMPLATE_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    NAME                VARCHAR2(255)     NOT NULL,
    DESCRIPTION         VARCHAR2(2048)    NOT NULL,
    DEFAULT_DATA        BLOB,
    MIME_TYPE           VARCHAR2(64)      NOT NULL,
    CONSTRAINT PK207 PRIMARY KEY (TEMPLATE_TYPE_ID)
)
;

CREATE TABLE CSR.TENANT(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TENANT_ID    NUMBER(10, 0)    NOT NULL,
    NAME         VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_TENANT PRIMARY KEY (APP_SID, TENANT_ID)
)
;

CREATE SEQUENCE CSR.TENANT_ID_SEQ;

CREATE TABLE CSR.TERM_COND_DOC(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    COMPANY_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DOC_ID             NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TERM_COND_DOC PRIMARY KEY (APP_SID, COMPANY_TYPE_ID, DOC_ID)
)
;

CREATE TABLE CSR.TERM_COND_DOC_LOG(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    USER_SID           NUMBER(10, 0)    NOT NULL,
    COMPANY_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DOC_ID             NUMBER(10, 0)    NOT NULL,
    DOC_VERSION        NUMBER(10, 0)    NOT NULL,
    ACCEPTED_DTM       DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_TERM_COND_DOC_LOG PRIMARY KEY (APP_SID, USER_SID, COMPANY_TYPE_ID, DOC_ID, DOC_VERSION)
)
;

CREATE TABLE CSR.TPL_IMG(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    KEY          VARCHAR2(255)    NOT NULL,
    PATH         VARCHAR2(255),
    IMAGE        BLOB,
    FILENAME     VARCHAR2(255),
    MIME_TYPE    VARCHAR2(255),
    CONSTRAINT PK_TPL_IMG PRIMARY KEY (APP_SID, KEY)
)
;

CREATE UNIQUE INDEX CSR.IDX_TPL_IMG ON CSR.TPL_IMG(APP_SID, UPPER(KEY))
;

CREATE TABLE CSR.TPL_REGION_TYPE(
    TPL_REGION_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                 VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK625 PRIMARY KEY (TPL_REGION_TYPE_ID)
)
;

CREATE TABLE CSR.TPL_REP_CUST_TAG_TYPE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REP_CUST_TAG_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CS_CLASS                    VARCHAR2(255)    NOT NULL,
    JS_INCLUDE                  VARCHAR2(255),
    JS_CLASS                    VARCHAR2(255)    NOT NULL,
    HELPER_PKG                  VARCHAR2(255),
    DESCRIPTION                 VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_TPL_REP_CUST_TAG_TYPE PRIMARY KEY (APP_SID, TPL_REP_CUST_TAG_TYPE_ID)
)
;

CREATE TABLE CSR.TPL_REPORT(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_SID        NUMBER(10, 0)     NOT NULL,
    NAME                  VARCHAR2(256)     NOT NULL,
    DESCRIPTION           VARCHAR2(1024),
    WORD_DOC              BLOB              NOT NULL,
    FILENAME              VARCHAR2(256)     NOT NULL,
    THUMB_IMG             BLOB,
    PERIOD_SET_ID         NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID    NUMBER(10, 0)     NOT NULL,
    PARENT_SID            NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_TPL_REPORT PRIMARY KEY (APP_SID, TPL_REPORT_SID)
)
;

CREATE TABLE CSR.TPL_REPORT_NON_COMPL(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_NON_COMPL_ID    NUMBER(10, 0)    NOT NULL,
    TPL_REGION_TYPE_ID         NUMBER(10, 0)    NOT NULL,
    MONTH_OFFSET               NUMBER(10, 0)    NOT NULL,
    MONTH_DURATION             NUMBER(10, 0)    NOT NULL,
    TAG_ID                     NUMBER(10, 0),
    PERIOD_SET_ID              NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TPL_REPORT_NON_COMPL PRIMARY KEY (APP_SID, TPL_REPORT_NON_COMPL_ID)
)
;

CREATE SEQUENCE CSR.TPL_REPORT_NON_COMPL_ID_SEQ;

CREATE INDEX CSR.IX_TPL_REP_NC_TAG ON CSR.TPL_REPORT_NON_COMPL(APP_SID, TAG_ID)
;

CREATE TABLE CSR.TPL_REPORT_REG_DATA_TYPE(
    TPL_REPORT_REG_DATA_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    DESCRIPTION                     VARCHAR2(255)    NOT NULL,
    POS                             NUMBER(10, 0)    NOT NULL,
    HIDE_IF_PROPERTIES_NOT_ENABLED  NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    HIDE_IF_METERING_NOT_ENABLED    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_TPL_REPORT_REG_DATA_TYPE PRIMARY KEY (TPL_REPORT_REG_DATA_TYPE_ID)
);

CREATE TABLE CSR.TPL_REPORT_SCHED_BATCH_RUN(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCHEDULE_SID      NUMBER(10, 0)    NOT NULL,
    NEXT_FIRE_TIME    TIMESTAMP(6)     DEFAULT NULL,
    CONSTRAINT PK_TPL_REP_SCHED_BATCH_SCHED PRIMARY KEY (APP_SID, SCHEDULE_SID)
)
;

CREATE TABLE CSR.TPL_REPORT_SCHED_SAVED_DOC(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCHEDULE_SID    NUMBER(10, 0)    NOT NULL,
    DOC_ID          NUMBER(10, 0)    NOT NULL,
    REGION_SID      NUMBER(10, 0)    DEFAULT NULL
)
;

CREATE TABLE CSR.TPL_REPORT_SCHEDULE(
    APP_SID                     NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCHEDULE_SID                NUMBER(10, 0)     NOT NULL,
    TPL_REPORT_SID              NUMBER(10, 0)     NOT NULL,
    OWNER_USER_SID              NUMBER(10, 0),
    NAME                        VARCHAR2(1023)    NOT NULL,
    REGION_SELECTION_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    REGION_SELECTION_TAG_ID     NUMBER(10, 0)     DEFAULT NULL,
    INCLUDE_INACTIVE_REGIONS    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ONE_REPORT_PER_REGION       NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SCHEDULE_XML                CLOB              DEFAULT EMPTY_CLOB() NOT NULL,
    OFFSET                      NUMBER(10, 0)     DEFAULT 0,
    USE_UNMERGED                NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    OUTPUT_AS_PDF               NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    ROLE_SID                    NUMBER(10, 0),
    EMAIL_OWNER_ON_COMPLETE     NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DOC_FOLDER_SID              NUMBER(10, 0),
    OVERWRITE_EXISTING          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    SCENARIO_RUN_SID            NUMBER(10, 0),
	PUBLISH_TO_PROP_DOC_LIB		NUMBER(1)         DEFAULT 0 NOT NULL,
    CONSTRAINT PK_TPL_REPORT_SCHED PRIMARY KEY (APP_SID, SCHEDULE_SID),
    CONSTRAINT CHK_TPL_REP_INCL_INACT_REG CHECK (INCLUDE_INACTIVE_REGIONS IN (0,1)),
    CONSTRAINT CHK_TPL_REP_ONE_REPORT_PER CHECK (ONE_REPORT_PER_REGION IN (0,1)),
    CONSTRAINT CHK_TPL_REP_USE_UNMERGED CHECK (USE_UNMERGED IN (0,1)),
    CONSTRAINT CHK_TPL_REP_OUTPUT_AS_PDF CHECK (OUTPUT_AS_PDF IN (0,1)),
    CONSTRAINT CHK_TPL_REP_EMAIL_OWNER CHECK (EMAIL_OWNER_ON_COMPLETE IN (0,1)),
    CONSTRAINT CHK_TPL_REP_OVERWRITE_DOC CHECK (OVERWRITE_EXISTING IN (0,1))
)
;

CREATE TABLE CSR.TPL_REPORT_SCHEDULE_REGION(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SCHEDULE_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID      NUMBER(10, 0)    NOT NULL,
    POS             NUMBER(10, 0)    NOT NULL
)
;

CREATE TABLE CSR.TPL_REPORT_TAG(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_SID                    NUMBER(10, 0)    NOT NULL,
    TAG                               VARCHAR2(255)    NOT NULL,
    TAG_TYPE                          NUMBER(10, 0)    NOT NULL,
    TPL_REPORT_TAG_IND_ID             NUMBER(10, 0),
    TPL_REPORT_TAG_EVAL_ID            NUMBER(10, 0),
    TPL_REPORT_TAG_DATAVIEW_ID        NUMBER(10, 0),
    TPL_REPORT_TAG_LOGGING_FORM_ID    NUMBER(10, 0),
    TPL_REP_CUST_TAG_TYPE_ID          NUMBER(10, 0),
    TPL_REPORT_TAG_TEXT_ID            NUMBER(10, 0),
    TPL_REPORT_NON_COMPL_ID           NUMBER(10, 0),
    TPL_REPORT_TAG_APP_NOTE_ID        NUMBER(10, 0),
    TPL_REPORT_TAG_APP_MATRIX_ID      NUMBER(10, 0),
    TPL_REPORT_TAG_REG_DATA_ID        NUMBER(10, 0),
    TPL_REPORT_TAG_QC_ID              number(10, 0),
    CONSTRAINT CT_TPL_REPORT_TAG CHECK (
        (TAG_TYPE IN (1,4,5,14) AND TPL_REPORT_TAG_IND_ID IS NOT NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = 6 AND TPL_REPORT_TAG_EVAL_ID IS NOT NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE IN (2,3,101) AND TPL_REPORT_TAG_DATAVIEW_ID IS NOT NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = 7 AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NOT NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = 8 AND TPL_REP_CUST_TAG_TYPE_ID IS NOT NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = 9 AND TPL_REPORT_TAG_TEXT_ID IS NOT NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = -1 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = 10 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NOT NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = 11 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NOT NULL)
        OR (TAG_TYPE = 102 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NOT NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = 103 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NOT NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
        OR (TAG_TYPE = 12 AND TPL_REPORT_TAG_QC_ID IS NOT NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
    ),
    CONSTRAINT PK_TPL_REPORT_TAG PRIMARY KEY (APP_SID, TPL_REPORT_SID, TAG)
)
;

CREATE INDEX CSR.IX_TPL_REP_TAG_NON_COMPL ON CSR.TPL_REPORT_TAG(APP_SID, TPL_REPORT_NON_COMPL_ID)
;

CREATE TABLE CSR.TPL_REPORT_TAG_APPROVAL_MATRIX(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_TAG_APP_MATRIX_ID    NUMBER(10, 0)    NOT NULL,
    APPROVAL_DASHBOARD_SID          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TPL_REPORT_TAG_APP_MATRIX PRIMARY KEY (APP_SID, TPL_REPORT_TAG_APP_MATRIX_ID)
)
;

CREATE SEQUENCE CSR.TPL_REP_TAG_APP_MATRIX_ID_SEQ;

CREATE TABLE CSR.TPL_REPORT_TAG_APPROVAL_NOTE(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_TAG_APP_NOTE_ID    NUMBER(10, 0)    NOT NULL,
    TAB_PORTLET_ID                NUMBER(10, 0)    NOT NULL,
    APPROVAL_DASHBOARD_SID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_TPL_REPORT_TAG_APP_NOTE PRIMARY KEY (APP_SID, TPL_REPORT_TAG_APP_NOTE_ID)
)
;

CREATE SEQUENCE CSR.TPL_REPORT_TAG_APP_NOTE_ID_SEQ;

CREATE TABLE CSR.TPL_REPORT_TAG_DATAVIEW(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_TAG_DATAVIEW_ID    NUMBER(10, 0)    NOT NULL,
    DATAVIEW_SID                  NUMBER(10, 0),
    MONTH_OFFSET                  NUMBER(10, 0)    DEFAULT -12 NOT NULL,
    MONTH_DURATION                NUMBER(10, 0)    DEFAULT 12 NOT NULL,
    PERIOD_SET_ID                 NUMBER(10, 0),
    PERIOD_INTERVAL_ID            NUMBER(10, 0),
    HIDE_IF_EMPTY                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    SPLIT_TABLE_BY_COLUMNS        NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    SAVED_FILTER_SID              NUMBER(10, 0),
    FILTER_RESULT_MODE            NUMBER(10, 0),
    AGGREGATE_TYPE_ID             NUMBER(10, 0),
    APPROVAL_DASHBOARD_SID        NUMBER(10, 0),
    IND_TAG                       NUMBER(10, 0),
    CONSTRAINT CHK_REPORT_FIELDS_SET CHECK ((DATAVIEW_SID IS NOT NULL AND SAVED_FILTER_SID IS NULL) OR (DATAVIEW_SID IS NULL AND SAVED_FILTER_SID IS NOT NULL)),
    CONSTRAINT CHK_FILTER_REPORT_FIELDS_SET CHECK (SAVED_FILTER_SID IS NULL OR FILTER_RESULT_MODE IS NOT NULL),
    CONSTRAINT CHK_FILTER_RESULT_MODE CHECK (FILTER_RESULT_MODE IN (2, 3, 4, 5, 6)),
    CONSTRAINT PK_TPL_REPORT_TAG_DATAVIEW PRIMARY KEY (APP_SID, TPL_REPORT_TAG_DATAVIEW_ID),
    CONSTRAINT AK_TPL_RPT_TAG_DV UNIQUE (APP_SID, TPL_REPORT_TAG_DATAVIEW_ID, DATAVIEW_SID)
)
;

CREATE SEQUENCE CSR.TPL_REPORT_TAG_DATAVIEW_ID_SEQ;

CREATE TABLE CSR.TPL_REPORT_TAG_DV_REGION(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_TAG_DATAVIEW_ID    NUMBER(10, 0)    NOT NULL,
    DATAVIEW_SID                  NUMBER(10, 0)    NOT NULL,
    REGION_SID                    NUMBER(10, 0)    NOT NULL,
    TPL_REGION_TYPE_ID            NUMBER(10, 0)    NOT NULL,
    FILTER_BY_TAG                 NUMBER(10, 0),
    CONSTRAINT PK_TPL_RPT_RAG_RV_REGION PRIMARY KEY (APP_SID, TPL_REPORT_TAG_DATAVIEW_ID, DATAVIEW_SID, REGION_SID)
)
;

CREATE INDEX CSR.IX_TPL_RP_TG_DV_RG_TAG ON CSR.TPL_REPORT_TAG_DV_REGION(APP_SID, FILTER_BY_TAG)
;

CREATE TABLE CSR.TPL_REPORT_TAG_EVAL(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_TAG_EVAL_ID    NUMBER(10, 0)     NOT NULL,
    IF_TRUE                   VARCHAR2(2000),
    IF_FALSE                  VARCHAR2(2000),
    ALL_MUST_BE_TRUE          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    MONTH_OFFSET              NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    PERIOD_SET_ID             NUMBER(10, 0)     NOT NULL,
    PERIOD_INTERVAL_ID        NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_TPL_REPORT_TAG_EVAL PRIMARY KEY (APP_SID, TPL_REPORT_TAG_EVAL_ID),
    CONSTRAINT CHK_TPL_REP_TAG_EVA_TFSET CHECK ((IF_TRUE IS NOT NULL) OR (IF_FALSE IS NOT NULL))
)
;

CREATE SEQUENCE CSR.TPL_REPORT_TAG_EVAL_ID_SEQ;

CREATE TABLE CSR.TPL_REPORT_TAG_EVAL_COND(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_TAG_EVAL_ID    NUMBER(10, 0)     NOT NULL,
    LEFT_IND_SID              NUMBER(10, 0)     NOT NULL,
    OPERATOR                  VARCHAR2(2)       NOT NULL,
    RIGHT_VALUE               NUMBER(24, 10),
    RIGHT_IND_SID             NUMBER(10, 0),
    CONSTRAINT CK_RPT_TG_EVL_COND_COMP_NN CHECK ((RIGHT_VALUE IS NOT NULL AND RIGHT_IND_SID IS NULL) OR (RIGHT_VALUE IS NULL AND RIGHT_IND_SID IS NOT NULL)
        OR (RIGHT_VALUE IS NULL AND RIGHT_IND_SID IS NULL AND operator IN ('N','NN'))),
    CONSTRAINT CK_RPT_TG_EVL_OP CHECK (operator IN ('>','<','<=','>=','=','!=','N','NN'))
)
;

CREATE TABLE CSR.TPL_REPORT_TAG_IND(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_TAG_IND_ID    NUMBER(10, 0)    NOT NULL,
    IND_SID                  NUMBER(10, 0)    NOT NULL,
    MONTH_OFFSET             NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    PERIOD_SET_ID            NUMBER(10, 0),
    PERIOD_INTERVAL_ID       NUMBER(10, 0),
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    FORMAT_MASK              VARCHAR2(255),
    SHOW_FULL_PATH           NUMBER(1)        DEFAULT 0 NOT NULL,
    CONSTRAINT PK_TPL_RPT_TAG_IND PRIMARY KEY (APP_SID, TPL_REPORT_TAG_IND_ID),
    CONSTRAINT CHK_TPL_RPT_TAG_IND_SFP CHECK (SHOW_FULL_PATH IN (1,0))
)
;

CREATE SEQUENCE CSR.TPL_REPORT_TAG_IND_ID_SEQ;

CREATE TABLE CSR.TPL_REPORT_TAG_LOGGING_FORM(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    TPL_REPORT_TAG_LOGGING_FORM_ID    NUMBER(10, 0)    NOT NULL,
    TAB_SID                           NUMBER(10, 0)    NOT NULL,
    MONTH_OFFSET                      NUMBER(10, 0)    NOT NULL,
    MONTH_DURATION                    NUMBER(10, 0)    DEFAULT 12 NOT NULL,
    REGION_COLUMN_NAME                VARCHAR2(30),
    TPL_REGION_TYPE_ID                NUMBER(10, 0),
    DATE_COLUMN_NAME                  VARCHAR2(30),
    FORM_SID                          NUMBER(10, 0),
    FILTER_SID                        NUMBER(10, 0),
    PERIOD_SET_ID                     NUMBER(10, 0)    NOT NULL,
    PERIOD_INTERVAL_ID                NUMBER(10, 0)    NOT NULL,
    SAVED_FILTER_SID                  NUMBER(10, 0),
    CONSTRAINT CHK_TPL_REP_LGN_FORM_FILTER CHECK(
        (form_sid IS NULL AND filter_sid IS NULL)
     OR (form_sid IS NULL AND saved_filter_sid IS NULL)
     OR (saved_filter_sid IS NULL AND filter_sid IS NULL)),
    CONSTRAINT PK_TPL_REP_TAG_LOGGING_FORM PRIMARY KEY (APP_SID, TPL_REPORT_TAG_LOGGING_FORM_ID)
)
;

CREATE SEQUENCE CSR.TPL_REPORT_TAG_LOGGING_FRM_SEQ;

CREATE TABLE CSR.TPL_REPORT_TAG_REG_DATA(
    APP_SID                        NUMBER(10)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    TPL_REPORT_TAG_REG_DATA_ID     NUMBER(10)    NOT NULL,
    TPL_REPORT_REG_DATA_TYPE_ID    NUMBER(10)    NOT NULL,
    CONSTRAINT PK_TPL_REPORT_TAG_REG_DATA PRIMARY KEY (APP_SID, TPL_REPORT_TAG_REG_DATA_ID)
)
;

CREATE SEQUENCE CSR.TPL_REPORT_TAG_REG_DATA_ID_SEQ;

CREATE TABLE CSR.TPL_REPORT_TAG_TEXT(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TPL_REPORT_TAG_TEXT_ID    NUMBER(10, 0)     NOT NULL,
    LABEL                     VARCHAR2(2048)    NOT NULL,
    CONSTRAINT PK_TPL_REPORT_TAG_TEXT PRIMARY KEY (APP_SID, TPL_REPORT_TAG_TEXT_ID)
)
;

CREATE SEQUENCE CSR.TPL_REPORT_TAG_QC_ID_SEQ;

CREATE TABLE CSR.TPL_REPORT_TAG_QCHART
(
    APP_SID NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL, 
	TPL_REPORT_TAG_QCHART_ID NUMBER(10,0) NOT NULL, 
	MONTH_OFFSET NUMBER(10,0) DEFAULT -12 NOT NULL, 
	MONTH_DURATION NUMBER(10,0) DEFAULT 12 NOT NULL, 
	PERIOD_SET_ID NUMBER(10,0) NOT NULL, 
	PERIOD_INTERVAL_ID NUMBER(10,0) NOT NULL, 
	HIDE_IF_EMPTY NUMBER(1,0) DEFAULT 0 NOT NULL, 
	SPLIT_TABLE_BY_COLUMNS NUMBER(10,0) DEFAULT 0 NOT NULL, 
	SAVED_FILTER_SID NUMBER(10,0), 
    CONSTRAINT PK_TPL_REPORT_TAG_QCHART PRIMARY KEY (APP_SID, TPL_REPORT_TAG_QCHART_ID)
);

CREATE SEQUENCE CSR.TPL_REPORT_TAG_TEXT_ID_SEQ;

CREATE TABLE CSR.TPL_REPORT_VARIANT(
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	MASTER_TEMPLATE_SID				NUMBER(10, 0)	NOT NULL,
	LANGUAGE_CODE					VARCHAR2(10)	NOT NULL,
	FILENAME						VARCHAR2(256)	NOT NULL,
	WORD_DOC						BLOB			NOT NULL,
	MIME_TYPE						VARCHAR2(255),
	CONSTRAINT PK_TPL_REPORT_VARIANT PRIMARY KEY (APP_SID, MASTER_TEMPLATE_SID, LANGUAGE_CODE)
)
;

CREATE TABLE CSR.TPL_REPORT_VARIANT_TAG(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	TPL_REPORT_SID		NUMBER(10, 0)	NOT NULL,
	LANGUAGE_CODE		VARCHAR2(10)	NOT NULL,
	TAG					VARCHAR2(256)	NOT NULL,
	CONSTRAINT PK_TPL_REPORT_VARIANT_TAG PRIMARY KEY (APP_SID, TPL_REPORT_SID, LANGUAGE_CODE, TAG)
)
;

CREATE TABLE CSR.TRAINER(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TRAINER_ID         NUMBER(10, 0)     NOT NULL,
    NAME               VARCHAR2(256),
    USER_SID           NUMBER(10, 0),
    COMPANY            VARCHAR2(255),
    ADDRESS            VARCHAR2(2000),
    CONTACT_DETAILS    VARCHAR2(255),
    NOTES              VARCHAR2(2000),
    CONSTRAINT PK_TRAINER PRIMARY KEY (APP_SID, TRAINER_ID),
    CONSTRAINT UNQ_TRAINER UNIQUE (APP_SID, NAME, USER_SID),
    CONSTRAINT CK_TRAINER CHECK ((NAME IS NOT NULL AND USER_SID IS NULL) OR (USER_SID IS NOT NULL AND NAME IS NULL))
)
;

CREATE SEQUENCE CSR.TRAINER_ID_SEQ;

CREATE UNIQUE INDEX CSR.IDX_UK_TRAINER ON CSR.TRAINER(APP_SID, NVL(UPPER(NAME),'USR'||TO_CHAR(USER_SID)))
;

CREATE TABLE CSR.TRAINING_OPTIONS(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_SID     NUMBER(10, 0),
    CALENDAR_SID    NUMBER(10, 0),
    FLOW_SID        NUMBER(10, 0),
    CONSTRAINT PK_TRAINING_OPTIONS PRIMARY KEY (APP_SID)
)
;

CREATE TABLE CSR.TRAINING_PRIORITY(
    TRAINING_PRIORITY_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                   VARCHAR2(50)     NOT NULL,
    POS                     NUMBER(2, 0)     NOT NULL,
    CONSTRAINT PK_TRAINING_PRIORITY PRIMARY KEY (TRAINING_PRIORITY_ID),
    CONSTRAINT UK_TRAINING_PRIORITY UNIQUE (POS)
)
;

CREATE TABLE CSR.TRANSLATION_SET_INCLUDE_PATH(
    APPLICATION_SID_ID    NUMBER(10, 0)    NOT NULL,
    APP_PATH_SID_ID       NUMBER(10, 0)    NOT NULL,
    APP_PATH              VARCHAR2(1000)   NOT NULL,
    CONSTRAINT PK_TRANSLATION_SET_INCLUDE_PATH PRIMARY KEY (APPLICATION_SID_ID, APP_PATH_SID_ID)
)
;

CREATE TABLE CSR.TRANSPORT_MODE(
    TRANSPORT_MODE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_LOGISTICS_MODE PRIMARY KEY (TRANSPORT_MODE_ID)
)
;

CREATE TABLE CSR.TRASH(
    APP_SID                NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TRASH_SID              NUMBER(10, 0)     NOT NULL,
    TRASH_CAN_SID          NUMBER(10, 0)     NOT NULL,
    TRASHED_BY_SID         NUMBER(10, 0),
    TRASHED_DTM            DATE              DEFAULT SYSDATE NOT NULL,
    PREVIOUS_PARENT_SID    NUMBER(10, 0)     NOT NULL,
    DESCRIPTION            VARCHAR2(4000)    NOT NULL,
    SO_NAME                VARCHAR2(255),
    CONSTRAINT PK_TRASH PRIMARY KEY (APP_SID, TRASH_SID)
)
;

CREATE TABLE CSR.UPDATED_PLANNED_DELEG_ALERT(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    UPDATED_PLANNED_DELEG_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID                   NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID                NUMBER(10, 0)    NOT NULL,
    SHEET_ID                          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_UPDATED_PLANNED_DELEG_ALERT PRIMARY KEY (APP_SID, UPDATED_PLANNED_DELEG_ALERT_ID)
)
;

CREATE SEQUENCE CSR.UPDATED_PLANDELEG_ALERT_ID_SEQ;

CREATE TABLE CSR.URJANET_IMPORT_INSTANCE(
    APP_SID                         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    AUTOMATED_IMPORT_INSTANCE_ID    NUMBER(10, 0)    NOT NULL,
    METER_RAW_DATA_ID               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_URJANET_IMPORT_INSTANCE PRIMARY KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
)
;

CREATE TABLE CSR.URJANET_SERVICE_TYPE(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    SERVICE_TYPE          VARCHAR2(255)    NOT NULL,
    METER_TYPE_ID         NUMBER(10, 0)    NOT NULL,
    RAW_DATA_SOURCE_ID    NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_URJANET_SERVICE_TYPE PRIMARY KEY (APP_SID, SERVICE_TYPE, RAW_DATA_SOURCE_ID)
)
;

CREATE TABLE CSR.USER_COURSE(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    USER_SID                  NUMBER(10, 0)    NOT NULL,
    COURSE_ID                 NUMBER(10, 0)    NOT NULL,
    VALID                     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    RESCHEDULE_DUE            NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    COMPLETED_DTM             DATE,
    SCORE                     NUMBER(5, 2),
    EXPIRY_DTM                DATE,
    EXPIRY_NOTICE_DTM         DATE,
    EXPIRY_NOTICE_SENT        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ESCALATION_NOTICE_DTM     DATE,
    ESCALATION_NOTICE_SENT    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    RESCHEDULE_DTM            DATE,
    SCHEDULE_COURSE           NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    COURSE_SCHEDULE_ID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_USER_COURSE PRIMARY KEY (APP_SID, USER_SID, COURSE_ID)
)
;

CREATE TABLE CSR.USER_COURSE_LOG(
    USER_COURSE_LOG_ID    NUMBER(10, 0)    NOT NULL,
    APP_SID               NUMBER(10, 0)    NOT NULL,
    USER_SID              NUMBER(10, 0)    NOT NULL,
    COURSE_ID             NUMBER(10, 0)    NOT NULL,
    LOG_DTM               DATE,
    COMPLETED_DTM         DATE,
    EXPIRED_DTM           DATE,
    SCORE                 NUMBER(5, 2),
    CONSTRAINT PK_USER_COURSE_LOG PRIMARY KEY (APP_SID, USER_COURSE_LOG_ID)
)
;

CREATE SEQUENCE CSR.USER_COURSE_LOG_ID_SEQ;

CREATE TABLE CSR.USER_COVER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_COVER_ID             NUMBER(10, 0)    NOT NULL,
    USER_GIVING_COVER_SID     NUMBER(10, 0)    NOT NULL,
    USER_BEING_COVERED_SID    NUMBER(10, 0)    NOT NULL,
    START_DTM                 DATE             NOT NULL,
    END_DTM                   DATE,
    COVER_TERMINATED          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    ALERT_SENT_DTM            DATE,
    CONSTRAINT PK1254 PRIMARY KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
)
;

CREATE SEQUENCE CSR.USER_COVER_ID_SEQ;

CREATE TABLE CSR.USER_DIRECTORY_TYPE(
    USER_DIRECTORY_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    USER_DIRECTORY_CLASS      VARCHAR2(1000)    NOT NULL,
    CONSTRAINT PK_USER_DIRECTORY_TYPE PRIMARY KEY (USER_DIRECTORY_TYPE_ID)
)
;

CREATE TABLE CSR.USER_FEED(
    APP_SID                NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_FEED_ID           NUMBER(10, 0)     NOT NULL,
    ACTING_USER_SID        NUMBER(10, 0)     NOT NULL,
    TARGET_USER_SID        NUMBER(10, 0),
    TARGET_ACTIVITY_ID     NUMBER(10, 0),
    USER_FEED_ACTION_ID    NUMBER(10, 0)     NOT NULL,
    ACTION_DTM             DATE              DEFAULT SYSDATE NOT NULL,
    TARGET_PARAM_1         VARCHAR2(2048),
    TARGET_PARAM_2         VARCHAR2(2048),
    TARGET_PARAM_3         VARCHAR2(2048),
    CONSTRAINT PK_USER_FEED PRIMARY KEY (APP_SID, USER_FEED_ID)
)
;

CREATE SEQUENCE CSR.USER_FEED_ID_SEQ CACHE 5;

CREATE TABLE CSR.USER_FEED_ACTION(
    USER_FEED_ACTION_ID    NUMBER(10, 0)     NOT NULL,
    LABEL                  VARCHAR2(255)     NOT NULL,
    ACTION_URL             VARCHAR2(2048),
    ACTION_TEXT            VARCHAR2(2048),
    ACTION_IMG_URL         VARCHAR2(2048),
    CONSTRAINT PK_USER_FEED_ACTION PRIMARY KEY (USER_FEED_ACTION_ID)
)
;

CREATE TABLE CSR.USER_FUNCTION(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CSR_USER_SID    NUMBER(10, 0)    NOT NULL,
    FUNCTION_ID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_USER_FUNCTION PRIMARY KEY (APP_SID, CSR_USER_SID, FUNCTION_ID)
)
;

CREATE TABLE CSR.USER_INACTIVE_MAN_ALERT(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_INACTIVE_MAN_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID               NUMBER(10, 0)    NOT NULL,
    SENT_DTM                      DATE,
    CONSTRAINT PK_USER_INACTIVE_MAN_ALERT PRIMARY KEY (APP_SID, USER_INACTIVE_MAN_ALERT_ID)
)
;

CREATE SEQUENCE CSR.USER_INACTIVE_MAN_ALERT_ID_SEQ NOCACHE;

CREATE TABLE CSR.USER_INACTIVE_REM_ALERT(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_INACTIVE_REM_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID               NUMBER(10, 0)    NOT NULL,
    SENT_DTM                      DATE,
    CONSTRAINT PK_USER_INACTIVE_REM_ALERT PRIMARY KEY (APP_SID, USER_INACTIVE_REM_ALERT_ID)
)
;

CREATE SEQUENCE CSR.USER_INACTIVE_REM_ALERT_ID_SEQ NOCACHE;

CREATE TABLE CSR.USER_INACTIVE_SYS_ALERT(
    APP_SID                       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_INACTIVE_SYS_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID               NUMBER(10, 0)    NOT NULL,
    SENT_DTM                      DATE,
    CONSTRAINT PK_USER_INACTIVE_SYS_ALERT PRIMARY KEY (APP_SID, USER_INACTIVE_SYS_ALERT_ID)
)
;

CREATE SEQUENCE CSR.USER_INACTIVE_SYS_ALERT_ID_SEQ NOCACHE;

CREATE TABLE CSR.USER_MESSAGE_ALERT(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_MESSAGE_ALERT_ID    NUMBER(10, 0)    NOT NULL,
    RAISED_BY_USER_SID       NUMBER(10, 0)    NOT NULL,
    NOTIFY_USER_SID          NUMBER(10, 0)    NOT NULL,
    MESSAGE                  CLOB,
    CONSTRAINT PK_USER_MESSAGE_ALERT PRIMARY KEY (APP_SID, USER_MESSAGE_ALERT_ID)
)
;

CREATE SEQUENCE CSR.USER_MESSAGE_ALERT_ID_SEQ;

CREATE TABLE CSR.USER_MSG(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_MSG_ID        NUMBER(10, 0)    NOT NULL,
    USER_SID           NUMBER(10, 0)    NOT NULL,
    REPLY_TO_MSG_ID    NUMBER(10, 0),
    MSG_TEXT           CLOB             NOT NULL,
    MSG_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_USER_MSG PRIMARY KEY (APP_SID, USER_MSG_ID)
)
;

CREATE SEQUENCE CSR.USER_MSG_ID_SEQ;

CREATE TABLE CSR.USER_MSG_FILE(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_MSG_FILE_ID    NUMBER(10, 0)     NOT NULL,
    USER_MSG_ID         NUMBER(10, 0)     NOT NULL,
    FILENAME            VARCHAR2(2000)    NOT NULL,
    DATA                BLOB              NOT NULL,
    SHA1                RAW(20)           NOT NULL,
    MIME_TYPE           VARCHAR2(2000)    NOT NULL,
    CONSTRAINT PK_USER_MSG_FILE PRIMARY KEY (APP_SID, USER_MSG_FILE_ID)
)
;

CREATE SEQUENCE CSR.USER_MSG_FILE_ID_SEQ;

CREATE TABLE CSR.USER_MSG_LIKE(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_MSG_ID          NUMBER(10, 0)    NOT NULL,
    LIKED_BY_USER_SID    NUMBER(10, 0)    NOT NULL,
    LIKED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK_USER_MSG_LIKE PRIMARY KEY (APP_SID, USER_MSG_ID, LIKED_BY_USER_SID)
)
;

CREATE TABLE CSR.USER_PROFILE (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRIMARY_KEY						VARCHAR2(128) NOT NULL,
	CSR_USER_SID					NUMBER(10) NOT NULL,
	EMPLOYEE_REF					VARCHAR2(128),
	PAYROLL_REF						NUMBER(10),
	FIRST_NAME						VARCHAR2(256) NOT NULL,
	LAST_NAME						VARCHAR2(256),
	MIDDLE_NAME						VARCHAR2(256),
	FRIENDLY_NAME					VARCHAR2(256),
	EMAIL_ADDRESS					VARCHAR2(256) NOT NULL,
	WORK_PHONE_NUMBER				VARCHAR2(32),
	WORK_PHONE_EXTENSION			VARCHAR2(8),
	HOME_PHONE_NUMBER				VARCHAR2(32),
	MOBILE_PHONE_NUMBER				VARCHAR2(32),
	MANAGER_EMPLOYEE_REF			VARCHAR2(128),
	MANAGER_PAYROLL_REF				NUMBER(10),
	MANAGER_PRIMARY_KEY				VARCHAR2(128),
	EMPLOYMENT_START_DATE			DATE,
	EMPLOYMENT_LEAVE_DATE			DATE,
	DATE_OF_BIRTH					DATE,
	GENDER							VARCHAR2(128),
	JOB_TITLE						VARCHAR2(128),
	CONTRACT						VARCHAR2(256),
	EMPLOYMENT_TYPE					VARCHAR2(256),
	PAY_GRADE						VARCHAR2(256),
	BUSINESS_AREA_REF				VARCHAR2(256),
	BUSINESS_AREA_CODE				NUMBER(10),
	BUSINESS_AREA_NAME				VARCHAR2(256),
	BUSINESS_AREA_DESCRIPTION		VARCHAR2(1024),
	DIVISION_REF					VARCHAR2(256),
	DIVISION_CODE					NUMBER(10),
	DIVISION_NAME					VARCHAR2(256),
	DIVISION_DESCRIPTION			VARCHAR2(1024),
	DEPARTMENT						VARCHAR2(256),
	NUMBER_HOURS					NUMBER(12,2),
	COUNTRY							VARCHAR2(128),
	LOCATION						VARCHAR2(256),
	BUILDING						VARCHAR2(256),
	COST_CENTRE_REF					VARCHAR2(256),
	COST_CENTRE_CODE				NUMBER(10),
	COST_CENTRE_NAME				VARCHAR2(256),
	COST_CENTRE_DESCRIPTION			VARCHAR2(1024),
	WORK_ADDRESS_1					VARCHAR2(256),
	WORK_ADDRESS_2					VARCHAR2(256),
	WORK_ADDRESS_3					VARCHAR2(256),
	WORK_ADDRESS_4					VARCHAR2(256),
	HOME_ADDRESS_1					VARCHAR2(256),
	HOME_ADDRESS_2					VARCHAR2(256),
	HOME_ADDRESS_3					VARCHAR2(256),
	HOME_ADDRESS_4					VARCHAR2(256),
	LOCATION_REGION_SID				NUMBER(10),
	INTERNAL_USERNAME				VARCHAR2(256),
	MANAGER_USERNAME				VARCHAR2(256),
	ACTIVATE_ON						DATE,
	DEACTIVATE_ON					DATE,
	CREATION_INSTANCE_STEP_ID		NUMBER(10),
	CREATED_DTM						DATE NOT NULL,
	CREATED_USER_SID				NUMBER(10) NOT NULL,
	CREATION_METHOD					VARCHAR(256) NOT NULL,
	UPDATED_INSTANCE_STEP_ID		NUMBER(10),
	LAST_UPDATED_DTM				DATE,
	LAST_UPDATED_USER_SID			NUMBER(10),
	LAST_UPDATE_METHOD				VARCHAR(256),
	CONSTRAINT PK_USER_PROFILE PRIMARY KEY (APP_SID, PRIMARY_KEY),
	CONSTRAINT UK_USER_PROFILE_USER_SID UNIQUE (APP_SID, CSR_USER_SID)
)
;

CREATE UNIQUE INDEX CSR.IDX_USER_PROFILE_PK ON CSR.USER_PROFILE(APP_SID, UPPER(PRIMARY_KEY))
;

COMMENT ON TABLE CSR.USER_PROFILE
IS 'contains_pii = "yes"';

CREATE TABLE CSR.USER_PROFILE_DEFAULT_GROUP (
	APP_SID								NUMBER(10)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	GROUP_SID							NUMBER(10)	NOT NULL,
	AUTOMATED_IMPORT_CLASS_SID			NUMBER(10),
	STEP_NUMBER							NUMBER(10),
	CONSTRAINT PK_USER_PROFILE_DEFAULT_GROUP PRIMARY KEY (APP_SID, GROUP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER),
	CONSTRAINT CK_USER_PROFILE_AUTO_IMP_CLASS CHECK (AUTOMATED_IMPORT_CLASS_SID IS NULL OR STEP_NUMBER IS NOT NULL)
)
;

CREATE TABLE CSR.USER_PROFILE_DEFAULT_ROLE (
	APP_SID								NUMBER(10)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ROLE_SID							NUMBER(10)	NOT NULL,
	AUTOMATED_IMPORT_CLASS_SID			NUMBER(10),
	STEP_NUMBER							NUMBER(10),
	CONSTRAINT PK_USER_PROFILE_DEFAULT_ROLE PRIMARY KEY (APP_SID, ROLE_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER),
	CONSTRAINT FK_USER_PROFILE_DEFAULT_ROLE FOREIGN KEY (APP_SID, ROLE_SID) REFERENCES CSR.ROLE (APP_SID, ROLE_SID),
	CONSTRAINT CK_USER_PROFILE_DEFAULT_ROLE CHECK (AUTOMATED_IMPORT_CLASS_SID IS NULL OR STEP_NUMBER IS NOT NULL)
)
;

CREATE TABLE CSR.USER_PROFILE_STAGED_RECORD (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRIMARY_KEY						VARCHAR2(128) NOT NULL,
	EMPLOYEE_REF					VARCHAR2(128),
	PAYROLL_REF						NUMBER(10),
	FIRST_NAME						VARCHAR2(256),
	LAST_NAME						VARCHAR2(256),
	MIDDLE_NAME						VARCHAR2(256),
	FRIENDLY_NAME					VARCHAR2(256),
	EMAIL_ADDRESS					VARCHAR2(256),
	USERNAME						VARCHAR2(256),
	WORK_PHONE_NUMBER				VARCHAR2(32),
	WORK_PHONE_EXTENSION			VARCHAR2(8),
	HOME_PHONE_NUMBER				VARCHAR2(32),
	MOBILE_PHONE_NUMBER				VARCHAR2(32),
	MANAGER_EMPLOYEE_REF			VARCHAR2(128),
	MANAGER_PAYROLL_REF				NUMBER(10),
	MANAGER_PRIMARY_KEY				VARCHAR2(128),
	EMPLOYMENT_START_DATE			DATE,
	EMPLOYMENT_LEAVE_DATE			DATE,
	PROFILE_ACTIVE					NUMBER(1),
	DATE_OF_BIRTH					DATE,
	GENDER							VARCHAR2(8),
	JOB_TITLE						VARCHAR2(128),
	CONTRACT						VARCHAR2(256),
	EMPLOYMENT_TYPE					VARCHAR2(256),
	PAY_GRADE						VARCHAR2(256),
	BUSINESS_AREA_REF				VARCHAR2(256),
	BUSINESS_AREA_CODE				NUMBER(10),
	BUSINESS_AREA_NAME				VARCHAR2(256),
	BUSINESS_AREA_DESCRIPTION		VARCHAR2(1024),
	DIVISION_REF					VARCHAR2(256),
	DIVISION_CODE					NUMBER(10),
	DIVISION_NAME					VARCHAR2(256),
	DIVISION_DESCRIPTION			VARCHAR2(1024),
	DEPARTMENT						VARCHAR2(256),
	NUMBER_HOURS					NUMBER(12,2),
	COUNTRY							VARCHAR2(128),
	LOCATION						VARCHAR2(256),
	BUILDING						VARCHAR2(256),
	COST_CENTRE_REF					VARCHAR2(256),
	COST_CENTRE_CODE				NUMBER(10),
	COST_CENTRE_NAME				VARCHAR2(256),
	COST_CENTRE_DESCRIPTION			VARCHAR2(1024),
	WORK_ADDRESS_1					VARCHAR2(256),
	WORK_ADDRESS_2					VARCHAR2(256),
	WORK_ADDRESS_3					VARCHAR2(256),
	WORK_ADDRESS_4					VARCHAR2(256),
	HOME_ADDRESS_1					VARCHAR2(256),
	HOME_ADDRESS_2					VARCHAR2(256),
	HOME_ADDRESS_3					VARCHAR2(256),
	HOME_ADDRESS_4					VARCHAR2(256),
	LOCATION_REGION_REF				VARCHAR(1024),
	INTERNAL_USERNAME				VARCHAR2(256),
	MANAGER_USERNAME				VARCHAR2(256),
	ACTIVATE_ON						DATE,
	DEACTIVATE_ON					DATE,
	INSTANCE_STEP_ID				NUMBER(10),
	LAST_UPDATED_DTM				DATE,
	LAST_UPDATED_USER_SID			NUMBER(10),
	LAST_UPDATE_METHOD				VARCHAR(256),
	ERROR_MESSAGE					VARCHAR(1024),
	CONSTRAINT PK_USER_PROFILE_STAGED PRIMARY KEY (APP_SID, PRIMARY_KEY)
)
;

COMMENT ON TABLE CSR.USER_PROFILE_STAGED_RECORD
IS 'contains_pii = "yes"';

CREATE TABLE CSR.USER_PROFILE_STAGED_RECORD_LOG (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRIMARY_KEY						VARCHAR2(128) NOT NULL,
	LAST_INSTANCE_STEP_ID			NUMBER(10),
	ACTION_DTM						DATE,
	ACTION_USER_SID					NUMBER(10),
	ACTION_DESCRIPTION				VARCHAR(256)
)
;

CREATE TABLE CSR.USER_PROFILE_PANEL(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PLUGIN_ID         NUMBER(10, 0)    NOT NULL,
    PLUGIN_TYPE_ID    NUMBER(10, 0)    DEFAULT 4 NOT NULL,
    POS               NUMBER(10, 0)    NOT NULL,
    LABEL             VARCHAR2(50),
    CONSTRAINT CHK_USER_PROF_PNL_PLUGIN_TYPE CHECK (PLUGIN_TYPE_ID=4),
    CONSTRAINT PK_USER_PROFILE_PANEL PRIMARY KEY (APP_SID, PLUGIN_ID)
)
;

CREATE TABLE CSR.USER_RELATIONSHIP(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CHILD_USER_SID               NUMBER(10, 0)    NOT NULL,
    PARENT_USER_SID              NUMBER(10, 0)    NOT NULL,
    USER_RELATIONSHIP_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_USERS_RELATIONSHIP PRIMARY KEY (APP_SID, CHILD_USER_SID, PARENT_USER_SID, USER_RELATIONSHIP_TYPE_ID)
)
;

CREATE TABLE CSR.USER_RELATIONSHIP_TYPE(
    APP_SID                      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_RELATIONSHIP_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                        VARCHAR2(50)     NOT NULL,
    LOOKUP_KEY                   VARCHAR2(255),
    CONSTRAINT PK_USER_RELATIONSHIP_TYPE PRIMARY KEY (APP_SID, USER_RELATIONSHIP_TYPE_ID)
)
;

CREATE SEQUENCE CSR.USER_RELATIONSHIP_TYPE_ID_SEQ;

CREATE UNIQUE INDEX CSR.IDX_UK_USR_REL_TYPE_LOOKUP_KEY ON CSR.USER_RELATIONSHIP_TYPE(APP_SID, NVL(UPPER(LOOKUP_KEY),'URT'||TO_CHAR(USER_RELATIONSHIP_TYPE_ID)))
;

CREATE TABLE CSR.USER_SETTING(
    CATEGORY       VARCHAR2(100)     NOT NULL,
    SETTING        VARCHAR2(100)     NOT NULL,
    DESCRIPTION    VARCHAR2(1000)    NOT NULL,
    DATA_TYPE      VARCHAR2(10)      NOT NULL,
    CONSTRAINT CHK_US_CATEGORY_IS_VALID CHECK (CATEGORY = UPPER(TRIM(CATEGORY))),
    CONSTRAINT CHK_US_SETTING_IS_VALID CHECK (SETTING = TRIM(SETTING)),
    CONSTRAINT CHK_US_DATA_TYPE_IS_VALID CHECK (DATA_TYPE in ('STRING', 'NUMBER', 'BOOLEAN')),
    CONSTRAINT PK_USER_SETTING PRIMARY KEY (CATEGORY, SETTING)
)
;

CREATE UNIQUE INDEX CSR.IDX_US_UNIQUE_SETTING ON CSR.USER_SETTING(CATEGORY, UPPER(SETTING))
;

CREATE TABLE CSR.USER_SETTING_ENTRY(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CSR_USER_SID      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    CATEGORY          VARCHAR2(100)     NOT NULL,
    SETTING           VARCHAR2(100)     NOT NULL,
    TAB_PORTLET_ID    NUMBER(10, 0),
    VALUE             VARCHAR2(4000)    NOT NULL,
    CONSTRAINT UK_USER_SETTING_ENTRY UNIQUE (APP_SID, CSR_USER_SID, CATEGORY, SETTING, TAB_PORTLET_ID)
)
;

CREATE TABLE CSR.USER_TRAINING(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    USER_SID              NUMBER(10, 0)    NOT NULL,
    COURSE_SCHEDULE_ID    NUMBER(10, 0)    NOT NULL,
    COURSE_ID             NUMBER(10, 0)    NOT NULL,
    FLOW_ITEM_ID          NUMBER(10, 0)    NOT NULL,
    SCORE                 NUMBER(5, 2),
    CONSTRAINT PK_USER_TRAINING PRIMARY KEY (APP_SID, USER_SID, COURSE_SCHEDULE_ID, COURSE_ID),
    CONSTRAINT UK_USER_TRAINING UNIQUE (FLOW_ITEM_ID)
)
;

CREATE TABLE CSR.UTIL_SCRIPT(
    UTIL_SCRIPT_ID      NUMBER(10, 0)     NOT NULL,
    UTIL_SCRIPT_NAME    VARCHAR2(255)     NOT NULL,
    DESCRIPTION         VARCHAR2(2047),
    UTIL_SCRIPT_SP      VARCHAR2(255),
    WIKI_ARTICLE        VARCHAR2(10),
    CONSTRAINT PK_UTIL_SCRIPT_ID PRIMARY KEY (UTIL_SCRIPT_ID)
)
;

CREATE TABLE CSR.UTIL_SCRIPT_PARAM(
    UTIL_SCRIPT_ID    NUMBER(10, 0)     NOT NULL,
    PARAM_NAME        VARCHAR2(1023)    NOT NULL,
    PARAM_HINT        VARCHAR2(1023),
    POS               NUMBER(2, 0)      NOT NULL,
    PARAM_VALUE       VARCHAR2(1024),
    PARAM_HIDDEN      NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT UTIL_SCRIPT_PARAM_UNIQUE UNIQUE (UTIL_SCRIPT_ID, POS)
)
;

CREATE TABLE CSR.UTIL_SCRIPT_RUN_LOG(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    UTIL_SCRIPT_ID           NUMBER(10, 0),
    CLIENT_UTIL_SCRIPT_ID    NUMBER(10, 0),
    CSR_USER_SID             NUMBER(10, 0)     NOT NULL,
    RUN_DTM                  DATE              NOT NULL,
    PARAMS                   VARCHAR2(2048),
    CONSTRAINT CHK_UTIL_SCRIPT_RUN_ID_NOT_NUL CHECK(
        (CLIENT_UTIL_SCRIPT_ID IS NOT NULL AND UTIL_SCRIPT_ID IS NULL) OR
        (CLIENT_UTIL_SCRIPT_ID IS NULL AND UTIL_SCRIPT_ID IS NOT NULL)
    )
)
;

CREATE TABLE CSR.UTILITY_CONTRACT(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    UTILITY_CONTRACT_ID    NUMBER(10, 0)    NOT NULL,
    UTILITY_SUPPLIER_ID    NUMBER(10, 0)    NOT NULL,
    ACCOUNT_REF            VARCHAR2(256)    NOT NULL,
    FROM_DTM               DATE,
    TO_DTM                 DATE,
    ALERT_WHEN_DUE         NUMBER(1, 0)     NOT NULL,
    FILE_DATA              BLOB,
    FILE_MIME_TYPE         VARCHAR2(256),
    FILE_NAME              VARCHAR2(256),
    CREATED_BY_SID         NUMBER(10, 0),
    CONSTRAINT PK577 PRIMARY KEY (APP_SID, UTILITY_CONTRACT_ID)
)
;

COMMENT ON TABLE CSR.UTILITY_CONTRACT IS 'desc="Utiltiy Contract"'
;

COMMENT ON COLUMN CSR.UTILITY_CONTRACT.ACCOUNT_REF IS 'desc="Account Ref"'
;

COMMENT ON COLUMN CSR.UTILITY_CONTRACT.ALERT_WHEN_DUE IS 'desc="Alert When Due",bool'
;

COMMENT ON COLUMN CSR.UTILITY_CONTRACT.APP_SID IS 'desc="App SID",app'
;

COMMENT ON COLUMN CSR.UTILITY_CONTRACT.FILE_DATA IS 'desc="Document",file,file_mime=file_mime_type,file_name=file_name'
;

COMMENT ON COLUMN CSR.UTILITY_CONTRACT.FROM_DTM IS 'desc="From Date"'
;

COMMENT ON COLUMN CSR.UTILITY_CONTRACT.TO_DTM IS 'desc="To Date"'
;

COMMENT ON COLUMN CSR.UTILITY_CONTRACT.UTILITY_CONTRACT_ID IS 'desc="Contract ID",auto'
;

COMMENT ON COLUMN CSR.UTILITY_CONTRACT.UTILITY_SUPPLIER_ID IS 'desc="Supplier",enum,enum_desc_col=supplier_name'
;


CREATE TABLE CSR.UTILITY_INVOICE(
    APP_SID                    NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    UTILITY_INVOICE_ID         NUMBER(10, 0)     NOT NULL,
    UTILITY_CONTRACT_ID        NUMBER(10, 0)     NOT NULL,
    REFERENCE                  VARCHAR2(256)     NOT NULL,
    INVOICE_DTM                DATE              NOT NULL,
    COST_VALUE                 NUMBER(24, 16)    NOT NULL,
    COST_MEASURE_SID           NUMBER(10, 0),
    COST_CONV_ID               NUMBER(10, 0),
    CONSUMPTION                NUMBER(10, 0),
    CONSUMPTION_CONV_ID        NUMBER(10, 0),
    FILE_DATA                  BLOB,
    FILE_MIME_TYPE             VARCHAR2(256),
    FILE_NAME                  VARCHAR2(256),
    VERIFIED_BY_SID            NUMBER(10, 0),
    VERIFIED_DTM               DATE,
    CONSUMPTION_MEASURE_SID    NUMBER(10, 0),
    CONSTRAINT PK578 PRIMARY KEY (APP_SID, UTILITY_INVOICE_ID)
)
;

COMMENT ON TABLE CSR.UTILITY_INVOICE IS 'desc="Utility Invoice"'
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE.APP_SID IS 'desc="App SID",app'
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE.COST_VALUE IS 'desc="Invoice Value"'
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE.FILE_DATA IS 'desc="Invoice Copy",file,file_mime=file_mime_type,file_name=file_name'
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE.INVOICE_DTM IS 'desc="Invoice Date"'
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE.REFERENCE IS 'desc="Reference"'
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE.UTILITY_CONTRACT_ID IS 'desc="Contract",enum,enum_desc_col=account_ref'
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE.UTILITY_INVOICE_ID IS 'desc="Invoice ID",auto'
;

CREATE TABLE CSR.UTILITY_INVOICE_FIELD(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FIELD_ID       NUMBER(10, 0)     NOT NULL,
    MEASURE_SID    NUMBER(10, 0)     NOT NULL,
    NAME           VARCHAR2(1024)    NOT NULL,
    DESCRIPTION    VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK1444 PRIMARY KEY (APP_SID, FIELD_ID)
)
;

CREATE SEQUENCE CSR.UTILITY_INVOICE_FIELD_ID_SEQ;

CREATE TABLE CSR.UTILITY_INVOICE_FIELD_VAL(
    APP_SID                  NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FIELD_ID                 NUMBER(10, 0)     NOT NULL,
    UTILITY_INVOICE_ID       NUMBER(10, 0)     NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    VAL                      NUMBER(24, 10),
    CONSTRAINT PK1446 PRIMARY KEY (APP_SID, FIELD_ID, UTILITY_INVOICE_ID)
)
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE_FIELD_VAL.APP_SID IS 'desc="App SID",app'
;

COMMENT ON COLUMN CSR.UTILITY_INVOICE_FIELD_VAL.UTILITY_INVOICE_ID IS 'desc="Invoice ID",auto'
;

CREATE TABLE CSR.UTILITY_SUPPLIER(
    APP_SID                NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    UTILITY_SUPPLIER_ID    NUMBER(10, 0)     NOT NULL,
    SUPPLIER_NAME          VARCHAR2(1024)    NOT NULL,
    CONTACT_DETAILS        VARCHAR2(4000),
    CONSTRAINT PK576 PRIMARY KEY (APP_SID, UTILITY_SUPPLIER_ID)
)
;

COMMENT ON TABLE CSR.UTILITY_SUPPLIER IS 'desc="Utility Supplier"'
;

COMMENT ON COLUMN CSR.UTILITY_SUPPLIER.APP_SID IS 'desc="App SID",app'
;

COMMENT ON COLUMN CSR.UTILITY_SUPPLIER.CONTACT_DETAILS IS 'desc="Contact Details"'
;

COMMENT ON COLUMN CSR.UTILITY_SUPPLIER.SUPPLIER_NAME IS 'desc="Supplier Name"'
;

COMMENT ON COLUMN CSR.UTILITY_SUPPLIER.UTILITY_SUPPLIER_ID IS 'desc="Supplier ID",auto'
;

CREATE TABLE CSR.VAL(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAL_ID                         NUMBER(20, 0)     NOT NULL,
    IND_SID                        NUMBER(10, 0)     NOT NULL,
    REGION_SID                     NUMBER(10, 0)     NOT NULL,
    PERIOD_START_DTM               DATE              NOT NULL,
    PERIOD_END_DTM                 DATE,
    VAL_NUMBER                     NUMBER(24, 10),
    ERROR_CODE                     NUMBER(10, 0),
    ALERT                          VARCHAR2(255),
    SOURCE_TYPE_ID                 NUMBER(10, 0)     NOT NULL,
    FLAGS                          NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    SOURCE_ID                      NUMBER(20, 0),
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    ENTRY_VAL_NUMBER               NUMBER(24, 10),
    NOTE                           CLOB              DEFAULT EMPTY_CLOB(),
    CHANGED_DTM                    DATE              DEFAULT SYSDATE NOT NULL,
    CHANGED_BY_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
    CONSTRAINT CK_VAL_NUM CHECK ((val_number IS NOT NULL AND entry_val_number IS NOT NULL) OR (val_number IS NULL AND entry_val_number IS NULL)),
    CONSTRAINT CK_VAL_DATES CHECK (PERIOD_START_DTM = TRUNC(PERIOD_START_DTM, 'DD') AND PERIOD_END_DTM = TRUNC(PERIOD_END_DTM, 'DD') AND PERIOD_END_DTM > PERIOD_START_DTM),
    CONSTRAINT PK_VAL PRIMARY KEY (APP_SID, VAL_ID),
    CONSTRAINT UK_VAL_UNIQUE UNIQUE (APP_SID, IND_SID, REGION_SID, PERIOD_START_DTM, PERIOD_END_DTM)
)
;

CREATE SEQUENCE CSR.VAL_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_VAL_EMC ON CSR.VAL(APP_SID, ENTRY_MEASURE_CONVERSION_ID)
;

CREATE INDEX CSR.IDX_VAL_IND_SID ON CSR.VAL(APP_SID, IND_SID)
;

CREATE INDEX CSR.IDX_VAL_LAST_VAL_CHANGE_ID ON CSR.VAL(APP_SID)
;

CREATE INDEX CSR.IDX_VAL_PERIOD ON CSR.VAL(APP_SID, PERIOD_END_DTM, PERIOD_START_DTM)
;

CREATE INDEX CSR.IDX_VAL_REGION_SID ON CSR.VAL(APP_SID, REGION_SID)
;

CREATE INDEX CSR.IDX_VAL_SOURCE ON CSR.VAL(APP_SID, SOURCE_ID)
;

CREATE INDEX CSR.IX_VAL_SOURCE_TYPE_SOURCE ON CSR.VAL(APP_SID, SOURCE_TYPE_ID, SOURCE_ID)
;

CREATE TABLE CSR.VAL_CHANGE(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAL_CHANGE_ID                  NUMBER(12, 0)     NOT NULL,
    IND_SID                        NUMBER(10, 0)     NOT NULL,
    REGION_SID                     NUMBER(10, 0)     NOT NULL,
    PERIOD_START_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    PERIOD_END_DTM                 DATE              DEFAULT sysdate NOT NULL,
    VAL_NUMBER                     NUMBER(24, 10),
    SOURCE_TYPE_ID                 NUMBER(10, 0)     NOT NULL,
    SOURCE_ID                      NUMBER,
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    ENTRY_VAL_NUMBER               NUMBER(24, 10),
    NOTE                           CLOB              DEFAULT EMPTY_CLOB(),
    CHANGED_BY_SID                 NUMBER(10, 0)     NOT NULL,
    CHANGED_DTM                    DATE              NOT NULL,
    REASON                         VARCHAR2(1024)    NOT NULL,
    CONSTRAINT CK_VAL_CHANGE_DATES CHECK (PERIOD_START_DTM = TRUNC(PERIOD_START_DTM, 'DD') AND PERIOD_END_DTM = TRUNC(PERIOD_END_DTM, 'DD') AND PERIOD_END_DTM > PERIOD_START_DTM),
    CONSTRAINT PK_VAL_CHANGE PRIMARY KEY (APP_SID, VAL_CHANGE_ID)
)
;

CREATE SEQUENCE CSR.VAL_CHANGE_ID_SEQ CACHE 5;

CREATE INDEX CSR.IDX_VAL_CHANGE_EMC ON CSR.VAL_CHANGE(APP_SID, ENTRY_MEASURE_CONVERSION_ID)
;

CREATE INDEX CSR.IDX_VAL_CHANGE_IRP ON CSR.VAL_CHANGE(APP_SID, IND_SID, REGION_SID, PERIOD_END_DTM, PERIOD_START_DTM)
;

CREATE INDEX CSR.IDX_VAL_CHANGE_REGION_SID ON CSR.VAL_CHANGE(APP_SID, REGION_SID)
;

CREATE TABLE CSR.VAL_CHANGE_LOG(
    APP_SID      NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_SID      NUMBER(10, 0)    NOT NULL,
    START_DTM    DATE             NOT NULL,
    END_DTM      DATE             NOT NULL,
    CONSTRAINT CK_VAL_CHANGE_LOG_DATES CHECK (START_DTM = TRUNC(START_DTM, 'DD') AND END_DTM = TRUNC(END_DTM, 'DD') AND END_DTM > START_DTM),
    CONSTRAINT PK_VAL_CHANGE_LOG PRIMARY KEY (APP_SID, IND_SID)
)
;

CREATE TABLE CSR.VAL_FILE(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAL_ID             NUMBER(20, 0)    NOT NULL,
    FILE_UPLOAD_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_VAL_FILE PRIMARY KEY (APP_SID, VAL_ID, FILE_UPLOAD_SID)
)
;

CREATE INDEX CSR.IDX_VAL_FILE_FILE ON CSR.VAL_FILE(APP_SID, FILE_UPLOAD_SID)
;

CREATE TABLE CSR.VAL_NOTE(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAL_NOTE_ID         NUMBER(10, 0)    NOT NULL,
    IND_SID             NUMBER(10, 0)    NOT NULL,
    REGION_SID          NUMBER(10, 0)    NOT NULL,
    PERIOD_START_DTM    DATE             NOT NULL,
    PERIOD_END_DTM      DATE,
    NOTE                CLOB             DEFAULT EMPTY_CLOB(),
    ENTERED_BY_SID      NUMBER(10, 0)    NOT NULL,
    ENTERED_DTM         DATE,
    CONSTRAINT PK_VAL_NOTE PRIMARY KEY (VAL_NOTE_ID)
)
;

CREATE SEQUENCE CSR.VAL_NOTE_ID_SEQ;

CREATE INDEX CSR.Ref2339 ON CSR.VAL_NOTE(IND_SID)
;

CREATE INDEX CSR.Ref3738 ON CSR.VAL_NOTE(REGION_SID)
;

CREATE INDEX CSR.Ref540 ON CSR.VAL_NOTE(ENTERED_BY_SID)
;

CREATE TABLE CSR.VAR_EXPL(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAR_EXPL_ID          NUMBER(10, 0)    NOT NULL,
    VAR_EXPL_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                VARCHAR2(255)    NOT NULL,
    REQUIRES_NOTE        NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    POS                  NUMBER(10, 0)    DEFAULT 0,
    HIDDEN               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_REQUIRES_NOTE CHECK (REQUIRES_NOTE IN (0,1)),
    CONSTRAINT CK_VAR_EXPL_HIDDEN CHECK (HIDDEN IN (0,1)),
    CONSTRAINT PK_VAR_EXPL PRIMARY KEY (APP_SID, VAR_EXPL_ID)
)
;

CREATE SEQUENCE CSR.VAR_EXPL_ID_SEQ;

CREATE TABLE CSR.VAR_EXPL_GROUP(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAR_EXPL_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_VAR_EXPL_GROUP PRIMARY KEY (APP_SID, VAR_EXPL_GROUP_ID)
)
;

CREATE SEQUENCE CSR.VAR_EXPL_GROUP_ID_SEQ;

CREATE TABLE CSR.VERSION(
    DB_VERSION       NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    ONLY_ONE_ROW     NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    MINOR_VERSION    NUMBER(10, 0),
    CONSTRAINT CK_VERSION_ONE_ROW CHECK (ONLY_ONE_ROW = 0),
    CONSTRAINT PK_VERSION PRIMARY KEY (ONLY_ONE_ROW)
)
;

CREATE TABLE CSR.WORKSHEET(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    WORKSHEET_ID         NUMBER(10, 0)     NOT NULL,
    SHEET_NAME           VARCHAR2(1000)    NOT NULL,
    LOWER_SHEET_NAME     VARCHAR2(1000),
    WORKSHEET_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    HEADER_ROW_INDEX     NUMBER(10, 0)     NOT NULL,
    CONSTRAINT TCC_WORKSHEET_2 CHECK (LOWER_SHEET_NAME = LOWER(TRIM(SHEET_NAME))),
    CONSTRAINT PK_WORKSHEET PRIMARY KEY (APP_SID, WORKSHEET_ID)
)
;

CREATE SEQUENCE CSR.WORKSHEET_ID_SEQ;

CREATE TABLE CSR.WORKSHEET_COLUMN(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    WORKSHEET_ID      NUMBER(10, 0)    NOT NULL,
    COLUMN_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    COLUMN_INDEX      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_WS_COLUMN PRIMARY KEY (APP_SID, WORKSHEET_ID, COLUMN_TYPE_ID),
    CONSTRAINT UC_UNIQUE_COLUMN_INDEX UNIQUE (APP_SID, WORKSHEET_ID, COLUMN_INDEX)
)
;

CREATE TABLE CSR.WORKSHEET_COLUMN_TYPE(
    COLUMN_TYPE_ID       NUMBER(10, 0)     NOT NULL,
    WORKSHEET_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    VALUE_MAPPER_ID      NUMBER(10, 0),
    NAME                 VARCHAR2(100)     NOT NULL,
    DESCRIPTION          VARCHAR2(2000)    NOT NULL,
    POSITION             NUMBER(10, 0)     NOT NULL,
    REQUIRED             NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CONSTRAINT PK_WS_COLUMN_TYPE PRIMARY KEY (COLUMN_TYPE_ID)
)
;

CREATE TABLE CSR.WORKSHEET_COLUMN_VALUE_MAP(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    WORKSHEET_ID       NUMBER(10, 0)    NOT NULL,
    COLUMN_TYPE_ID     NUMBER(10, 0)    NOT NULL,
    VALUE_MAPPER_ID    NUMBER(10, 0)    NOT NULL,
    VALUE_MAP_ID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_WSC_VALUE_MAP PRIMARY KEY (APP_SID, WORKSHEET_ID, COLUMN_TYPE_ID, VALUE_MAPPER_ID, VALUE_MAP_ID)
)
;

CREATE TABLE CSR.WORKSHEET_ROW(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    WORKSHEET_ID    NUMBER(10, 0)    NOT NULL,
    ROW_NUMBER      NUMBER(10, 0)    NOT NULL,
    IGNORE          NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT CC_WS_ROW_IGNORE CHECK (IGNORE IN (1,0)),
    CONSTRAINT PK_WS_ROW PRIMARY KEY (APP_SID, WORKSHEET_ID, ROW_NUMBER)
)
;

CREATE TABLE CSR.WORKSHEET_TYPE(
    WORKSHEET_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    DESCRIPTION          VARCHAR2(200)    NOT NULL,
    CONSTRAINT PK_WS_TYPE PRIMARY KEY (WORKSHEET_TYPE_ID)
)
;

CREATE TABLE CSR.WORKSHEET_VALUE_MAP(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VALUE_MAPPER_ID    NUMBER(10, 0)    NOT NULL,
    VALUE_MAP_ID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_WS_VALUE_MAP PRIMARY KEY (APP_SID, VALUE_MAPPER_ID, VALUE_MAP_ID)
)
;

CREATE SEQUENCE CSR.VALUE_MAP_ID_SEQ;

CREATE TABLE CSR.WORKSHEET_VALUE_MAP_VALUE(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VALUE_MAP_ID       NUMBER(10, 0)     NOT NULL,
    COLUMN_TYPE_ID     NUMBER(10, 0)     NOT NULL,
    VALUE_MAPPER_ID    NUMBER(10, 0)     NOT NULL,
    VALUE              VARCHAR2(1000),
    CONSTRAINT CC_LOWER_VALUE CHECK (VALUE = LOWER(TRIM(VALUE))),
    CONSTRAINT PK_WS_VMV PRIMARY KEY (APP_SID, VALUE_MAP_ID, COLUMN_TYPE_ID, VALUE_MAPPER_ID)
)
;

CREATE TABLE CSR.WORKSHEET_VALUE_MAPPER(
    CLASS_TYPE            VARCHAR2(1000)    NOT NULL,
    VALUE_MAPPER_ID       NUMBER(10, 0)     NOT NULL,
    JS_COMPONENT          VARCHAR2(1000)    NOT NULL,
    JS_COMPONENT_PATH     VARCHAR2(1000)    NOT NULL,
    MAPPER_DESCRIPTION    VARCHAR2(2000)    NOT NULL,
    MAPPER_NAME           VARCHAR2(200)     NOT NULL,
    CONSTRAINT PK_WS_VALUE_MAPPER PRIMARY KEY (VALUE_MAPPER_ID)
)
;

CREATE TABLE CSR.SCORE_TYPE_AUDIT_TYPE (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SCORE_TYPE_ID				NUMBER(10, 0)	NOT NULL,
	INTERNAL_AUDIT_TYPE_ID		NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_SCORE_TYPE_AUDIT_TYPE PRIMARY KEY (APP_SID, SCORE_TYPE_ID, INTERNAL_AUDIT_TYPE_ID)
)
;

CREATE TABLE CSR.COMPLIANCE_ROLLOUT_REGIONS(
    APP_SID            NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COMPLIANCE_ITEM_ID NUMBER(10) NOT NULL,
    REGION_SID         NUMBER(10,0) NOT NULL,
    CONSTRAINT PK_COMPLIANCE_ROLLOUT_REGIONS PRIMARY KEY (APP_SID,COMPLIANCE_ITEM_ID,REGION_SID)
)
;

CREATE TABLE CSR.AUTO_IMPEXP_PUBLIC_KEY(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PUBLIC_KEY_ID		NUMBER(10, 0)	NOT NULL,
	LABEL				VARCHAR2(255)	NOT NULL,
	KEY_BLOB			BLOB			NOT NULL,
	CONSTRAINT PK_AUTO_IMP_PUBLIC_KEY_ID PRIMARY KEY (PUBLIC_KEY_ID),
	CONSTRAINT UK_AUTO_IMP_PUBLIC_KEY_LABEL UNIQUE (APP_SID, LABEL)
)
;
CREATE SEQUENCE CSR.AUTO_IMPEXP_PUBLIC_KEY_ID_SEQ;


CREATE TABLE CSR.PUBLIC_KEY_LOG (
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PUBLIC_KEY_ID			NUMBER(10) 		NOT NULL,
	CHANGED_DTM				DATE 			NOT NULL,
	CHANGED_BY_USER_SID		NUMBER(10) 		NOT NULL,
	MESSAGE					VARCHAR2(1024)	NOT NULL,
	FROM_KEY_BLOB			BLOB,
	TO_KEY_BLOB				BLOB
)
;

CREATE INDEX CSR.IDX_PUBLIC_KEY_LOG ON CSR.PUBLIC_KEY_LOG(APP_SID)
;

CREATE TABLE CSR.DATA_BUCKET(
	APP_SID					NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	DATA_BUCKET_SID			NUMBER(10, 0)		NOT NULL,
	DESCRIPTION				VARCHAR2(1024)		NOT NULL,
	ENABLED					NUMBER(1, 0)		DEFAULT 1 NOT NULL,
	ACTIVE_INSTANCE_ID		NUMBER(10, 0),
	CONSTRAINT CK_DATA_BUCKET_ENABLED CHECK (ENABLED IN (0,1)),
	CONSTRAINT PK_DATA_BUCKET PRIMARY KEY (APP_SID, DATA_BUCKET_SID)
);

CREATE TABLE CSR.DATA_BUCKET_INSTANCE(
	APP_SID						NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	DATA_BUCKET_SID				NUMBER(10, 0)		NOT NULL,
	DATA_BUCKET_INSTANCE_ID		NUMBER(10, 0)		NOT NULL,
	COMPLETED_DTM				DATE,
	JOB_ID						NUMBER(10, 0),
	FETCH_TIME					NUMBER(10, 2),
	WRITE_TIME					NUMBER(10, 2),
	CONSTRAINT PK_DATA_BUCKET_INSTANCE PRIMARY KEY (APP_SID, DATA_BUCKET_SID, DATA_BUCKET_INSTANCE_ID)
);

CREATE SEQUENCE CSR.DATA_BUCKET_INSTANCE_ID_SEQ CACHE 5;

CREATE TABLE CSR.DATA_BUCKET_VAL(
	APP_SID						NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	DATA_BUCKET_SID				NUMBER(10, 0)		NOT NULL,
	DATA_BUCKET_INSTANCE_ID		NUMBER(10, 0)		NOT NULL,
	DATA_BUCKET_VAL_ID			NUMBER(10, 0)		NOT NULL,
	IND_SID						NUMBER(10, 0)		NOT NULL,
	REGION_SID					NUMBER(10, 0)		NOT NULL,
	PERIOD_START_DTM			DATE				NOT NULL,
	PERIOD_END_DTM				DATE				NOT NULL,
	SOURCE_TYPE_ID				NUMBER(10, 0)		NOT NULL,
	VAL_NUMBER					NUMBER(24, 10)		NOT NULL,
	VAL_KEY						NUMBER(10, 0),
	CONSTRAINT PK_DATA_BUCKET_VAL PRIMARY KEY (APP_SID, DATA_BUCKET_VAL_ID)
);

CREATE SEQUENCE CSR.DATA_BUCKET_VAL_ID_SEQ CACHE 5;

CREATE TABLE CSR.DATA_BUCKET_SOURCE_DETAIL(
	APP_SID							NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	DATA_BUCKET_SID					NUMBER(10, 0)		NOT NULL,
	DATA_BUCKET_INSTANCE_ID			NUMBER(10, 0)		NOT NULL,
	DATA_BUCKET_SOURCE_DETAIL_ID	NUMBER(10, 0)		NOT NULL,
	ID								VARCHAR2(1024)		NOT NULL,
	DETAIL_ONE						VARCHAR2(1024),
	DETAIL_TWO						VARCHAR2(1024),
	VAL_KEY							NUMBER(10)			NOT NULL,
	CONSTRAINT PK_DATA_BUCKET_SOURCE_DETAIL PRIMARY KEY (APP_SID, DATA_BUCKET_SOURCE_DETAIL_ID)
);

CREATE SEQUENCE CSR.DATA_BUCKET_SOURCE_DETAIL_ID_SEQ CACHE 5;

CREATE TABLE CSR.BATCH_JOB_DATA_BUCKET_AGG_IND(
	APP_SID					NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BATCH_JOB_ID			NUMBER(10, 0)		NOT NULL,
	DATA_BUCKET_SID			NUMBER(10, 0)		NOT NULL,
	AGGREGATE_IND_GROUP_ID	NUMBER(10, 0)		NOT NULL,
	CONSTRAINT PK_DATA_BUCKET_BATCH_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
);

CREATE TABLE CSR.AGG_IND_DATA_BUCKET_PENDING_JOB(
	APP_SID					NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BATCH_JOB_ID			NUMBER(10, 0)		NOT NULL,
	DATA_BUCKET_SID			NUMBER(10, 0)		NOT NULL,
	CONSTRAINT PK_AGG_IND_DATA_BUCKET_PENDING_JOB PRIMARY KEY (APP_SID, DATA_BUCKET_SID)
);

CREATE TABLE CSR.INTERNAL_AUDIT_LISTENER_LAST_UPDATE (
	APP_SID				NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	TENANT_ID			VARCHAR2(255) NOT NULL,
	EXTERNAL_PARENT_REF VARCHAR2(255) NOT NULL,
	EXTERNAL_REF 		VARCHAR2(255) NOT NULL,
	LAST_UPDATE 		TIMESTAMP NOT NULL,
	CORRELATION_ID		VARCHAR2(64),
	CONSTRAINT PK_INTERNAL_AUDIT_LISTENER_LAST_UPDATE PRIMARY KEY (APP_SID, TENANT_ID, EXTERNAL_PARENT_REF, EXTERNAL_REF)
);

CREATE TABLE CSR.EXTERNAL_TARGET_PROFILE_TYPE (
	PROFILE_TYPE_ID			NUMBER(10,0) NOT NULL,
	LABEL					VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_EXT_TARGET_PROF_TYPE PRIMARY KEY (PROFILE_TYPE_ID)
);

CREATE SEQUENCE CSR.EXTERNAL_TARGET_PROFILE_SEQ;

CREATE TABLE CSR.EXTERNAL_TARGET_PROFILE (
	APP_SID					NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	LABEL 					VARCHAR2(255) NOT NULL,
	TARGET_PROFILE_ID		NUMBER(10,0) NOT NULL,
	PROFILE_TYPE_ID			NUMBER(10,0) NOT NULL,
	SHAREPOINT_SITE			VARCHAR2(400),
	SHAREPOINT_FOLDER		VARCHAR2(400),
	CREDENTIAL_PROFILE_ID	NUMBER(10,0),
	ONEDRIVE_FOLDER			VARCHAR(400),
	STORAGE_ACC_NAME		VARCHAR(400),
	STORAGE_ACC_CONTAINER	VARCHAR(400),
	CONSTRAINT PK_EXT_TARGET_PROF PRIMARY KEY (APP_SID, TARGET_PROFILE_ID)
);

CREATE TABLE CSR.EXTERNAL_TARGET_PROFILE_LOG (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	TARGET_PROFILE_ID			NUMBER(10) 		NOT NULL,
	CHANGED_DTM					DATE 			NOT NULL,
	CHANGED_BY_USER_SID			NUMBER(10) 		NOT NULL,
	MESSAGE						VARCHAR2(4000) 	NOT NULL
);

CREATE INDEX CSR.IDX_EXT_TARGET_PROFILE_LOG ON CSR.EXTERNAL_TARGET_PROFILE_LOG(APP_SID);

CREATE TABLE CSR.AUTHENTICATION_TYPE(
	AUTH_TYPE_ID			NUMBER(10, 0) NOT NULL,
	AUTH_TYPE_NAME			VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_AUTHENTICATION_ID PRIMARY KEY (AUTH_TYPE_ID),
	CONSTRAINT UK_AUTH_TYPE UNIQUE (AUTH_TYPE_NAME)
);

CREATE TABLE CSR.AUTHENTICATION_SCOPE(
	AUTH_SCOPE_ID 			NUMBER(10, 0) NOT NULL,
	AUTH_TYPE_ID			NUMBER(10, 0) NOT NULL,
	AUTH_SCOPE_NAME 		VARCHAR2(255) NOT NULL,
	AUTH_SCOPE 				VARCHAR2(4000) NOT NULL,
	HIDDEN 					NUMBER(1) NOT NULL,
	CONSTRAINT PK_AUTH_SCOPE PRIMARY KEY (AUTH_SCOPE_ID),
	CONSTRAINT UK_AUTH_SCOPE UNIQUE (AUTH_SCOPE_NAME)
);

CREATE TABLE CSR.CREDENTIAL_MANAGEMENT (
	APP_SID						NUMBER(10, 0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CREDENTIAL_ID				NUMBER(10, 0)		NOT NULL,
	LABEL						VARCHAR2(255)		NOT NULL,
	AUTH_TYPE_ID				NUMBER(10, 0)		NOT NULL,
	AUTH_SCOPE_ID				NUMBER(10, 0),
	CREATED_DTM					DATE				DEFAULT SYSDATE NOT NULL,
	UPDATED_DTM					DATE				DEFAULT SYSDATE NOT NULL,
	CACHE_KEY					VARCHAR2(1024),
	LOGIN_HINT					VARCHAR2(500),
	CONSTRAINT PK_CREDENTIAL_MANAGEMENT PRIMARY KEY (APP_SID, CREDENTIAL_ID),
	CONSTRAINT UK_CREDENTIAL_MANAGEMENT_LABEL UNIQUE (APP_SID, LABEL)
);

CREATE SEQUENCE CSR.CREDENTIAL_MANAGEMENT_ID_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE CACHE 5;

CREATE TABLE CSR.MSAL_USER_TOKEN_CACHE (
	APP_SID						NUMBER(10,0)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	LOGIN_HINT					VARCHAR2(500)		NOT NULL,
	CACHE_KEY					VARCHAR2(1024)		NOT NULL,
	TOKEN						BLOB				NOT NULL,
	CONSTRAINT PK_MSAL_USR_TKN_CACHE PRIMARY KEY (APP_SID, CACHE_KEY)
);

CREATE TABLE CSR.MSAL_USER_CONSENT_FLOW (
	ACT_ID						CHAR(36 BYTE)		NOT NULL,
	REDIRECT_URL				VARCHAR2(1024)		NOT NULL,
	PKCE						VARCHAR2(1024)		NOT NULL,
	CONSTRAINT UK_MSAL_USR_CF_ACT_RED UNIQUE (ACT_ID, REDIRECT_URL)
);

CREATE SEQUENCE CSR.CERT_LEVEL_ID_SEQ START WITH 464 INCREMENT BY 1 NOCYCLE CACHE 5;

CREATE TABLE CSR.BASELINE_CONFIG (
	APP_SID						NUMBER(10, 0)  DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BASELINE_CONFIG_ID			NUMBER(10, 0)  NOT NULL,
	BASELINE_NAME				VARCHAR2(200)  NOT NULL,
	BASELINE_LOOKUP_KEY			VARCHAR2(200)  NOT NULL,
	CONSTRAINT pk_baseline_config PRIMARY KEY (APP_SID, BASELINE_CONFIG_ID),
	CONSTRAINT uk_baseline_lookup_key UNIQUE (APP_SID, BASELINE_LOOKUP_KEY)
);

CREATE SEQUENCE CSR.BASELINE_CONFIG_ID_SEQ CACHE 5;

CREATE TABLE CSR.BASELINE_CONFIG_PERIOD (
	APP_SID								NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BASELINE_CONFIG_PERIOD_ID			NUMBER(10, 0)   NOT NULL,
	BASELINE_CONFIG_ID					NUMBER(10, 0)   NOT NULL,
	BASELINE_PERIOD_DTM					DATE NOT NULL,
	BASELINE_COVER_PERIOD_START_DTM		DATE,
	BASELINE_COVER_PERIOD_END_DTM		DATE,
	CONSTRAINT pk_baseline_config_period PRIMARY KEY (APP_SID, BASELINE_CONFIG_PERIOD_ID)
);

CREATE SEQUENCE CSR.BASELINE_CONFIG_PERIOD_ID_SEQ CACHE 5;

CREATE TABLE csr.failed_notification (
    app_sid							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	failed_notification_id			NUMBER(10, 0)	NOT NULL,
	create_dtm						DATE			DEFAULT SYSDATE NOT NULL,
	action							NUMBER(1)		DEFAULT 0 NOT NULL,
	notification_type_id			VARCHAR2(36)	NOT NULL,
	to_user							VARCHAR2(36)	NOT NULL,
	channel							VARCHAR2(255)	NOT NULL,
	failure_code					VARCHAR2(255)	NOT NULL,
	failure_exception				VARCHAR2(1024),
	failure_detail					VARCHAR2(1024),
	from_user						VARCHAR2(36),
	merge_fields					CLOB,
	repeating_merge_fields			CLOB,
	retry_count						NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	CONSTRAINT pk_failed_notification PRIMARY KEY (app_sid, failed_notification_id),
	CONSTRAINT ck_action_valid CHECK (action IN (0, 1, 2))
);

CREATE SEQUENCE csr.failed_notification_id_seq CACHE 5;

CREATE TABLE csr.failed_notification_archive (
    app_sid							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	failed_notification_id			NUMBER(10, 0)	NOT NULL,
	create_dtm						DATE			DEFAULT SYSDATE NOT NULL,
	archive_reason					NUMBER(1)		NOT NULL,
	notification_type_id			VARCHAR2(36)	NOT NULL,
	to_user							VARCHAR2(36)	NOT NULL,
	channel							VARCHAR2(255)	NOT NULL,
	failure_code					VARCHAR2(255)	NOT NULL,
	failure_exception				VARCHAR2(1024),
	failure_detail					VARCHAR2(1024),
	from_user						VARCHAR2(36),
	merge_fields					CLOB,
	repeating_merge_fields			CLOB,
	retry_count						NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	CONSTRAINT pk_failed_notification_archive PRIMARY KEY (app_sid, failed_notification_id),
	CONSTRAINT ck_archive_reason CHECK (archive_reason IN (0, 1, 2))
);

ALTER TABLE CSR.ACCURACY_TYPE ADD CONSTRAINT RefCUSTOMER434
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ACCURACY_TYPE_OPTION ADD CONSTRAINT RefACCURACY_TYPE995
    FOREIGN KEY (APP_SID, ACCURACY_TYPE_ID)
    REFERENCES CSR.ACCURACY_TYPE(APP_SID, ACCURACY_TYPE_ID)
;



ALTER TABLE CSR.ACTIVITY ADD CONSTRAINT FK_ACTIVITY_ACT_SUB_TYPE
    FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID, ACTIVITY_SUB_TYPE_ID)
    REFERENCES CSR.ACTIVITY_SUB_TYPE(APP_SID, ACTIVITY_TYPE_ID, ACTIVITY_SUB_TYPE_ID)
;

ALTER TABLE CSR.ACTIVITY ADD CONSTRAINT FK_ACTIVITY_ACT_TYPE
    FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID)
    REFERENCES CSR.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;

ALTER TABLE CSR.ACTIVITY ADD CONSTRAINT FK_ACTIVITY_FLOW_ITEM
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.ACTIVITY ADD CONSTRAINT FK_ACTIVITY_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.ACTIVITY ADD CONSTRAINT FK_ACTIVITY_USER
    FOREIGN KEY (APP_SID, CREATED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.COOKIE_POLICY_CONSENT ADD CONSTRAINT FK_COOKIE_POLICY_CONSENT_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ACTIVITY_FOLLOWER ADD CONSTRAINT FK_ACTIVITY_FOLLOWER_ACTIVITY
    FOREIGN KEY (APP_SID, ACTIVITY_ID)
    REFERENCES CSR.ACTIVITY(APP_SID, ACTIVITY_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ACTIVITY_FOLLOWER ADD CONSTRAINT FK_ACTIVITY_FOLLOWER_USER_2
    FOREIGN KEY (APP_SID, FOLLOWER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.ACTIVITY_LIKE ADD CONSTRAINT FK_ACT_LIKE_ACT_POST
    FOREIGN KEY (APP_SID, ACTIVITY_ID)
    REFERENCES CSR.ACTIVITY(APP_SID, ACTIVITY_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ACTIVITY_LIKE ADD CONSTRAINT FK_ACT_LIKE_USER
    FOREIGN KEY (APP_SID, LIKED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.ACTIVITY_MEMBER ADD CONSTRAINT FK_ACTIVITY_MEMBER_ACTIVITY
    FOREIGN KEY (APP_SID, ACTIVITY_ID)
    REFERENCES CSR.ACTIVITY(APP_SID, ACTIVITY_ID)
;



ALTER TABLE CSR.ACTIVITY_MEMBER_TIME ADD CONSTRAINT FK_ACT_MEMBER_TIME_USER
    FOREIGN KEY (APP_SID, ACTIVITY_ID, USER_SID)
    REFERENCES CSR.ACTIVITY_MEMBER(APP_SID, ACTIVITY_ID, USER_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.ACTIVITY_MONEY ADD CONSTRAINT FK_ACT_MONEY_ACTIVITY
    FOREIGN KEY (APP_SID, ACTIVITY_ID)
    REFERENCES CSR.ACTIVITY(APP_SID, ACTIVITY_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ACTIVITY_MONEY ADD CONSTRAINT FK_ACT_MONEY_CURRENCY
    FOREIGN KEY (APP_SID, CURRENCY_CODE)
    REFERENCES CSR.CURRENCY(APP_SID, CURRENCY_CODE)
;

ALTER TABLE CSR.ACTIVITY_MONEY ADD CONSTRAINT FK_ACT_MONEY_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.ACTIVITY_MONEY ADD CONSTRAINT RefCSR_USER3934
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.ACTIVITY_POST ADD CONSTRAINT FK_ACTIVITY_POST
    FOREIGN KEY (APP_SID, ACTIVITY_ID, USER_SID)
    REFERENCES CSR.ACTIVITY_MEMBER(APP_SID, ACTIVITY_ID, USER_SID)
;



ALTER TABLE CSR.ACTIVITY_POST_FILE ADD CONSTRAINT FK_ACT_POST_FILE_ACT_POST
    FOREIGN KEY (APP_SID, ACTIVITY_POST_ID)
    REFERENCES CSR.ACTIVITY_POST(APP_SID, ACTIVITY_POST_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ACTIVITY_POST_LIKE ADD CONSTRAINT FK_ACT_POST_LIKE_ACT_POST
    FOREIGN KEY (APP_SID, ACTIVITY_POST_ID)
    REFERENCES CSR.ACTIVITY_POST(APP_SID, ACTIVITY_POST_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ACTIVITY_POST_LIKE ADD CONSTRAINT FK_ACT_POST_LIKE_USER
    FOREIGN KEY (APP_SID, LIKED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.ACTIVITY_SHOWCASE ADD CONSTRAINT FK_ACT_SHOWCASE_ACTIVITY
    FOREIGN KEY (APP_SID, ACTIVITY_ID)
    REFERENCES CSR.ACTIVITY(APP_SID, ACTIVITY_ID)
;



ALTER TABLE CSR.ACTIVITY_SUB_TYPE ADD CONSTRAINT FK_ACT_SUB_TYPE_ACT_TYPE
    FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID)
    REFERENCES CSR.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;



ALTER TABLE CSR.ACTIVITY_TYPE ADD CONSTRAINT FK_ACT_TYPE_FLOW
    FOREIGN KEY (APP_SID, USE_FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.ACTIVITY_TYPE ADD CONSTRAINT FK_ACT_TYPE_MATCH
    FOREIGN KEY (APP_SID, MATCHED_GIVING_POLICY_ID)
    REFERENCES CSR.MATCHED_GIVING_POLICY(APP_SID, MATCHED_GIVING_POLICY_ID)
;



ALTER TABLE CSR.AGGR_REGION ADD CONSTRAINT FK_REGION_AGGR_AGREGION
    FOREIGN KEY (APP_SID, AGGR_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.AGGR_REGION ADD CONSTRAINT FK_REGION_AGGR_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.AGGR_TAG_GROUP ADD CONSTRAINT FK_CUST_AGGRTAGGRP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.AGGR_TAG_GROUP ADD CONSTRAINT FK_IND_AGGR_TAG_GROUP
    FOREIGN KEY (APP_SID, COUNT_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.AGGR_TAG_GROUP_MEMBER ADD CONSTRAINT FK_AGGRTAGGRP_AGGRTAGGRPMBR
    FOREIGN KEY (APP_SID, AGGR_TAG_GROUP_ID)
    REFERENCES CSR.AGGR_TAG_GROUP(APP_SID, AGGR_TAG_GROUP_ID)
;

ALTER TABLE CSR.AGGR_TAG_GROUP_MEMBER ADD CONSTRAINT FK_TAG_AGGRTAGGRPMBR
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.AGGREGATE_IND_CALC_JOB ADD CONSTRAINT FK_AGG_CALC_JOB_IND_GRP
    FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
    REFERENCES CSR.AGGREGATE_IND_GROUP(APP_SID, AGGREGATE_IND_GROUP_ID)
;



ALTER TABLE CSR.AGGREGATE_IND_GROUP ADD CONSTRAINT FK_AGG_IND_GRP_APP_SID
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.AGGREGATE_IND_GROUP_MEMBER ADD CONSTRAINT FK_AGGREGATE_IND_GRP
    FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
    REFERENCES CSR.AGGREGATE_IND_GROUP(APP_SID, AGGREGATE_IND_GROUP_ID)
;

ALTER TABLE CSR.AGGREGATE_IND_GROUP_MEMBER ADD CONSTRAINT FK_AGGREGATE_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


ALTER TABLE CSR.AGGREGATE_IND_GROUP_AUDIT_LOG ADD CONSTRAINT FK_AGG_IND_GRP_USER
    FOREIGN KEY (APP_SID, CHANGED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.AGGREGATE_IND_VAL_DETAIL ADD CONSTRAINT FK_AGG_IND_VAL_DET_AGG_IND_GRP
    FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
    REFERENCES CSR.AGGREGATE_IND_GROUP(APP_SID, AGGREGATE_IND_GROUP_ID)
;

ALTER TABLE CSR.AGGREGATE_IND_VAL_DETAIL ADD CONSTRAINT FK_AGG_IND_VAL_DETAIL_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.AGGREGATE_IND_VAL_DETAIL ADD CONSTRAINT FK_AGG_IND_VAL_DETAIL_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.AGGREGATION_PERIOD ADD CONSTRAINT FK_AGGREGATION_PERIOD_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ALERT ADD CONSTRAINT FK_ALERT_CSR_USER
    FOREIGN KEY (APP_SID, TO_USER_SID)
	REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID)
;


ALTER TABLE CSR.ALERT_BATCH_RUN ADD CONSTRAINT FK_AL_BATCH_RUN_CUS_AL_TYPE
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;

ALTER TABLE CSR.ALERT_BATCH_RUN ADD CONSTRAINT FK_ALERT_BATCH_RUN_CSR_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.ALERT_BOUNCE ADD CONSTRAINT FK_ALERT_BOUNCE_ALERT
    FOREIGN KEY (APP_SID, ALERT_ID)
    REFERENCES CSR.ALERT(APP_SID, ALERT_ID)
;



ALTER TABLE CSR.ALERT_FRAME ADD CONSTRAINT FK_ALERT_FRAME
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ALERT_FRAME_BODY ADD CONSTRAINT FK_ALERT_FRM_BDY_ALERT_FRM
    FOREIGN KEY (APP_SID, ALERT_FRAME_ID)
    REFERENCES CSR.ALERT_FRAME(APP_SID, ALERT_FRAME_ID)
;



ALTER TABLE CSR.ALERT_IMAGE ADD CONSTRAINT FK_ALERT_IMAGE_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ALERT_MAIL ADD CONSTRAINT FK_ALERT_MAIL_ALERT_TYPE
    FOREIGN KEY (STD_ALERT_TYPE_ID)
    REFERENCES CSR.STD_ALERT_TYPE(STD_ALERT_TYPE_ID)
;

ALTER TABLE CSR.ALERT_MAIL ADD CONSTRAINT FK_ALERT_MAIL_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ALERT_TEMPLATE ADD CONSTRAINT FK_ALERT_TPL_ALERT_FRAME
    FOREIGN KEY (APP_SID, ALERT_FRAME_ID)
    REFERENCES CSR.ALERT_FRAME(APP_SID, ALERT_FRAME_ID)
;

ALTER TABLE CSR.ALERT_TEMPLATE ADD CONSTRAINT FK_ALERT_TPL_CUST_ALERT_TYPE
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;



ALTER TABLE CSR.ALERT_TEMPLATE_BODY ADD CONSTRAINT FK_ALERT_TPL_BDY_ALERT_TPL
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.ALERT_TEMPLATE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;



ALTER TABLE CSR.ALL_METER ADD CONSTRAINT FK_MEAS_CONV_METER_CDY
    FOREIGN KEY (APP_SID, COSTDAYS_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.ALL_METER ADD CONSTRAINT FK_METER_METER_TYPE
    FOREIGN KEY (APP_SID, METER_TYPE_ID)
    REFERENCES CSR.METER_TYPE(APP_SID, METER_TYPE_ID)
;

ALTER TABLE CSR.ALL_METER ADD CONSTRAINT FK_USER_METER_APPROVED
    FOREIGN KEY (APP_SID, APPROVED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ALL_METER ADD CONSTRAINT RefMEASURE_CONVERSION3088
    FOREIGN KEY (APP_SID, DAYS_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.ALL_METER ADD CONSTRAINT RefMETER_SOURCE_TYPE3090
    FOREIGN KEY (APP_SID, METER_SOURCE_TYPE_ID)
    REFERENCES CSR.METER_SOURCE_TYPE(APP_SID, METER_SOURCE_TYPE_ID)
;

ALTER TABLE CSR.ALL_METER ADD CONSTRAINT RefREGION3086
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;


ALTER TABLE CSR.ALL_PROPERTY ADD CONSTRAINT FK_LEASE_PROPERTY_PROPERTY
    FOREIGN KEY (APP_SID, CURRENT_LEASE_ID, REGION_SID)
    REFERENCES CSR.LEASE_PROPERTY(APP_SID, LEASE_ID, PROPERTY_REGION_SID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.ALL_PROPERTY ADD CONSTRAINT FK_MGMT_CO_CONTACT_PROPERTY
    FOREIGN KEY (APP_SID, MGMT_COMPANY_ID, MGMT_COMPANY_CONTACT_ID)
    REFERENCES CSR.MGMT_COMPANY_CONTACT(APP_SID, MGMT_COMPANY_ID, MGMT_COMPANY_CONTACT_ID)
;

ALTER TABLE CSR.ALL_PROPERTY ADD CONSTRAINT FK_MGMT_CO_PROPERTY
    FOREIGN KEY (APP_SID, MGMT_COMPANY_ID)
    REFERENCES CSR.MGMT_COMPANY(APP_SID, MGMT_COMPANY_ID)
;

ALTER TABLE CSR.ALL_PROPERTY ADD CONSTRAINT FK_PROP_PROP_TYPE
    FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID)
    REFERENCES CSR.PROPERTY_TYPE(APP_SID, PROPERTY_TYPE_ID)
;

ALTER TABLE CSR.ALL_PROPERTY ADD CONSTRAINT FK_PROP_SUB_TYP_PROP
    FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID, PROPERTY_SUB_TYPE_ID)
    REFERENCES CSR.PROPERTY_SUB_TYPE(APP_SID, PROPERTY_TYPE_ID, PROPERTY_SUB_TYPE_ID)
;

ALTER TABLE CSR.ALL_PROPERTY ADD CONSTRAINT FK_PROPERTY_FLOW_ITEM
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.ALL_PROPERTY ADD CONSTRAINT RefCUSTOMER1634
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ALL_PROPERTY ADD CONSTRAINT RefREGION1616
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.ALL_SPACE ADD CONSTRAINT FK_LEASE_SPACE_SPACE
    FOREIGN KEY (APP_SID, CURRENT_LEASE_ID, REGION_SID)
    REFERENCES CSR.LEASE_SPACE(APP_SID, LEASE_ID, SPACE_REGION_SID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.ALL_SPACE ADD CONSTRAINT FK_PROPERTY_SPACE
    FOREIGN KEY (APP_SID, PROPERTY_REGION_SID, PROPERTY_TYPE_ID)
    REFERENCES CSR.ALL_PROPERTY(APP_SID, REGION_SID, PROPERTY_TYPE_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.ALL_SPACE ADD CONSTRAINT FK_ALL_SPC_TYP_SPC_TYP
	FOREIGN KEY (APP_SID, SPACE_TYPE_ID)
	REFERENCES CSR.SPACE_TYPE(APP_SID, SPACE_TYPE_ID)
;

ALTER TABLE CSR.ALL_SPACE ADD CONSTRAINT FK_ALL_SPC_TYP_PROP_TYP
	FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID)
	REFERENCES CSR.PROPERTY_TYPE(APP_SID, PROPERTY_TYPE_ID)
;


ALTER TABLE CSR.APP_DASH_SUP_REPORT_PORTLET ADD CONSTRAINT FK_APP_DASH_SUP_REP_PORTL_TYPE
    FOREIGN KEY (PORTLET_TYPE)
    REFERENCES CSR.PORTLET(TYPE)
;



ALTER TABLE CSR.APP_LOCK ADD CONSTRAINT FK_APP_LOCK_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD ADD CONSTRAINT FK_APP_DASH_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD ADD CONSTRAINT FK_APP_DASH_PUB_DOC_FOLDER
    FOREIGN KEY (APP_SID, PUBLISH_DOC_FOLDER_SID)
    REFERENCES CSR.DOC_FOLDER(APP_SID, DOC_FOLDER_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD ADD CONSTRAINT FK_APP_DASH_SOURCE_SCEN_RUN
    FOREIGN KEY (APP_SID, SOURCE_SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD ADD CONSTRAINT FK_FLOW_APPR_DASHBOARD
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD ADD CONSTRAINT FK_TPL_REPORT_APPR_DASH
    FOREIGN KEY (APP_SID, TPL_REPORT_SID)
    REFERENCES CSR.TPL_REPORT(APP_SID, TPL_REPORT_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD ADD CONSTRAINT RefCUSTOMER2355
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD_ALERT_TYPE ADD CONSTRAINT FK_APR_DSH_APR_DSH_AL_TYPE
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID, FLOW_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID, FLOW_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_ALERT_TYPE ADD CONSTRAINT FK_FL_ALTY_AP_DSH_ALTY
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID, FLOW_SID)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD_IND ADD CONSTRAINT FK_APP_DASH_DASH_IND
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_IND ADD CONSTRAINT FK_INND_APP_DASH_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD_INSTANCE ADD CONSTRAINT FK_APP_DASH_APP_DASH_INST
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID, TPL_REPORT_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID, TPL_REPORT_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_INSTANCE ADD CONSTRAINT FK_APP_DASH_REG_INSTANCE
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID, REGION_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD_REGION(APP_SID, APPROVAL_DASHBOARD_SID, REGION_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_INSTANCE ADD CONSTRAINT RefCUSTOMER2849
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD_REGION ADD CONSTRAINT FK_APP_DASH_APP_DASH_REG
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_REGION ADD CONSTRAINT FK_REGION_APP_DASH_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD_TAB ADD CONSTRAINT FK_APP_DASH_APP_DASH_TAB
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_TAB ADD CONSTRAINT FK_TAB_APP_DASH_TAB
    FOREIGN KEY (APP_SID, TAB_ID)
    REFERENCES CSR.TAB(APP_SID, TAB_ID)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD_TPL_TAG ADD CONSTRAINT FK_APR_DSH_INS_TPL_TAG
    FOREIGN KEY (APP_SID, DASHBOARD_INSTANCE_ID, TPL_REPORT_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD_INSTANCE(APP_SID, DASHBOARD_INSTANCE_ID, TPL_REPORT_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_TPL_TAG ADD CONSTRAINT FK_TPL_RPT_TAG_APR_DASH
    FOREIGN KEY (APP_SID, TPL_REPORT_SID, TAG)
    REFERENCES CSR.TPL_REPORT_TAG(APP_SID, TPL_REPORT_SID, TAG)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD_VAL ADD CONSTRAINT FK_APP_DASH_IND_VAL
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID, IND_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD_IND(APP_SID, APPROVAL_DASHBOARD_SID, IND_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_VAL ADD CONSTRAINT FK_APP_DASH_INST_VAL
    FOREIGN KEY (APP_SID, DASHBOARD_INSTANCE_ID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD_INSTANCE(APP_SID, DASHBOARD_INSTANCE_ID, APPROVAL_DASHBOARD_SID)
;

ALTER TABLE CSR.APPROVAL_DASHBOARD_VAL ADD CONSTRAINT FK_APP_DASH_NOTE_USER
    FOREIGN KEY (APP_SID, NOTE_ADDED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.APPROVAL_DASHBOARD_VAL_SRC ADD CONSTRAINT RefAPPROVAL_DASHBOARD_VAL4397
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_VAL_ID)
    REFERENCES CSR.APPROVAL_DASHBOARD_VAL(APP_SID, APPROVAL_DASHBOARD_VAL_ID)
;



ALTER TABLE CSR.APPROVAL_NOTE_PORTLET_NOTE ADD CONSTRAINT FK_AP_NOTE_POR_NOTE_ADDED_BY
    FOREIGN KEY (APP_SID, ADDED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.APPROVAL_NOTE_PORTLET_NOTE ADD CONSTRAINT FK_AP_NOTE_POR_NOTE_AP_DAS_INS
    FOREIGN KEY (APP_SID, DASHBOARD_INSTANCE_ID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD_INSTANCE(APP_SID, DASHBOARD_INSTANCE_ID, APPROVAL_DASHBOARD_SID)
;

ALTER TABLE CSR.APPROVAL_NOTE_PORTLET_NOTE ADD CONSTRAINT FK_AP_NOTE_POR_NOTE_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.APPROVAL_NOTE_PORTLET_NOTE ADD CONSTRAINT FK_AP_NOTE_POR_NOTE_TAB_PORT
    FOREIGN KEY (APP_SID, TAB_PORTLET_ID)
    REFERENCES CSR.TAB_PORTLET(APP_SID, TAB_PORTLET_ID)
;

ALTER TABLE CSR.APPROVAL_NOTE_PORTLET_NOTE ADD CONSTRAINT FK_APP_NOTE_PORT_NOTE_APP_DASH
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID)
;



ALTER TABLE CSR.APPROVAL_STEP ADD CONSTRAINT RefAPPROVAL_STEP_TEMPLATE459
    FOREIGN KEY (APP_SID, BASED_ON_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP_TEMPLATE(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP ADD CONSTRAINT RefAPPROVAL_STEP460
    FOREIGN KEY (APP_SID, PARENT_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP ADD CONSTRAINT RefPENDING_DATASET497
    FOREIGN KEY (APP_SID, PENDING_DATASET_ID)
    REFERENCES CSR.PENDING_DATASET(APP_SID, PENDING_DATASET_ID)
;



ALTER TABLE CSR.APPROVAL_STEP_IND ADD CONSTRAINT RefAPPROVAL_STEP462
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_IND ADD CONSTRAINT RefPENDING_IND463
    FOREIGN KEY (APP_SID, PENDING_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;



ALTER TABLE CSR.APPROVAL_STEP_MODEL ADD CONSTRAINT FK_ASM_AS
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_MODEL ADD CONSTRAINT FK_ASM_M
    FOREIGN KEY (APP_SID, MODEL_SID)
    REFERENCES CSR.MODEL(APP_SID, MODEL_SID)
;



ALTER TABLE CSR.APPROVAL_STEP_REGION ADD CONSTRAINT RefAPPROVAL_STEP466
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_REGION ADD CONSTRAINT RefPENDING_REGION464
    FOREIGN KEY (APP_SID, PENDING_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_REGION ADD CONSTRAINT RefPENDING_REGION465
    FOREIGN KEY (APP_SID, ROLLS_UP_TO_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;



ALTER TABLE CSR.APPROVAL_STEP_ROLE ADD CONSTRAINT RefAPPROVAL_STEP895
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_ROLE ADD CONSTRAINT RefROLE894
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.APPROVAL_STEP_SHEET ADD CONSTRAINT RefAPPROVAL_STEP546
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_SHEET ADD CONSTRAINT RefPENDING_IND555
    FOREIGN KEY (APP_SID, PENDING_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_SHEET ADD CONSTRAINT RefPENDING_PERIOD553
    FOREIGN KEY (APP_SID, PENDING_PERIOD_ID)
    REFERENCES CSR.PENDING_PERIOD(APP_SID, PENDING_PERIOD_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_SHEET ADD CONSTRAINT RefPENDING_REGION554
    FOREIGN KEY (APP_SID, PENDING_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;



ALTER TABLE CSR.APPROVAL_STEP_SHEET_ALERT ADD CONSTRAINT FK_APSS_ALERT_APSS
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID, SHEET_KEY)
    REFERENCES CSR.APPROVAL_STEP_SHEET(APP_SID, APPROVAL_STEP_ID, SHEET_KEY)
;

ALTER TABLE CSR.APPROVAL_STEP_SHEET_ALERT ADD CONSTRAINT FK_APSS_ALERT_CSR_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.APPROVAL_STEP_SHEET_LOG ADD CONSTRAINT RefAPPROVAL_STEP_SHEET547
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID, SHEET_KEY)
    REFERENCES CSR.APPROVAL_STEP_SHEET(APP_SID, APPROVAL_STEP_ID, SHEET_KEY)
;

ALTER TABLE CSR.APPROVAL_STEP_SHEET_LOG ADD CONSTRAINT RefCSR_USER548
    FOREIGN KEY (APP_SID, BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.APPROVAL_STEP_TEMPLATE ADD CONSTRAINT RefAPPROVAL_STEP_TEMPLATE467
    FOREIGN KEY (APP_SID, PARENT_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP_TEMPLATE(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_TEMPLATE ADD CONSTRAINT RefCUSTOMER498
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.APPROVAL_STEP_TEMPLATE ADD CONSTRAINT RefPENDING_REGION499
    FOREIGN KEY (APP_SID, PENDING_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;



ALTER TABLE CSR.APPROVAL_STEP_USER ADD CONSTRAINT RefAPPROVAL_STEP468
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_USER ADD CONSTRAINT RefCSR_USER986
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.APPROVAL_STEP_USER ADD CONSTRAINT RefCSR_USER987
    FOREIGN KEY (APP_SID, FALLBACK_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.APPROVAL_STEP_USER_TEMPLATE ADD CONSTRAINT RefAPPROVAL_STEP_TEMPLATE469
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP_TEMPLATE(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.APPROVAL_STEP_USER_TEMPLATE ADD CONSTRAINT RefCSR_USER988
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.ATTACHMENT ADD CONSTRAINT RefDATAVIEW824
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.ATTACHMENT ADD CONSTRAINT RefDOC1036
    FOREIGN KEY (APP_SID, DOC_ID)
    REFERENCES CSR.DOC(APP_SID, DOC_ID)
;

ALTER TABLE CSR.ATTACHMENT ADD CONSTRAINT RefIND825
    FOREIGN KEY (APP_SID, INDICATOR_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.ATTACHMENT_HISTORY ADD CONSTRAINT RefATTACHMENT826
    FOREIGN KEY (APP_SID, ATTACHMENT_ID)
    REFERENCES CSR.ATTACHMENT(APP_SID, ATTACHMENT_ID)
;

ALTER TABLE CSR.ATTACHMENT_HISTORY ADD CONSTRAINT RefSECTION_VERSION827
    FOREIGN KEY (APP_SID, SECTION_SID, VERSION_NUMBER)
    REFERENCES CSR.SECTION_VERSION(APP_SID, SECTION_SID, VERSION_NUMBER)
;



ALTER TABLE CSR.AUDIT_ALERT ADD CONSTRAINT FK_AUDIT_ALERT_AUDIT
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.AUDIT_ALERT ADD CONSTRAINT FK_AUDIT_ALERT_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.AUDIT_ISS_ALL_CLOSED_ALERT ADD CONSTRAINT FK_CSR_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.AUDIT_ISS_ALL_CLOSED_ALERT ADD CONSTRAINT FK_INTERNAL_AUDIT
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;



ALTER TABLE CSR.AUDIT_LOG ADD CONSTRAINT RefAUDIT_TYPE347
    FOREIGN KEY (AUDIT_TYPE_ID)
    REFERENCES CSR.AUDIT_TYPE(AUDIT_TYPE_ID)
;

ALTER TABLE CSR.AUDIT_LOG ADD CONSTRAINT RefCSR_USER345
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.AUDIT_LOG ADD CONSTRAINT RefCUSTOMER346
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.AUDIT_NON_COMPLIANCE ADD CONSTRAINT FK_ANC_REPEAT_ANC
    FOREIGN KEY (APP_SID, REPEAT_OF_AUDIT_NC_ID)
    REFERENCES CSR.AUDIT_NON_COMPLIANCE(APP_SID, AUDIT_NON_COMPLIANCE_ID)
;

ALTER TABLE CSR.AUDIT_NON_COMPLIANCE ADD CONSTRAINT FK_AUD_NC_AUD
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.AUDIT_NON_COMPLIANCE ADD CONSTRAINT FK_AUD_NC_NC
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_ID)
    REFERENCES CSR.NON_COMPLIANCE(APP_SID, NON_COMPLIANCE_ID)
;



ALTER TABLE CSR.AUDIT_TYPE ADD CONSTRAINT RefAUDIT_TYPE_GROUP654
    FOREIGN KEY (AUDIT_TYPE_GROUP_ID)
    REFERENCES CSR.AUDIT_TYPE_GROUP(AUDIT_TYPE_GROUP_ID)
;



ALTER TABLE CSR.AUDIT_TYPE_CLOSURE_TYPE ADD CONSTRAINT FK_ATCT_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.AUDIT_TYPE_CLOSURE_TYPE ADD CONSTRAINT FK_AUDIT_CLSR_IAT
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.AUDIT_TYPE_CLOSURE_TYPE ADD CONSTRAINT FK_AUDIT_TYPE_CLOSURE_TYPE
    FOREIGN KEY (APP_SID, AUDIT_CLOSURE_TYPE_ID)
    REFERENCES CSR.AUDIT_CLOSURE_TYPE(APP_SID, AUDIT_CLOSURE_TYPE_ID)
;



ALTER TABLE CSR.AUDIT_TYPE_EXPIRY_ALERT_ROLE ADD CONSTRAINT FK_ADT_TYP_ALRT_RLE_ADT_TYP
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.AUDIT_TYPE_EXPIRY_ALERT_ROLE ADD CONSTRAINT FK_ADT_TYP_ALRT_RLE_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.AUDIT_TYPE_FLOW_INV_TYPE ADD CONSTRAINT FK_ATFIT_FLOW_INV_TYPE
    FOREIGN KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
    REFERENCES CSR.FLOW_INVOLVEMENT_TYPE(APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
;

ALTER TABLE CSR.AUDIT_TYPE_FLOW_INV_TYPE ADD CONSTRAINT INTERNAL_AUDIT_TYPE_ID
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;



ALTER TABLE CSR.AUDIT_TYPE_HEADER ADD CONSTRAINT FK_AUDIT_TYP_HEADER_AUDIT_TYP
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.AUDIT_TYPE_HEADER ADD CONSTRAINT FK_AUDIT_TYPE_HEADER_PLUGIN
    FOREIGN KEY (PLUGIN_TYPE_ID, PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_TYPE_ID, PLUGIN_ID)
;



ALTER TABLE CSR.AUDIT_TYPE_NON_COMP_DEFAULT ADD CONSTRAINT FK_AUDIT_TYPE_NC_AUDIT_TYPE
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.AUDIT_TYPE_NON_COMP_DEFAULT ADD CONSTRAINT FK_AUDIT_TYPE_NC_DFLT_NC_DFLT
    FOREIGN KEY (APP_SID, NON_COMP_DEFAULT_ID)
    REFERENCES CSR.NON_COMP_DEFAULT(APP_SID, NON_COMP_DEFAULT_ID)
;



ALTER TABLE CSR.AUDIT_TYPE_TAB ADD CONSTRAINT FK_ATT_FLOW_CAP
    FOREIGN KEY (APP_SID, FLOW_CAPABILITY_ID)
    REFERENCES CSR.CUSTOMER_FLOW_CAPABILITY(APP_SID, FLOW_CAPABILITY_ID)
;

ALTER TABLE CSR.AUDIT_TYPE_TAB ADD CONSTRAINT FK_AUDIT_TYPE_TAB_AUDIT_TYPE
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.AUDIT_TYPE_TAB ADD CONSTRAINT FK_AUDIT_TYPE_TAB_PLUGIN
    FOREIGN KEY (PLUGIN_TYPE_ID, PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_TYPE_ID, PLUGIN_ID)
;



ALTER TABLE CSR.AUDIT_USER_COVER ADD CONSTRAINT FK_AUDIT_USR_CVR_AUDIT
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.AUDIT_USER_COVER ADD CONSTRAINT FK_AUDIT_USR_CVR_USRG
    FOREIGN KEY (APP_SID, USER_GIVING_COVER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.AUDIT_USER_COVER ADD CONSTRAINT FK_AUDIT_USR_CVR_USRR
    FOREIGN KEY (APP_SID, USER_BEING_COVERED_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.AUTO_EXP_FILECREATE_DSV ADD CONSTRAINT FK_AUTO_EXP_DELIMITER
    FOREIGN KEY (DELIMITER_ID)
    REFERENCES CSR.AUTO_EXP_IMP_DSV_DELIMITERS(DELIMITER_ID)
;

ALTER TABLE CSR.AUTO_EXP_FILECREATE_DSV ADD CONSTRAINT FK_AUTO_EXP_SECOND_DELIMITER
    FOREIGN KEY (SECONDARY_DELIMITER_ID)
    REFERENCES CSR.AUTO_EXP_IMP_DSV_DELIMITERS(DELIMITER_ID)
;



ALTER TABLE CSR.AUTO_EXP_FILEWRITE_FTP ADD CONSTRAINT FK_AUTO_EXP_FILEWRI_FTP_PROF
    FOREIGN KEY (APP_SID, FTP_PROFILE_ID)
    REFERENCES CSR.FTP_PROFILE(APP_SID, FTP_PROFILE_ID)
;



ALTER TABLE CSR.AUTO_EXP_RETRIEVAL_DATAVIEW ADD CONSTRAINT FK_AUTO_EXP_RTRVL_DVIEW_SID
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.AUTO_EXP_RETRIEVAL_DATAVIEW ADD CONSTRAINT FK_AUTO_EXP_RDV_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.AUTO_EXP_RETRIEVAL_DATAVIEW ADD CONSTRAINT fk_auto_exp_rdv_psp_id
	FOREIGN KEY (APP_SID, PERIOD_SPAN_PATTERN_ID)
	REFERENCES CSR.PERIOD_SPAN_PATTERN(APP_SID, PERIOD_SPAN_PATTERN_ID)
;


ALTER TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_CORE_SET_STEP
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS_STEP(APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_CORE_SET_FILETYPE
    FOREIGN KEY (AUTOMATED_IMPORT_FILE_TYPE_ID)
    REFERENCES CSR.AUTOMATED_IMPORT_FILE_TYPE(AUTOMATED_IMPORT_FILE_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_CORE_SET_INDMAP
    FOREIGN KEY (IND_MAPPING_TYPE_ID)
    REFERENCES CSR.AUTO_IMP_MAPPING_TYPE(MAPPING_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_CORE_SET_REGMAP
    FOREIGN KEY (REGION_MAPPING_TYPE_ID)
    REFERENCES CSR.AUTO_IMP_MAPPING_TYPE(MAPPING_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_CORE_SET_UNITMAP
    FOREIGN KEY (UNIT_MAPPING_TYPE_ID)
    REFERENCES CSR.AUTO_IMP_MAPPING_TYPE(MAPPING_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_CORE_SET_DATETYPE
    FOREIGN KEY (DATE_FORMAT_TYPE_ID)
    REFERENCES CSR.AUTO_IMP_DATE_TYPE(DATE_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_CORE_SET_DATECOL1
    FOREIGN KEY (FIRST_COL_DATE_FORMAT_ID)
    REFERENCES CSR.AUTO_IMP_DATE_COL_TYPE(DATE_COL_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_CORE_SET_DATECOL2
    FOREIGN KEY (SECOND_COL_DATE_FORMAT_ID)
    REFERENCES CSR.AUTO_IMP_DATE_COL_TYPE(DATE_COL_TYPE_ID)
;


ALTER TABLE CSR.AUTO_IMP_CORE_DATA_VAL_FAIL ADD CONSTRAINT FK_AUTIMP_CR_DT_VL_FAIL_REG
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION (APP_SID, REGION_SID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_VAL_FAIL ADD CONSTRAINT FK_AUTIMP_CR_DT_VL_FAIL_IND
	FOREIGN KEY (APP_SID, IND_SID)
	REFERENCES CSR.IND (APP_SID, IND_SID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_VAL_FAIL ADD CONSTRAINT FK_AUTIMP_CR_DT_VL_FAIL_MEAS
	FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
	REFERENCES CSR.MEASURE_CONVERSION (APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.AUTO_IMP_CORE_DATA_VAL_FAIL ADD CONSTRAINT FK_AUTIMP_CR_DT_VL_FAIL_STEP
	FOREIGN KEY (APP_SID, INSTANCE_STEP_ID)
	REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE_STEP (APP_SID, AUTO_IMPORT_INSTANCE_STEP_ID)
;


ALTER TABLE CSR.AUTO_IMP_FILEREAD_FTP ADD CONSTRAINT FK_AUTO_IMP_FILEREAD_FTP_PROF
    FOREIGN KEY (APP_SID, FTP_PROFILE_ID)
    REFERENCES CSR.FTP_PROFILE(APP_SID, FTP_PROFILE_ID)
;



ALTER TABLE CSR.AUTO_IMP_IMPORTER_CMS ADD CONSTRAINT FK_AUTO_IMP_IMPRTR_FILETYPE
    FOREIGN KEY (CMS_IMP_FILE_TYPE_ID)
    REFERENCES CSR.AUTOMATED_IMPORT_FILE_TYPE(AUTOMATED_IMPORT_FILE_TYPE_ID)
;



ALTER TABLE CSR.AUTO_IMP_IMPORTER_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_SETTINGS_FILETYPE
    FOREIGN KEY (AUTOMATED_IMPORT_FILE_TYPE_ID)
    REFERENCES CSR.AUTOMATED_IMPORT_FILE_TYPE(AUTOMATED_IMPORT_FILE_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_IMPORTER_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_SETTINGS_STEP
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS_STEP(APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
;



ALTER TABLE CSR.AUTO_IMP_INDICATOR_MAP ADD CONSTRAINT FK_AUTO_IMP_IND_MAP_CLS
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTO_IMP_INDICATOR_MAP ADD CONSTRAINT FK_AUTO_IMP_IND_MAP_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.AUTO_IMP_REGION_MAP ADD CONSTRAINT FK_AUTO_IMP_REG_MAP_CLS
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTO_IMP_REGION_MAP ADD CONSTRAINT FK_AUTO_IMP_REG_MAP_REG
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.AUTO_IMP_UNIT_MAP ADD CONSTRAINT FK_AUTO_IMP_UNIT_MAP_CLS
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTO_IMP_UNIT_MAP ADD CONSTRAINT FK_AUTO_IMP_UNIT_MAP_UNIT
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.AUTO_IMP_USER_IMP_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_USER_SET_STEP
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS_STEP(APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
;

ALTER TABLE CSR.AUTO_IMP_USER_IMP_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_USER_SET_FILETYPE
    FOREIGN KEY (AUTOMATED_IMPORT_FILE_TYPE_ID)
    REFERENCES CSR.AUTOMATED_IMPORT_FILE_TYPE(AUTOMATED_IMPORT_FILE_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_USER_IMP_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_USER_SET_REGMAP
    FOREIGN KEY (REGION_MAPPING_TYPE_ID)
    REFERENCES CSR.AUTO_IMP_MAPPING_TYPE(MAPPING_TYPE_ID)
;

ALTER TABLE CSR.AUTO_IMP_ZIP_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_ZIP_SET_STEP
	FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
	REFERENCES CSR.AUTOMATED_IMPORT_CLASS_STEP(APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
;

ALTER TABLE CSR.AUTO_IMP_ZIP_FILTER ADD CONSTRAINT FK_AUTO_IMP_ZIP_FILTER_CLS
	FOREIGN KEY (APP_SID, MATCHED_IMPORT_CLASS_SID)
	REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTO_IMP_MAILBOX ADD CONSTRAINT FK_AUTO_IMP_MAILBOX_BDY_CLS
	FOREIGN KEY (APP_SID, MATCHED_IMP_CLASS_SID_FOR_BODY)
	REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTO_IMP_MAIL_SENDER_FILTER ADD CONSTRAINT FK_AUTO_IMP_MAIL_SNDR_FTR_SID
	FOREIGN KEY (APP_SID, MAILBOX_SID)
	REFERENCES CSR.AUTO_IMP_MAILBOX(APP_SID, MAILBOX_SID)
;

ALTER TABLE CSR.AUTO_IMP_MAIL_SUBJECT_FILTER ADD CONSTRAINT FK_AUTO_IMP_MAIL_SBJT_FLTR_SID
	FOREIGN KEY (APP_SID, MAILBOX_SID)
	REFERENCES CSR.AUTO_IMP_MAILBOX(APP_SID, MAILBOX_SID)
;

ALTER TABLE CSR.AUTO_IMP_MAIL_ATTACH_FILTER ADD CONSTRAINT FK_AUTO_IMP_MAIL_ATT_FLTR_SID
	FOREIGN KEY (APP_SID, MAILBOX_SID)
	REFERENCES CSR.AUTO_IMP_MAILBOX(APP_SID, MAILBOX_SID)
;

ALTER TABLE CSR.AUTO_IMP_MAIL_ATTACH_FILTER ADD CONSTRAINT FK_AUTO_IMP_MAIL_ATT_FLTR_CLS
	FOREIGN KEY (APP_SID, MATCHED_IMPORT_CLASS_SID)
	REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTO_IMP_MAIL ADD CONSTRAINT FK_AUTO_IMP_MAIL_BOX_SID
	FOREIGN KEY (APP_SID, MAILBOX_SID)
	REFERENCES CSR.AUTO_IMP_MAILBOX(APP_SID, MAILBOX_SID)
;

ALTER TABLE CSR.AUTO_IMP_MAIL_FILE ADD CONSTRAINT FK_AUTO_IMP_MAIL_FILE_INSTANCE
	FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
	REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
;

ALTER TABLE CSR.AUTO_IMP_PRODUCT_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_PROD_SETTINGS_STEP
	FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
	REFERENCES CSR.AUTOMATED_IMPORT_CLASS_STEP(APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER);

ALTER TABLE CSR.AUTO_IMP_PRODUCT_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_PROD_SET_FILETYPE
	FOREIGN KEY (AUTOMATED_IMPORT_FILE_TYPE_ID)
	REFERENCES CSR.AUTOMATED_IMPORT_FILE_TYPE(AUTOMATED_IMPORT_FILE_TYPE_ID);

ALTER TABLE CSR.AUTO_IMP_PRODUCT_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_PROD_PROD_MAP
	FOREIGN KEY (PRODUCT_MAPPING_TYPE_ID)
	REFERENCES CSR.AUTO_IMP_MAPPING_TYPE(MAPPING_TYPE_ID);

ALTER TABLE CSR.AUTO_IMP_PRODUCT_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_PROD_COMP_MAP
	FOREIGN KEY (COMPANY_MAPPING_TYPE_ID)
	REFERENCES CSR.AUTO_IMP_MAPPING_TYPE(MAPPING_TYPE_ID);

ALTER TABLE CSR.AUTO_IMP_PRODUCT_SETTINGS ADD CONSTRAINT FK_AUTO_IMP_PROD_TYPE_MAP
	FOREIGN KEY (PRODUCT_TYPE_MAPPING_TYPE_ID)
	REFERENCES CSR.AUTO_IMP_MAPPING_TYPE(MAPPING_TYPE_ID);

ALTER TABLE CSR.AUTOCREATE_USER ADD CONSTRAINT RefCSR_USER787
    FOREIGN KEY (APP_SID, APPROVED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.AUTOCREATE_USER ADD CONSTRAINT RefCSR_USER789
    FOREIGN KEY (APP_SID, CREATED_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.AUTOCREATE_USER ADD CONSTRAINT RefCUSTOMER646
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.AUTO_EXP_BATCHED_EXP_SETTINGS ADD CONSTRAINT FK_AUTO_EXP_BTCH_SET_CLS_SID
	FOREIGN KEY (APP_SID, AUTOMATED_EXPORT_CLASS_SID)
	REFERENCES CSR.AUTOMATED_EXPORT_CLASS(APP_SID, AUTOMATED_EXPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTO_EXP_BATCHED_EXP_SETTINGS ADD CONSTRAINT FK_AUTO_EXP_BTCH_SET_EXPORTER
	FOREIGN KEY (BATCHED_EXPORT_TYPE_ID)
	REFERENCES CSR.BATCHED_EXPORT_TYPE(BATCH_JOB_TYPE_ID)
;


ALTER TABLE CSR.AUTOMATED_EXPORT_CLASS ADD CONSTRAINT FK_AUTO_EXP_CLS_EXP_PLUGIN
    FOREIGN KEY (EXPORTER_PLUGIN_ID)
    REFERENCES CSR.AUTO_EXP_EXPORTER_PLUGIN(PLUGIN_ID)
;

ALTER TABLE CSR.AUTOMATED_EXPORT_CLASS ADD CONSTRAINT FK_AUTO_EXP_CLS_FILEWRI_PLUGIN
    FOREIGN KEY (FILE_WRITER_PLUGIN_ID)
    REFERENCES CSR.AUTO_EXP_FILE_WRITER_PLUGIN(PLUGIN_ID)
;

ALTER TABLE CSR.AUTOMATED_EXPORT_CLASS ADD CONSTRAINT FK_AUTO_EXP_CLS_FTP_ID
    FOREIGN KEY (APP_SID, AUTO_EXP_FILEWRI_FTP_ID)
    REFERENCES CSR.AUTO_EXP_FILEWRITE_FTP(APP_SID, AUTO_EXP_FILEWRITE_FTP_ID)
;

ALTER TABLE CSR.AUTOMATED_EXPORT_CLASS ADD CONSTRAINT FK_AUTO_IMPEXP_PUBLIC_KEY_ID
		FOREIGN KEY (AUTO_IMPEXP_PUBLIC_KEY_ID)
		REFERENCES CSR.AUTO_IMPEXP_PUBLIC_KEY (PUBLIC_KEY_ID)
;

ALTER TABLE CSR.AUTOMATED_EXPORT_INSTANCE ADD CONSTRAINT FK_AUTOMATED_EXPORT_INSTANCE
    FOREIGN KEY (APP_SID, AUTOMATED_EXPORT_CLASS_SID)
    REFERENCES CSR.AUTOMATED_EXPORT_CLASS(APP_SID, AUTOMATED_EXPORT_CLASS_SID)
;



ALTER TABLE CSR.AUTOMATED_IMPORT_CLASS_STEP ADD CONSTRAINT FK_AUTO_IMP_CLS_FILE_PLUGIN
    FOREIGN KEY (FILEREAD_PLUGIN_ID)
    REFERENCES CSR.AUTO_IMP_FILEREAD_PLUGIN(PLUGIN_ID)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_CLASS_STEP ADD CONSTRAINT FK_AUTO_IMP_CLS_STP_IMP_PLGN
    FOREIGN KEY (IMPORTER_PLUGIN_ID)
    REFERENCES CSR.AUTO_IMP_IMPORTER_PLUGIN(PLUGIN_ID)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_CLASS_STEP ADD CONSTRAINT FK_AUTO_IMP_PROTO_DB_ID
    FOREIGN KEY (APP_SID, AUTO_IMP_FILEREAD_DB_ID)
    REFERENCES CSR.AUTO_IMP_FILEREAD_DB(APP_SID, AUTO_IMP_FILEREAD_DB_ID)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_CLASS_STEP ADD CONSTRAINT FK_AUTO_IMP_PROTO_FTP_ID
    FOREIGN KEY (APP_SID, AUTO_IMP_FILEREAD_FTP_ID)
    REFERENCES CSR.AUTO_IMP_FILEREAD_FTP(APP_SID, AUTO_IMP_FILEREAD_FTP_ID)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_CLASS_STEP ADD CONSTRAINT FK_CMS_IMP_CLS_IMP_CLS_STP
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;



ALTER TABLE CSR.AUTOMATED_IMPORT_INSTANCE ADD CONSTRAINT FK_BATCH_JOB_CMS_IMP_INS
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_INSTANCE ADD CONSTRAINT FK_CMS_IMP_CLS_IMP_INST
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_INSTANCE ADD CONSTRAINT AUTO_INSTANCE_PARENT_INSTANCE
	FOREIGN KEY (APP_SID, PARENT_INSTANCE_ID)
	REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE(APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_INSTANCE ADD CONSTRAINT FK_AUTO_IMP_INST_MAILBOX
	FOREIGN KEY (APP_SID, MAILBOX_SID, MAIL_MESSAGE_UID)
	REFERENCES CSR.AUTO_IMP_MAIL (APP_SID, MAILBOX_SID, MAIL_MESSAGE_UID)
;


ALTER TABLE CSR.AUTOMATED_IMPORT_INSTANCE_STEP ADD CONSTRAINT FK_CMS_CLS_STP_INST_STP
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS_STEP(APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_INSTANCE_STEP ADD CONSTRAINT FK_CMS_IMP_INST_INST_STP
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID, AUTOMATED_IMPORT_CLASS_SID)
    REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE(APP_SID, AUTOMATED_IMPORT_INSTANCE_ID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.AUTOMATED_IMPORT_INSTANCE_STEP ADD CONSTRAINT FK_CMS_IMP_RES_INST_STP
    FOREIGN KEY (RESULT)
    REFERENCES CSR.AUTOMATED_IMPORT_RESULT(AUTOMATED_IMPORT_RESULT_ID)
;



ALTER TABLE CSR.AUTOMATED_IMPORT_MANUAL_FILE ADD CONSTRAINT FK_CMS_IMP_MAN_FILE_INST
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
    REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE(APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
;

ALTER TABLE CSR.BASELINE_CONFIG_PERIOD ADD CONSTRAINT fk_bsl_config_period_bsl_config
	FOREIGN KEY (APP_SID, BASELINE_CONFIG_ID)
	REFERENCES CSR.BASELINE_CONFIG (APP_SID, BASELINE_CONFIG_ID)
;

ALTER TABLE CSR.BATCH_JOB ADD CONSTRAINT FK_BATCH_JOB_BATCH_JOB_TYPE
    FOREIGN KEY (BATCH_JOB_TYPE_ID)
    REFERENCES CSR.BATCH_JOB_TYPE(BATCH_JOB_TYPE_ID)
;

ALTER TABLE CSR.BATCH_JOB ADD CONSTRAINT FK_BATCH_JOB_CSR_USER
    FOREIGN KEY (APP_SID, REQUESTED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.BATCH_JOB ADD CONSTRAINT FK_BATCH_JOB_COMPANY
    FOREIGN KEY (APP_SID, REQUESTED_BY_COMPANY_SID)
	REFERENCES CSR.SUPPLIER (APP_SID, COMPANY_SID)
;


ALTER TABLE CSR.BATCH_JOB_APPROVAL_DASH_VALS ADD CONSTRAINT FK_BATCH_JOB_APP_DASH_JOB_ID
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;



ALTER TABLE CSR.BATCH_JOB_BATCHED_EXPORT ADD CONSTRAINT FK_BJ_BATCHED_EXPORT_BJ_ID
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;

ALTER TABLE CSR.BATCH_JOB_BATCHED_IMPORT ADD CONSTRAINT FK_BJ_BATCHED_IMPORT_BJ_ID
	FOREIGN KEY (APP_SID, BATCH_JOB_ID)
	REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID);


ALTER TABLE CSR.BATCH_JOB_CMS_IMPORT ADD CONSTRAINT FK_BJ_BJCI
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;



ALTER TABLE CSR.BATCH_JOB_DELEGATION_COMP ADD CONSTRAINT FK_BATCH_JOB_DELEGATION_COMP
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.BATCH_JOB_EXCEL_MODEL ADD CONSTRAINT FK_BJ_BJEM
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.BATCH_JOB_EXCEL_MODEL ADD CONSTRAINT FK_BJEM_MI
    FOREIGN KEY (APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID)
    REFERENCES CSR.MODEL_INSTANCE(APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.BATCH_JOB_LIKE_FOR_LIKE ADD CONSTRAINT FK_BATCH_JOB_L4L_JOB_ID
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;

ALTER TABLE CSR.BATCH_JOB_LIKE_FOR_LIKE ADD CONSTRAINT FK_BATCH_JOB_L4L_LIKE_SID
    FOREIGN KEY (APP_SID, LIKE_FOR_LIKE_SID)
    REFERENCES CSR.LIKE_FOR_LIKE_SLOT(APP_SID, LIKE_FOR_LIKE_SID)
;



ALTER TABLE CSR.BATCH_JOB_LOG ADD CONSTRAINT FK_BATCH_JOB_LOG_EVENT
    FOREIGN KEY (EVENT_TYPE_ID)
    REFERENCES CSR.BATCH_JOB_EVENT(EVENT_ID)
;



ALTER TABLE CSR.BATCH_JOB_METER_EXTRACT ADD CONSTRAINT FK_BAT_JOB_METR_XTRCT_PRD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.BATCH_JOB_STRUCTURE_IMPORT ADD CONSTRAINT FK_BJSI_SUPPLIER
    FOREIGN KEY (APP_SID, COMPANY_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;



ALTER TABLE CSR.BATCH_JOB_TEMPLATED_REPORT ADD CONSTRAINT FK_BATCH_TPL_REPORT_SCHEDULE
    FOREIGN KEY (APP_SID, SCHEDULE_SID)
    REFERENCES CSR.TPL_REPORT_SCHEDULE(APP_SID, SCHEDULE_SID)
;

ALTER TABLE CSR.BATCH_JOB_TEMPLATED_REPORT ADD CONSTRAINT FK_BJ_TPL_REPORT_BJ
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.BATCH_JOB_TYPE_APP_CFG ADD
	CONSTRAINT FK_BJT_APP_CFG_CUSTOMER FOREIGN KEY (APP_SID)
	REFERENCES CSR.CUSTOMER (APP_SID);

ALTER TABLE CSR.BATCH_JOB_TYPE_APP_CFG ADD
	CONSTRAINT FK_BJT_APP_CFG_BJT FOREIGN KEY (BATCH_JOB_TYPE_ID)
	REFERENCES CSR.BATCH_JOB_TYPE (BATCH_JOB_TYPE_ID);

ALTER TABLE CSR.BATCH_JOB_TYPE_APP_STAT ADD
	CONSTRAINT FK_BJT_APP_STAT_CUSTOMER FOREIGN KEY (APP_SID)
	REFERENCES CSR.CUSTOMER (APP_SID);

ALTER TABLE CSR.BATCH_JOB_TYPE_APP_STAT ADD
	CONSTRAINT FK_BJT_APP_STAT_BJT FOREIGN KEY (BATCH_JOB_TYPE_ID)
	REFERENCES CSR.BATCH_JOB_TYPE (BATCH_JOB_TYPE_ID);

	
ALTER TABLE CSR.BATCHED_EXPORT_TYPE ADD CONSTRAINT FK_BTCH_EXP_TYP_BTCH_JB_TYPE
	FOREIGN KEY (BATCH_JOB_TYPE_ID)
	REFERENCES CSR.BATCH_JOB_TYPE(BATCH_JOB_TYPE_ID)
;


ALTER TABLE CSR.BATCHED_IMPORT_TYPE ADD CONSTRAINT FK_BTCH_IMP_TYP_BTCH_JB_TYPE
	FOREIGN KEY (BATCH_JOB_TYPE_ID)
	REFERENCES CSR.BATCH_JOB_TYPE(BATCH_JOB_TYPE_ID)
;

ALTER TABLE CSR.BENCHMARK_DASHBOARD ADD CONSTRAINT FK_BENCH_DASH_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.BENCHMARK_DASHBOARD ADD CONSTRAINT FK_BENCH_DASHBOARD_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;



ALTER TABLE CSR.BENCHMARK_DASHBOARD_CHAR ADD CONSTRAINT FK_BENCHMARK_DAS_REGION_METRIC
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.REGION_METRIC(APP_SID, IND_SID)
;

ALTER TABLE CSR.BENCHMARK_DASHBOARD_CHAR ADD CONSTRAINT FK_BENCHMARK_DAS_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;



ALTER TABLE CSR.BENCHMARK_DASHBOARD_IND ADD CONSTRAINT FK_BENCH_DASH_IND_BENCH_DASH
    FOREIGN KEY (APP_SID, BENCHMARK_DASHBOARD_SID)
    REFERENCES CSR.BENCHMARK_DASHBOARD(APP_SID, BENCHMARK_DASHBOARD_SID)
;

ALTER TABLE CSR.BENCHMARK_DASHBOARD_IND ADD CONSTRAINT FK_BENCH_DASH_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.BENCHMARK_DASHBOARD_IND ADD CONSTRAINT FK_BENCH_DASH_IND_INT_FA_IND
    FOREIGN KEY (APP_SID, FLOOR_AREA_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.BENCHMARK_DASHBOARD_IND ADD CONSTRAINT FK_BENCH_DASH_IND_SCN_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;



ALTER TABLE CSR.BENCHMARK_DASHBOARD_PLUGIN ADD CONSTRAINT FK_BENCH_DASH_PLG_BENCH_DASH
    FOREIGN KEY (APP_SID, BENCHMARK_DASHBOARD_SID)
    REFERENCES CSR.BENCHMARK_DASHBOARD(APP_SID, BENCHMARK_DASHBOARD_SID)
;

ALTER TABLE CSR.BENCHMARK_DASHBOARD_PLUGIN ADD CONSTRAINT FK_BENCH_DASH_PLG_PLUGIN_ID
    FOREIGN KEY (PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID)
;



ALTER TABLE CSR.BRANDING_AVAILABILITY ADD CONSTRAINT FK_BRANDING_CLIENT_FOLDER_NAME
    FOREIGN KEY (CLIENT_FOLDER_NAME)
    REFERENCES CSR.BRANDING(CLIENT_FOLDER_NAME)
;



ALTER TABLE CSR.CALC_DEPENDENCY ADD CONSTRAINT RefIND1099
    FOREIGN KEY (APP_SID, CALC_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.CALC_DEPENDENCY ADD CONSTRAINT RefIND1100
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.CALC_JOB ADD CONSTRAINT FK_CALC_JOB_CALC_QUEUE
    FOREIGN KEY (CALC_QUEUE_ID)
    REFERENCES CSR.CALC_QUEUE(CALC_QUEUE_ID)
;

ALTER TABLE CSR.CALC_JOB ADD CONSTRAINT FK_CALC_JOB_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CALC_JOB ADD CONSTRAINT FK_CALC_JOB_PHASE
    FOREIGN KEY (PHASE)
    REFERENCES CSR.CALC_JOB_PHASE(PHASE)
;

ALTER TABLE CSR.CALC_JOB ADD CONSTRAINT FK_SCENARIO_CALC_JOB_SCN_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.CALC_JOB ADD CONSTRAINT FK_CALC_JOB_LAST_RUN_USER
    FOREIGN KEY (APP_SID, RUN_BY_USER_SID)
    REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID)
;


ALTER TABLE CSR.CALC_JOB_AGGREGATE_IND_GROUP ADD CONSTRAINT FK_CALC_JOB_AIG_AIG
    FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
    REFERENCES CSR.AGGREGATE_IND_GROUP(APP_SID, AGGREGATE_IND_GROUP_ID)
;

ALTER TABLE CSR.CALC_JOB_AGGREGATE_IND_GROUP ADD CONSTRAINT FK_CALC_JOB_AIG_CALC_JOB
    FOREIGN KEY (APP_SID, CALC_JOB_ID)
    REFERENCES CSR.CALC_JOB(APP_SID, CALC_JOB_ID)
;



ALTER TABLE CSR.CALC_JOB_IND ADD CONSTRAINT FK_CALC_JOB_IND_CALC_JOB
    FOREIGN KEY (APP_SID, CALC_JOB_ID)
    REFERENCES CSR.CALC_JOB(APP_SID, CALC_JOB_ID)
;

ALTER TABLE CSR.CALC_JOB_IND ADD CONSTRAINT FK_CALC_JOB_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.CALC_JOB_STAT ADD CONSTRAINT FK_CALC_JOB_STAT_SCN_RUN
	FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
	REFERENCES CSR.SCENARIO_RUN (APP_SID, SCENARIO_RUN_SID);

ALTER TABLE CSR.CALC_JOB_FETCH_STAT ADD CONSTRAINT FK_CALC_JOB_FTCH_STAT_CALC_JB
	FOREIGN KEY (APP_SID, CALC_JOB_ID)
	REFERENCES CSR.CALC_JOB_STAT (APP_SID, CALC_JOB_ID);



ALTER TABLE CSR.CALC_TAG_DEPENDENCY ADD CONSTRAINT FK_CALC_TAG_DEP_CALC
    FOREIGN KEY (APP_SID, CALC_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.CALC_TAG_DEPENDENCY ADD CONSTRAINT FK_CALC_TAG_DEP_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.CALC_BASELINE_CONFIG_DEPENDENCY ADD CONSTRAINT FK_CALC_BASELINE_DEP_CALC
    FOREIGN KEY (APP_SID, CALC_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.CALC_BASELINE_CONFIG_DEPENDENCY ADD CONSTRAINT FK_CALC_BASELINE_DEP_BASELINE
    FOREIGN KEY (APP_SID, BASELINE_CONFIG_ID)
    REFERENCES CSR.BASELINE_CONFIG(APP_SID, BASELINE_CONFIG_ID)
;

ALTER TABLE CSR.CALENDAR ADD CONSTRAINT FK_CALENDAR_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CALENDAR ADD CONSTRAINT FK_CALENDAR_PLUGIN
    FOREIGN KEY (PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID)
;



ALTER TABLE CSR.CALENDAR_EVENT ADD CONSTRAINT FK_CALENDAR_EVENT_USER
    FOREIGN KEY (APP_SID, CREATED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.CALENDAR_EVENT ADD CONSTRAINT FK_REGION_CAL_EVENT
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.CALENDAR_EVENT_INVITE ADD CONSTRAINT FK_CAL_EVT_EVT_INV
    FOREIGN KEY (APP_SID, CALENDAR_EVENT_ID)
    REFERENCES CSR.CALENDAR_EVENT(APP_SID, CALENDAR_EVENT_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.CALENDAR_EVENT_INVITE ADD CONSTRAINT FK_USER_CAL_EVT_INVT_BY
    FOREIGN KEY (APP_SID, INVITED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.CALENDAR_EVENT_INVITE ADD CONSTRAINT FK_USR_CAL_EVT_INVITE
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.CALENDAR_EVENT_OWNER ADD CONSTRAINT FK_CAL_EVT_CAL_EVT_OWN
    FOREIGN KEY (APP_SID, CALENDAR_EVENT_ID)
    REFERENCES CSR.CALENDAR_EVENT(APP_SID, CALENDAR_EVENT_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.CALENDAR_EVENT_OWNER ADD CONSTRAINT FK_USER_CAL_EVT_OWN_ADD
    FOREIGN KEY (APP_SID, ADDED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.CALENDAR_EVENT_OWNER ADD CONSTRAINT FK_USER_CAL_EVT_OWNER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.CERTIFICATION ADD CONSTRAINT FK_CERT_CERT_TYPE_ID
	FOREIGN KEY (CERTIFICATION_TYPE_ID)
	REFERENCES CSR.CERTIFICATION_TYPE(CERTIFICATION_TYPE_ID)
;

ALTER TABLE CSR.CERTIFICATION_LEVEL ADD CONSTRAINT FK_CERT_LEVEL_CERT
	FOREIGN KEY (CERTIFICATION_ID)
	REFERENCES CSR.CERTIFICATION(CERTIFICATION_ID)
;

ALTER TABLE CSR.CHAIN_TPL_DELEGATION ADD CONSTRAINT RefCH_TPL_DELEG_DELEG
    FOREIGN KEY (APP_SID, TPL_DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.CLIENT_UTIL_SCRIPT_PARAM ADD CONSTRAINT FK_CLIENT_UTIL_PARAM_SCRIPT
    FOREIGN KEY (APP_SID, CLIENT_UTIL_SCRIPT_ID)
    REFERENCES CSR.CLIENT_UTIL_SCRIPT(APP_SID, CLIENT_UTIL_SCRIPT_ID)
;



ALTER TABLE CSR.CMS_ALERT_TYPE ADD CONSTRAINT FK_CMS_ALERT_TYPE_CAT
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;



ALTER TABLE CSR.CMS_FIELD_CHANGE_ALERT ADD CONSTRAINT FK_CMS_FLD_CHG_ALT_CS_ALT_TYP
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;

ALTER TABLE CSR.CMS_FIELD_CHANGE_ALERT ADD CONSTRAINT FK_CMS_FLD_CHG_ALT_CSR_USR
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.CMS_TAB_ALERT_TYPE ADD CONSTRAINT FK_CST_ALRT_TYPE_TAB_ALRT_TYPE
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID) ON DELETE CASCADE
;


ALTER TABLE CSR.COMPLIANCE_ITEM ADD CONSTRAINT fk_compliance_item_ci_status
		FOREIGN KEY (compliance_item_status_id)
		REFERENCES csr.compliance_item_status (compliance_item_status_id)
;

ALTER TABLE CSR.COMPLIANCE_ITEM ADD CONSTRAINT fk_compliance_item_ci_source
	FOREIGN KEY (source)
	REFERENCES csr.compliance_item_source (COMPLIANCE_ITEM_SOURCE_ID)
;

ALTER TABLE csr.compliance_permit_sub_type ADD CONSTRAINT fk_permit_sub_type
	FOREIGN KEY (app_sid, permit_type_id)
	REFERENCES csr.compliance_permit_type (app_sid, permit_type_id);

ALTER TABLE csr.compliance_condition_sub_type ADD CONSTRAINT fk_condition_sub_type
	FOREIGN KEY (app_sid, condition_type_id)
	REFERENCES csr.compliance_condition_type (app_sid, condition_type_id);

ALTER TABLE csr.compliance_permit ADD CONSTRAINT fk_compliance_permit_region
	FOREIGN KEY (app_sid, region_sid) 
	REFERENCES csr.region (app_sid, region_sid);

ALTER TABLE csr.compliance_permit ADD CONSTRAINT fk_compliance_permit_type
	FOREIGN KEY (app_sid, permit_type_id)
	REFERENCES csr.compliance_permit_type (app_sid, permit_type_id);

ALTER TABLE csr.compliance_permit ADD CONSTRAINT fk_compliance_permit_sub_type
	FOREIGN KEY (app_sid, permit_type_id, permit_sub_type_id)
	REFERENCES csr.compliance_permit_sub_type (app_sid, permit_type_id, permit_sub_type_id);

ALTER TABLE csr.compliance_permit ADD CONSTRAINT fk_compliance_activity_type
	FOREIGN KEY (app_sid, activity_type_id)
	REFERENCES csr.compliance_activity_type (app_sid, activity_type_id);
	
ALTER TABLE csr.compliance_permit ADD CONSTRAINT fk_compl_permit_activ_sub_type
		FOREIGN KEY (app_sid, activity_type_id, activity_sub_type_id)
		REFERENCES csr.compliance_activity_sub_type (app_sid, activity_type_id, activity_sub_type_id);
		
ALTER TABLE csr.compliance_permit ADD CONSTRAINT fk_comp_permit_created_by
	FOREIGN KEY (app_sid, created_by) 
	REFERENCES csr.csr_user (app_sid, csr_user_sid);

ALTER TABLE csr.compliance_permit ADD CONSTRAINT fk_compl_perm_flow_item_id
	FOREIGN KEY (app_sid, flow_item_id)
	REFERENCES csr.flow_item (app_sid, flow_item_id);

ALTER TABLE csr.compliance_permit_application ADD CONSTRAINT fk_perm_appl_flow_item_id
	FOREIGN KEY (app_sid, flow_item_id)
	REFERENCES csr.flow_item (app_sid, flow_item_id);

ALTER TABLE csr.compliance_permit_application ADD CONSTRAINT fk_cpa_cp
	FOREIGN KEY (app_sid, permit_id)
	REFERENCES csr.compliance_permit (app_sid, compliance_permit_id);
	
ALTER TABLE csr.compliance_permit_application ADD CONSTRAINT fk_compl_permit_app_status_id 
	FOREIGN KEY (compl_permit_app_status_id) 
	REFERENCES csr.compl_permit_app_status (compl_permit_app_status_id);

ALTER TABLE csr.compliance_permit_application ADD CONSTRAINT fk_compl_permit_app_type_id
	FOREIGN KEY (app_sid, application_type_id)
	REFERENCES csr.compliance_application_type (app_sid, application_type_id);

ALTER TABLE csr.compliance_permit_condition ADD CONSTRAINT fk_compliance_permit_cond
	FOREIGN KEY (app_sid, compliance_item_id) 
	REFERENCES csr.compliance_item (app_sid, compliance_item_id);

ALTER TABLE csr.compliance_permit_condition ADD CONSTRAINT fk_cpc_cp
	FOREIGN KEY (app_sid, compliance_permit_id) 
	REFERENCES csr.compliance_permit (app_sid, compliance_permit_id);

ALTER TABLE csr.compliance_permit_condition ADD CONSTRAINT fk_compliance_permit_cond_type
	FOREIGN KEY (app_sid, condition_type_id)
	REFERENCES csr.compliance_condition_type (app_sid, condition_type_id);

ALTER TABLE csr.compliance_permit_condition ADD CONSTRAINT fk_cpc_cct
	FOREIGN KEY (app_sid, condition_type_id, condition_sub_type_id)
	REFERENCES csr.compliance_condition_sub_type (app_sid, condition_type_id, condition_sub_type_id);

ALTER TABLE csr.compliance_permit_condition ADD CONSTRAINT fk_cpc_copied_from
	FOREIGN KEY (app_sid, copied_from_id) 
	REFERENCES csr.compliance_permit_condition (app_sid, compliance_item_id);

ALTER TABLE CSR.COMPL_PERMIT_APPLICATION_PAUSE ADD CONSTRAINT FK_COMPL_PERM_APP_PAUSE_CPA
    FOREIGN KEY (APP_SID, PERMIT_APPLICATION_ID)
    REFERENCES CSR.COMPLIANCE_PERMIT_APPLICATION(APP_SID, PERMIT_APPLICATION_ID);

ALTER TABLE CSR.COMPLIANCE_PERMIT_SCORE ADD CONSTRAINT FK_COMPL_PERM_SCRE_COMPL_PERM
	FOREIGN KEY (APP_SID, COMPLIANCE_PERMIT_ID)
	REFERENCES CSR.COMPLIANCE_PERMIT (APP_SID, COMPLIANCE_PERMIT_ID);

ALTER TABLE CSR.COMPLIANCE_PERMIT_SCORE ADD CONSTRAINT FK_COMPL_PERM_SCRE_SCORE_TYPE 
	FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
	REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID);

ALTER TABLE CSR.COMPLIANCE_PERMIT_SCORE ADD CONSTRAINT FK_COMPL_PERM_SCRE_SCORE_THRSH 
	FOREIGN KEY (APP_SID, SCORE_THRESHOLD_ID)
	REFERENCES CSR.SCORE_THRESHOLD(APP_SID, SCORE_THRESHOLD_ID);
	
ALTER TABLE CSR.COMPLIANCE_PERMIT_SCORE ADD CONSTRAINT FK_COMPL_PERM_SCRE_CSR_USER 
	FOREIGN KEY (APP_SID, CHANGED_BY_USER_SID)
	REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);
	
ALTER TABLE csr.compliance_permit_tab ADD CONSTRAINT fk_compliance_permit_tb_plugin
    FOREIGN KEY (plugin_id, plugin_type_id)
    REFERENCES csr.plugin(plugin_id, plugin_type_id);

ALTER TABLE csr.compliance_permit_tab_group ADD CONSTRAINT fk_compliance_permit_tab_group
    FOREIGN KEY (app_sid, plugin_id)
    REFERENCES csr.compliance_permit_tab (app_sid, plugin_id);

ALTER TABLE csr.compliance_permit_tab_group ADD CONSTRAINT fk_compliance_permit_tab_role
    FOREIGN KEY (app_sid, role_sid)
    REFERENCES csr.role (app_sid, role_sid);

ALTER TABLE csr.comp_permit_sched_issue ADD CONSTRAINT fk_cmp_pmt_schd_iss_flow_item 
	FOREIGN KEY (app_sid, flow_item_id)
	REFERENCES csr.flow_item (app_sid, flow_item_id)
;
ALTER TABLE csr.comp_permit_sched_issue ADD CONSTRAINT fk_cmp_pmt_schd_iss_iss_sched 
	FOREIGN KEY (app_sid, issue_scheduled_task_id)
	REFERENCES csr.issue_scheduled_task (app_sid, issue_scheduled_task_id)
;
 
ALTER TABLE csr.compliance_item_rollout ADD CONSTRAINT fk_compliance_item_rollout
	FOREIGN KEY (app_sid, compliance_item_id) 
	REFERENCES csr.compliance_item (app_sid, compliance_item_id);

ALTER TABLE csr.compliance_item_rollout ADD CONSTRAINT fk_cir_sn
	FOREIGN KEY (country_group)
	REFERENCES csr.country_group(country_group_id);

ALTER TABLE csr.compliance_item_rollout ADD CONSTRAINT fk_cir_rg
	FOREIGN KEY (region_group)
	REFERENCES csr.region_group (region_group_id);

ALTER TABLE CSR.COMPLIANCE_ITEM_REGION ADD CONSTRAINT FK_CIR_R
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.COMPLIANCE_ITEM_REGION ADD CONSTRAINT FK_CIR_CI
    FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
    REFERENCES CSR.COMPLIANCE_ITEM(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE csr.flow_item_audit_log ADD CONSTRAINT fk_flow_itm_audit_log_user 
	FOREIGN KEY (app_sid, user_sid)
	REFERENCES csr.csr_user (app_sid, csr_user_sid)
;

ALTER TABLE CSR.COMPLIANCE_ITEM_TAG ADD CONSTRAINT FK_CIT_CI
    FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
    REFERENCES CSR.COMPLIANCE_ITEM(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMPLIANCE_ITEM_TAG ADD CONSTRAINT FK_CIT_T
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_COMPLIANCE_OPTIONS_ST
    FOREIGN KEY (APP_SID, QUICK_SURVEY_TYPE_ID)
    REFERENCES CSR.QUICK_SURVEY_TYPE(APP_SID, QUICK_SURVEY_TYPE_ID)
;

ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_CO_REQ_FLOW
    FOREIGN KEY (APP_SID, REQUIREMENT_FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_CO_REG_FLOW
    FOREIGN KEY (APP_SID, REGULATION_FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_CO_PER_FLOW
	FOREIGN KEY (APP_SID, PERMIT_FLOW_SID)
	REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_CO_APP_FLOW
	FOREIGN KEY (APP_SID, APPLICATION_FLOW_SID)
	REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_CO_CON_FLOW
	FOREIGN KEY (APP_SID, CONDITION_FLOW_SID)
	REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_COMP_OPTIONS_SCORE_TYPE
	FOREIGN KEY (app_sid, score_type_id)
	REFERENCES csr.score_type(app_sid, score_type_id)
;

ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_COMP_OPTIONS_DOC_LIB_SID
	FOREIGN KEY (APP_SID, PERMIT_DOC_LIB_SID)
	REFERENCES CSR.DOC_LIBRARY (APP_SID, DOC_LIBRARY_SID)
;

ALTER TABLE CSR.COMPLIANCE_OPTIONS ADD CONSTRAINT FK_COMP_OPT_PERM_SCORE_TYPE
	FOREIGN KEY (APP_SID, PERMIT_SCORE_TYPE_ID)
	REFERENCES CSR.SCORE_TYPE (APP_SID, SCORE_TYPE_ID)
;

ALTER TABLE CSR.COMPLIANCE_REGULATION ADD CONSTRAINT FK_CR_CR
    FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
    REFERENCES CSR.COMPLIANCE_ITEM(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMPLIANCE_ITEM_VERSION_LOG ADD CONSTRAINT FK_CIVL_CI
    FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
    REFERENCES CSR.COMPLIANCE_ITEM(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMPLIANCE_ITEM_VERSION_LOG ADD CONSTRAINT fk_civl_ci_ct 
	FOREIGN KEY (change_type)
	REFERENCES csr.compliance_item_change_type (compliance_item_change_type_id)
;

ALTER TABLE CSR.COMPLIANCE_AUDIT_LOG ADD CONSTRAINT FK_CAL_CI
	FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
	REFERENCES CSR.COMPLIANCE_ITEM(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMPLIANCE_REQ_REG ADD CONSTRAINT FK_CRR_REQ
    FOREIGN KEY (APP_SID, REQUIREMENT_ID)
    REFERENCES CSR.COMPLIANCE_REQUIREMENT(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMPLIANCE_REQ_REG ADD CONSTRAINT FK_CRR_REG
    FOREIGN KEY (APP_SID, REGULATION_ID)
    REFERENCES CSR.COMPLIANCE_REGULATION(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMPLIANCE_REGION_MAP ADD CONSTRAINT FK_COM_REG_MAP_CI_SRC
	FOREIGN KEY (COMPLIANCE_ITEM_SOURCE_ID)
	REFERENCES CSR.COMPLIANCE_ITEM_SOURCE(COMPLIANCE_ITEM_SOURCE_ID)
;

ALTER TABLE CSR.COMPLIANCE_REQUIREMENT ADD CONSTRAINT FK_CR_CI
    FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
    REFERENCES CSR.COMPLIANCE_ITEM(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMP_ITEM_REGION_SCHED_ISSUE ADD CONSTRAINT FK_CMP_ITM_SCHED_ISS_CMP_ITM 
	FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
	REFERENCES CSR.COMPLIANCE_ITEM_REGION (APP_SID, FLOW_ITEM_ID)
;
ALTER TABLE CSR.COMP_ITEM_REGION_SCHED_ISSUE ADD CONSTRAINT FK_CMP_ITM_SCHD_ISS_ISS_SCHED 
	FOREIGN KEY (APP_SID, ISSUE_SCHEDULED_TASK_ID)
	REFERENCES CSR.ISSUE_SCHEDULED_TASK (APP_SID, ISSUE_SCHEDULED_TASK_ID)
;

ALTER TABLE csr.compliance_region_tag ADD CONSTRAINT FK_COMP_REGION_TAG_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE csr.compliance_region_tag ADD CONSTRAINT FK_COMP_REGION_TAG_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.COMPLIANCE_ROOT_REGIONS ADD (
    CONSTRAINT FK_CRR_R
        FOREIGN KEY (APP_SID, REGION_SID)
        REFERENCES CSR.REGION (APP_SID, REGION_SID),
    CONSTRAINT FK_CRR_CRT
        FOREIGN KEY (APP_SID, REGION_TYPE)
        REFERENCES CSR.CUSTOMER_REGION_TYPE (APP_SID, REGION_TYPE)
);

ALTER TABLE csr.compliance_alert ADD CONSTRAINT fk_compliance_alert_csr_user
	FOREIGN KEY (app_sid, csr_user_sid)
	REFERENCES csr.csr_user(app_sid, csr_user_sid)
;

ALTER TABLE CSR.CORRESPONDENT ADD CONSTRAINT FK_CUSTOMER_CORR
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_COURSE_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_DELIVERY_METHOD_COURSE
    FOREIGN KEY (DELIVERY_METHOD_ID)
    REFERENCES CSR.DELIVERY_METHOD(DELIVERY_METHOD_ID)
;

ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_PLACE_COURSE
    FOREIGN KEY (APP_SID, DEFAULT_PLACE_ID)
    REFERENCES CSR.PLACE(APP_SID, PLACE_ID)
;

ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_PROVISION_COURSE
    FOREIGN KEY (PROVISION_ID)
    REFERENCES CSR.PROVISION(PROVISION_ID)
;

ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_QUICK_SURVEY_COURSE
    FOREIGN KEY (SURVEY_SID, APP_SID)
    REFERENCES CSR.QUICK_SURVEY(SURVEY_SID, APP_SID)
;

ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_QUICK_SURVEY_COURSE_QUIZ
    FOREIGN KEY (APP_SID, QUIZ_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_STATUS_COURSE
    FOREIGN KEY (STATUS_ID)
    REFERENCES CSR.STATUS(STATUS_ID)
;

ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_TRAINER_COURSE
    FOREIGN KEY (APP_SID, DEFAULT_TRAINER_ID)
    REFERENCES CSR.TRAINER(APP_SID, TRAINER_ID)
;

ALTER TABLE CSR.COURSE ADD CONSTRAINT FK_TRAINING_TYPE_COURSE
    FOREIGN KEY (APP_SID, COURSE_TYPE_ID)
    REFERENCES CSR.COURSE_TYPE(APP_SID, COURSE_TYPE_ID)
;



ALTER TABLE CSR.COURSE_FILE ADD CONSTRAINT FK_COURSE_FILE_CONN_COURSE
    FOREIGN KEY (APP_SID, COURSE_ID)
    REFERENCES CSR.COURSE(APP_SID, COURSE_ID)
;

ALTER TABLE CSR.COURSE_FILE ADD CONSTRAINT FK_COURSE_FILE_CONN_FILE
    FOREIGN KEY (APP_SID, COURSE_FILE_DATA_ID)
    REFERENCES CSR.COURSE_FILE_DATA(APP_SID, COURSE_FILE_DATA_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.COURSE_SCHEDULE ADD CONSTRAINT FK_COURSE_SCHEDULE_COURSE
    FOREIGN KEY (APP_SID, COURSE_ID)
    REFERENCES CSR.COURSE(APP_SID, COURSE_ID)
;

ALTER TABLE CSR.COURSE_SCHEDULE ADD CONSTRAINT FK_COURSE_SCHEDULE_EVENT
    FOREIGN KEY (APP_SID, CALENDAR_EVENT_ID)
    REFERENCES CSR.CALENDAR_EVENT(APP_SID, CALENDAR_EVENT_ID)
;

ALTER TABLE CSR.COURSE_SCHEDULE ADD CONSTRAINT FK_COURSE_SCHEDULE_PLACE
    FOREIGN KEY (APP_SID, PLACE_ID)
    REFERENCES CSR.PLACE(APP_SID, PLACE_ID)
;

ALTER TABLE CSR.COURSE_SCHEDULE ADD CONSTRAINT FK_COURSE_SCHEDULE_TRAINER
    FOREIGN KEY (APP_SID, TRAINER_ID)
    REFERENCES CSR.TRAINER(APP_SID, TRAINER_ID)
;



ALTER TABLE CSR.COURSE_TYPE ADD CONSTRAINT FK_COURSE_TYPE_USER_REL_TYPE
    FOREIGN KEY (APP_SID, USER_RELATIONSHIP_TYPE_ID)
    REFERENCES CSR.USER_RELATIONSHIP_TYPE(APP_SID, USER_RELATIONSHIP_TYPE_ID)
;



ALTER TABLE CSR.COURSE_TYPE_REGION ADD CONSTRAINT FK_CTR_COURSE_TYPE
    FOREIGN KEY (APP_SID, COURSE_TYPE_ID)
    REFERENCES CSR.COURSE_TYPE(APP_SID, COURSE_TYPE_ID)
;

ALTER TABLE CSR.COURSE_TYPE_REGION ADD CONSTRAINT FK_CTR_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.CSR_USER ADD CONSTRAINT FK_CSR_USER_LOGON_TYPE
    FOREIGN KEY (LAST_LOGON_TYPE_ID)
    REFERENCES CSR.LOGON_TYPE(LOGON_TYPE_ID)
;

ALTER TABLE CSR.CSR_USER ADD CONSTRAINT FK_PRIMARY_REGION_SID
    FOREIGN KEY (APP_SID, PRIMARY_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.CSR_USER ADD CONSTRAINT FK_USER_LINE_MANAGER
    FOREIGN KEY (APP_SID, LINE_MANAGER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.CSR_USER ADD CONSTRAINT RefCUSTOMER337
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.CURRENCY ADD CONSTRAINT FK_STD_CURRENCY_CURRENCY
    FOREIGN KEY (CURRENCY_CODE)
    REFERENCES CSR.STD_CURRENCY(CURRENCY_CODE)
;



ALTER TABLE CSR.CURRENT_SUPPLIER_SCORE ADD CONSTRAINT FK_CUR_SUP_LAST_SCORE
    FOREIGN KEY (APP_SID, LAST_SUPPLIER_SCORE_ID)
    REFERENCES CSR.SUPPLIER_SCORE_LOG(APP_SID, SUPPLIER_SCORE_ID)
;

ALTER TABLE CSR.CURRENT_SUPPLIER_SCORE ADD CONSTRAINT FK_CUR_SUP_SCORE_COMPANY
    FOREIGN KEY (APP_SID, COMPANY_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;

ALTER TABLE CSR.CURRENT_SUPPLIER_SCORE ADD CONSTRAINT FK_CUR_SUP_SCORE_SCORE_TYPE
    FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
    REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID)
;



ALTER TABLE CSR.CUSTOM_DISTANCE ADD CONSTRAINT FK_TRANS_MODE_CUS_DIST
    FOREIGN KEY (TRANSPORT_MODE_ID)
    REFERENCES CSR.TRANSPORT_MODE(TRANSPORT_MODE_ID)
;

ALTER TABLE CSR.CUSTOM_DISTANCE ADD CONSTRAINT RefCUSTOMER2085
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOM_DISTANCE ADD CONSTRAINT RefLOCATION2083
    FOREIGN KEY (ORIGIN_ID)
    REFERENCES CSR.LOCATION(LOCATION_ID)
;

ALTER TABLE CSR.CUSTOM_DISTANCE ADD CONSTRAINT RefLOCATION2084
    FOREIGN KEY (DESTINATION_ID)
    REFERENCES CSR.LOCATION(LOCATION_ID)
;



ALTER TABLE CSR.CUSTOM_FACTOR ADD CONSTRAINT FK_CUSTOM_FCTR_EGRID
    FOREIGN KEY (EGRID_REF)
    REFERENCES CSR.EGRID(EGRID_REF)
;

ALTER TABLE CSR.CUSTOM_FACTOR ADD CONSTRAINT FK_CUSTOM_FCTR_FACTOR_TYPE
    FOREIGN KEY (FACTOR_TYPE_ID)
    REFERENCES CSR.FACTOR_TYPE(FACTOR_TYPE_ID)
;

ALTER TABLE CSR.CUSTOM_FACTOR ADD CONSTRAINT FK_CUSTOM_FCTR_GAS_TYPE
    FOREIGN KEY (GAS_TYPE_ID)
    REFERENCES CSR.GAS_TYPE(GAS_TYPE_ID)
;

ALTER TABLE CSR.CUSTOM_FACTOR ADD CONSTRAINT FK_CUSTOM_FCTR_MEASURE_CONV
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.CUSTOM_FACTOR ADD CONSTRAINT FK_CUSTOM_FCTR_SET
    FOREIGN KEY (APP_SID, CUSTOM_FACTOR_SET_ID)
    REFERENCES CSR.CUSTOM_FACTOR_SET(APP_SID, CUSTOM_FACTOR_SET_ID)
;

ALTER TABLE CSR.CUSTOM_FACTOR ADD CONSTRAINT FK_CUSTOM_FCTR_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.CUSTOM_FACTOR_SET ADD CONSTRAINT FK_CSTM_FCTR_SET_FCTR_SET_GRP
    FOREIGN KEY (FACTOR_SET_GROUP_ID)
    REFERENCES CSR.FACTOR_SET_GROUP(FACTOR_SET_GROUP_ID)
;

ALTER TABLE CSR.CUSTOM_FACTOR_SET ADD CONSTRAINT FK_CUSTOM_FACTOR_SET_USER
    FOREIGN KEY (APP_SID, CREATED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.CUSTOM_LOCATION ADD CONSTRAINT RefCUSTOMER2090
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOM_LOCATION ADD CONSTRAINT RefLOCATION_TYPE2098
    FOREIGN KEY (LOCATION_TYPE_ID)
    REFERENCES CSR.LOCATION_TYPE(LOCATION_TYPE_ID)
;

ALTER TABLE CSR.CUSTOM_LOCATION ADD CONSTRAINT RefLOCATION2089
    FOREIGN KEY (LOCATION_ID)
    REFERENCES CSR.LOCATION(LOCATION_ID)
;



ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_CUST_FLOW
    FOREIGN KEY (APP_SID, PROPERTY_FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_CUST_IND_ROOT_IND
    FOREIGN KEY (APP_SID, IND_ROOT_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_CUST_SELFREG_APPR_CSR_USER
    FOREIGN KEY (APP_SID, SELF_REG_APPROVER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_CUSTOMER_CHEMICAL_FLOW_SID
    FOREIGN KEY (APP_SID, CHEMICAL_FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_CUSTOMER_MRG_SCENARIO_RUN
    FOREIGN KEY (APP_SID, MERGED_SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_CUSTOMER_REP_IND_ROOT_SID
    FOREIGN KEY (APP_SID, REPORTING_IND_ROOT_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_CUSTOMER_SCENARIO_RUN
    FOREIGN KEY (APP_SID, UNMERGED_SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_CUSTOMER_USER_DIRECTORY_TYP
    FOREIGN KEY (USER_DIRECTORY_TYPE_ID)
    REFERENCES CSR.USER_DIRECTORY_TYPE(USER_DIRECTORY_TYPE_ID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT FK_TRUCOST_PORTLET_TAB_ID
    FOREIGN KEY (APP_SID, TRUCOST_PORTLET_TAB_ID)
    REFERENCES CSR.TAB(APP_SID, TAB_ID)
;

ALTER TABLE CSR.CUSTOMER ADD CONSTRAINT RefREPORTING_PERIOD658
    FOREIGN KEY (APP_SID, CURRENT_REPORTING_PERIOD_SID)
    REFERENCES CSR.REPORTING_PERIOD(APP_SID, REPORTING_PERIOD_SID)
;



ALTER TABLE CSR.CUSTOMER_ALERT_TYPE ADD CONSTRAINT FK_STD_ALT_CUS_ALT
    FOREIGN KEY (STD_ALERT_TYPE_ID)
    REFERENCES CSR.STD_ALERT_TYPE(STD_ALERT_TYPE_ID)
;

ALTER TABLE CSR.CUSTOMER_ALERT_TYPE ADD CONSTRAINT RefCUSTOMER648
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOMER_ALERT_TYPE ADD CONSTRAINT FK_CUSTOMER_ALERT_TYPE_NOTIF_TYPE_ID
    FOREIGN KEY (APP_SID, NOTIFICATION_TYPE_ID)
    REFERENCES CSR.NOTIFICATION_TYPE(APP_SID, NOTIFICATION_TYPE_ID);
;

ALTER TABLE CSR.CUSTOMER_ALERT_TYPE_PARAM ADD CONSTRAINT FK_CUS_AL_TYPE_PARM_AL_TYPE
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;



ALTER TABLE CSR.CUSTOMER_FILE_UPLOAD_MIME_OPT ADD CONSTRAINT FK_FILE_UPLD_MIME_OPT_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.CUSTOMER_FILE_UPLOAD_TYPE_OPT ADD CONSTRAINT FK_FILE_UPLD_TYPE_OPT_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.CUSTOMER_FLOW_ALERT_CLASS ADD CONSTRAINT FK_CUSTOMER_CUSTFLALCLS
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOMER_FLOW_ALERT_CLASS ADD CONSTRAINT FK_FLALCLS_CUSTFLALCLS
    FOREIGN KEY (FLOW_ALERT_CLASS)
    REFERENCES CSR.FLOW_ALERT_CLASS(FLOW_ALERT_CLASS)
;



ALTER TABLE CSR.CUSTOMER_FLOW_CAPABILITY ADD CONSTRAINT FK_CUST_FLOW_CAP_ALERT_CLASS
    FOREIGN KEY (FLOW_ALERT_CLASS)
    REFERENCES CSR.FLOW_ALERT_CLASS(FLOW_ALERT_CLASS)
;



ALTER TABLE CSR.CUSTOMER_GEO_MAP_TAB_TYPE ADD CONSTRAINT FK_CUS_CUS_GEO_MT_TYPE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOMER_GEO_MAP_TAB_TYPE ADD CONSTRAINT FK_GEO_MAP_TT_CUS_GEOMAP_TT
    FOREIGN KEY (GEO_MAP_TAB_TYPE_ID)
    REFERENCES CSR.GEO_MAP_TAB_TYPE(GEO_MAP_TAB_TYPE_ID)
;



ALTER TABLE CSR.CUSTOMER_HELP_LANG ADD CONSTRAINT RefCUSTOMER420
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOMER_HELP_LANG ADD CONSTRAINT RefHELP_LANG412
    FOREIGN KEY (HELP_LANG_ID)
    REFERENCES CSR.HELP_LANG(HELP_LANG_ID)
;



ALTER TABLE CSR.CUSTOMER_INIT_SAVING_TYPE ADD CONSTRAINT FK_CUST_CUST_INIT_SAV_TYPE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOMER_INIT_SAVING_TYPE ADD CONSTRAINT FK_INIT_SAVT_CUST_SAVT
    FOREIGN KEY (SAVING_TYPE_ID)
    REFERENCES CSR.INITIATIVE_SAVING_TYPE(SAVING_TYPE_ID)
;



ALTER TABLE CSR.CUSTOMER_MAP ADD CONSTRAINT RefCUSTOMER1674
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.CUSTOMER_PORTLET ADD CONSTRAINT RefCUSTOMER795
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOMER_PORTLET ADD CONSTRAINT RefPORTLET796
    FOREIGN KEY (PORTLET_ID)
    REFERENCES CSR.PORTLET(PORTLET_ID)
;



ALTER TABLE CSR.CUSTOMER_REGION_TYPE ADD CONSTRAINT RefCUSTOMER1712
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CUSTOMER_REGION_TYPE ADD CONSTRAINT RefREGION_TYPE1711
    FOREIGN KEY (REGION_TYPE)
    REFERENCES CSR.REGION_TYPE(REGION_TYPE)
;



ALTER TABLE CSR.CUSTOMER_SAML_SSO_CERT ADD CONSTRAINT FK_CUSTOMER_SAML_SSO
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER_SAML_SSO(APP_SID)
;



ALTER TABLE CSR.DASHBOARD ADD CONSTRAINT RefCUSTOMER1013
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.DASHBOARD_ITEM ADD CONSTRAINT RefDASHBOARD_ITEM_COMPARISON57
    FOREIGN KEY (COMPARISON_TYPE)
    REFERENCES CSR.DASHBOARD_ITEM_COMPARISON_TYPE(COMPARISON_TYPE)
;

ALTER TABLE CSR.DASHBOARD_ITEM ADD CONSTRAINT RefDASHBOARD56
    FOREIGN KEY (APP_SID, DASHBOARD_SID)
    REFERENCES CSR.DASHBOARD(APP_SID, DASHBOARD_SID)
;

ALTER TABLE CSR.DASHBOARD_ITEM ADD CONSTRAINT RefDATAVIEW60
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.DASHBOARD_ITEM ADD CONSTRAINT RefIND59
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DASHBOARD_ITEM ADD CONSTRAINT RefREGION1180
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DATAVIEW ADD CONSTRAINT DATAVIEW_RIS_IND
    FOREIGN KEY (APP_SID, RANK_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DATAVIEW ADD CONSTRAINT FK_AGGREGATION_PERIOD
    FOREIGN KEY (APP_SID, AGGREGATION_PERIOD_ID)
    REFERENCES CSR.AGGREGATION_PERIOD(APP_SID, AGGREGATION_PERIOD_ID)
;

ALTER TABLE CSR.DATAVIEW ADD CONSTRAINT FK_CSR_USER_DATAVIEW
    FOREIGN KEY (APP_SID, LAST_UPDATED_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DATAVIEW ADD CONSTRAINT FK_DATAVIEW_PERIOD_INTERVAL
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.DATAVIEW ADD CONSTRAINT FK_DATAVIEW_TAG_GROUP
    FOREIGN KEY (APP_SID, REGION_GROUPING_TAG_GROUP)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.DATAVIEW ADD CONSTRAINT RefCUSTOMER970
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.DATAVIEW_ARBITRARY_PERIOD ADD CONSTRAINT FK_DATAVIEW_FROM_DATAVIEW_AP
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;



ALTER TABLE CSR.DATAVIEW_ARBITRARY_PERIOD_HIST ADD CONSTRAINT FK_DATAVIEW_FROM_DATAVIEW_APH
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;



ALTER TABLE CSR.DATAVIEW_HISTORY ADD CONSTRAINT FK_DATAVIEW_VN_CMR
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DATAVIEW_HISTORY ADD CONSTRAINT FK_DATAVIEW_VN_USER
    FOREIGN KEY (APP_SID, LAST_UPDATED_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.DATAVIEW_IND_DESCRIPTION ADD CONSTRAINT FK_DV_IND_DESC_DV_IND_MEMBER
    FOREIGN KEY (APP_SID, DATAVIEW_SID, POS)
    REFERENCES CSR.DATAVIEW_IND_MEMBER(APP_SID, DATAVIEW_SID, POS)
;



ALTER TABLE CSR.DATAVIEW_IND_MEMBER ADD CONSTRAINT RefCALCULATION_TYPE1605
    FOREIGN KEY (CALCULATION_TYPE_ID)
    REFERENCES CSR.CALCULATION_TYPE(CALCULATION_TYPE_ID)
;

ALTER TABLE CSR.DATAVIEW_IND_MEMBER ADD CONSTRAINT RefDATAVIEW1606
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.DATAVIEW_IND_MEMBER ADD CONSTRAINT RefIND1604
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DATAVIEW_IND_MEMBER ADD CONSTRAINT RefIND1641
    FOREIGN KEY (APP_SID, NORMALIZATION_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DATAVIEW_IND_MEMBER ADD CONSTRAINT RefMEASURE_CONVERSION1640
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.DATAVIEW_REGION_DESCRIPTION ADD CONSTRAINT FK_DV_REG_DESC_DV_REG_MEMBER
    FOREIGN KEY (APP_SID, DATAVIEW_SID, REGION_SID)
    REFERENCES CSR.DATAVIEW_REGION_MEMBER(APP_SID, DATAVIEW_SID, REGION_SID)
;



ALTER TABLE CSR.DATAVIEW_REGION_MEMBER ADD CONSTRAINT RefDATAVIEW1608
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.DATAVIEW_REGION_MEMBER ADD CONSTRAINT RefREGION1607
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DATAVIEW_SCENARIO_RUN ADD CONSTRAINT FK_DATAVIEW_SCN_RUN_DATAVIEW
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.DATAVIEW_SCENARIO_RUN ADD CONSTRAINT FK_DATAVIEW_SCN_RUN_SCN_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;



ALTER TABLE CSR.DATAVIEW_TREND ADD CONSTRAINT FK_DATAVIEW_TREND_DATAVIEW
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.DATAVIEW_TREND ADD CONSTRAINT FK_DATAVIEW_TREND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DATAVIEW_TREND ADD CONSTRAINT FK_DATAVIEW_TREND_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DATAVIEW_ZONE ADD CONSTRAINT RefDATAVIEW1387
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.DATAVIEW_ZONE ADD CONSTRAINT RefIND1383
    FOREIGN KEY (APP_SID, START_VAL_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DATAVIEW_ZONE ADD CONSTRAINT RefIND1385
    FOREIGN KEY (APP_SID, END_VAL_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DATAVIEW_ZONE ADD CONSTRAINT RefREGION1384
    FOREIGN KEY (APP_SID, START_VAL_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.DATAVIEW_ZONE ADD CONSTRAINT RefREGION1386
    FOREIGN KEY (APP_SID, END_VAL_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DEFAULT_ALERT_FRAME_BODY ADD CONSTRAINT FK_DALRT_FRM_BDY_DALRT_FRM
    FOREIGN KEY (DEFAULT_ALERT_FRAME_ID)
    REFERENCES CSR.DEFAULT_ALERT_FRAME(DEFAULT_ALERT_FRAME_ID)
;



ALTER TABLE CSR.DEFAULT_ALERT_TEMPLATE ADD CONSTRAINT FK_DEF_ALRT_TPL_ALRT_TYP
    FOREIGN KEY (STD_ALERT_TYPE_ID)
    REFERENCES CSR.STD_ALERT_TYPE(STD_ALERT_TYPE_ID)
;

ALTER TABLE CSR.DEFAULT_ALERT_TEMPLATE ADD CONSTRAINT FK_DEF_ALRT_TPL_DEF_ALRT_FRAME
    FOREIGN KEY (DEFAULT_ALERT_FRAME_ID)
    REFERENCES CSR.DEFAULT_ALERT_FRAME(DEFAULT_ALERT_FRAME_ID)
;



ALTER TABLE CSR.DEFAULT_ALERT_TEMPLATE_BODY ADD CONSTRAINT FK_DALRT_TPL_BDY_DALRT_TPL
    FOREIGN KEY (STD_ALERT_TYPE_ID)
    REFERENCES CSR.DEFAULT_ALERT_TEMPLATE(STD_ALERT_TYPE_ID)
;



ALTER TABLE CSR.DEFAULT_INITIATIVE_USER_STATE ADD CONSTRAINT FK_FLST_DEF_INIT_USER_FLST
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID)
;



ALTER TABLE CSR.DEFAULT_RSS_FEED ADD CONSTRAINT RefCUSTOMER880
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DEFAULT_RSS_FEED ADD CONSTRAINT RefRSS_CACHE881
    FOREIGN KEY (RSS_URL)
    REFERENCES CSR.RSS_CACHE(RSS_URL)
;



ALTER TABLE CSR.DEGREEDAY_ACCOUNT ADD CONSTRAINT FK_DEGREEDAY_SETTINGS_ACCOUNT
    FOREIGN KEY (ACCOUNT_NAME)
    REFERENCES CSR.DEGREEDAY_ACCOUNT(ACCOUNT_NAME)
;



ALTER TABLE CSR.DEGREEDAY_REGION ADD CONSTRAINT FK_DEGREEDAY_REGION_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DEGREEDAY_SETTINGS ADD CONSTRAINT FK_DEGREEDAY_SETTINGS_IND_1
    FOREIGN KEY (APP_SID, HEATING_BASE_TEMP_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DEGREEDAY_SETTINGS ADD CONSTRAINT FK_DEGREEDAY_SETTINGS_IND_2
    FOREIGN KEY (APP_SID, COOLING_BASE_TEMP_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DEGREEDAY_SETTINGS ADD CONSTRAINT FK_DEGREEDAY_SETTINGS_IND_3
    FOREIGN KEY (APP_SID, HEATING_DEGREE_DAYS_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DEGREEDAY_SETTINGS ADD CONSTRAINT FK_DEGREEDAY_SETTINGS_IND_4
    FOREIGN KEY (APP_SID, COOLING_DEGREE_DAYS_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DEGREEDAY_SETTINGS ADD CONSTRAINT FK_DEGREEDAY_SETTINGS_IND_5
    FOREIGN KEY (APP_SID, HEATING_AVERAGE_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DEGREEDAY_SETTINGS ADD CONSTRAINT FK_DEGREEDAY_SETTINGS_IND_6
    FOREIGN KEY (APP_SID, COOLING_AVERAGE_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.DELEG_DATA_CHANGE_ALERT ADD CONSTRAINT FK_DELEG_D_CHG_ALT_NOTIFY_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEG_DATA_CHANGE_ALERT ADD CONSTRAINT FK_DELEG_D_CHG_ALT_RAISED_USER
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEG_DATA_CHANGE_ALERT ADD CONSTRAINT FK_DELEG_D_CHG_ALT_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;



ALTER TABLE CSR.DELEG_GRID_VARIANCE ADD CONSTRAINT FK_DEL_GRID_VAR_IND
    FOREIGN KEY (APP_SID, GRID_IND_SID)
    REFERENCES CSR.DELEGATION_GRID(APP_SID, IND_SID)
;



ALTER TABLE CSR.DELEG_IND_FORM_EXPR ADD CONSTRAINT FK_DLG_IND_DLG_IND_FRM_EXPR
    FOREIGN KEY (APP_SID, DELEGATION_SID, IND_SID)
    REFERENCES CSR.DELEGATION_IND(APP_SID, DELEGATION_SID, IND_SID)
;

ALTER TABLE CSR.DELEG_IND_FORM_EXPR ADD CONSTRAINT FK_FRM_XPR_DLG_IND_FRM_XPR
    FOREIGN KEY (APP_SID, FORM_EXPR_ID)
    REFERENCES CSR.FORM_EXPR(APP_SID, FORM_EXPR_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.DELEG_IND_GROUP ADD CONSTRAINT FK_DLG_DLG_IND_GRP
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.DELEG_IND_GROUP_MEMBER ADD CONSTRAINT FK_DL_IN_GR_DIDIG
    FOREIGN KEY (APP_SID, DELEG_IND_GROUP_ID, DELEGATION_SID)
    REFERENCES CSR.DELEG_IND_GROUP(APP_SID, DELEG_IND_GROUP_ID, DELEGATION_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.DELEG_IND_GROUP_MEMBER ADD CONSTRAINT FK_DLG_IND_DG_ID_DG_ID_GR
    FOREIGN KEY (APP_SID, DELEGATION_SID, IND_SID)
    REFERENCES CSR.DELEGATION_IND(APP_SID, DELEGATION_SID, IND_SID)
;



ALTER TABLE CSR.DELEG_META_ROLE_IND_SELECTION ADD CONSTRAINT FK_DELEG_META_ROLE_IND_DELG
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEG_META_ROLE_IND_SELECTION ADD CONSTRAINT RefIND3427
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.DELEG_PLAN ADD CONSTRAINT FK_DELEG_PLAN_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.DELEG_PLAN ADD CONSTRAINT RefCUSTOMER2048
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.DELEG_PLAN_APPLIED ADD CONSTRAINT FK_DELEG_PLAN_DP_APPLIED
    FOREIGN KEY (APP_SID, DELEG_PLAN_SID)
    REFERENCES CSR.DELEG_PLAN(APP_SID, DELEG_PLAN_SID)
;

ALTER TABLE CSR.DELEG_PLAN_APPLIED ADD CONSTRAINT FK_USER_DELEG_PLAN_LOG
    FOREIGN KEY (APP_SID, APPLIED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.DELEG_PLAN_COL ADD CONSTRAINT FK_CUS_DELEG_PLAN_COL
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DELEG_PLAN_COL ADD CONSTRAINT FK_DELEG_PLAN_DLG_PLN_COL
    FOREIGN KEY (APP_SID, DELEG_PLAN_SID)
    REFERENCES CSR.DELEG_PLAN(APP_SID, DELEG_PLAN_SID)
;

ALTER TABLE CSR.DELEG_PLAN_COL ADD CONSTRAINT FK_DLG_PLN_COL_DLG_DPC
    FOREIGN KEY (APP_SID, DELEG_PLAN_COL_DELEG_ID)
    REFERENCES CSR.DELEG_PLAN_COL_DELEG(APP_SID, DELEG_PLAN_COL_DELEG_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.DELEG_PLAN_COL ADD CONSTRAINT FK_DLG_PLN_COL_SRV_DPC
    FOREIGN KEY (APP_SID, DELEG_PLAN_COL_SURVEY_ID)
    REFERENCES CSR.DELEG_PLAN_COL_SURVEY(APP_SID, DELEG_PLAN_COL_SURVEY_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.DELEG_PLAN_COL_DELEG ADD CONSTRAINT FK_CUS_DLG_PLN_COL_DLG
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DELEG_PLAN_COL_DELEG ADD CONSTRAINT FK_MSTR_DLG_DLG_PLN_COL_DLG
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.MASTER_DELEG(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.DELEG_PLAN_COL_SURVEY ADD CONSTRAINT FK_CUS_DLG_PLN_COL_SRV
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


ALTER TABLE CSR.DELEG_PLAN_DATE_SCHEDULE ADD CONSTRAINT FK_DLG_PLN_DATE_SCHDL_DLG_PLN
    FOREIGN KEY (APP_SID, DELEG_PLAN_SID)
    REFERENCES CSR.DELEG_PLAN(APP_SID, DELEG_PLAN_SID)
;

ALTER TABLE CSR.DELEG_PLAN_DATE_SCHEDULE ADD CONSTRAINT FK_DLG_PLN_SCHDL_DELEG_SCHDL
    FOREIGN KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID)
    REFERENCES CSR.DELEGATION_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

ALTER TABLE CSR.DELEG_PLAN_DATE_SCHEDULE ADD CONSTRAINT FK_DLG_PLN_SCHDL_DLG_PLN_COL
    FOREIGN KEY (APP_SID, DELEG_PLAN_COL_ID)
    REFERENCES CSR.DELEG_PLAN_COL(APP_SID, DELEG_PLAN_COL_ID)
;

ALTER TABLE CSR.DELEG_PLAN_DATE_SCHEDULE ADD CONSTRAINT FK_DLG_PLN_SCHDL_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.DELEG_PLAN_DELEG_REGION ADD CONSTRAINT FK_DEL_PLAN_DEL_REG_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.DELEG_PLAN_DELEG_REGION ADD CONSTRAINT FK_DLG_PL_COL_DLG_DPDR
    FOREIGN KEY (APP_SID, DELEG_PLAN_COL_DELEG_ID)
    REFERENCES CSR.DELEG_PLAN_COL_DELEG(APP_SID, DELEG_PLAN_COL_DELEG_ID)
;

ALTER TABLE CSR.DELEG_PLAN_DELEG_REGION ADD CONSTRAINT FK_REG_DLG_PLAN_DLG_REG
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DELEG_PLAN_DELEG_REGION_DELEG ADD CONSTRAINT FK_DELEGPLNDELEGREGDLG_DELEG
    FOREIGN KEY (APP_SID, MAPS_TO_ROOT_DELEG_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEG_PLAN_DELEG_REGION_DELEG ADD CONSTRAINT FK_DLG_PLN_DLG_REG_DLG_REG
    FOREIGN KEY (APP_SID, APPLIED_TO_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.DELEG_PLAN_DELEG_REGION_DELEG ADD CONSTRAINT FK_DLGPLDLGREGDLG_DLGPLDLGREG
    FOREIGN KEY (APP_SID, DELEG_PLAN_COL_DELEG_ID, REGION_SID)
    REFERENCES CSR.DELEG_PLAN_DELEG_REGION(APP_SID, DELEG_PLAN_COL_DELEG_ID, REGION_SID)
;



ALTER TABLE CSR.DELEG_PLAN_JOB ADD CONSTRAINT FK_DELEG_PLAN_JOB_BATCH_JOB
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;

ALTER TABLE CSR.DELEG_PLAN_JOB ADD CONSTRAINT FK_DELEG_PLAN_JOB_DELEG
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEG_PLAN_JOB ADD CONSTRAINT FK_DELEG_PLAN_JOB_DELEG_PLAN
    FOREIGN KEY (APP_SID, DELEG_PLAN_SID)
    REFERENCES CSR.DELEG_PLAN(APP_SID, DELEG_PLAN_SID)
;



ALTER TABLE CSR.DELEG_PLAN_REGION ADD CONSTRAINT RefDELEG_PLAN2056
    FOREIGN KEY (APP_SID, DELEG_PLAN_SID)
    REFERENCES CSR.DELEG_PLAN(APP_SID, DELEG_PLAN_SID)
;

ALTER TABLE CSR.DELEG_PLAN_REGION ADD CONSTRAINT RefREGION2055
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DELEG_PLAN_ROLE ADD CONSTRAINT RefDELEG_PLAN2058
    FOREIGN KEY (APP_SID, DELEG_PLAN_SID)
    REFERENCES CSR.DELEG_PLAN(APP_SID, DELEG_PLAN_SID)
;

ALTER TABLE CSR.DELEG_PLAN_ROLE ADD CONSTRAINT RefROLE2057
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.DELEG_PLAN_SURVEY_REGION ADD CONSTRAINT FK_DEL_PLAN_SURV_REG_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.DELEG_PLAN_SURVEY_REGION ADD CONSTRAINT FK_DLG_PL_COL_SRV_DPSR
    FOREIGN KEY (APP_SID, DELEG_PLAN_COL_SURVEY_ID)
    REFERENCES CSR.DELEG_PLAN_COL_SURVEY(APP_SID, DELEG_PLAN_COL_SURVEY_ID)
;

ALTER TABLE CSR.DELEG_PLAN_SURVEY_REGION ADD CONSTRAINT FK_REG_DLG_PLAN_SRV_REG
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DELEG_REPORT ADD CONSTRAINT FK_DELEG_REPORT_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;



ALTER TABLE CSR.DELEG_REPORT_DELEG_PLAN ADD CONSTRAINT FK_DELEG_RPT_DLG_PLAN_DLG_PLAN
    FOREIGN KEY (APP_SID, DELEG_PLAN_SID)
    REFERENCES CSR.DELEG_PLAN(APP_SID, DELEG_PLAN_SID)
;

ALTER TABLE CSR.DELEG_REPORT_DELEG_PLAN ADD CONSTRAINT FK_DLG_RPT_DLG_PLAN_DLG_RPT
    FOREIGN KEY (APP_SID, DELEG_REPORT_SID)
    REFERENCES CSR.DELEG_REPORT(APP_SID, DELEG_REPORT_SID)
;



ALTER TABLE CSR.DELEG_REPORT_REGION ADD CONSTRAINT FK_DELEG_REPORT_REGION
    FOREIGN KEY (APP_SID, ROOT_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.DELEG_REPORT_REGION ADD CONSTRAINT FK_DELEG_RPT_DELEG_RPT_REGION
    FOREIGN KEY (APP_SID, DELEG_REPORT_SID)
    REFERENCES CSR.DELEG_REPORT(APP_SID, DELEG_REPORT_SID)
;



ALTER TABLE CSR.DELEGATION ADD CONSTRAINT FK_DELEG_DELEG_DATE_SCHDL
    FOREIGN KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID)
    REFERENCES CSR.DELEGATION_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

ALTER TABLE CSR.DELEGATION ADD CONSTRAINT FK_DELEG_DELEGATION_LAYOUT
    FOREIGN KEY (APP_SID, LAYOUT_ID)
    REFERENCES CSR.DELEGATION_LAYOUT(APP_SID, LAYOUT_ID)
;

ALTER TABLE CSR.DELEGATION ADD CONSTRAINT FK_DELEG_TAG_GROUP_ID
    FOREIGN KEY (APP_SID, TAG_VISIBILITY_MATRIX_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.DELEGATION ADD CONSTRAINT FK_DELEGATION_PERIOD_INTERVAL
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.DELEGATION ADD CONSTRAINT RefCSR_USER162
    FOREIGN KEY (APP_SID, CREATED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEGATION ADD CONSTRAINT RefDELEGATION1428
    FOREIGN KEY (APP_SID, MASTER_DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.DELEGATION_CHANGE_ALERT ADD CONSTRAINT FK_DELEG_CHG_ALRT_NOTIFY_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEGATION_CHANGE_ALERT ADD CONSTRAINT FK_DELEG_CHG_ALRT_RAISED_USER
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEGATION_CHANGE_ALERT ADD CONSTRAINT FK_DELEG_CHG_ALRT_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;



ALTER TABLE CSR.DELEGATION_COMMENT ADD CONSTRAINT FK_POSTIT_DELEG_COMMENT
    FOREIGN KEY (APP_SID, POSTIT_ID)
    REFERENCES CSR.POSTIT(APP_SID, POSTIT_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.DELEGATION_COMMENT ADD CONSTRAINT RefDELEGATION1882
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.DELEGATION_DATE_SCHEDULE ADD CONSTRAINT FK_DELEG_DATE_SCHDL_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.DELEGATION_DESCRIPTION ADD CONSTRAINT FK_DELEGATION_DESCRIPTION
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.DELEGATION_EDITED_ALERT ADD CONSTRAINT FK_DELEG_EDIT_ALRT_NOTIFY_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEGATION_EDITED_ALERT ADD CONSTRAINT FK_DELEG_EDIT_ALRT_RAISED_USER
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEGATION_EDITED_ALERT ADD CONSTRAINT FK_DELEG_EDIT_ALRT_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;



ALTER TABLE CSR.DELEGATION_GRID ADD CONSTRAINT FK_DELEGATION_GRID_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DELEGATION_GRID ADD CONSTRAINT RefCUSTOMER1707
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.DELEGATION_GRID_AGGREGATE_IND ADD CONSTRAINT FK_DELEG_GRID_AGGR_TO_IND
    FOREIGN KEY (APP_SID, AGGREGATE_TO_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.DELEGATION_GRID_AGGREGATE_IND ADD CONSTRAINT FK_DELEG_GRID_AGR_DELEG_GRID
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.DELEGATION_GRID(APP_SID, IND_SID)
;

ALTER TABLE CSR.DELEGATION_GRID_AGGREGATE_IND ADD CONSTRAINT RefIND2117
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.DELEGATION_IND ADD CONSTRAINT FK_DELEG_IND_VAR_EXPL_GR
    FOREIGN KEY (APP_SID, VAR_EXPL_GROUP_ID)
    REFERENCES CSR.VAR_EXPL_GROUP(APP_SID, VAR_EXPL_GROUP_ID)
;

ALTER TABLE CSR.DELEGATION_IND ADD CONSTRAINT RefDELEGATION100
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEGATION_IND ADD CONSTRAINT RefIND101
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.DELEGATION_IND_COND ADD CONSTRAINT RefDELEGATION_IND1472
    FOREIGN KEY (APP_SID, DELEGATION_SID, IND_SID)
    REFERENCES CSR.DELEGATION_IND(APP_SID, DELEGATION_SID, IND_SID)
;



ALTER TABLE CSR.DELEGATION_IND_COND_ACTION ADD CONSTRAINT RefDELEGATION_IND_COND1473
    FOREIGN KEY (APP_SID, DELEGATION_SID, IND_SID, DELEGATION_IND_COND_ID)
    REFERENCES CSR.DELEGATION_IND_COND(APP_SID, DELEGATION_SID, IND_SID, DELEGATION_IND_COND_ID)
;

ALTER TABLE CSR.DELEGATION_IND_COND_ACTION ADD CONSTRAINT RefDELEGATION_IND_TAG_LIST1546
    FOREIGN KEY (APP_SID, DELEGATION_SID, TAG)
    REFERENCES CSR.DELEGATION_IND_TAG_LIST(APP_SID, DELEGATION_SID, TAG)
;



ALTER TABLE CSR.DELEGATION_IND_DESCRIPTION ADD CONSTRAINT FK_DELEG_IND_DESC_DELEG_IND
    FOREIGN KEY (APP_SID, DELEGATION_SID, IND_SID)
    REFERENCES CSR.DELEGATION_IND(APP_SID, DELEGATION_SID, IND_SID)
;



ALTER TABLE CSR.DELEGATION_IND_TAG ADD CONSTRAINT RefDELEGATION_IND_TAG_LIST1547
    FOREIGN KEY (APP_SID, DELEGATION_SID, TAG)
    REFERENCES CSR.DELEGATION_IND_TAG_LIST(APP_SID, DELEGATION_SID, TAG)
;

ALTER TABLE CSR.DELEGATION_IND_TAG ADD CONSTRAINT RefDELEGATION_IND1465
    FOREIGN KEY (APP_SID, DELEGATION_SID, IND_SID)
    REFERENCES CSR.DELEGATION_IND(APP_SID, DELEGATION_SID, IND_SID)
;



ALTER TABLE CSR.DELEGATION_IND_TAG_LIST ADD CONSTRAINT RefDELEGATION1548
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.DELEGATION_PLUGIN ADD CONSTRAINT FK_DELEG_PLUGIN_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DELEGATION_PLUGIN ADD CONSTRAINT FK_DELEG_PLUGIN_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.DELEGATION_POLICY ADD CONSTRAINT FK_DELEGATION
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.DELEGATION_REGION ADD CONSTRAINT RefDELEGATION103
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEGATION_REGION ADD CONSTRAINT RefREGION1183
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DELEGATION_REGION_DESCRIPTION ADD CONSTRAINT FK_DELEG_REG_DESC_DELEG_REG
    FOREIGN KEY (APP_SID, DELEGATION_SID, REGION_SID)
    REFERENCES CSR.DELEGATION_REGION(APP_SID, DELEGATION_SID, REGION_SID)
;



ALTER TABLE CSR.DELEGATION_ROLE ADD CONSTRAINT FK_DELEG_ROLE_DELEG
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEGATION_ROLE ADD CONSTRAINT FK_DELEG_ROLE_DELEG2
    FOREIGN KEY (APP_SID, INHERITED_FROM_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEGATION_ROLE ADD CONSTRAINT FK_DELEG_ROLE_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.DELEGATION_TAG ADD CONSTRAINT RefDELEGATION1476
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEGATION_TAG ADD CONSTRAINT RefTAG1549
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.DELEGATION_TERMINATED_ALERT ADD CONSTRAINT FK_DEL_TERM_ALERT_NOTIFY_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEGATION_TERMINATED_ALERT ADD CONSTRAINT FK_DEL_TERM_ALERT_RAISED_USER
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.DELEGATION_USER ADD CONSTRAINT RefCSR_USER104
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELEGATION_USER ADD CONSTRAINT FK_DELEG_USER_DELEG
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEGATION_USER ADD CONSTRAINT FK_DELEG_USER_DELEG2
    FOREIGN KEY (APP_SID, INHERITED_FROM_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.DELEGATION_USER_COVER ADD CONSTRAINT FK_DELEG_USER_COVER_UC
    FOREIGN KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
    REFERENCES CSR.USER_COVER(APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
;

ALTER TABLE CSR.DELEGATION_USER_COVER ADD CONSTRAINT FK_DUC_DELEGATION
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.DELETED_DELEGATION ADD CONSTRAINT RefCSR_USER1090
    FOREIGN KEY (APP_SID, DELETED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DELETED_DELEGATION ADD CONSTRAINT RefCUSTOMER1091
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DELETED_DELEGATION_DESCRIPTION ADD CONSTRAINT FK_DEL_DELEGATION_DESCRIPTION
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELETED_DELEGATION(APP_SID, DELEGATION_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.DISTANCE ADD CONSTRAINT FK_TRANS_MODE_DIST
    FOREIGN KEY (TRANSPORT_MODE_ID)
    REFERENCES CSR.TRANSPORT_MODE(TRANSPORT_MODE_ID)
;

ALTER TABLE CSR.DISTANCE ADD CONSTRAINT RefLOCATION2091
    FOREIGN KEY (ORIGIN_ID)
    REFERENCES CSR.LOCATION(LOCATION_ID)
;

ALTER TABLE CSR.DISTANCE ADD CONSTRAINT RefLOCATION2092
    FOREIGN KEY (DESTINATION_ID)
    REFERENCES CSR.LOCATION(LOCATION_ID)
;



ALTER TABLE CSR.DIVISION ADD CONSTRAINT RefCUSTOMER1633
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DIVISION ADD CONSTRAINT RefREGION1615
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.DOC ADD CONSTRAINT RefCUSTOMER1006
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.DOC_CURRENT ADD CONSTRAINT RefCSR_USER683
    FOREIGN KEY (APP_SID, LOCKED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DOC_CURRENT ADD CONSTRAINT RefDOC_FOLDER685
    FOREIGN KEY (APP_SID, PARENT_SID)
    REFERENCES CSR.DOC_FOLDER(APP_SID, DOC_FOLDER_SID)
;

ALTER TABLE CSR.DOC_CURRENT ADD CONSTRAINT RefDOC_VERSION1884
    FOREIGN KEY (APP_SID, DOC_ID, PENDING_VERSION)
    REFERENCES CSR.DOC_VERSION(APP_SID, DOC_ID, VERSION)
;

ALTER TABLE CSR.DOC_CURRENT ADD CONSTRAINT RefDOC_VERSION684
    FOREIGN KEY (APP_SID, DOC_ID, VERSION)
    REFERENCES CSR.DOC_VERSION(APP_SID, DOC_ID, VERSION)
;



ALTER TABLE CSR.DOC_DATA ADD CONSTRAINT RefCUSTOMER1007
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.DOC_DOWNLOAD ADD CONSTRAINT RefCSR_USER451
    FOREIGN KEY (APP_SID, DOWNLOADED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DOC_DOWNLOAD ADD CONSTRAINT RefDOC_VERSION672
    FOREIGN KEY (APP_SID, DOC_ID, VERSION)
    REFERENCES CSR.DOC_VERSION(APP_SID, DOC_ID, VERSION)
;



ALTER TABLE CSR.DOC_FOLDER ADD CONSTRAINT RefCSR_USER1873
    FOREIGN KEY (APP_SID, APPROVER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DOC_FOLDER ADD CONSTRAINT RefCUSTOMER1008
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DOC_FOLDER ADD CONSTRAINT FK_DOC_FOLDER_PROPERTY
	FOREIGN KEY (APP_SID, PROPERTY_SID)
	REFERENCES CSR.ALL_PROPERTY (APP_SID, REGION_SID);

ALTER TABLE CSR.DOC_FOLDER_SUBSCRIPTION ADD CONSTRAINT FK_DOC_FOLD_DOC_FOLD_SUB
    FOREIGN KEY (APP_SID, DOC_FOLDER_SID)
    REFERENCES CSR.DOC_FOLDER(APP_SID, DOC_FOLDER_SID)
;

ALTER TABLE CSR.DOC_FOLDER_SUBSCRIPTION ADD CONSTRAINT FK_USER_DOC_FOLD_SUB
    FOREIGN KEY (APP_SID, NOTIFY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DOC_FOLDER ADD CONSTRAINT FK_DOC_FOLDER_PERMIT_ITEM_ID
	FOREIGN KEY (APP_SID, PERMIT_ITEM_ID)
	REFERENCES CSR.COMPLIANCE_PERMIT(APP_SID, COMPLIANCE_PERMIT_ID)
;

ALTER TABLE CSR.DOC_LIBRARY ADD CONSTRAINT RefCUSTOMER687
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.DOC_LIBRARY ADD CONSTRAINT RefDOC_FOLDER686
    FOREIGN KEY (APP_SID, DOCUMENTS_SID)
    REFERENCES CSR.DOC_FOLDER(APP_SID, DOC_FOLDER_SID)
;

ALTER TABLE CSR.DOC_LIBRARY ADD CONSTRAINT RefDOC_FOLDER688
    FOREIGN KEY (APP_SID, TRASH_FOLDER_SID)
    REFERENCES CSR.DOC_FOLDER(APP_SID, DOC_FOLDER_SID)
;



ALTER TABLE CSR.DOC_NOTIFICATION ADD CONSTRAINT RefCSR_USER694
    FOREIGN KEY (APP_SID, NOTIFY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DOC_NOTIFICATION ADD CONSTRAINT RefDOC_VERSION695
    FOREIGN KEY (APP_SID, DOC_ID, VERSION)
    REFERENCES CSR.DOC_VERSION(APP_SID, DOC_ID, VERSION)
;



ALTER TABLE CSR.DOC_SUBSCRIPTION ADD CONSTRAINT RefCSR_USER690
    FOREIGN KEY (APP_SID, NOTIFY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DOC_SUBSCRIPTION ADD CONSTRAINT RefDOC_CURRENT689
    FOREIGN KEY (APP_SID, DOC_ID)
    REFERENCES CSR.DOC_CURRENT(APP_SID, DOC_ID)
;


ALTER TABLE CSR.DOC_TYPE ADD CONSTRAINT FK_DOC_TYPE_DOC_LIB
    FOREIGN KEY (APP_SID, DOC_LIBRARY_SID)
    REFERENCES CSR.DOC_LIBRARY (APP_SID, DOC_LIBRARY_SID)
;


ALTER TABLE CSR.DOC_VERSION ADD CONSTRAINT RefCSR_USER676
    FOREIGN KEY (APP_SID, CHANGED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.DOC_VERSION ADD CONSTRAINT RefDOC_DATA675
    FOREIGN KEY (APP_SID, DOC_DATA_ID)
    REFERENCES CSR.DOC_DATA(APP_SID, DOC_DATA_ID)
;

ALTER TABLE CSR.DOC_VERSION ADD CONSTRAINT RefDOC691
    FOREIGN KEY (APP_SID, DOC_ID)
    REFERENCES CSR.DOC(APP_SID, DOC_ID)
;

ALTER TABLE CSR.DOC_VERSION ADD CONSTRAINT FK_DOC_VERSION_DOC_TYPE
    FOREIGN KEY (APP_SID, DOC_TYPE_ID)
    REFERENCES CSR.DOC_TYPE (APP_SID, DOC_TYPE_ID)
;

ALTER TABLE CSR.DOC_FOLDER_NAME_TRANSLATION ADD CONSTRAINT FK_DF_NAME_TRANSLATION_DF
	FOREIGN KEY (APP_SID, DOC_FOLDER_SID)
	REFERENCES CSR.DOC_FOLDER(APP_SID, DOC_FOLDER_SID)
;

ALTER TABLE CSR.DUFF_METER_REGION ADD CONSTRAINT FK_DUFMETERG_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.DUFF_METER_REGION ADD CONSTRAINT FK_DUFMETERG_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.DUFF_METER_REGION ADD CONSTRAINT FK_DUFMETERG_ORPMETDAT
	FOREIGN KEY (ERROR_TYPE_ID)
	REFERENCES CSR.DUFF_METER_ERROR_TYPE(ERROR_TYPE_ID)
;


ALTER TABLE CSR.EMISSION_FACTOR_PROFILE_FACTOR ADD CONSTRAINT FK_EM_FCTR_CUST_FCTR_SET_ID
    FOREIGN KEY (APP_SID, CUSTOM_FACTOR_SET_ID)
    REFERENCES CSR.CUSTOM_FACTOR_SET(APP_SID, CUSTOM_FACTOR_SET_ID)
;

ALTER TABLE CSR.EMISSION_FACTOR_PROFILE_FACTOR ADD CONSTRAINT FK_EMISSION_FACTOR_PROFILE
    FOREIGN KEY (APP_SID, PROFILE_ID)
    REFERENCES CSR.EMISSION_FACTOR_PROFILE(APP_SID, PROFILE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.EMISSION_FACTOR_PROFILE_FACTOR ADD CONSTRAINT FK_EMISSION_FCTR_EGRID
    FOREIGN KEY (EGRID_REF)
    REFERENCES CSR.EGRID(EGRID_REF)
;

ALTER TABLE CSR.EMISSION_FACTOR_PROFILE_FACTOR ADD CONSTRAINT FK_EMISSION_FCTR_FACTOR_SET_ID
    FOREIGN KEY (STD_FACTOR_SET_ID)
    REFERENCES CSR.STD_FACTOR_SET(STD_FACTOR_SET_ID)
;

ALTER TABLE CSR.EMISSION_FACTOR_PROFILE_FACTOR ADD CONSTRAINT FK_EMISSION_FCTR_FCTR_TYP_ID
    FOREIGN KEY (FACTOR_TYPE_ID)
    REFERENCES CSR.FACTOR_TYPE(FACTOR_TYPE_ID)
;

ALTER TABLE CSR.ENERGY_RATING ADD CONSTRAINT FK_ENERGY_RAT_LVL_CERT
	FOREIGN KEY (CERTIFICATION_TYPE_ID)
	REFERENCES CSR.CERTIFICATION_TYPE(CERTIFICATION_TYPE_ID)
;

ALTER TABLE CSR.ENHESA_COUNTRY_NAME ADD CONSTRAINT FK_ENH_COUNTRY_NM_COUNTRY
    FOREIGN KEY (COUNTRY_CODE)
    REFERENCES CSR.ENHESA_COUNTRY(COUNTRY_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_COUNTRY_NAME ADD CONSTRAINT FK_ENH_COUNTRY_NM_LANG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_COUNTRY_REGION ADD CONSTRAINT FK_ENH_COUNTRY_RG_COUNTRY
    FOREIGN KEY (COUNTRY_CODE)
    REFERENCES CSR.ENHESA_COUNTRY(COUNTRY_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_COUNTRY_REGION_NAME ADD CONSTRAINT FK_ENH_COU_REG_NM_ENH_COU_REG
    FOREIGN KEY (COUNTRY_CODE, REGION_CODE)
    REFERENCES CSR.ENHESA_COUNTRY_REGION(COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_COUNTRY_REGION_NAME ADD CONSTRAINT FK_ENH_COU_REG_NM_LANG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_HEADING_TEXT ADD CONSTRAINT FK_ENHESA_HEAD_TXT_HEADING
    FOREIGN KEY (APP_SID, HEADING_CODE)
    REFERENCES CSR.ENHESA_HEADING(APP_SID, HEADING_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_HEADING_TEXT ADD CONSTRAINT FK_ENHESA_HEAD_TXT_LANG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_INTRO ADD CONSTRAINT FK_ENHESA_INTRO_COUNTRY
    FOREIGN KEY (COUNTRY_CODE)
    REFERENCES CSR.ENHESA_COUNTRY(COUNTRY_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_INTRO ADD CONSTRAINT FK_ENHESA_INTRO_HEAD
    FOREIGN KEY (APP_SID, HEADING_CODE)
    REFERENCES CSR.ENHESA_HEADING(APP_SID, HEADING_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_INTRO ADD CONSTRAINT FK_ENHESA_INTRO_REGION
    FOREIGN KEY (COUNTRY_CODE, REGION_CODE)
    REFERENCES CSR.ENHESA_COUNTRY_REGION(COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_INTRO_TEXT ADD CONSTRAINT FK_ENHESA_INTRO_TEXT_INTRO
    FOREIGN KEY (APP_SID, INTRO_ID)
    REFERENCES CSR.ENHESA_INTRO(APP_SID, INTRO_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_INTRO_TEXT ADD CONSTRAINT FK_ENHESA_INTRO_TEXT_LANG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_KEYWORD_TEXT ADD CONSTRAINT FK_ENHESA_KEYWD_TEXT_KEYWD
    FOREIGN KEY (APP_SID, KEYWORD_ID)
    REFERENCES CSR.ENHESA_KEYWORD(APP_SID, KEYWORD_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_KEYWORD_TEXT ADD CONSTRAINT FK_ENHESA_KEYWORD_TEXT_LANG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_LANG_NAME ADD CONSTRAINT FK_ENH_LANG_NAME_LANG_1
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_REG ADD CONSTRAINT FK_ENHESA_REG_COUNTRY
    FOREIGN KEY (COUNTRY_CODE)
    REFERENCES CSR.ENHESA_COUNTRY(COUNTRY_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_REG_HEADING ADD CONSTRAINT FK_ENH_REG_HEAD_HEAD
    FOREIGN KEY (APP_SID, HEADING_CODE)
    REFERENCES CSR.ENHESA_HEADING(APP_SID, HEADING_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_REG_HEADING ADD CONSTRAINT FK_ENH_REG_HEAD_REG
    FOREIGN KEY (APP_SID, REG_ID)
    REFERENCES CSR.ENHESA_REG(APP_SID, REG_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_REG_REGION ADD CONSTRAINT FK_ENH_REG_REGION_REG
    FOREIGN KEY (APP_SID, REG_ID)
    REFERENCES CSR.ENHESA_REG(APP_SID, REG_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_REG_REGION ADD CONSTRAINT FK_ENH_REG_REGION_REGION
    FOREIGN KEY (COUNTRY_CODE, REGION_CODE)
    REFERENCES CSR.ENHESA_COUNTRY_REGION(COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_REG_TEXT ADD CONSTRAINT FK_ENHESA_REG_TEXT_REG
    FOREIGN KEY (APP_SID, REG_ID)
    REFERENCES CSR.ENHESA_REG(APP_SID, REG_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_RQMT ADD CONSTRAINT FK_ENHESA_RQMT_COUNTRY
    FOREIGN KEY (COUNTRY_CODE)
    REFERENCES CSR.ENHESA_COUNTRY(COUNTRY_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_RQMT ADD CONSTRAINT FK_ENHESA_RQMT_HEAD
    FOREIGN KEY (APP_SID, HEADING_CODE)
    REFERENCES CSR.ENHESA_HEADING(APP_SID, HEADING_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_RQMT ADD CONSTRAINT FK_ENHESA_RQMT_REGION
    FOREIGN KEY (COUNTRY_CODE, REGION_CODE)
    REFERENCES CSR.ENHESA_COUNTRY_REGION(COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_RQMT_DOMAIN ADD CONSTRAINT FK_ENHESA_RQMT_DOMAIN_RQMT
    FOREIGN KEY (APP_SID, QN_CODE)
    REFERENCES CSR.ENHESA_RQMT(APP_SID, QN_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_RQMT_REG_CITATION ADD CONSTRAINT FK_ENHESA_RQMT_REG_CIT_RQMT
    FOREIGN KEY (APP_SID, QN_CODE)
    REFERENCES CSR.ENHESA_RQMT(APP_SID, QN_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_RQMT_SUP_DOC ADD CONSTRAINT FK_ENHESA_RQMT_SUP_DOC_RQMT
    FOREIGN KEY (APP_SID, QN_CODE)
    REFERENCES CSR.ENHESA_RQMT(APP_SID, QN_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_RQMT_TEXT ADD CONSTRAINT FK_ENHESA_RQMT_TEXT_LANG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_RQMT_TEXT ADD CONSTRAINT FK_ENHESA_RQMT_TEXT_RQMT
    FOREIGN KEY (APP_SID, QN_CODE)
    REFERENCES CSR.ENHESA_RQMT(APP_SID, QN_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_SCRNGQN ADD CONSTRAINT FK_ENHESA_SCRNGQN_HEAD
    FOREIGN KEY (APP_SID, BASE_HEADING_CODE)
    REFERENCES CSR.ENHESA_HEADING(APP_SID, HEADING_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_SCRNGQN_HEADING ADD CONSTRAINT FK_ENHESA_SCRNGQN_HEAD_HEAD
    FOREIGN KEY (APP_SID, HEADING_CODE)
    REFERENCES CSR.ENHESA_HEADING(APP_SID, HEADING_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_SCRNGQN_HEADING ADD CONSTRAINT FK_ENHESA_SCRNGQN_HEAD_SCQN
    FOREIGN KEY (APP_SID, SCRNGQN_ID)
    REFERENCES CSR.ENHESA_SCRNGQN(APP_SID, SCRNGQN_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_SCRNGQN_TEXT ADD CONSTRAINT FK_ENHESA_SCRNGQN_TEXT_LANG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_SCRNGQN_TEXT ADD CONSTRAINT FK_ENHESA_SCRNGQN_TEXT_SCRNGQN
    FOREIGN KEY (APP_SID, SCRNGQN_ID)
    REFERENCES CSR.ENHESA_SCRNGQN(APP_SID, SCRNGQN_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_SITE_TYPE_HEADING ADD CONSTRAINT FK_SITE_TYP_HEADING_SITE_TYP
	FOREIGN KEY (APP_SID, SITE_TYPE_ID)
	REFERENCES CSR.ENHESA_SITE_TYPE (APP_SID, SITE_TYPE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_STATUS_NAME ADD CONSTRAINT FK_ENHESA_STATUS_NAME_LANG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_SUP_DOC ADD CONSTRAINT FK_ENHESA_SUP_DOC_COUNTRY
    FOREIGN KEY (COUNTRY_CODE)
    REFERENCES CSR.ENHESA_COUNTRY(COUNTRY_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_SUP_DOC ADD CONSTRAINT FK_ENHESA_SUP_DOC_REGION
    FOREIGN KEY (COUNTRY_CODE, REGION_CODE)
    REFERENCES CSR.ENHESA_COUNTRY_REGION(COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_SUP_DOC_ITEM_TEXT ADD CONSTRAINT FK_ENHESA_SUP_DOC_ITM_TXT_DOC
    FOREIGN KEY (APP_SID, ITEM_ID)
    REFERENCES CSR.ENHESA_SUP_DOC(APP_SID, ITEM_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_SUP_DOC_ITEM_TEXT ADD CONSTRAINT FK_ENHESA_SUP_DOC_ITM_TXT_LNG
    FOREIGN KEY (LANG)
    REFERENCES CSR.ENHESA_LANG(LANG) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_TOPIC ADD CONSTRAINT FK_ENHESA_TOPIC_COUNTRY
    FOREIGN KEY (COUNTRY_CODE)
    REFERENCES CSR.ENHESA_COUNTRY(COUNTRY_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_TOPIC ADD CONSTRAINT FK_ENHESA_TOPIC_STATUS
    FOREIGN KEY (STATUS_ID)
    REFERENCES CSR.ENHESA_STATUS(STATUS_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_TOPIC_AUTH ADD CONSTRAINT FK_ENHESA_TOP_AUTH_TOP
    FOREIGN KEY (APP_SID, TOPIC_ID)
    REFERENCES CSR.ENHESA_TOPIC(APP_SID, TOPIC_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_TOPIC_AUTH_ORG_TITLE ADD CONSTRAINT FK_ENH_TOP_AUTH_ORG_TIT_AUTH
    FOREIGN KEY (APP_SID, ENHESA_TOPIC_AUTH_ID)
    REFERENCES CSR.ENHESA_TOPIC_AUTH(APP_SID, ENHESA_TOPIC_AUTH_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_TOPIC_HEADING ADD CONSTRAINT FK_ENHESA_TOP_HEAD_HEAD
    FOREIGN KEY (APP_SID, HEADING_CODE)
    REFERENCES CSR.ENHESA_HEADING(APP_SID, HEADING_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_TOPIC_HEADING ADD CONSTRAINT FK_ENHESA_TOP_HEAD_TOP
    FOREIGN KEY (APP_SID, TOPIC_ID)
    REFERENCES CSR.ENHESA_TOPIC(APP_SID, TOPIC_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_TOPIC_KEYWORD ADD CONSTRAINT FK_ENHESA_TOP_KEYWD_KEYWD
    FOREIGN KEY (APP_SID, KEYWORD_ID)
    REFERENCES CSR.ENHESA_KEYWORD(APP_SID, KEYWORD_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_TOPIC_KEYWORD ADD CONSTRAINT FK_ENHESA_TOP_KEYWD_TOP
    FOREIGN KEY (APP_SID, TOPIC_ID)
    REFERENCES CSR.ENHESA_TOPIC(APP_SID, TOPIC_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_TOPIC_REG ADD CONSTRAINT FK_ENHESA_TOP_REG_REG
    FOREIGN KEY (APP_SID, REG_ID)
    REFERENCES CSR.ENHESA_REG(APP_SID, REG_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_TOPIC_REG ADD CONSTRAINT FK_ENHESA_TOP_REG_TOP
    FOREIGN KEY (APP_SID, TOPIC_ID)
    REFERENCES CSR.ENHESA_TOPIC(APP_SID, TOPIC_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.ENHESA_TOPIC_REGION ADD CONSTRAINT FK_ENHESA_TOP_RG_COU_RG
    FOREIGN KEY (COUNTRY_CODE, REGION_CODE)
    REFERENCES CSR.ENHESA_COUNTRY_REGION(COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_TOPIC_REGION ADD CONSTRAINT FK_ENHESA_TOP_RG_TOP
    FOREIGN KEY (APP_SID, TOPIC_ID, COUNTRY_CODE)
    REFERENCES CSR.ENHESA_TOPIC(APP_SID, TOPIC_ID, COUNTRY_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.ENHESA_TOPIC_TEXT ADD CONSTRAINT FK_ENHESA_TOP_TEXT_TOP
    FOREIGN KEY (APP_SID, TOPIC_ID)
    REFERENCES CSR.ENHESA_TOPIC(APP_SID, TOPIC_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.EST_ACCOUNT ADD CONSTRAINT FK_EST_ACCNT_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EST_ACCOUNT ADD CONSTRAINT FK_EST_ACCOUNT_GLOBAL
    FOREIGN KEY (EST_ACCOUNT_ID)
    REFERENCES CSR.EST_ACCOUNT_GLOBAL(EST_ACCOUNT_ID)
;



ALTER TABLE CSR.EST_ATTR_ENUM ADD CONSTRAINT FK_EST_ATTRTYPE_ATTRENUM
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;



ALTER TABLE CSR.EST_ATTR_FOR_BUILDING ADD CONSTRAINT FK_EST_ATTRBLD_ATTRTYPE
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;



ALTER TABLE CSR.EST_ATTR_FOR_SPACE ADD CONSTRAINT FK_EST_ATTRSPC_ATTRTYPE
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;



ALTER TABLE CSR.EST_ATTR_MEASURE ADD CONSTRAINT FK_CUST_EST_ATTRMEASURE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EST_ATTR_MEASURE ADD CONSTRAINT FK_EST_ATTRTYPE_MEASURE
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;

ALTER TABLE CSR.EST_ATTR_MEASURE ADD CONSTRAINT RefMEASURE4433
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;



ALTER TABLE CSR.EST_ATTR_MEASURE_CONV ADD CONSTRAINT FK_EST_ATTRMEAS_ATTRCONV
    FOREIGN KEY (APP_SID, TYPE_NAME)
    REFERENCES CSR.EST_ATTR_MEASURE(APP_SID, TYPE_NAME)
;

ALTER TABLE CSR.EST_ATTR_MEASURE_CONV ADD CONSTRAINT FK_EST_ATTRUNIT_CONV
    FOREIGN KEY (TYPE_NAME, UOM)
    REFERENCES CSR.EST_ATTR_UNIT(TYPE_NAME, UOM)
;

ALTER TABLE CSR.EST_ATTR_MEASURE_CONV ADD CONSTRAINT FK_MEASCONV_ESTATTRMEASCONV
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
;



ALTER TABLE CSR.EST_ATTR_UNIT ADD CONSTRAINT FK_EST_ATTRTYPE_ATTRUNIT
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;



ALTER TABLE CSR.EST_BUILDING ADD CONSTRAINT FK_EST_BLDNG_CUST
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID)
    REFERENCES CSR.EST_CUSTOMER(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID)
;

ALTER TABLE CSR.EST_BUILDING ADD CONSTRAINT FK_EST_BLDNG_RGN
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.EST_BUILDING ADD CONSTRAINT FK_EST_BLDNG_PRGN
    FOREIGN KEY (APP_SID, PREV_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;


ALTER TABLE CSR.EST_BUILDING_CHANGE_LOG ADD CONSTRAINT FK_EST_BLD_BLD_CNG_LOG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID)
    REFERENCES CSR.EST_BUILDING(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID)
;



ALTER TABLE CSR.EST_BUILDING_METRIC ADD CONSTRAINT FK_EST_BLDMET_BLDNG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID)
    REFERENCES CSR.EST_BUILDING(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID) DEFERRABLE INITIALLY DEFERRED
;



ALTER TABLE CSR.EST_BUILDING_METRIC_MAPPING ADD CONSTRAINT FK_EST_BLDMETMAP_ACCNT
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

ALTER TABLE CSR.EST_BUILDING_METRIC_MAPPING ADD CONSTRAINT FK_EST_BLDMETMAP_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.EST_BUILDING_METRIC_MAPPING ADD CONSTRAINT FK_MCONV_METMAP
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.EST_CONV_MAPPING ADD CONSTRAINT FK_CONV_MAPPING
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.EST_CONV_MAPPING ADD CONSTRAINT FK_EST_TYPE_CONV_MAP
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, METER_TYPE)
    REFERENCES CSR.EST_METER_TYPE_MAPPING(APP_SID, EST_ACCOUNT_SID, METER_TYPE)
;

ALTER TABLE CSR.EST_CONV_MAPPING ADD CONSTRAINT FK_ESTMETCON_ESTCONMAP
    FOREIGN KEY (METER_TYPE, UOM)
    REFERENCES CSR.EST_METER_CONV(METER_TYPE, UOM)
;

ALTER TABLE CSR.EST_CONV_MAPPING ADD CONSTRAINT FK_MEASURE_ESTCONVMAP
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;



ALTER TABLE CSR.EST_CUSTOMER ADD CONSTRAINT FK_EST_CUST_ACCNT
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

/* Dropped in prod dbs
ALTER TABLE CSR.EST_CUSTOMER ADD CONSTRAINT FK_EST_CUST_GLOBAL
    FOREIGN KEY (PM_CUSTOMER_ID)
    REFERENCES CSR.EST_CUSTOMER_GLOBAL(PM_CUSTOMER_ID)
;
*/

ALTER TABLE CSR.EST_ERROR ADD CONSTRAINT FK_CUSTOMER_EST_ERROR
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.EST_JOB ADD CONSTRAINT FK_CSRUSR_ESTJOB
    FOREIGN KEY (APP_SID, CREATED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.EST_JOB ADD CONSTRAINT FK_CUSTOMER_EST_JOB
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EST_JOB ADD CONSTRAINT FK_EST_ACCOUNT_EST_JOB
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

ALTER TABLE CSR.EST_JOB ADD CONSTRAINT FK_EST_JOB_STATE_JOB
    FOREIGN KEY (EST_JOB_STATE_ID)
    REFERENCES CSR.EST_JOB_STATE(EST_JOB_STATE_ID)
;

ALTER TABLE CSR.EST_JOB ADD CONSTRAINT FK_EST_JOB_TYPE_JOB
    FOREIGN KEY (EST_JOB_TYPE_ID)
    REFERENCES CSR.EST_JOB_TYPE(EST_JOB_TYPE_ID)
;

ALTER TABLE CSR.EST_JOB ADD CONSTRAINT FK_REGION_EST_JOB
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.EST_JOB_ATTR ADD CONSTRAINT FK_EST_JOB_JOBATTR
    FOREIGN KEY (APP_SID, EST_JOB_ID)
    REFERENCES CSR.EST_JOB(APP_SID, EST_JOB_ID)
;



ALTER TABLE CSR.EST_JOB_READING ADD CONSTRAINT FK_EST_JOB_JOBREADING
    FOREIGN KEY (APP_SID, EST_JOB_ID)
    REFERENCES CSR.EST_JOB(APP_SID, EST_JOB_ID)
;



ALTER TABLE CSR.EST_METER ADD CONSTRAINT FK_EST_BUILDING_METER
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID)
    REFERENCES CSR.EST_BUILDING(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.EST_METER ADD CONSTRAINT FK_EST_SPACE_METER
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID)
    REFERENCES CSR.EST_SPACE(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.EST_METER ADD CONSTRAINT FK_REGION_EST_METER
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.EST_METER_CHANGE_LOG ADD CONSTRAINT FK_EST_METER_CNGLOG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_METER_ID)
    REFERENCES CSR.EST_METER(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_METER_ID)
;



ALTER TABLE CSR.EST_METER_CONV ADD CONSTRAINT FK_ESTMETTYP_ESTMETCNV
    FOREIGN KEY (METER_TYPE)
    REFERENCES CSR.EST_METER_TYPE(METER_TYPE)
;



ALTER TABLE CSR.EST_METER_READING_CHANGE_LOG ADD CONSTRAINT FK_EST_METER_RDNGCNGLOG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_METER_ID)
    REFERENCES CSR.EST_METER(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_METER_ID)
;


ALTER TABLE CSR.EST_METER ADD CONSTRAINT FK_EST_METER_TYPE
	FOREIGN KEY (METER_TYPE)
	REFERENCES CSR.EST_METER_TYPE (METER_TYPE)
;


ALTER TABLE CSR.EST_METER_TYPE_MAPPING ADD CONSTRAINT EST_TYPE_METER_TYPE
    FOREIGN KEY (APP_SID, METER_TYPE_ID)
    REFERENCES CSR.METER_TYPE(APP_SID, METER_TYPE_ID)
;

ALTER TABLE CSR.EST_METER_TYPE_MAPPING ADD CONSTRAINT FK_EST_TYPE_ACCNTT
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

ALTER TABLE CSR.EST_METER_TYPE_MAPPING ADD CONSTRAINT FK_ESTMETTYP_ESTMETTYPMAP
    FOREIGN KEY (METER_TYPE)
    REFERENCES CSR.EST_METER_TYPE(METER_TYPE)
;



ALTER TABLE CSR.EST_MISMATCHED_ESP_ID ADD CONSTRAINT FK_ACCOUNT_MISMATCHED_ESP_ID
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

ALTER TABLE CSR.EST_MISMATCHED_ESP_ID ADD CONSTRAINT FK_CUSTOMER_MISMATCHED_ESP_ID
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID)
    REFERENCES CSR.EST_CUSTOMER(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID)
;



ALTER TABLE CSR.EST_OPTIONS ADD CONSTRAINT FK_CUSTOMER_EST_OPTIONS
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EST_OPTIONS ADD CONSTRAINT FK_EST_ACCOUNT_OPTIONS
    FOREIGN KEY (APP_SID, DEFAULT_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;



ALTER TABLE CSR.EST_OTHER_MAPPING ADD CONSTRAINT FK_ESTACC_OTHMAP
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

ALTER TABLE CSR.EST_OTHER_MAPPING ADD CONSTRAINT FK_IND_OTHMAP
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.EST_OTHER_MAPPING ADD CONSTRAINT FK_MCONV_OTHMAP
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.EST_PROPERTY_TYPE_MAP ADD CONSTRAINT FK_CUST_ESTPROPTYPEMAP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EST_PROPERTY_TYPE_MAP ADD CONSTRAINT FK_ESTPROPTYP_ESTPROPTYPMAP
    FOREIGN KEY (EST_PROPERTY_TYPE)
    REFERENCES CSR.EST_PROPERTY_TYPE(EST_PROPERTY_TYPE)
;

ALTER TABLE CSR.EST_PROPERTY_TYPE_MAP ADD CONSTRAINT FK_PROPTYPE_EST_PROPTYPEMAP
    FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID)
    REFERENCES CSR.PROPERTY_TYPE(APP_SID, PROPERTY_TYPE_ID)
;



ALTER TABLE CSR.EST_REGION_CHANGE_LOG ADD CONSTRAINT FK_EST_ACC_EST_RGN_CNG_LOG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

ALTER TABLE CSR.EST_REGION_CHANGE_LOG ADD CONSTRAINT FK_EST_CUST_RGNCNGLOG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID)
    REFERENCES CSR.EST_CUSTOMER(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID)
;

ALTER TABLE CSR.EST_REGION_CHANGE_LOG ADD CONSTRAINT FK_REGION_EST_RGN_CNG_LOG
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.EST_SPACE ADD CONSTRAINT FK_EST_SPACE_BLDNG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID)
    REFERENCES CSR.EST_BUILDING(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.EST_SPACE ADD CONSTRAINT FK_EST_SPACE_RGN
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.EST_SPACE ADD CONSTRAINT FK_EST_SPACE_PRGN
    FOREIGN KEY (APP_SID, PREV_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.EST_SPACE_ATTR ADD CONSTRAINT FK_CUST_SET_SPACE_ATTR
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EST_SPACE_ATTR ADD CONSTRAINT FK_EST_SPACE_SPACE_ATTR
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID)
    REFERENCES CSR.EST_SPACE(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.EST_SPACE_ATTR ADD CONSTRAINT FK_RMVAL_EST_SPACE_ATTR
    FOREIGN KEY (APP_SID, REGION_METRIC_VAL_ID)
    REFERENCES CSR.REGION_METRIC_VAL(APP_SID, REGION_METRIC_VAL_ID)
;



ALTER TABLE CSR.EST_SPACE_ATTR_CHANGE_LOG ADD CONSTRAINT FK_EST_SPACE_SPATTRCHLOG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID)
    REFERENCES CSR.EST_SPACE(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID)
;



ALTER TABLE CSR.EST_SPACE_ATTR_MAPPING ADD CONSTRAINT FK_EST_SPACEATTRM_ACCNT
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

ALTER TABLE CSR.EST_SPACE_ATTR_MAPPING ADD CONSTRAINT FK_EST_SPACEATTRM_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.EST_SPACE_ATTR_MAPPING ADD CONSTRAINT FK_MCONV_ATTMAP
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.EST_SPACE_CHANGE_LOG ADD CONSTRAINT FK_EST_SPACE_SPCHLOG
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID)
    REFERENCES CSR.EST_SPACE(APP_SID, EST_ACCOUNT_SID, PM_CUSTOMER_ID, PM_BUILDING_ID, PM_SPACE_ID)
;



ALTER TABLE CSR.EST_SPACE_TYPE_ATTR ADD CONSTRAINT FK_EST_ATTRSPC_SPCTYPEATTR
    FOREIGN KEY (ATTR_NAME)
    REFERENCES CSR.EST_ATTR_FOR_SPACE(ATTR_NAME)
;

ALTER TABLE CSR.EST_SPACE_TYPE_ATTR ADD CONSTRAINT FK_ESTSPCTYP_ESTSPCTYPATTR
    FOREIGN KEY (EST_SPACE_TYPE)
    REFERENCES CSR.EST_SPACE_TYPE(EST_SPACE_TYPE)
;



ALTER TABLE CSR.EST_SPACE_TYPE_MAP ADD CONSTRAINT FK_CUSTOMER_EST_SPACE_TYPE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EST_SPACE_TYPE_MAP ADD CONSTRAINT FK_ESTSPCTYP_ESTSPCTYPMAP
    FOREIGN KEY (EST_SPACE_TYPE)
    REFERENCES CSR.EST_SPACE_TYPE(EST_SPACE_TYPE)
;

ALTER TABLE CSR.EST_SPACE_TYPE_MAP ADD CONSTRAINT FK_SPACE_TYPE_EST_SPACE_TYPE
    FOREIGN KEY (APP_SID, SPACE_TYPE_ID)
    REFERENCES CSR.SPACE_TYPE(APP_SID, SPACE_TYPE_ID)
;



ALTER TABLE CSR.EVENT ADD CONSTRAINT RefCSR_USER1057
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.EVENT ADD CONSTRAINT RefCUSTOMER1059
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EVENT ADD CONSTRAINT RefREGION1184
    FOREIGN KEY (APP_SID, RAISED_FOR_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.EXCEL_EXPORT_OPTIONS ADD CONSTRAINT RefDATAVIEW1642
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;



ALTER TABLE CSR.EXPORT_FEED_CMS_FORM ADD CONSTRAINT FK_EXP_FEED_CMS_EXP_FEED
    FOREIGN KEY (EXPORT_FEED_SID, APP_SID)
    REFERENCES CSR.EXPORT_FEED (EXPORT_FEED_SID, APP_SID)
;



ALTER TABLE CSR.EXPORT_FEED_DATAVIEW ADD CONSTRAINT DATAVIEW_DATAVIEW_EXP_FEED
    FOREIGN KEY (DATAVIEW_SID, APP_SID)
    REFERENCES CSR.DATAVIEW (DATAVIEW_SID, APP_SID)
;

ALTER TABLE CSR.EXPORT_FEED_DATAVIEW ADD CONSTRAINT EXP_FEED_DATAVIEW_EXP_FEED
    FOREIGN KEY (EXPORT_FEED_SID, APP_SID)
    REFERENCES CSR.EXPORT_FEED (EXPORT_FEED_SID, APP_SID)
;



ALTER TABLE CSR.EXPORT_FEED_STORED_PROC ADD CONSTRAINT FK_EXP_FEED_STORED_PROC
    FOREIGN KEY (EXPORT_FEED_SID, APP_SID)
    REFERENCES CSR.EXPORT_FEED (EXPORT_FEED_SID, APP_SID)
;



ALTER TABLE CSR.FACTOR ADD CONSTRAINT FK_FACTOR_CUSTOM_FACTOR
    FOREIGN KEY (APP_SID, CUSTOM_FACTOR_ID)
    REFERENCES CSR.CUSTOM_FACTOR(APP_SID, CUSTOM_FACTOR_ID)
;

ALTER TABLE CSR.FACTOR ADD CONSTRAINT FK_FACTOR_GAS_TYPE
    FOREIGN KEY (GAS_TYPE_ID)
    REFERENCES CSR.GAS_TYPE(GAS_TYPE_ID)
;

ALTER TABLE CSR.FACTOR ADD CONSTRAINT RefCUSTOMER1189
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.FACTOR ADD CONSTRAINT RefEGRID1728
    FOREIGN KEY (EGRID_REF)
    REFERENCES CSR.EGRID(EGRID_REF)
;

ALTER TABLE CSR.FACTOR ADD CONSTRAINT RefFACTOR_TYPE1185
    FOREIGN KEY (FACTOR_TYPE_ID)
    REFERENCES CSR.FACTOR_TYPE(FACTOR_TYPE_ID)
;

ALTER TABLE CSR.FACTOR ADD CONSTRAINT RefFACTOR1735
    FOREIGN KEY (APP_SID, ORIGINAL_FACTOR_ID)
    REFERENCES CSR.FACTOR(APP_SID, FACTOR_ID)
;

ALTER TABLE CSR.FACTOR ADD CONSTRAINT RefREGION1188
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.FACTOR ADD CONSTRAINT RefSTD_FACTOR1528
    FOREIGN KEY (STD_FACTOR_ID)
    REFERENCES CSR.STD_FACTOR(STD_FACTOR_ID)
;

ALTER TABLE CSR.FACTOR ADD CONSTRAINT RefSTD_MEASURE_CONVERSION1529
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.FACTOR_HISTORY ADD CONSTRAINT FK_FACTOR_HISTORY_FACTOR
    FOREIGN KEY (APP_SID, FACTOR_ID)
    REFERENCES CSR.FACTOR(APP_SID, FACTOR_ID)
;



ALTER TABLE CSR.FACTOR_TYPE ADD CONSTRAINT RefFACTOR_TYPE1732
    FOREIGN KEY (PARENT_ID)
    REFERENCES CSR.FACTOR_TYPE(FACTOR_TYPE_ID)
;

ALTER TABLE CSR.FACTOR_TYPE ADD CONSTRAINT RefSTD_MEASURE1652
    FOREIGN KEY (STD_MEASURE_ID)
    REFERENCES CSR.STD_MEASURE(STD_MEASURE_ID)
;



ALTER TABLE CSR.FEED ADD CONSTRAINT FK_FEED_FEED_TYPE
    FOREIGN KEY (FEED_TYPE_ID)
    REFERENCES CSR.FEED_TYPE(FEED_TYPE_ID)
;

ALTER TABLE CSR.FEED ADD CONSTRAINT RefCUSTOMER284
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.FEED_REQUEST ADD CONSTRAINT RefFEED286
    FOREIGN KEY (APP_SID, FEED_SID)
    REFERENCES CSR.FEED(APP_SID, FEED_SID)
;

ALTER TABLE CSR.FEED_REQUEST ADD CONSTRAINT RefIMP_SESSION321
    FOREIGN KEY (APP_SID, IMP_SESSION_SID)
    REFERENCES CSR.IMP_SESSION(APP_SID, IMP_SESSION_SID)
;



ALTER TABLE CSR.FILE_UPLOAD ADD CONSTRAINT RefCUSTOMER964
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.FLOW ADD CONSTRAINT FK_CUSTFLALCLS_FLOW
    FOREIGN KEY (APP_SID, FLOW_ALERT_CLASS)
    REFERENCES CSR.CUSTOMER_FLOW_ALERT_CLASS(APP_SID, FLOW_ALERT_CLASS)
;

ALTER TABLE CSR.FLOW ADD CONSTRAINT FK_CUSTOMER_FLOW
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.FLOW ADD CONSTRAINT FK_FLOW_AGG_GRP_ID
    FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
    REFERENCES CSR.AGGREGATE_IND_GROUP(APP_SID, AGGREGATE_IND_GROUP_ID)
;

ALTER TABLE CSR.FLOW ADD CONSTRAINT FK_FLOW_STATE_FLOW
    FOREIGN KEY (APP_SID, DEFAULT_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID) DEFERRABLE INITIALLY DEFERRED
;



ALTER TABLE CSR.FLOW_ALERT_HELPER ADD CONSTRAINT FK_CUSTOMER_FLALHELPER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.FLOW_ALERT_TYPE ADD CONSTRAINT FK_CAT_FL_AL_TYPE
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_ALERT_TYPE ADD CONSTRAINT FK_FLOW_FL_AL_TYPE
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;



ALTER TABLE CSR.FLOW_CAPABILITY ADD CONSTRAINT FK_FLOW_CAP_ALERT_CLASS
    FOREIGN KEY (FLOW_ALERT_CLASS)
    REFERENCES CSR.FLOW_ALERT_CLASS(FLOW_ALERT_CLASS)
;



ALTER TABLE CSR.FLOW_INVOLVEMENT_COVER ADD CONSTRAINT FK_FLOW_INV_COVER_FI
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.FLOW_INVOLVEMENT_COVER ADD CONSTRAINT FK_FLOW_INV_COVER_FIT
    FOREIGN KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
    REFERENCES CSR.FLOW_INVOLVEMENT_TYPE(APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_INVOLVEMENT_COVER ADD CONSTRAINT FK_FLOW_INV_COVER_ID
    FOREIGN KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
    REFERENCES CSR.USER_COVER(APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
;



ALTER TABLE CSR.FLOW_INVOLVEMENT_TYPE ADD CONSTRAINT FK_FLOW_INVOLV_TYP_ALT_CLS
    FOREIGN KEY (APP_SID, PRODUCT_AREA)
    REFERENCES CSR.CUSTOMER_FLOW_ALERT_CLASS(APP_SID, FLOW_ALERT_CLASS)
;


ALTER TABLE CSR.FLOW_INV_TYPE_ALERT_CLASS ADD CONSTRAINT FK_FLOW_INV_TYPE_ALERT_CLASS 
	FOREIGN KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
	REFERENCES CSR.FLOW_INVOLVEMENT_TYPE (APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_INV_TYPE_ALERT_CLASS ADD CONSTRAINT FK_INV_TYPE_FLOW_ALERT_CLASS
	FOREIGN KEY (APP_SID, FLOW_ALERT_CLASS)
	REFERENCES CSR.CUSTOMER_FLOW_ALERT_CLASS (APP_SID, FLOW_ALERT_CLASS)
;


ALTER TABLE CSR.FLOW_ITEM ADD CONSTRAINT FK_APP_DASH_INST_FLOW_ITEM
    FOREIGN KEY (APP_SID, DASHBOARD_INSTANCE_ID)
    REFERENCES CSR.APPROVAL_DASHBOARD_INSTANCE(APP_SID, DASHBOARD_INSTANCE_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.FLOW_ITEM ADD CONSTRAINT FK_CUST_FLOW_ITEM
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.FLOW_ITEM ADD CONSTRAINT FK_FLOW_ITEM_FL_ST_LOG
    FOREIGN KEY (APP_SID, LAST_FLOW_STATE_LOG_ID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_STATE_LOG(APP_SID, FLOW_STATE_LOG_ID, FLOW_ITEM_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.FLOW_ITEM ADD CONSTRAINT FK_FLOW_ITEM_FL_ST_TRANS
    FOREIGN KEY (APP_SID, LAST_FLOW_STATE_TRANSITION_ID)
    REFERENCES CSR.FLOW_STATE_TRANSITION(APP_SID, FLOW_STATE_TRANSITION_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.FLOW_ITEM ADD CONSTRAINT FK_FLOW_STATE_FLOW_ITEM
    FOREIGN KEY (APP_SID, CURRENT_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID)
;

ALTER TABLE CSR.FLOW_ITEM ADD CONSTRAINT FK_QS_RESPONSE_FLOW_ITEM
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.FLOW_ITEM_REGION ADD CONSTRAINT FK_FLOW_ITEM_REGION_FLOW_ITEM
	FOREIGN KEY (APP_SID, FLOW_ITEM_ID) 
	REFERENCES CSR.FLOW_ITEM (APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.FLOW_ITEM_REGION ADD CONSTRAINT FK_FLOW_ITEM_REGION_REGION 
	FOREIGN KEY (APP_SID, REGION_SID) 
	REFERENCES CSR.REGION (APP_SID, REGION_SID)
;

ALTER TABLE CSR.FLOW_ITEM_GENERATED_ALERT ADD CONSTRAINT FK_FI_GEN_ALERT_FLOW_ST_LOG
    FOREIGN KEY (APP_SID, FLOW_STATE_LOG_ID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_STATE_LOG(APP_SID, FLOW_STATE_LOG_ID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.FLOW_ITEM_GENERATED_ALERT ADD CONSTRAINT FK_FL_ITM_GN_ALRT_FL_TR_ALRT
    FOREIGN KEY (APP_SID, FLOW_TRANSITION_ALERT_ID)
    REFERENCES CSR.FLOW_TRANSITION_ALERT(APP_SID, FLOW_TRANSITION_ALERT_ID)
;

ALTER TABLE CSR.FLOW_ITEM_GENERATED_ALERT ADD CONSTRAINT FK_FL_ITM_GN_ALRT_FROM_USER
    FOREIGN KEY (APP_SID, FROM_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.FLOW_ITEM_GENERATED_ALERT ADD CONSTRAINT FK_FL_ITM_GN_ALRT_TO_USER
    FOREIGN KEY (APP_SID, TO_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.FLOW_ITEM_INVOLVEMENT ADD CONSTRAINT FK_FII_CSR_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.FLOW_ITEM_INVOLVEMENT ADD CONSTRAINT FK_FII_FLOW_INV_TYPE
    FOREIGN KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
    REFERENCES CSR.FLOW_INVOLVEMENT_TYPE(APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_ITEM_INVOLVEMENT ADD CONSTRAINT FK_FII_FLOW_ITEM
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;



ALTER TABLE CSR.FLOW_ITEM_SUBSCRIPTION ADD CONSTRAINT FK_FLOW_ITEM_SUB_CSR_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.FLOW_ITEM_SUBSCRIPTION ADD CONSTRAINT FK_FLOW_ITEM_SUB_FLOW_ITEM
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;



ALTER TABLE CSR.FLOW_STATE ADD CONSTRAINT FK_CUSTOMER_FLOW_STATE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.FLOW_STATE ADD CONSTRAINT FK_FLOW_FLOW_STATE
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.FLOW_STATE ADD CONSTRAINT FK_FLOW_STATE_IND_SID
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.FLOW_STATE ADD CONSTRAINT FK_FLOW_STATE_NATURE
    FOREIGN KEY (FLOW_STATE_NATURE_ID)
    REFERENCES CSR.FLOW_STATE_NATURE(FLOW_STATE_NATURE_ID)
;

ALTER TABLE CSR.FLOW_STATE ADD CONSTRAINT FK_FLOW_STATE_TIME_IND_SID
    FOREIGN KEY (APP_SID, TIME_SPENT_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


ALTER TABLE CSR.FLOW_STATE_ALERT ADD CONSTRAINT FK_FLALTHLP_FLSTALT
    FOREIGN KEY (APP_SID, FLOW_ALERT_HELPER)
    REFERENCES CSR.FLOW_ALERT_HELPER(APP_SID, FLOW_ALERT_HELPER)
;

ALTER TABLE CSR.FLOW_STATE_ALERT ADD CONSTRAINT FK_FLALTTYP_FLSTALT
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.FLOW_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_STATE_ALERT ADD CONSTRAINT FK_FLOW_FLOWSTATEALERT
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.FLOW_STATE_ALERT ADD CONSTRAINT FK_FLST_FLSTALT
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID)
;



ALTER TABLE CSR.FLOW_STATE_ALERT_ROLE ADD CONSTRAINT FK_FLSTALT_FLSTALTRL
    FOREIGN KEY (APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID)
    REFERENCES CSR.FLOW_STATE_ALERT(APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID)
;

ALTER TABLE CSR.FLOW_STATE_ALERT_ROLE ADD CONSTRAINT FK_RL_FLSTALTRL
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.FLOW_STATE_ALERT_RUN ADD CONSTRAINT FK_FLSTALT_FLSTALTRUN
    FOREIGN KEY (APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID)
    REFERENCES CSR.FLOW_STATE_ALERT(APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID)
;

ALTER TABLE CSR.FLOW_STATE_ALERT_RUN ADD CONSTRAINT FK_USER_FLSTALTRUN
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.FLOW_STATE_ALERT_USER ADD CONSTRAINT FK_FLSTALT_FLSTALTUSR
    FOREIGN KEY (APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID)
    REFERENCES CSR.FLOW_STATE_ALERT(APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID)
;

ALTER TABLE CSR.FLOW_STATE_ALERT_USER ADD CONSTRAINT FK_USR_FLSTALTUSR
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.FLOW_STATE_AUDIT_IND ADD CONSTRAINT FK_FSAI_AUDIT
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_STATE_AUDIT_IND ADD CONSTRAINT FK_FSAI_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.FLOW_STATE_AUDIT_IND ADD CONSTRAINT FK_FSAI_IND_TYPE
    FOREIGN KEY (FLOW_STATE_AUDIT_IND_TYPE_ID)
    REFERENCES CSR.FLOW_STATE_AUDIT_IND_TYPE(FLOW_STATE_AUDIT_IND_TYPE_ID)
;

ALTER TABLE CSR.FLOW_STATE_AUDIT_IND ADD CONSTRAINT FK_FSAI_STATE
    FOREIGN KEY (APP_SID, FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;



ALTER TABLE CSR.FLOW_STATE_GROUP ADD CONSTRAINT FK_CUSTOMER_FLSTGRP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.FLOW_STATE_GROUP ADD CONSTRAINT FK_IND_FLOW_STATE_GROUP
    FOREIGN KEY (APP_SID, COUNT_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.FLOW_STATE_GROUP_MEMBER ADD CONSTRAINT FK_FLST_FLSTGRPMBR
    FOREIGN KEY (APP_SID, FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;

ALTER TABLE CSR.FLOW_STATE_GROUP_MEMBER ADD CONSTRAINT FK_FLSTGRP_FLSTGRPMBR
    FOREIGN KEY (APP_SID, FLOW_STATE_GROUP_ID)
    REFERENCES CSR.FLOW_STATE_GROUP(APP_SID, FLOW_STATE_GROUP_ID)
;

ALTER TABLE CSR.FLOW_STATE_SURVEY_TAG ADD CONSTRAINT FK_FLST_FLSTSRVTAG
    FOREIGN KEY (APP_SID, FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;

ALTER TABLE CSR.FLOW_STATE_SURVEY_TAG ADD CONSTRAINT FK_TAG_FLSTSRVTAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;


ALTER TABLE CSR.FLOW_STATE_INVOLVEMENT ADD CONSTRAINT FK_FLOW_STATE_INV_INV_ID
    FOREIGN KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
    REFERENCES CSR.FLOW_INVOLVEMENT_TYPE(APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_STATE_INVOLVEMENT ADD CONSTRAINT FK_FLOW_STATE_INV_STATE_ID
    FOREIGN KEY (APP_SID, FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;



ALTER TABLE CSR.FLOW_STATE_LOG ADD CONSTRAINT FK_CUST_FLOW_STATE_LOG
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.FLOW_STATE_LOG ADD CONSTRAINT FK_FLOW_ITEM_FL_STATE_LOG
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.FLOW_STATE_LOG ADD CONSTRAINT FK_FLOW_STATE_FL_ST_LOG
    FOREIGN KEY (APP_SID, FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;

ALTER TABLE CSR.FLOW_STATE_LOG ADD CONSTRAINT FK_USER_FLOW_STATE_LOG
    FOREIGN KEY (APP_SID, SET_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.FLOW_STATE_LOG_FILE ADD CONSTRAINT FK_FSL_FS_LOG_FILE
    FOREIGN KEY (APP_SID, FLOW_STATE_LOG_ID)
    REFERENCES CSR.FLOW_STATE_LOG(APP_SID, FLOW_STATE_LOG_ID)
;



ALTER TABLE CSR.FLOW_STATE_NATURE ADD CONSTRAINT FK_FLOW_STATE_NATURE_CLASS
    FOREIGN KEY (FLOW_ALERT_CLASS)
    REFERENCES CSR.FLOW_ALERT_CLASS(FLOW_ALERT_CLASS)
;



ALTER TABLE CSR.FLOW_STATE_ROLE ADD CONSTRAINT FK_FLOW_STATE_FLOW_STATE_ROLE
    FOREIGN KEY (APP_SID, FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;

ALTER TABLE CSR.FLOW_STATE_ROLE ADD CONSTRAINT FK_ROLE_FLOW_STATE_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY ADD CONSTRAINT FK_FLOW_STATE_RL_CAP_INV
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, FLOW_INVOLVEMENT_TYPE_ID)
    REFERENCES CSR.FLOW_STATE_INVOLVEMENT(APP_SID, FLOW_STATE_ID, FLOW_INVOLVEMENT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY ADD CONSTRAINT FK_FLOW_STATE_RL_CAP_ROLE
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, ROLE_SID, GROUP_SID)
    REFERENCES CSR.FLOW_STATE_ROLE(APP_SID, FLOW_STATE_ID, ROLE_SID, GROUP_SID)
;

ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY ADD CONSTRAINT FK_FLOW_STATE_ROLE_CAP_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.FLOW_STATE_TRANS_HELPER ADD CONSTRAINT FK_FLOW_FLSTTRHELPER
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;



ALTER TABLE CSR.FLOW_STATE_TRANSITION ADD CONSTRAINT FK_CUST_FLOW_STATE_TRANS
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.FLOW_STATE_TRANSITION ADD CONSTRAINT FK_FLOW_STATE_TR_FROM
    FOREIGN KEY (APP_SID, FROM_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID)
;

ALTER TABLE CSR.FLOW_STATE_TRANSITION ADD CONSTRAINT FK_FLOW_STATE_TR_TO
    FOREIGN KEY (APP_SID, TO_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID)
;

ALTER TABLE CSR.FLOW_STATE_TRANSITION ADD CONSTRAINT FK_FLSTTRHELPER_FLSTTR
    FOREIGN KEY (APP_SID, FLOW_SID, HELPER_SP)
    REFERENCES CSR.FLOW_STATE_TRANS_HELPER(APP_SID, FLOW_SID, HELPER_SP)
;



ALTER TABLE CSR.FLOW_STATE_TRANSITION_INV ADD CONSTRAINT FK_FLOW_STATE_TRANS_INV_INV
    FOREIGN KEY (APP_SID, FROM_STATE_ID, FLOW_INVOLVEMENT_TYPE_ID)
    REFERENCES CSR.FLOW_STATE_INVOLVEMENT(APP_SID, FLOW_STATE_ID, FLOW_INVOLVEMENT_TYPE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.FLOW_STATE_TRANSITION_INV ADD CONSTRAINT FK_FLOW_STATE_TRANS_INV_TRAN
    FOREIGN KEY (APP_SID, FLOW_STATE_TRANSITION_ID)
    REFERENCES CSR.FLOW_STATE_TRANSITION(APP_SID, FLOW_STATE_TRANSITION_ID)
;



ALTER TABLE CSR.FLOW_STATE_TRANSITION_ROLE ADD CONSTRAINT FK_FL_ST_ROLE_FL_ST_TR_ROLE
    FOREIGN KEY (APP_SID, FROM_STATE_ID, ROLE_SID, GROUP_SID)
    REFERENCES CSR.FLOW_STATE_ROLE(APP_SID, FLOW_STATE_ID, ROLE_SID, GROUP_SID) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.FLOW_STATE_TRANSITION_ROLE ADD CONSTRAINT FK_FL_ST_TR_FL_ST_TR_ROLE
    FOREIGN KEY (APP_SID, FLOW_STATE_TRANSITION_ID, FROM_STATE_ID)
    REFERENCES CSR.FLOW_STATE_TRANSITION(APP_SID, FLOW_STATE_TRANSITION_ID, FROM_STATE_ID)
;



ALTER TABLE CSR.FLOW_TRANSITION_ALERT ADD CONSTRAINT FK_FL_TR_ALRT_CUST_ALRT_TYPE
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;

ALTER TABLE CSR.FLOW_TRANSITION_ALERT ADD CONSTRAINT FK_FST_FL_TR_ALERT
    FOREIGN KEY (APP_SID, FLOW_STATE_TRANSITION_ID)
    REFERENCES CSR.FLOW_STATE_TRANSITION(APP_SID, FLOW_STATE_TRANSITION_ID)
;

ALTER TABLE CSR.FLOW_TRANSITION_ALERT ADD CONSTRAINT FK_TRANS_ALERT_HELPER
    FOREIGN KEY (APP_SID, HELPER_SP)
    REFERENCES CSR.CMS_ALERT_HELPER(APP_SID, HELPER_SP)
;

ALTER TABLE CSR.FLOW_TRANSITION_ALERT ADD CONSTRAINT FK_TRANS_FLALERT_HELPER
    FOREIGN KEY (APP_SID, FLOW_ALERT_HELPER)
    REFERENCES CSR.FLOW_ALERT_HELPER(APP_SID, FLOW_ALERT_HELPER)
;



ALTER TABLE CSR.FLOW_TRANSITION_ALERT_INV ADD CONSTRAINT FK_FLOW_TRANS_ALERT_INV_ALERT
    FOREIGN KEY (APP_SID, FLOW_TRANSITION_ALERT_ID)
    REFERENCES CSR.FLOW_TRANSITION_ALERT(APP_SID, FLOW_TRANSITION_ALERT_ID)
;

ALTER TABLE CSR.FLOW_TRANSITION_ALERT_INV ADD CONSTRAINT FK_FLOW_TRANS_ALERT_INV_INV
    FOREIGN KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
    REFERENCES CSR.FLOW_INVOLVEMENT_TYPE(APP_SID, FLOW_INVOLVEMENT_TYPE_ID)
;



ALTER TABLE CSR.FLOW_TRANSITION_ALERT_ROLE ADD CONSTRAINT FK_FLOW_TR_AL_ROLE_FLOW_TR_AL
    FOREIGN KEY (APP_SID, FLOW_TRANSITION_ALERT_ID)
    REFERENCES CSR.FLOW_TRANSITION_ALERT(APP_SID, FLOW_TRANSITION_ALERT_ID)
;

ALTER TABLE CSR.FLOW_TRANSITION_ALERT_ROLE ADD CONSTRAINT FK_ROLE_FL_TR_AL_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.FLOW_TRANSITION_ALERT_USER ADD CONSTRAINT FK_FLOW_CSR_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;


ALTER TABLE CSR.FLOW_TRANSITION_ALERT_CC_ROLE ADD CONSTRAINT FK_FLOW_TR_AL_CC_RL_FLOW_TR_AL
    FOREIGN KEY (APP_SID, FLOW_TRANSITION_ALERT_ID)
    REFERENCES CSR.FLOW_TRANSITION_ALERT(APP_SID, FLOW_TRANSITION_ALERT_ID)
;

ALTER TABLE CSR.FLOW_TRANSITION_ALERT_CC_ROLE ADD CONSTRAINT FK_CC_ROLE_FL_TR_AL_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.FLOW_TRANSITION_ALERT_CC_USER ADD CONSTRAINT FK_FLOW_CC_CSR_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.FORECASTING_RULE ADD CONSTRAINT FK_FORECAST_RULE_SCENARIO_RULE
    FOREIGN KEY (APP_SID, SCENARIO_SID, RULE_ID)
    REFERENCES CSR.SCENARIO_RULE (APP_SID, SCENARIO_SID, RULE_ID)
;
ALTER TABLE CSR.FORECASTING_RULE ADD CONSTRAINT FK_FORECAST_RULE_IND_SID
    FOREIGN KEY	(app_sid, ind_sid)
    REFERENCES csr.ind(app_sid, ind_sid);
ALTER TABLE CSR.FORECASTING_RULE ADD CONSTRAINT FK_FORECAST_RULE_REGION_SID
    FOREIGN KEY	(app_sid, region_sid)
    REFERENCES csr.region(app_sid, region_sid);

ALTER TABLE csr.schema_column ADD (
	CONSTRAINT fk_schem_column_table 
		FOREIGN KEY (owner, table_name) 
		REFERENCES csr.schema_table(owner, table_name)
);

ALTER TABLE CSR.SCENARIO_ALERT ADD CONSTRAINT FK_SCENARIO_ALERT_SCENARIO
    FOREIGN KEY (APP_SID, SCENARIO_SID)
    REFERENCES CSR.SCENARIO (APP_SID, SCENARIO_SID)
;

ALTER TABLE CSR.SCENARIO_ALERT ADD CONSTRAINT FK_SCENARIO_ALERT_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SCENARIO_EMAIL_SUB ADD CONSTRAINT FK_SCENARIO_EMAIL_SUB_SCENARIO
    FOREIGN KEY (APP_SID, SCENARIO_SID)
    REFERENCES CSR.SCENARIO (APP_SID, SCENARIO_SID)
;
ALTER TABLE CSR.SCENARIO_EMAIL_SUB ADD CONSTRAINT FK_SCENARIO_EMAIL_SUB_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.FORM ADD CONSTRAINT FK_FORM_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.FORM ADD CONSTRAINT RefCUSTOMER1009
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.FORM_ALLOCATION ADD CONSTRAINT RefFORM42
    FOREIGN KEY (APP_SID, FORM_SID)
    REFERENCES CSR.FORM(APP_SID, FORM_SID)
;



ALTER TABLE CSR.FORM_ALLOCATION_ITEM ADD CONSTRAINT RefFORM_ALLOCATION45
    FOREIGN KEY (APP_SID, FORM_ALLOCATION_ID)
    REFERENCES CSR.FORM_ALLOCATION(APP_SID, FORM_ALLOCATION_ID)
;



ALTER TABLE CSR.FORM_ALLOCATION_USER ADD CONSTRAINT RefCSR_USER48
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.FORM_ALLOCATION_USER ADD CONSTRAINT RefFORM_ALLOCATION46
    FOREIGN KEY (APP_SID, FORM_ALLOCATION_ID)
    REFERENCES CSR.FORM_ALLOCATION(APP_SID, FORM_ALLOCATION_ID)
;



ALTER TABLE CSR.FORM_COMMENT ADD CONSTRAINT RefFORM_ALLOCATION44
    FOREIGN KEY (APP_SID, FORM_ALLOCATION_ID)
    REFERENCES CSR.FORM_ALLOCATION(APP_SID, FORM_ALLOCATION_ID)
;

ALTER TABLE CSR.FORM_COMMENT ADD CONSTRAINT RefFORM43
    FOREIGN KEY (APP_SID, FORM_SID)
    REFERENCES CSR.FORM(APP_SID, FORM_SID)
;



ALTER TABLE CSR.FORM_EXPR ADD CONSTRAINT FK_DELEGATION_FORM_EXPR
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.FORM_IND_MEMBER ADD CONSTRAINT FK_FORM_IND_MEMBER_FORM
    FOREIGN KEY (APP_SID, FORM_SID)
    REFERENCES CSR.FORM(APP_SID, FORM_SID)
;

ALTER TABLE CSR.FORM_IND_MEMBER ADD CONSTRAINT FK_FORM_IND_MEMBER_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.FORM_IND_MEMBER ADD CONSTRAINT FK_FORM_IND_MEMBER_MSR_CONV
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.FORM_IND_MEMBER ADD CONSTRAINT FK_FORM_IND_MEMBER_MULT_IND
    FOREIGN KEY (APP_SID, MULTIPLIER_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.FORM_REGION_MEMBER ADD CONSTRAINT FK_FORM_REGION_MEMBER_FORM
    FOREIGN KEY (APP_SID, FORM_SID)
    REFERENCES CSR.FORM(APP_SID, FORM_SID)
;

ALTER TABLE CSR.FORM_REGION_MEMBER ADD CONSTRAINT FK_FORM_REGION_MEMBER_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.FTP_PROFILE ADD CONSTRAINT FK_FTP_PROTOCOL_ID
    FOREIGN KEY (FTP_PROTOCOL_ID)
    REFERENCES CSR.FTP_PROTOCOL(PROTOCOL_ID)
;



ALTER TABLE CSR.FUNCTION_COURSE ADD CONSTRAINT FK_FUNCTION_COURSE_COURSE
    FOREIGN KEY (APP_SID, COURSE_ID)
    REFERENCES CSR.COURSE(APP_SID, COURSE_ID)
;

ALTER TABLE CSR.FUNCTION_COURSE ADD CONSTRAINT FK_FUNCTION_COURSE_PRIORITY
    FOREIGN KEY (TRAINING_PRIORITY_ID)
    REFERENCES CSR.TRAINING_PRIORITY(TRAINING_PRIORITY_ID)
;



ALTER TABLE CSR.FUND ADD CONSTRAINT FK_FUND_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.FUND ADD CONSTRAINT FK_FUND_TYPE_FUND
    FOREIGN KEY (APP_SID, FUND_TYPE_ID)
    REFERENCES CSR.FUND_TYPE(APP_SID, FUND_TYPE_ID)
;

ALTER TABLE CSR.FUND ADD CONSTRAINT FK_MGMT_COMPANY_FUND
    FOREIGN KEY (APP_SID, DEFAULT_MGMT_COMPANY_ID)
    REFERENCES CSR.MGMT_COMPANY(APP_SID, MGMT_COMPANY_ID)
;

ALTER TABLE CSR.FUND ADD CONSTRAINT FK_SUPPLIER_FUND
    FOREIGN KEY (APP_SID, COMPANY_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;



ALTER TABLE CSR.FUND_FORM_PLUGIN ADD CONSTRAINT FK_FUND_FORM_PLUGIN_PLUGIN
    FOREIGN KEY (PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID)
;



ALTER TABLE CSR.FUND_MGMT_CONTACT ADD CONSTRAINT FK_FUND_ID
    FOREIGN KEY (FUND_ID, APP_SID, MGMT_COMPANY_ID)
    REFERENCES CSR.FUND(FUND_ID, APP_SID, DEFAULT_MGMT_COMPANY_ID)
;

ALTER TABLE CSR.FUND_MGMT_CONTACT ADD CONSTRAINT FK_MGMT_COMPANY_CONTACT_ID
    FOREIGN KEY (MGMT_COMPANY_CONTACT_ID, MGMT_COMPANY_ID, APP_SID)
    REFERENCES CSR.MGMT_COMPANY_CONTACT(MGMT_COMPANY_CONTACT_ID, MGMT_COMPANY_ID, APP_SID)
;



ALTER TABLE CSR.GEO_MAP ADD CONSTRAINT FK_CUS_GEO_MAP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.GEO_MAP ADD CONSTRAINT FK_REG_SEL_TYP_GEO_MAP
    FOREIGN KEY (REGION_SELECTION_TYPE_ID)
    REFERENCES CSR.REGION_SELECTION_TYPE(REGION_SELECTION_TYPE_ID)
;

ALTER TABLE CSR.GEO_MAP ADD CONSTRAINT FK_TAG_GEO_MAP
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.GEO_MAP_REGION ADD CONSTRAINT FK_GEO_MAP_MAP_REGION
    FOREIGN KEY (APP_SID, GEO_MAP_SID)
    REFERENCES CSR.GEO_MAP(APP_SID, GEO_MAP_SID)
;

ALTER TABLE CSR.GEO_MAP_REGION ADD CONSTRAINT FK_REG_GEO_MAP_REG
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.GEO_MAP_TAB ADD CONSTRAINT FK_CUS_GM_TT_GM_TAB
    FOREIGN KEY (APP_SID, GEO_MAP_TAB_TYPE_ID)
    REFERENCES CSR.CUSTOMER_GEO_MAP_TAB_TYPE(APP_SID, GEO_MAP_TAB_TYPE_ID)
;

ALTER TABLE CSR.GEO_MAP_TAB ADD CONSTRAINT FK_GEO_MAP_GEO_MAP_TAB
    FOREIGN KEY (APP_SID, GEO_MAP_SID)
    REFERENCES CSR.GEO_MAP(APP_SID, GEO_MAP_SID)
;



ALTER TABLE CSR.GEO_MAP_TAB_CHART ADD CONSTRAINT FK_GEO_MT_GEO_MT_CHART
    FOREIGN KEY (APP_SID, GEO_MAP_TAB_ID)
    REFERENCES CSR.GEO_MAP_TAB(APP_SID, GEO_MAP_TAB_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.GEO_MAP_TAB_CHART ADD CONSTRAINT RefDATAVIEW4244
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;



ALTER TABLE CSR.GRESB_INDICATOR ADD CONSTRAINT FK_GI_GIT
    FOREIGN KEY (GRESB_INDICATOR_TYPE_ID)
    REFERENCES CSR.GRESB_INDICATOR_TYPE(GRESB_INDICATOR_TYPE_ID)
;

ALTER TABLE CSR.GRESB_INDICATOR ADD CONSTRAINT FK_GI_STD_MC
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.GRESB_INDICATOR_MAPPING ADD CONSTRAINT FK_GIM_GI
    FOREIGN KEY (GRESB_INDICATOR_ID)
    REFERENCES CSR.GRESB_INDICATOR(GRESB_INDICATOR_ID)
;

ALTER TABLE CSR.GRESB_INDICATOR_MAPPING ADD CONSTRAINT FK_GIM_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.GRESB_INDICATOR_MAPPING ADD CONSTRAINT FK_GIM_MC
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.GROUP_USER_COVER ADD CONSTRAINT FK_GROUP_USER_COVER_ID
    FOREIGN KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
    REFERENCES CSR.USER_COVER(APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
;



ALTER TABLE CSR.HELP_IMAGE ADD CONSTRAINT RefHELP_LANG1446
    FOREIGN KEY (IMAGE_LANG_ID)
    REFERENCES CSR.HELP_LANG(HELP_LANG_ID)
;



ALTER TABLE CSR.HELP_IMAGE_TAG ADD CONSTRAINT FK_HELP_IMAGE_IMAGE_TAG
    FOREIGN KEY (IMAGE_ID)
    REFERENCES CSR.HELP_IMAGE(IMAGE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.HELP_IMAGE_TAG ADD CONSTRAINT FK_HELP_TAG_IMAGE_TAG
    FOREIGN KEY (PARENT_TAG_ID)
    REFERENCES CSR.HELP_TAG(TAG_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.HELP_LANG ADD CONSTRAINT RefHELP_LANG413
    FOREIGN KEY (BASE_LANG_ID)
    REFERENCES CSR.HELP_LANG(HELP_LANG_ID)
;



ALTER TABLE CSR.HELP_TOPIC ADD CONSTRAINT RefHELP_TOPIC414
    FOREIGN KEY (PARENT_ID)
    REFERENCES CSR.HELP_TOPIC(HELP_TOPIC_ID)
;



ALTER TABLE CSR.HELP_TOPIC_FILE ADD CONSTRAINT RefHELP_FILE533
    FOREIGN KEY (HELP_FILE_ID)
    REFERENCES CSR.HELP_FILE(HELP_FILE_ID)
;

ALTER TABLE CSR.HELP_TOPIC_FILE ADD CONSTRAINT RefHELP_TOPIC_TEXT1447
    FOREIGN KEY (HELP_TOPIC_ID, HELP_LANG_ID)
    REFERENCES CSR.HELP_TOPIC_TEXT(HELP_TOPIC_ID, HELP_LANG_ID)
;



ALTER TABLE CSR.HELP_TOPIC_IMAGE ADD CONSTRAINT RefHELP_IMAGE1448
    FOREIGN KEY (HELP_IMAGE_ID)
    REFERENCES CSR.HELP_IMAGE(IMAGE_ID)
;

ALTER TABLE CSR.HELP_TOPIC_IMAGE ADD CONSTRAINT RefHELP_TOPIC_TEXT1449
    FOREIGN KEY (HELP_TOPIC_ID, HELP_LANG_ID)
    REFERENCES CSR.HELP_TOPIC_TEXT(HELP_TOPIC_ID, HELP_LANG_ID)
;



ALTER TABLE CSR.HELP_TOPIC_TEXT ADD CONSTRAINT RefHELP_LANG415
    FOREIGN KEY (HELP_LANG_ID)
    REFERENCES CSR.HELP_LANG(HELP_LANG_ID)
;

ALTER TABLE CSR.HELP_TOPIC_TEXT ADD CONSTRAINT RefHELP_TOPIC416
    FOREIGN KEY (HELP_TOPIC_ID)
    REFERENCES CSR.HELP_TOPIC(HELP_TOPIC_ID)
;



ALTER TABLE CSR.HIDE_PORTLET ADD CONSTRAINT FK_HIDE_PORTLET_PORTLET
    FOREIGN KEY (PORTLET_ID)
    REFERENCES CSR.PORTLET(PORTLET_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.HMAC ADD CONSTRAINT FK_HMAC_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.IA_TYPE_SURVEY_GROUP ADD CONSTRAINT CK_IATSG_CHNG_SURVEY_CAP
    FOREIGN KEY (APP_SID, CHANGE_SURVEY_CAPABILITY_ID)
    REFERENCES CSR.CUSTOMER_FLOW_CAPABILITY(APP_SID, FLOW_CAPABILITY_ID)
;

ALTER TABLE CSR.IA_TYPE_SURVEY_GROUP ADD CONSTRAINT CK_IATSG_SURVEY_CAP
    FOREIGN KEY (APP_SID, SURVEY_CAPABILITY_ID)
    REFERENCES CSR.CUSTOMER_FLOW_CAPABILITY(APP_SID, FLOW_CAPABILITY_ID)
;



ALTER TABLE CSR.IMG_CHART ADD CONSTRAINT FK_CUSTOMER_IMG_CHART
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE csr.img_chart ADD CONSTRAINT FK_IMG_CHART_SCENARIO_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN (APP_SID, SCENARIO_RUN_SID)
;


ALTER TABLE CSR.IMG_CHART_IND ADD CONSTRAINT FK_IMG_CHART_IMG_CH_SID
    FOREIGN KEY (APP_SID, IMG_CHART_SID)
    REFERENCES CSR.IMG_CHART(APP_SID, IMG_CHART_SID)
;

ALTER TABLE CSR.IMG_CHART_IND ADD CONSTRAINT FK_IND_IMG_CHART_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.IMG_CHART_IND ADD CONSTRAINT FK_MEAS_CONV_IMG_CHART_IND
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.IMG_CHART_REGION ADD CONSTRAINT FK_IMG_CHART_REG_IMG_CH_SID
    FOREIGN KEY (APP_SID, IMG_CHART_SID)
    REFERENCES CSR.IMG_CHART(APP_SID, IMG_CHART_SID)
;

ALTER TABLE CSR.IMG_CHART_REGION ADD CONSTRAINT FK_REGION_IMG_CHART_IND
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.IMP_CONFLICT ADD CONSTRAINT FK_IMP_CONFLICT_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.IMP_CONFLICT ADD CONSTRAINT FK_IMP_CONFLICT_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.IMP_CONFLICT ADD CONSTRAINT RefCSR_USER51
    FOREIGN KEY (APP_SID, RESOLVED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.IMP_CONFLICT ADD CONSTRAINT RefIMP_SESSION50
    FOREIGN KEY (APP_SID, IMP_SESSION_SID)
    REFERENCES CSR.IMP_SESSION(APP_SID, IMP_SESSION_SID)
;



ALTER TABLE CSR.IMP_CONFLICT_VAL ADD CONSTRAINT RefIMP_CONFLICT52
    FOREIGN KEY (APP_SID, IMP_CONFLICT_ID)
    REFERENCES CSR.IMP_CONFLICT(APP_SID, IMP_CONFLICT_ID)
;

ALTER TABLE CSR.IMP_CONFLICT_VAL ADD CONSTRAINT RefIMP_VAL53
    FOREIGN KEY (APP_SID, IMP_VAL_ID)
    REFERENCES CSR.IMP_VAL(APP_SID, IMP_VAL_ID)
;



ALTER TABLE CSR.IMP_IND ADD CONSTRAINT RefIND13
    FOREIGN KEY (APP_SID, MAPS_TO_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.IMP_MEASURE ADD CONSTRAINT RefIMP_IND169
    FOREIGN KEY (APP_SID, IMP_IND_ID)
    REFERENCES CSR.IMP_IND(APP_SID, IMP_IND_ID)
;



ALTER TABLE CSR.IMP_REGION ADD CONSTRAINT RefREGION1191
    FOREIGN KEY (APP_SID, MAPS_TO_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.IMP_SESSION ADD CONSTRAINT FK_IMP_SESSION_CSR_USER
    FOREIGN KEY (APP_SID, OWNER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.IMP_SESSION ADD CONSTRAINT RefCUSTOMER965
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.IMP_VAL ADD CONSTRAINT FK_IMP_VAL_IMP_MEASURE
    FOREIGN KEY (APP_SID, IMP_MEASURE_ID)
    REFERENCES CSR.IMP_MEASURE(APP_SID, IMP_MEASURE_ID)
;

ALTER TABLE CSR.IMP_VAL ADD CONSTRAINT FK_REG_MET_VAL_IMP_VAL
    FOREIGN KEY (APP_SID, SET_REGION_METRIC_VAL_ID)
    REFERENCES CSR.REGION_METRIC_VAL(APP_SID, REGION_METRIC_VAL_ID) ON DELETE SET NULL
;

ALTER TABLE CSR.IMP_VAL ADD CONSTRAINT RefFILE_UPLOAD41
    FOREIGN KEY (APP_SID, FILE_SID)
    REFERENCES CSR.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CSR.IMP_VAL ADD CONSTRAINT RefIMP_IND9
    FOREIGN KEY (APP_SID, IMP_IND_ID)
    REFERENCES CSR.IMP_IND(APP_SID, IMP_IND_ID)
;

ALTER TABLE CSR.IMP_VAL ADD CONSTRAINT RefIMP_REGION10
    FOREIGN KEY (APP_SID, IMP_REGION_ID)
    REFERENCES CSR.IMP_REGION(APP_SID, IMP_REGION_ID)
;

ALTER TABLE CSR.IMP_VAL ADD CONSTRAINT RefIMP_SESSION11
    FOREIGN KEY (APP_SID, IMP_SESSION_SID)
    REFERENCES CSR.IMP_SESSION(APP_SID, IMP_SESSION_SID)
;

ALTER TABLE CSR.IMP_VAL ADD CONSTRAINT RefVAL156
    FOREIGN KEY (APP_SID, SET_VAL_ID)
    REFERENCES CSR.VAL(APP_SID, VAL_ID)
;



ALTER TABLE CSR.IMP_VOCAB ADD CONSTRAINT FK_IMP_VOCAB_CSR_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.IMP_VOCAB ADD CONSTRAINT FK_IMP_VOCAB_IMP_TAG_TYPE
    FOREIGN KEY (IMP_TAG_TYPE_ID)
    REFERENCES CSR.IMP_TAG_TYPE(IMP_TAG_TYPE_ID)
;



ALTER TABLE CSR.IMPORT_FEED_REQUEST ADD CONSTRAINT IMP_FEED_IMP_FEED_REQUEST
    FOREIGN KEY (APP_SID, IMPORT_FEED_SID)
    REFERENCES CSR.IMPORT_FEED(APP_SID, IMPORT_FEED_SID)
;



ALTER TABLE CSR.INBOUND_CMS_ACCOUNT ADD CONSTRAINT FK_FLOW_INBOUND_CMS_ACCOUNT
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.INBOUND_CMS_ACCOUNT ADD CONSTRAINT FK_INBOUND_CMS_ACCOUNT_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.INBOUND_CMS_ACCOUNT ADD CONSTRAINT FK_REGION_INBOUND_CMS_ACCOUNT
    FOREIGN KEY (APP_SID, DEFAULT_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.INBOUND_ISSUE_ACCOUNT ADD CONSTRAINT FK_ISS_TYPE_INB_ISS_ACC
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID)
    REFERENCES CSR.ISSUE_TYPE(APP_SID, ISSUE_TYPE_ID)
;



ALTER TABLE CSR.IND ADD CONSTRAINT FK_IND_APP_CUST_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.IND ADD CONSTRAINT FK_IND_PERIOD_INTERVAL
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.IND ADD CONSTRAINT FK_IND_REGION_TREE
    FOREIGN KEY (APP_SID, PROP_DOWN_REGION_TREE_SID)
    REFERENCES CSR.REGION_TREE(APP_SID, REGION_TREE_ROOT_SID)
;

ALTER TABLE CSR.IND ADD CONSTRAINT FK_MEASURE_IND
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.IND ADD CONSTRAINT FK_MEASURE_IND_GAS
    FOREIGN KEY (APP_SID, GAS_MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.IND ADD CONSTRAINT RefFACTOR_TYPE1733
    FOREIGN KEY (FACTOR_TYPE_ID)
    REFERENCES CSR.FACTOR_TYPE(FACTOR_TYPE_ID)
;

ALTER TABLE CSR.IND ADD CONSTRAINT RefGAS_TYPE1702
    FOREIGN KEY (GAS_TYPE_ID)
    REFERENCES CSR.GAS_TYPE(GAS_TYPE_ID)
;

ALTER TABLE CSR.IND ADD CONSTRAINT RefIND_ACTIVITY_TYPE1128
    FOREIGN KEY (IND_ACTIVITY_TYPE_ID)
    REFERENCES CSR.IND_ACTIVITY_TYPE(IND_ACTIVITY_TYPE_ID)
;

ALTER TABLE CSR.IND ADD CONSTRAINT RefIND1663
    FOREIGN KEY (APP_SID, MAP_TO_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.IND_ACCURACY_TYPE ADD CONSTRAINT RefACCURACY_TYPE436
    FOREIGN KEY (APP_SID, ACCURACY_TYPE_ID)
    REFERENCES CSR.ACCURACY_TYPE(APP_SID, ACCURACY_TYPE_ID)
;

ALTER TABLE CSR.IND_ACCURACY_TYPE ADD CONSTRAINT RefIND437
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.IND_DESCRIPTION ADD CONSTRAINT FK_IND_DESCRIPTION_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.IND_FLAG ADD CONSTRAINT RefIND176
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.IND_SEL_GROUP_MEMBER_DESC ADD CONSTRAINT FK_IND_SEL_GRP_DESC_IND_SEL
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND_SELECTION_GROUP_MEMBER(APP_SID, IND_SID)
;



ALTER TABLE CSR.IND_SELECTION_GROUP ADD CONSTRAINT FK_IND_SEL_GROUP_IND
    FOREIGN KEY (APP_SID, MASTER_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.IND_SELECTION_GROUP_MEMBER ADD CONSTRAINT FK_IND_SEL_GRP_MEM_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.IND_SELECTION_GROUP_MEMBER ADD CONSTRAINT FK_IND_SEL_GRP_MEM_SEL_GRP
    FOREIGN KEY (APP_SID, MASTER_IND_SID)
    REFERENCES CSR.IND_SELECTION_GROUP(APP_SID, MASTER_IND_SID)
;



ALTER TABLE CSR.IND_SET ADD CONSTRAINT FK_IND_SET_OWNER
    FOREIGN KEY (APP_SID, OWNER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.IND_SET_IND ADD CONSTRAINT FK_IND_SET_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.IND_SET_IND ADD CONSTRAINT FK_IND_SET_IND_IND_SET
    FOREIGN KEY (APP_SID, IND_SET_ID)
    REFERENCES CSR.IND_SET(APP_SID, IND_SET_ID)
;



ALTER TABLE CSR.IND_START_POINT ADD CONSTRAINT RefCSR_USER1050
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.IND_START_POINT ADD CONSTRAINT RefIND1051
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.IND_TAG ADD CONSTRAINT RefIND227
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.IND_TAG ADD CONSTRAINT RefTAG228
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.IND_VALIDATION_RULE ADD CONSTRAINT FK_IND_VAL_RULE_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.IND_WINDOW ADD CONSTRAINT RefIND30
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.INDEX_SECTION_ITEM ADD CONSTRAINT RefINDEX_SECTION65
    FOREIGN KEY (INDEX_SECTION_ID)
    REFERENCES CSR.INDEX_SECTION(INDEX_SECTION_ID)
;



ALTER TABLE CSR.INDEX_SECTION_ITEM_LINK ADD CONSTRAINT RefINDEX_SECTION_ITEM64
    FOREIGN KEY (INDEX_SECTION_ITEM_ID)
    REFERENCES CSR.INDEX_SECTION_ITEM(INDEX_SECTION_ITEM_ID)
;



ALTER TABLE CSR.INIT_CREATE_PAGE_EL_LAYOUT ADD CONSTRAINT FK_INIT_EL_LAYT_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.INIT_CREATE_PAGE_EL_LAYOUT ADD CONSTRAINT FK_INITIATIVE_EL_LAYOUT_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.INIT_TAB_ELEMENT_LAYOUT ADD CONSTRAINT FK_INIT_TAB_LAYT_PLUGIN
    FOREIGN KEY (PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID)
;

ALTER TABLE CSR.INIT_TAB_ELEMENT_LAYOUT ADD CONSTRAINT FK_INIT_TAB_LAYT_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.INIT_TAB_ELEMENT_LAYOUT ADD CONSTRAINT FK_INITIATIVE_TAB_LAYOUT_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_CUST_INIT_SAV_TYPE_INIT
    FOREIGN KEY (APP_SID, SAVING_TYPE_ID)
    REFERENCES CSR.CUSTOMER_INIT_SAVING_TYPE(APP_SID, SAVING_TYPE_ID)
;

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_CUSTOMER_INIT
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_DOC_LIB_INITIATIVE
    FOREIGN KEY (APP_SID, DOC_LIBRARY_SID)
    REFERENCES CSR.DOC_LIBRARY(APP_SID, DOC_LIBRARY_SID)
;

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_FLOW_ITEM_INIT
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID, FLOW_SID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID, FLOW_SID)
;

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_INIT_PROJ_RAG_ST_INIT
    FOREIGN KEY (APP_SID, PROJECT_SID, RAG_STATUS_ID)
    REFERENCES CSR.INITIATIVE_PROJECT_RAG_STATUS(APP_SID, PROJECT_SID, RAG_STATUS_ID)
;

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_INIT_PROJECT_INIT
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_INITI_PARENT_INITI
    FOREIGN KEY (APP_SID, PARENT_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;



ALTER TABLE CSR.INITIATIVE_COMMENT ADD CONSTRAINT FK_INIT_INIT_COMMENT
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;

ALTER TABLE CSR.INITIATIVE_COMMENT ADD CONSTRAINT FK_USER_INIT_COMMENT
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.INITIATIVE_EVENT ADD CONSTRAINT FK_INIT_EVENT_INIT
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;

ALTER TABLE CSR.INITIATIVE_EVENT ADD CONSTRAINT FK_INIT_EVENT_USER
    FOREIGN KEY (APP_SID, CREATED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.INITIATIVE_GROUP ADD CONSTRAINT FK_CUSTOMER_INIT_GRP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.INITIATIVE_GROUP_FLOW_STATE ADD CONSTRAINT FK_FL_ST_INIT_GRP_FL_ST
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.INITIATIVE_GROUP_FLOW_STATE ADD CONSTRAINT FK_INT_PR_UGRP_INT_GRP_FL_ST
    FOREIGN KEY (APP_SID, INITIATIVE_USER_GROUP_ID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT_USER_GROUP(APP_SID, INITIATIVE_USER_GROUP_ID, PROJECT_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.INITIATIVE_GROUP_MEMBER ADD CONSTRAINT FK_INIT_GRP_INIT_GRP_MEMBER
    FOREIGN KEY (APP_SID, INITIATIVE_GROUP_ID)
    REFERENCES CSR.INITIATIVE_GROUP(APP_SID, INITIATIVE_GROUP_ID)
;

ALTER TABLE CSR.INITIATIVE_GROUP_MEMBER ADD CONSTRAINT FK_INIT_INIT_GRP_MEMBER
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;



ALTER TABLE CSR.INITIATIVE_GROUP_USER ADD CONSTRAINT FK_INIT_GRP_INIT_GRP_USER
    FOREIGN KEY (APP_SID, INITIATIVE_GROUP_ID)
    REFERENCES CSR.INITIATIVE_GROUP(APP_SID, INITIATIVE_GROUP_ID)
;

ALTER TABLE CSR.INITIATIVE_GROUP_USER ADD CONSTRAINT FK_USER_INIT_GROUP_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.INITIATIVE_HEADER_ELEMENT ADD CONSTRAINT FK_INIT_HEADER_EL_INIT_METRIC
    FOREIGN KEY (APP_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.INITIATIVE_METRIC(APP_SID, INITIATIVE_METRIC_ID)
;

ALTER TABLE CSR.INITIATIVE_HEADER_ELEMENT ADD CONSTRAINT FK_INIT_HEADER_EL_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;



ALTER TABLE CSR.INITIATIVE_IMPORT_MAP_MRU ADD CONSTRAINT FK_USER_IMP_MAP_MRU
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.INITIATIVE_IMPORT_TEMPLATE ADD CONSTRAINT FK_CUSTOMER_IMP_TPL
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.INITIATIVE_IMPORT_TEMPLATE ADD CONSTRAINT FK_PROJET_IMP_TPL
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;



ALTER TABLE CSR.INITIATIVE_IMPORT_TEMPLATE_MAP ADD CONSTRAINT FK_IMP_TPL_IMP_TPL_MAP
    FOREIGN KEY (APP_SID, IMPORT_TEMPLATE_ID)
    REFERENCES CSR.INITIATIVE_IMPORT_TEMPLATE(APP_SID, IMPORT_TEMPLATE_ID)
;



ALTER TABLE CSR.INITIATIVE_METRIC ADD CONSTRAINT FK_CUSTOMER_INIT_METRIC
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.INITIATIVE_METRIC ADD CONSTRAINT RefMEASURE4030
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;



ALTER TABLE CSR.INITIATIVE_METRIC_ASSOC ADD CONSTRAINT FK_PRJ_INIT_MET_ASSOC
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_ASSOC ADD CONSTRAINT FK_PRJ_INIT_MET_ASSOC_MEAS
    FOREIGN KEY (APP_SID, PROJECT_SID, MEASURED_METRIC_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_ASSOC ADD CONSTRAINT FK_PRJ_INIT_MET_ASSOC_PROP
    FOREIGN KEY (APP_SID, PROJECT_SID, PROPOSED_METRIC_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
;



ALTER TABLE CSR.INITIATIVE_METRIC_GROUP ADD CONSTRAINT FK_PRJ_INIT_MET_GRP
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;



ALTER TABLE CSR.INITIATIVE_METRIC_STATE_IND ADD CONSTRAINT FK_FLSTGRP_INITMETIND
    FOREIGN KEY (APP_SID, FLOW_STATE_GROUP_ID)
    REFERENCES CSR.FLOW_STATE_GROUP(APP_SID, FLOW_STATE_GROUP_ID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_STATE_IND ADD CONSTRAINT FK_IND_INITMETIND
    FOREIGN KEY (APP_SID, IND_SID, MEASURE_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID, MEASURE_SID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_STATE_IND ADD CONSTRAINT FK_IND_INITMETIND_PRI
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_STATE_IND ADD CONSTRAINT FK_INTIMET_INITMETIND
    FOREIGN KEY (APP_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.INITIATIVE_METRIC(APP_SID, INITIATIVE_METRIC_ID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_STATE_IND ADD CONSTRAINT FK_INTIMET_INITMETIND_MEAS
    FOREIGN KEY (APP_SID, INITIATIVE_METRIC_ID, MEASURE_SID)
    REFERENCES CSR.INITIATIVE_METRIC(APP_SID, INITIATIVE_METRIC_ID, MEASURE_SID)
;



ALTER TABLE CSR.INITIATIVE_METRIC_TAG_IND ADD CONSTRAINT FK_AGGRTAGGRP_INITMETTAGIND
    FOREIGN KEY (APP_SID, AGGR_TAG_GROUP_ID)
    REFERENCES CSR.AGGR_TAG_GROUP(APP_SID, AGGR_TAG_GROUP_ID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_TAG_IND ADD CONSTRAINT FK_IND_INITMETTAGIND
    FOREIGN KEY (APP_SID, IND_SID, MEASURE_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID, MEASURE_SID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_TAG_IND ADD CONSTRAINT FK_IND_INITMETTAGIND_PRI
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_TAG_IND ADD CONSTRAINT FK_INTIMET_INITMETTAGIND
    FOREIGN KEY (APP_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.INITIATIVE_METRIC(APP_SID, INITIATIVE_METRIC_ID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_TAG_IND ADD CONSTRAINT FK_INTIMET_INITMETTAGIND_MEAS
    FOREIGN KEY (APP_SID, INITIATIVE_METRIC_ID, MEASURE_SID)
    REFERENCES CSR.INITIATIVE_METRIC(APP_SID, INITIATIVE_METRIC_ID, MEASURE_SID)
;



ALTER TABLE CSR.INITIATIVE_METRIC_VAL ADD CONSTRAINT FK_CONV_INIT_MET_INST
    FOREIGN KEY (APP_SID, ENTRY_MEASURE_CONVERSION_ID, MEASURE_SID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_VAL ADD CONSTRAINT FK_INIT_INIT_METRIC_INST
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;

ALTER TABLE CSR.INITIATIVE_METRIC_VAL ADD CONSTRAINT FK_PRJ_INIT_MET_INIT_MET_INST
    FOREIGN KEY (APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
;



ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_FLOW_STATE_INIT_PERIOD
    FOREIGN KEY (APP_SID, SET_FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_INIT_INIT_PERIOD
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_INIT_REGION_INIT_PERIOD
    FOREIGN KEY (APP_SID, INITIATIVE_SID, REGION_SID)
    REFERENCES CSR.INITIATIVE_REGION(APP_SID, INITIATIVE_SID, REGION_SID)
;

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_PRJ_INIT_PRD_ST_INIT_PRD
    FOREIGN KEY (APP_SID, PROJECT_SID, INITIATIVE_PERIOD_STATUS_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_PERIOD_STAT(APP_SID, PROJECT_SID, INITIATIVE_PERIOD_STATUS_ID)
;

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_REGION_INIT_PERIOD
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.INITIATIVE_PERIOD_STATUS ADD CONSTRAINT FK_CUST_INIT_PERIOD_STAT
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.INITIATIVE_PROJECT ADD CONSTRAINT FK_CUSTOMER_PROJECT
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.INITIATIVE_PROJECT ADD CONSTRAINT FK_FLOW_PROJECT
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.INITIATIVE_PROJECT ADD CONSTRAINT FK_FLOW_STATE_PRJ
    FOREIGN KEY (APP_SID, LIVE_FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID)
;



ALTER TABLE CSR.INITIATIVE_PROJECT_RAG_STATUS ADD CONSTRAINT FK_INIT_PR_INIT_PR_RAG_ST
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE CSR.INITIATIVE_PROJECT_RAG_STATUS ADD CONSTRAINT FK_RAG_ST_INIT_PR_RAG_ST
    FOREIGN KEY (APP_SID, RAG_STATUS_ID)
    REFERENCES CSR.RAG_STATUS(APP_SID, RAG_STATUS_ID)
;



ALTER TABLE CSR.INITIATIVE_PROJECT_TAB ADD CONSTRAINT FK_INIT_PRJ_INIT_PRJ_TAB
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE CSR.INITIATIVE_PROJECT_TAB ADD CONSTRAINT FK_PLUGIN_INIT_PRJ_TAB
    FOREIGN KEY (PLUGIN_ID, PLUGIN_TYPE_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID, PLUGIN_TYPE_ID)
;



ALTER TABLE CSR.INITIATIVE_PROJECT_TAB_GROUP ADD CONSTRAINT FK_INIT_PRJ_TB_INIT_PRJ_TB_GRP
    FOREIGN KEY (APP_SID, PROJECT_SID, PLUGIN_ID)
    REFERENCES CSR.INITIATIVE_PROJECT_TAB(APP_SID, PROJECT_SID, PLUGIN_ID)
;



ALTER TABLE CSR.INITIATIVE_PROJECT_TEAM ADD CONSTRAINT FK_INIT_INIT_PRJ_TEAM
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;



ALTER TABLE CSR.INITIATIVE_PROJECT_USER_GROUP ADD CONSTRAINT FK_INIT_PRJ_INIT_PRJ_USR_GRP
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.INITIATIVE_PROJECT_USER_GROUP ADD CONSTRAINT FK_INT_US_GRP_INT_PRJ_USR_GRP
    FOREIGN KEY (APP_SID, INITIATIVE_USER_GROUP_ID)
    REFERENCES CSR.INITIATIVE_USER_GROUP(APP_SID, INITIATIVE_USER_GROUP_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.INITIATIVE_REGION ADD CONSTRAINT FK_INIT_INIT_REGION
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;

ALTER TABLE CSR.INITIATIVE_REGION ADD CONSTRAINT FK_REGION_INIT_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.INITIATIVE_SPONSOR ADD CONSTRAINT FK_INIT_INIT_PRJ_SPONSOR
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;



ALTER TABLE CSR.INITIATIVE_TAG ADD CONSTRAINT FK_INIT_INIT_TAG
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;

ALTER TABLE CSR.INITIATIVE_TAG ADD CONSTRAINT FK_TAG_INIT_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.INITIATIVE_USER ADD CONSTRAINT FK_INIT_INIT_USER
    FOREIGN KEY (APP_SID, INITIATIVE_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID, PROJECT_SID) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.INITIATIVE_USER ADD CONSTRAINT FK_INIT_PRJ_USR_GRP_INIT_USR
    FOREIGN KEY (APP_SID, INITIATIVE_USER_GROUP_ID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT_USER_GROUP(APP_SID, INITIATIVE_USER_GROUP_ID, PROJECT_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.INITIATIVE_USER ADD CONSTRAINT FK_USER_INIT_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.INITIATIVE_USER_MSG ADD CONSTRAINT FK_INIT_INIT_USER_MSG
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;

ALTER TABLE CSR.INITIATIVE_USER_MSG ADD CONSTRAINT FK_USER_MSG_INIT_USER_MSG
    FOREIGN KEY (APP_SID, USER_MSG_ID)
    REFERENCES CSR.USER_MSG(APP_SID, USER_MSG_ID)
;



ALTER TABLE CSR.INITIATIVES_OPTIONS ADD CONSTRAINT FK_CUSTOMER_INIT_OPTIONS
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.INSTANCE_DATAVIEW ADD CONSTRAINT RefDATAVIEW237
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;



ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_IA_FLOW_ITEM
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_IA_IA_TYPE
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_IA_SUMMARY_QSR
    FOREIGN KEY (APP_SID, SUMMARY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_IA_USER_AUDIT_CONTACT
    FOREIGN KEY (APP_SID, AUDIT_CONTACT_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_IA_USER_AUDITOR
    FOREIGN KEY (APP_SID, AUDITOR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_INT_AUD_CLSR_TYPE
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID, AUDIT_CLOSURE_TYPE_ID)
    REFERENCES CSR.AUDIT_TYPE_CLOSURE_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID, AUDIT_CLOSURE_TYPE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_INTERNAL_AUDIT_AUDITOR_SUP
    FOREIGN KEY (APP_SID, AUDITOR_COMPANY_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_NC_SCORE_THRSH
    FOREIGN KEY (APP_SID, NC_SCORE_THRSH_ID)
    REFERENCES CSR.SCORE_THRESHOLD(APP_SID, SCORE_THRESHOLD_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_OVW_NC_SCORE_THRSH
    FOREIGN KEY (APP_SID, OVW_NC_SCORE_THRSH_ID)
    REFERENCES CSR.SCORE_THRESHOLD(APP_SID, SCORE_THRESHOLD_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_QSR_INTERNAL_AUDIT
    FOREIGN KEY (APP_SID, SURVEY_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT RefCSR_USER1349
    FOREIGN KEY (APP_SID, CREATED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT RefCUSTOMER1351
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT RefQUICK_SURVEY1347
    FOREIGN KEY (APP_SID, SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT RefREGION1348
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT ADD CONSTRAINT FK_IA_COMPL_PERMIT
	FOREIGN KEY (APP_SID, PERMIT_ID)
	REFERENCES CSR.COMPLIANCE_PERMIT (APP_SID, COMPLIANCE_PERMIT_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_FILE ADD CONSTRAINT FK_IA_FILE_CONNECTION_AUDIT
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_FILE ADD CONSTRAINT FK_IA_FILE_CONNECTION_FILE
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_FILE_DATA_ID)
    REFERENCES CSR.INTERNAL_AUDIT_FILE_DATA(APP_SID, INTERNAL_AUDIT_FILE_DATA_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.INTERNAL_AUDIT_POSTIT ADD CONSTRAINT FK_IA_IA_POSTIT
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_POSTIT ADD CONSTRAINT FK_IA_POSTIT
    FOREIGN KEY (APP_SID, POSTIT_ID)
    REFERENCES CSR.POSTIT(APP_SID, POSTIT_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.INTERNAL_AUDIT_SURVEY ADD CONSTRAINT FK_IAS_AUDIT
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_SURVEY ADD CONSTRAINT FK_IAS_IATS
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_SURVEY_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE_SURVEY(APP_SID, INTERNAL_AUDIT_TYPE_SURVEY_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_SURVEY ADD CONSTRAINT FK_IAS_RESPONSE
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_SURVEY ADD CONSTRAINT FK_IAS_SURVEY
    FOREIGN KEY (APP_SID, SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;



ALTER TABLE CSR.INTERNAL_AUDIT_TAG ADD CONSTRAINT FK_INT_AUDIT_TAG_IA
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TAG ADD CONSTRAINT FK_INT_AUDIT_TAG_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_CUSTOMER_IA_TYPE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_IA_TYPE_NC_SCORE_TYPE
    FOREIGN KEY (APP_SID, NC_SCORE_TYPE_ID)
    REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_IAT_FLOW
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_IAT_SUMMARY_SURVEY
    FOREIGN KEY (APP_SID, SUMMARY_SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_INT_AUD_DEF_SURVEY
    FOREIGN KEY (APP_SID, DEFAULT_SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_INTERNAL_AUDIT_TYPE_GROUP
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_GROUP_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE_GROUP(APP_SID, INTERNAL_AUDIT_TYPE_GROUP_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_ROLE_IA_AUDIT_CONTACT
    FOREIGN KEY (APP_SID, AUDIT_CONTACT_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_ROLE_IA_AUDITOR
    FOREIGN KEY (APP_SID, AUDITOR_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_LOCKED_TAG ADD CONSTRAINT FK_AUD_SURV_LOCK_TAG_AUDIT
	FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
	REFERENCES CSR.INTERNAL_AUDIT (APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_LOCKED_TAG ADD CONSTRAINT FK_AUD_SURV_LOCK_TAG_TAG_GROUP
	FOREIGN KEY (APP_SID, TAG_GROUP_ID)
	REFERENCES CSR.TAG_GROUP (APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_LOCKED_TAG ADD CONSTRAINT FK_AUD_SURV_LOCK_TAG_TAG
	FOREIGN KEY (APP_SID, TAG_ID)
	REFERENCES CSR.TAG (APP_SID, TAG_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE ADD CONSTRAINT FK_INTERNAL_AUDIT_SOURCE
    FOREIGN KEY (INTERNAL_AUDIT_TYPE_SOURCE_ID)
    REFERENCES  CSR.INTERNAL_AUDIT_TYPE_SOURCE(INTERNAL_AUDIT_TYPE_SOURCE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE_CARRY_FWD ADD CONSTRAINT FK_IATCF_FROM_IAT
    FOREIGN KEY (APP_SID, FROM_INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE_CARRY_FWD ADD CONSTRAINT FK_IATCF_TO_IAT
    FOREIGN KEY (APP_SID, TO_INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE_GROUP ADD CONSTRAINT FK_ISSUE_TYPE
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID)
    REFERENCES CSR.ISSUE_TYPE(APP_SID, ISSUE_TYPE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE_SURVEY ADD CONSTRAINT FK_IATS_AUDIT_TYPE
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE_SURVEY ADD CONSTRAINT FK_IATS_DEFAULT_SURVEY
    FOREIGN KEY (APP_SID, DEFAULT_SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE_SURVEY ADD CONSTRAINT FK_IATS_GROUP
    FOREIGN KEY (APP_SID, IA_TYPE_SURVEY_GROUP_ID)
    REFERENCES CSR.IA_TYPE_SURVEY_GROUP(APP_SID, IA_TYPE_SURVEY_GROUP_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE_TAG_GROUP ADD CONSTRAINT FK_INT_AUDIT_TYP_TAG_GR_TAG_GR
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.INTERNAL_AUDIT_TYPE_TAG_GROUP ADD CONSTRAINT FK_INT_AUDIT_TYPE_TAG_GR_AU_TY
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE csr.internal_audit_score ADD CONSTRAINT fk_internal_audit_score_ia 
	FOREIGN KEY (app_sid, internal_audit_sid) 
	REFERENCES csr.internal_audit (app_sid, internal_audit_sid);
	
ALTER TABLE csr.internal_audit_score ADD CONSTRAINT fk_internal_audit_score_st 
	 FOREIGN KEY (app_sid, score_type_id) 
	 REFERENCES csr.score_type (app_sid, score_type_id),
	 	
ALTER TABLE csr.internal_audit_score ADD CONSTRAINT fk_internal_audit_score_sth 
	FOREIGN KEY (app_sid, score_threshold_id) 
	REFERENCES csr.score_threshold (app_sid, score_threshold_id);

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ASS_ROLE_ISSUE
    FOREIGN KEY (APP_SID, ASSIGNED_TO_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_CORR_ISSUE
    FOREIGN KEY (APP_SID, CORRESPONDENT_ID)
    REFERENCES CSR.CORRESPONDENT(APP_SID, CORRESPONDENT_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_IPRIO_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_PRIORITY_ID)
    REFERENCES CSR.ISSUE_PRIORITY(APP_SID, ISSUE_PRIORITY_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_IPRIO_ISSUE_LAST
    FOREIGN KEY (APP_SID, LAST_ISSUE_PRIORITY_ID)
    REFERENCES CSR.ISSUE_PRIORITY(APP_SID, ISSUE_PRIORITY_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISS_ISS_SUP
    FOREIGN KEY (APP_SID, ISSUE_SUPPLIER_ID)
    REFERENCES CSR.ISSUE_SUPPLIER(APP_SID, ISSUE_SUPPLIER_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISS_ISS_SURV_ANS
    FOREIGN KEY (APP_SID, ISSUE_SURVEY_ANSWER_ID)
    REFERENCES CSR.ISSUE_SURVEY_ANSWER(APP_SID, ISSUE_SURVEY_ANSWER_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISS_ISS_TYP_LAST_RAG_STATUS
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID, LAST_RAG_STATUS_ID)
    REFERENCES CSR.ISSUE_TYPE_RAG_STATUS(APP_SID, ISSUE_TYPE_ID, RAG_STATUS_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISS_ISS_TYP_RAG_STATUS
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID, RAG_STATUS_ID)
    REFERENCES CSR.ISSUE_TYPE_RAG_STATUS(APP_SID, ISSUE_TYPE_ID, RAG_STATUS_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISSUE_ACTION_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_ACTION_ID)
    REFERENCES CSR.ISSUE_ACTION(APP_SID, ISSUE_ACTION_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISSUE_FIRST_ISSUE_LOG
    FOREIGN KEY (APP_SID, FIRST_ISSUE_LOG_ID)
    REFERENCES CSR.ISSUE_LOG(APP_SID, ISSUE_LOG_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISSUE_INIT_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_INITIATIVE_ID)
    REFERENCES CSR.ISSUE_INITIATIVE(APP_SID, ISSUE_INITIATIVE_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISSUE_ISSUE
    FOREIGN KEY (APP_SID, PARENT_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISSUE_LAST_ISSUE_LOG
    FOREIGN KEY (APP_SID, LAST_ISSUE_LOG_ID)
    REFERENCES CSR.ISSUE_LOG(APP_SID, ISSUE_LOG_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISSUE_METER_MISSING_DATA
    FOREIGN KEY (APP_SID, ISSUE_METER_MISSING_DATA_ID)
    REFERENCES CSR.ISSUE_METER_MISSING_DATA(APP_SID, ISSUE_METER_MISSING_DATA_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISSUE_TYPE_LAST_REGION
    FOREIGN KEY (APP_SID, LAST_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_OWNER_CSRU_ISSUE
    FOREIGN KEY (APP_SID, OWNER_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_OWNER_ROLE_ISSUE
    FOREIGN KEY (APP_SID, OWNER_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_REGION_ISSUE
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_REJECTED_CSRU_ISSUE
    FOREIGN KEY (APP_SID, REJECTED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefCSR_USER1683
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefCSR_USER1686
    FOREIGN KEY (APP_SID, ASSIGNED_TO_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefCSR_USER1689
    FOREIGN KEY (APP_SID, RESOLVED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefCSR_USER1690
    FOREIGN KEY (APP_SID, CLOSED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefISSUE_METER_ALARM2171
    FOREIGN KEY (APP_SID, ISSUE_METER_ALARM_ID)
    REFERENCES CSR.ISSUE_METER_ALARM(APP_SID, ISSUE_METER_ALARM_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefISSUE_METER_DATA_SOURCE2769
    FOREIGN KEY (APP_SID, ISSUE_METER_DATA_SOURCE_ID)
    REFERENCES CSR.ISSUE_METER_DATA_SOURCE(APP_SID, ISSUE_METER_DATA_SOURCE_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefISSUE_METER_RAW_DATA2211
    FOREIGN KEY (APP_SID, ISSUE_METER_RAW_DATA_ID)
    REFERENCES CSR.ISSUE_METER_RAW_DATA(APP_SID, ISSUE_METER_RAW_DATA_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefISSUE_METER2028
    FOREIGN KEY (APP_SID, ISSUE_METER_ID)
    REFERENCES CSR.ISSUE_METER(APP_SID, ISSUE_METER_ID)
;

-- This is named RefISSUE_NON_COMPLIANCE1373 on prod systems
ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefISSUE_NON_COMPLIANCE1682
    FOREIGN KEY (APP_SID, ISSUE_NON_COMPLIANCE_ID)
    REFERENCES CSR.ISSUE_NON_COMPLIANCE(APP_SID, ISSUE_NON_COMPLIANCE_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefISSUE_PENDING_VAL1684
    FOREIGN KEY (APP_SID, ISSUE_PENDING_VAL_ID)
    REFERENCES CSR.ISSUE_PENDING_VAL(APP_SID, ISSUE_PENDING_VAL_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefISSUE_SHEET_VALUE1685
    FOREIGN KEY (APP_SID, ISSUE_SHEET_VALUE_ID)
    REFERENCES CSR.ISSUE_SHEET_VALUE(APP_SID, ISSUE_SHEET_VALUE_ID)
;

ALTER TABLE CSR.ISSUE ADD CONSTRAINT RefISSUE_TYPE1688
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID)
    REFERENCES CSR.ISSUE_TYPE(APP_SID, ISSUE_TYPE_ID)
;

ALTER TABLE csr.issue ADD CONSTRAINT fk_issue_issue_due_source 
	FOREIGN KEY (app_sid, issue_due_source_id) 
	REFERENCES csr.issue_due_source (app_sid, issue_due_source_id);

ALTER TABLE csr.issue ADD CONSTRAINT fk_issue_permit
	FOREIGN KEY (app_sid, permit_id) 
	REFERENCES csr.compliance_permit (app_sid, compliance_permit_id);

ALTER TABLE csr.issue ADD CONSTRAINT fk_issue_copied_from
	FOREIGN KEY (app_sid, issue_id)
	REFERENCES csr.issue (app_sid, issue_id);

ALTER TABLE CSR.ISSUE_ACTION ADD CONSTRAINT RefCUSTOMER1696
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_ASS_CSRU_AIL
    FOREIGN KEY (APP_SID, ASSIGNED_TO_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_ASS_ROLE_IAL
    FOREIGN KEY (APP_SID, ASSIGNED_TO_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_BY_CSRU_AIL
    FOREIGN KEY (APP_SID, LOGGED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_CUSTOMER_IAL
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_IA_TYPE_LOG
    FOREIGN KEY (ISSUE_ACTION_TYPE_ID)
    REFERENCES CSR.ISSUE_ACTION_TYPE(ISSUE_ACTION_TYPE_ID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_IL_IAL
    FOREIGN KEY (APP_SID, ISSUE_LOG_ID)
    REFERENCES CSR.ISSUE_LOG(APP_SID, ISSUE_LOG_ID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_ILI_IALI
    FOREIGN KEY (APP_SID, ISSUE_LOG_ID, ISSUE_ID)
    REFERENCES CSR.ISSUE_LOG(APP_SID, ISSUE_LOG_ID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_IPRIO_IAL_NEW
    FOREIGN KEY (APP_SID, NEW_PRIORITY_ID)
    REFERENCES CSR.ISSUE_PRIORITY(APP_SID, ISSUE_PRIORITY_ID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_IPRIO_IAL_OLD
    FOREIGN KEY (APP_SID, OLD_PRIORITY_ID)
    REFERENCES CSR.ISSUE_PRIORITY(APP_SID, ISSUE_PRIORITY_ID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_ISSUE_IAL
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_LOG_CORR_IAL
    FOREIGN KEY (APP_SID, LOGGED_BY_CORRESPONDENT_ID)
    REFERENCES CSR.CORRESPONDENT(APP_SID, CORRESPONDENT_ID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_RE_CSRU_AIL
    FOREIGN KEY (APP_SID, RE_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_ACTION_LOG ADD CONSTRAINT FK_RE_ROLE_AIL
    FOREIGN KEY (APP_SID, RE_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.ISSUE_ALERT ADD CONSTRAINT FK_ISSUE_ALERT_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE_ALERT ADD CONSTRAINT FK_ISSUE_ALERT_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.ISSUE_CUSTOM_FIELD ADD CONSTRAINT FK_ISS_CUST_FLD_ISS_TYP
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID)
    REFERENCES CSR.ISSUE_TYPE(APP_SID, ISSUE_TYPE_ID)
;



ALTER TABLE CSR.ISSUE_CUSTOM_FIELD_DATE_VAL ADD CONSTRAINT FK_ISS_CUST_FLD_DATE_FLD
    FOREIGN KEY (APP_SID, ISSUE_CUSTOM_FIELD_ID)
    REFERENCES CSR.ISSUE_CUSTOM_FIELD(APP_SID, ISSUE_CUSTOM_FIELD_ID)
;

ALTER TABLE CSR.ISSUE_CUSTOM_FIELD_DATE_VAL ADD CONSTRAINT FK_ISSUE_CUST_FLD_DATE_VAL
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;



ALTER TABLE CSR.ISSUE_CUSTOM_FIELD_OPT_SEL ADD CONSTRAINT FK_ISS_CUST_FLD_OPT_OPT
    FOREIGN KEY (APP_SID, ISSUE_CUSTOM_FIELD_ID, ISSUE_CUSTOM_FIELD_OPT_ID)
    REFERENCES CSR.ISSUE_CUSTOM_FIELD_OPTION(APP_SID, ISSUE_CUSTOM_FIELD_ID, ISSUE_CUSTOM_FIELD_OPT_ID)
;

ALTER TABLE CSR.ISSUE_CUSTOM_FIELD_OPT_SEL ADD CONSTRAINT FK_ISSUE_CUST_FLD_OPT_SEL
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;



ALTER TABLE CSR.ISSUE_CUSTOM_FIELD_OPTION ADD CONSTRAINT FK_ISS_CUST_FLD_OPT_FLD
    FOREIGN KEY (APP_SID, ISSUE_CUSTOM_FIELD_ID)
    REFERENCES CSR.ISSUE_CUSTOM_FIELD(APP_SID, ISSUE_CUSTOM_FIELD_ID)
;



ALTER TABLE CSR.ISSUE_CUSTOM_FIELD_STR_VAL ADD CONSTRAINT FK_ISS_CUST_FLD_STR_FLD
    FOREIGN KEY (APP_SID, ISSUE_CUSTOM_FIELD_ID)
    REFERENCES CSR.ISSUE_CUSTOM_FIELD(APP_SID, ISSUE_CUSTOM_FIELD_ID)
;

ALTER TABLE CSR.ISSUE_CUSTOM_FIELD_STR_VAL ADD CONSTRAINT FK_ISSUE_CUST_FLD_STR_VAL
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE_COMPLIANCE_REGION ADD CONSTRAINT FK_ISSUE_CMP_REG_CMP_ITM_REG
	FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
	REFERENCES CSR.COMPLIANCE_ITEM_REGION (APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE csr.issue_due_source ADD CONSTRAINT fk_issue_due_source_issue_type
	FOREIGN KEY (app_sid, issue_type_id) 
	REFERENCES csr.issue_type (app_sid, issue_type_id);

ALTER TABLE CSR.ISSUE_INITIATIVE ADD CONSTRAINT FK_CUSTOMER_ISSUE_INIT
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_INITIATIVE ADD CONSTRAINT FK_INIT_ISSUE_INIT
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID)
;



ALTER TABLE CSR.ISSUE_INVOLVEMENT ADD CONSTRAINT FK_ISSUE_INVOLVEMENT_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE_INVOLVEMENT ADD CONSTRAINT FK_ISSUE_INVOLVEMENT_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.ISSUE_INVOLVEMENT ADD CONSTRAINT RefCSR_USER4152
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.ISSUE_LOG ADD CONSTRAINT FK_CORR_ISSUE_LOG
    FOREIGN KEY (APP_SID, LOGGED_BY_CORRESPONDENT_ID)
    REFERENCES CSR.CORRESPONDENT(APP_SID, CORRESPONDENT_ID)
;

ALTER TABLE CSR.ISSUE_LOG ADD CONSTRAINT FK_ISSUE_LOG_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE_LOG ADD CONSTRAINT RefCSR_USER619
    FOREIGN KEY (APP_SID, LOGGED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.ISSUE_LOG_FILE ADD CONSTRAINT RefCUSTOMER1650
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_LOG_FILE ADD CONSTRAINT RefISSUE_LOG1649
    FOREIGN KEY (APP_SID, ISSUE_LOG_ID)
    REFERENCES CSR.ISSUE_LOG(APP_SID, ISSUE_LOG_ID)
;



ALTER TABLE CSR.ISSUE_LOG_READ ADD CONSTRAINT RefCSR_USER623
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_LOG_READ ADD CONSTRAINT RefISSUE_LOG624
    FOREIGN KEY (APP_SID, ISSUE_LOG_ID)
    REFERENCES CSR.ISSUE_LOG(APP_SID, ISSUE_LOG_ID)
;



ALTER TABLE CSR.ISSUE_METER ADD CONSTRAINT RefALL_METER3096
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.ISSUE_METER ADD CONSTRAINT RefCUSTOMER2029
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ISSUE_METER_ALARM ADD CONSTRAINT RefALL_METER3097
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.ISSUE_METER_ALARM ADD CONSTRAINT RefCUSTOMER2172
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_METER_ALARM ADD CONSTRAINT RefMETER_ALARM2174
    FOREIGN KEY (APP_SID, METER_ALARM_ID)
    REFERENCES CSR.METER_ALARM(APP_SID, METER_ALARM_ID)
;



ALTER TABLE CSR.ISSUE_METER_DATA_SOURCE ADD CONSTRAINT RefCUSTOMER2771
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_METER_DATA_SOURCE ADD CONSTRAINT RefMETER_RAW_DATA_SOURCE2770
    FOREIGN KEY (APP_SID, RAW_DATA_SOURCE_ID)
    REFERENCES CSR.METER_RAW_DATA_SOURCE(APP_SID, RAW_DATA_SOURCE_ID)
;

ALTER TABLE CSR.ISSUE_TEMPLATE ADD CONSTRAINT FK_IT_ISSUE_TYPE
	FOREIGN KEY (APP_SID, ISSUE_TYPE_ID)
	REFERENCES CSR.ISSUE_TYPE (APP_SID, ISSUE_TYPE_ID)
;

ALTER TABLE CSR.ISSUE_TEMPLATE ADD CONSTRAINT FK_IT_ASSIGN_TO_USER
	FOREIGN KEY (APP_SID, ASSIGN_TO_USER_SID)
	REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_TEMPLATE_CUSTOM_FIELD ADD CONSTRAINT FK_ITCF_ISS_TEMP
	FOREIGN KEY (APP_SID, ISSUE_TEMPLATE_ID)
	REFERENCES CSR.ISSUE_TEMPLATE (APP_SID, ISSUE_TEMPLATE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ISSUE_TEMPLATE_CUSTOM_FIELD ADD CONSTRAINT FK_ITCF_CUS_FIELD
	FOREIGN KEY (APP_SID, ISSUE_CUSTOM_FIELD_ID)
	REFERENCES CSR.ISSUE_CUSTOM_FIELD (APP_SID, ISSUE_CUSTOM_FIELD_ID)
;

ALTER TABLE CSR.ISSUE_TEMPLATE_CUST_FIELD_OPT ADD CONSTRAINT FK_ITCFO_ISS_TEMP
	FOREIGN KEY (APP_SID, ISSUE_TEMPLATE_ID)
	REFERENCES CSR.ISSUE_TEMPLATE (APP_SID, ISSUE_TEMPLATE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.ISSUE_TEMPLATE_CUST_FIELD_OPT ADD CONSTRAINT FK_ITCFO_CUST_FIELD_OPT
	FOREIGN KEY (APP_SID, ISSUE_CUSTOM_FIELD_ID, ISSUE_CUSTOM_FIELD_OPT_ID)
	REFERENCES CSR.ISSUE_CUSTOM_FIELD_OPTION (APP_SID, ISSUE_CUSTOM_FIELD_ID, ISSUE_CUSTOM_FIELD_OPT_ID)
;


ALTER TABLE CSR.METER_MATCH_BATCH_JOB ADD CONSTRAINT FK_BATCHJOB_METMATBATJOB
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;

ALTER TABLE CSR.METER_RAW_DATA_IMPORT_JOB ADD CONSTRAINT FK_BATCHJOB_METRAWDATAJOB
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;

ALTER TABLE CSR.ISSUE_METER_MISSING_DATA ADD CONSTRAINT FK_REGION_METER_MISSING_DATA
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.ISSUE_METER_RAW_DATA ADD CONSTRAINT RefALL_METER3098
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.ISSUE_METER_RAW_DATA ADD CONSTRAINT RefCUSTOMER2213
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_METER_RAW_DATA ADD CONSTRAINT RefMETER_RAW_DATA2212
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;


ALTER TABLE CSR.ISSUE_NON_COMPLIANCE ADD CONSTRAINT RefCUSTOMER1354
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_NON_COMPLIANCE ADD CONSTRAINT RefNON_COMPLIANCE1353
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_ID)
    REFERENCES CSR.NON_COMPLIANCE(APP_SID, NON_COMPLIANCE_ID)
;



ALTER TABLE CSR.ISSUE_PENDING_VAL ADD CONSTRAINT RefCUSTOMER1597
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_PENDING_VAL ADD CONSTRAINT RefPENDING_IND1595
    FOREIGN KEY (APP_SID, PENDING_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;

ALTER TABLE CSR.ISSUE_PENDING_VAL ADD CONSTRAINT RefPENDING_PERIOD1596
    FOREIGN KEY (APP_SID, PENDING_PERIOD_ID)
    REFERENCES CSR.PENDING_PERIOD(APP_SID, PENDING_PERIOD_ID)
;

ALTER TABLE CSR.ISSUE_PENDING_VAL ADD CONSTRAINT RefPENDING_REGION1598
    FOREIGN KEY (APP_SID, PENDING_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;



ALTER TABLE CSR.ISSUE_PRIORITY ADD CONSTRAINT FK_CUSTOMER_ISSUE_PRIORITY
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


ALTER TABLE CSR.ISSUE_RAISE_ALERT ADD CONSTRAINT FK_ISSUE_RAISE_ALERT_ISSUE
	FOREIGN KEY (APP_SID, ISSUE_ID)
	REFERENCES CSR.ISSUE (APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE_RAISE_ALERT ADD CONSTRAINT FK_ISSUE_RAISE_ALERT_RAISE_BY
	FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
	REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_SCHEDULED_TASK ADD CONSTRAINT FK_ISSUE_SCHED_TASK_USER
    FOREIGN KEY (APP_SID, ASSIGN_TO_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_SCHEDULED_TASK ADD CONSTRAINT FK_ISS_SCHED_TSK_ISS_TYPE 
	FOREIGN KEY (APP_SID, ISSUE_TYPE_ID) 
	REFERENCES CSR.ISSUE_TYPE (APP_SID, ISSUE_TYPE_ID)
;

ALTER TABLE CSR.ISSUE_SCHEDULED_TASK ADD CONSTRAINT fk_issue_st_copied_from
	FOREIGN KEY (app_sid, copied_from_id)
	REFERENCES csr.issue_scheduled_task (app_sid, issue_scheduled_task_id);

ALTER TABLE csr.issue_scheduled_task ADD CONSTRAINT fk_issue_scheduled_task_region 
	FOREIGN KEY (app_sid, region_sid) 
	REFERENCES csr.region (app_sid, region_sid)
;

ALTER TABLE CSR.ISSUE_SHEET_VALUE ADD CONSTRAINT RefCUSTOMER1300
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_SHEET_VALUE ADD CONSTRAINT RefIND1298
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.ISSUE_SHEET_VALUE ADD CONSTRAINT RefREGION1299
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.ISSUE_SUPPLIER ADD CONSTRAINT FK_ISS_SUP_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_SUPPLIER ADD CONSTRAINT FK_ISS_SUP_NC_ACTION
    FOREIGN KEY (APP_SID, QS_EXPR_NON_COMPL_ACTION_ID)
    REFERENCES CSR.QS_EXPR_NON_COMPL_ACTION(APP_SID, QS_EXPR_NON_COMPL_ACTION_ID)
;

ALTER TABLE CSR.ISSUE_SUPPLIER ADD CONSTRAINT FK_ISS_SUP_SUP
    FOREIGN KEY (APP_SID, COMPANY_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;



ALTER TABLE CSR.ISSUE_SURVEY_ANSWER ADD CONSTRAINT FK_ISS_SURV_ANS_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.ISSUE_SURVEY_ANSWER ADD CONSTRAINT FK_ISS_SURV_ANS_QSTN
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.ISSUE_SURVEY_ANSWER ADD CONSTRAINT FK_ISS_SURV_ANS_RESP
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;



ALTER TABLE CSR.ISSUE_TYPE ADD CONSTRAINT FK_CSRU_IT_DEFAULT_ROLE
    FOREIGN KEY (APP_SID, DEFAULT_ASSIGN_TO_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.ISSUE_TYPE ADD CONSTRAINT FK_CSRU_IT_DEFAULT_USER
    FOREIGN KEY (APP_SID, DEFAULT_ASSIGN_TO_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_TYPE ADD CONSTRAINT FK_IPRIO_ITYPE_DEFAULT
    FOREIGN KEY (APP_SID, DEFAULT_ISSUE_PRIORITY_ID)
    REFERENCES CSR.ISSUE_PRIORITY(APP_SID, ISSUE_PRIORITY_ID)
;

ALTER TABLE CSR.ISSUE_TYPE ADD CONSTRAINT FK_REGION_ISSUE_TYPE
    FOREIGN KEY (APP_SID, DEFAULT_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.ISSUE_TYPE ADD CONSTRAINT RefCUSTOMER1355
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ISSUE_TYPE_AGGREGATE_IND_GRP ADD CONSTRAINT FK_ISS_TYP_AGG_GRP_AGG_GRP
    FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
    REFERENCES CSR.AGGREGATE_IND_GROUP(APP_SID, AGGREGATE_IND_GROUP_ID)
;

ALTER TABLE CSR.ISSUE_TYPE_AGGREGATE_IND_GRP ADD CONSTRAINT FK_ISS_TYP_AGG_GRP_ISS_TYP
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID)
    REFERENCES CSR.ISSUE_TYPE(APP_SID, ISSUE_TYPE_ID)
;



ALTER TABLE CSR.ISSUE_TYPE_RAG_STATUS ADD CONSTRAINT FK_ISS_TYP_RAG_ST_ISS_RAG_ST
    FOREIGN KEY (APP_SID, RAG_STATUS_ID)
    REFERENCES CSR.RAG_STATUS(APP_SID, RAG_STATUS_ID)
;

ALTER TABLE CSR.ISSUE_TYPE_RAG_STATUS ADD CONSTRAINT RefISSUE_TYPE4166
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID)
    REFERENCES CSR.ISSUE_TYPE(APP_SID, ISSUE_TYPE_ID)
;



ALTER TABLE CSR.ISSUE_USER_COVER ADD CONSTRAINT FK_ISSUE_USR_CVR_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.ISSUE_USER_COVER ADD CONSTRAINT FK_ISSUE_USR_CVR_USRG
    FOREIGN KEY (APP_SID, USER_GIVING_COVER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ISSUE_USER_COVER ADD CONSTRAINT FK_ISSUE_USR_CVR_USRR
    FOREIGN KEY (APP_SID, USER_BEING_COVERED_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.JOB ADD CONSTRAINT RefCSR_USER69
    FOREIGN KEY (APP_SID, REQUESTED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.JOB ADD CONSTRAINT RefJOB_PROG_ID70
    FOREIGN KEY (PROG_ID)
    REFERENCES CSR.JOB_PROG_ID(PROG_ID)
;



ALTER TABLE CSR.USER_MEASURE_CONVERSION ADD CONSTRAINT FK_MSRE_CONV_USER_MSRE_CONV
    FOREIGN KEY (APP_SID, MEASURE_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.USER_MEASURE_CONVERSION ADD CONSTRAINT FK_USER_USED_MEASURE_CONV
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.LEASE ADD CONSTRAINT FK_CURRENCY_LEASE
    FOREIGN KEY (APP_SID, CURRENCY_CODE)
    REFERENCES CSR.CURRENCY(APP_SID, CURRENCY_CODE)
;

ALTER TABLE CSR.LEASE ADD CONSTRAINT FK_TENANT_LEASE
    FOREIGN KEY (APP_SID, TENANT_ID)
    REFERENCES CSR.TENANT(APP_SID, TENANT_ID)
;



ALTER TABLE CSR.LEASE_POSTIT ADD CONSTRAINT FK_LEASE_LEASE_POSTIT
    FOREIGN KEY (APP_SID, LEASE_ID)
    REFERENCES CSR.LEASE(APP_SID, LEASE_ID)
;

ALTER TABLE CSR.LEASE_POSTIT ADD CONSTRAINT FK_POSTIT_LEASE
    FOREIGN KEY (APP_SID, POSTIT_ID)
    REFERENCES CSR.POSTIT(APP_SID, POSTIT_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.LEASE_PROPERTY ADD CONSTRAINT FK_PROPERTY_LEASE_PROPERTY
    FOREIGN KEY (APP_SID, PROPERTY_REGION_SID)
    REFERENCES CSR.ALL_PROPERTY(APP_SID, REGION_SID)
;



ALTER TABLE CSR.LEASE_SPACE ADD CONSTRAINT FK_SPACE_LEASE_SPACE
    FOREIGN KEY (APP_SID, SPACE_REGION_SID)
    REFERENCES CSR.ALL_SPACE(APP_SID, REGION_SID)
;



ALTER TABLE CSR.LIKE_FOR_LIKE_EMAIL_SUB ADD CONSTRAINT FK_L4L_EMAIL_L4L_SID
    FOREIGN KEY (APP_SID, LIKE_FOR_LIKE_SID)
    REFERENCES CSR.LIKE_FOR_LIKE_SLOT(APP_SID, LIKE_FOR_LIKE_SID)
;

ALTER TABLE CSR.LIKE_FOR_LIKE_EMAIL_SUB ADD CONSTRAINT FK_L4L_EMAIL_USER_SID
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.LIKE_FOR_LIKE_EXCLUDED_REGIONS ADD CONSTRAINT FK_L4L_EXCLUDED_REG_LIKE_SID
    FOREIGN KEY (APP_SID, LIKE_FOR_LIKE_SID)
    REFERENCES CSR.LIKE_FOR_LIKE_SLOT(APP_SID, LIKE_FOR_LIKE_SID)
;

ALTER TABLE CSR.LIKE_FOR_LIKE_EXCLUDED_REGIONS ADD CONSTRAINT FK_L4L_EXCLUDED_REG_REGION_SID
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.LIKE_FOR_LIKE_SCENARIO_ALERT ADD CONSTRAINT FK_L4L_SCEN_ALERT_L4L_SID
    FOREIGN KEY (APP_SID, LIKE_FOR_LIKE_SID)
    REFERENCES CSR.LIKE_FOR_LIKE_SLOT(APP_SID, LIKE_FOR_LIKE_SID)
;

ALTER TABLE CSR.LIKE_FOR_LIKE_SCENARIO_ALERT ADD CONSTRAINT FK_L4L_SCEN_ALERT_USER_SID
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.LIKE_FOR_LIKE_SLOT ADD CONSTRAINT FK_L4L_SLOT_CREATED_BY
    FOREIGN KEY (APP_SID, CREATED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.LIKE_FOR_LIKE_SLOT ADD CONSTRAINT FK_L4L_SLOT_IND_SID
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.LIKE_FOR_LIKE_SLOT ADD CONSTRAINT FK_L4L_SLOT_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.LIKE_FOR_LIKE_SLOT ADD CONSTRAINT FK_L4L_SLOT_REFRESHED_BY
    FOREIGN KEY (APP_SID, LAST_REFRESH_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.LIKE_FOR_LIKE_SLOT ADD CONSTRAINT FK_L4L_SLOT_REGION_SID
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.LIKE_FOR_LIKE_SLOT ADD CONSTRAINT FK_L4L_SLOT_SCENARIO_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;



ALTER TABLE CSR.LINKED_METER ADD CONSTRAINT FK_METER_LINKED_METER_1
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.LINKED_METER ADD CONSTRAINT FK_METER_LINKED_METER_2
    FOREIGN KEY (APP_SID, LINKED_METER_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.LOCATION ADD CONSTRAINT RefLOCATION_TYPE2099
    FOREIGN KEY (LOCATION_TYPE_ID)
    REFERENCES CSR.LOCATION_TYPE(LOCATION_TYPE_ID)
;



ALTER TABLE CSR.LOGISTICS_DEFAULT ADD CONSTRAINT FK_CUSTOMER_LOG_DEF
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.LOGISTICS_DEFAULT ADD CONSTRAINT FK_STD_MEASURE_CONV_LOG_DEF
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.LOGISTICS_ERROR_LOG ADD CONSTRAINT LOGISTICS_TAB_MODE_ERROR_LOG
    FOREIGN KEY (APP_SID, TAB_SID, PROCESSOR_CLASS_ID)
    REFERENCES CSR.LOGISTICS_TAB_MODE(APP_SID, TAB_SID, PROCESSOR_CLASS_ID)
;

ALTER TABLE CSR.LOGISTICS_ERROR_LOG ADD CONSTRAINT RefCUSTOMER2207
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.LOGISTICS_TAB_MODE ADD CONSTRAINT FK_LOG_MODE_LOG_TAB
    FOREIGN KEY (TRANSPORT_MODE_ID)
    REFERENCES CSR.TRANSPORT_MODE(TRANSPORT_MODE_ID)
;

ALTER TABLE CSR.LOGISTICS_TAB_MODE ADD CONSTRAINT FK_LOGISTICS_PROC_TAB_MODE
    FOREIGN KEY (PROCESSOR_CLASS_ID)
    REFERENCES CSR.LOGISTICS_PROCESSOR_CLASS(PROCESSOR_CLASS_ID)
;



ALTER TABLE CSR.LOOKUP_TABLE ADD CONSTRAINT FK_LOOKUP_TABLE_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.LOOKUP_TABLE_ENTRY ADD CONSTRAINT FK_LOOKUP_TAB_ENT_LOOKUP_TAB
    FOREIGN KEY (APP_SID, LOOKUP_ID)
    REFERENCES CSR.LOOKUP_TABLE(APP_SID, LOOKUP_ID)
;



ALTER TABLE CSR.MAP_SHPFILE ADD CONSTRAINT RefCUSTOMER_MAP1676
    FOREIGN KEY (APP_SID, MAP_ID)
    REFERENCES CSR.CUSTOMER_MAP(APP_SID, MAP_ID)
;



ALTER TABLE CSR.MASTER_DELEG ADD CONSTRAINT RefDELEGATION2059
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;



ALTER TABLE CSR.MEASURE ADD CONSTRAINT RefCUSTOMER971
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.MEASURE ADD CONSTRAINT RefOPTION_SET182
    FOREIGN KEY (APP_SID, OPTION_SET_ID)
    REFERENCES CSR.OPTION_SET(APP_SID, OPTION_SET_ID)
;

ALTER TABLE CSR.MEASURE ADD CONSTRAINT RefSTD_MEASURE_CONVERSION1645
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.MEASURE_CONVERSION ADD CONSTRAINT RefMEASURE4
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.MEASURE_CONVERSION ADD CONSTRAINT RefSTD_MEASURE_CONVERSION1194
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.MEASURE_CONVERSION_PERIOD ADD CONSTRAINT RefMEASURE_CONVERSION164
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.MEASURE_CONVERSION_SET ADD CONSTRAINT RefCUSTOMER1196
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.MEASURE_CONVERSION_SET ADD CONSTRAINT RefMEASURE1197
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;



ALTER TABLE CSR.MEASURE_CONVERSION_SET_ENTRY ADD CONSTRAINT RefMEASURE_CONVERSION_SET1199
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_SET_ID)
    REFERENCES CSR.MEASURE_CONVERSION_SET(APP_SID, MEASURE_CONVERSION_SET_ID)
;

ALTER TABLE CSR.MEASURE_CONVERSION_SET_ENTRY ADD CONSTRAINT RefMEASURE_CONVERSION1198
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.METER_AGGREGATE_TYPE ADD CONSTRAINT FK_METINPAGGR_METAGGRTYPE
    FOREIGN KEY (APP_SID, METER_INPUT_ID, AGGREGATOR)
    REFERENCES CSR.METER_INPUT_AGGREGATOR(APP_SID, METER_INPUT_ID, AGGREGATOR)
;

ALTER TABLE CSR.METER_AGGREGATE_TYPE ADD CONSTRAINT PK_CUSTOMER_METAGGRTYPE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_ALARM ADD CONSTRAINT RefCUSTOMER2140
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_COMPARISON2138
    FOREIGN KEY (APP_SID, COMPARISON_ID)
    REFERENCES CSR.METER_ALARM_COMPARISON(APP_SID, COMPARISON_ID)
;

ALTER TABLE CSR.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_ISSUE_PERIO2139
    FOREIGN KEY (APP_SID, ISSUE_PERIOD_ID)
    REFERENCES CSR.METER_ALARM_ISSUE_PERIOD(APP_SID, ISSUE_PERIOD_ID)
;

ALTER TABLE CSR.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_STATISTIC2136
    FOREIGN KEY (APP_SID, LOOK_AT_STATISTIC_ID)
    REFERENCES CSR.METER_ALARM_STATISTIC(APP_SID, STATISTIC_ID)
;

ALTER TABLE CSR.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_STATISTIC2137
    FOREIGN KEY (APP_SID, COMPARE_STATISTIC_ID)
    REFERENCES CSR.METER_ALARM_STATISTIC(APP_SID, STATISTIC_ID)
;

ALTER TABLE CSR.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_TEST_TIME2141
    FOREIGN KEY (APP_SID, TEST_TIME_ID)
    REFERENCES CSR.METER_ALARM_TEST_TIME(APP_SID, TEST_TIME_ID)
;



ALTER TABLE CSR.METER_ALARM_COMPARISON ADD CONSTRAINT RefCUSTOMER2142
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_ALARM_EVENT ADD CONSTRAINT RefREGION_METER_ALARM2175
    FOREIGN KEY (APP_SID, REGION_SID, METER_ALARM_ID)
    REFERENCES CSR.REGION_METER_ALARM(APP_SID, REGION_SID, METER_ALARM_ID)
;



ALTER TABLE CSR.METER_ALARM_ISSUE_PERIOD ADD CONSTRAINT RefCUSTOMER2143
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_ALARM_STAT_RUN ADD CONSTRAINT RefMETER_ALARM_STATISTIC_P2176
    FOREIGN KEY (APP_SID, REGION_SID, STATISTIC_ID, STATISTIC_DTM)
    REFERENCES CSR.METER_ALARM_STATISTIC_PERIOD(APP_SID, REGION_SID, STATISTIC_ID, STATISTIC_DTM)
;

ALTER TABLE CSR.METER_ALARM_STAT_RUN ADD CONSTRAINT RefMETER_ALARM2178
    FOREIGN KEY (APP_SID, METER_ALARM_ID)
    REFERENCES CSR.METER_ALARM(APP_SID, METER_ALARM_ID)
;

ALTER TABLE CSR.METER_ALARM_STAT_RUN ADD CONSTRAINT RefMETER_METER_ALARM_STATI2177
    FOREIGN KEY (APP_SID, REGION_SID, STATISTIC_ID)
    REFERENCES CSR.METER_METER_ALARM_STATISTIC(APP_SID, REGION_SID, STATISTIC_ID)
;



ALTER TABLE CSR.METER_ALARM_STATISTIC ADD CONSTRAINT FK_METERBUCKET_STATISTIC
    FOREIGN KEY (APP_SID, METER_BUCKET_ID)
    REFERENCES CSR.METER_BUCKET(APP_SID, METER_BUCKET_ID)
;

ALTER TABLE CSR.METER_ALARM_STATISTIC ADD CONSTRAINT FK_METIMPAGG_METALMSTAT
    FOREIGN KEY (APP_SID, METER_INPUT_ID, AGGREGATOR)
    REFERENCES CSR.METER_INPUT_AGGREGATOR(APP_SID, METER_INPUT_ID, AGGREGATOR)
;

ALTER TABLE CSR.METER_ALARM_STATISTIC ADD CONSTRAINT RefCUSTOMER2144
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_ALARM_STATISTIC_JOB ADD CONSTRAINT RefALL_METER3099
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_ALARM_STATISTIC_JOB ADD CONSTRAINT RefMETER_ALARM_STATISTIC2179
    FOREIGN KEY (APP_SID, STATISTIC_ID)
    REFERENCES CSR.METER_ALARM_STATISTIC(APP_SID, STATISTIC_ID)
;



ALTER TABLE CSR.METER_ALARM_STATISTIC_PERIOD ADD CONSTRAINT FK_METALMSTAT_METALMSTATPRD
    FOREIGN KEY (APP_SID, STATISTIC_ID)
    REFERENCES CSR.METER_ALARM_STATISTIC(APP_SID, STATISTIC_ID)
;

ALTER TABLE CSR.METER_ALARM_STATISTIC_PERIOD ADD CONSTRAINT FK_METER_METALMSTATPERIOD
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;



ALTER TABLE CSR.METER_ALARM_TEST_TIME ADD CONSTRAINT RefCUSTOMER2146
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


ALTER TABLE CSR.CORE_WORKING_HOURS ADD CONSTRAINT FK_CUSTOMER_COREWKHRS 
	FOREIGN KEY (APP_SID) 
	REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.CORE_WORKING_HOURS_DAY ADD CONSTRAINT FK_COREWKHRS_COREWKHRSDAY 
	FOREIGN KEY (APP_SID, CORE_WORKING_HOURS_ID) 
	REFERENCES CSR.CORE_WORKING_HOURS(APP_SID, CORE_WORKING_HOURS_ID)
;

ALTER TABLE CSR.CORE_WORKING_HOURS_REGION ADD CONSTRAINT FK_REGION_COREWKHRS 
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID)
;


ALTER TABLE CSR.METER_BUCKET ADD CONSTRAINT RefCUSTOMER4475
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_DATA_COVERAGE_IND ADD CONSTRAINT FK_IND_METDATCOVIND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.METER_DATA_COVERAGE_IND ADD CONSTRAINT FK_METDATPRI_METDATCOVIND
    FOREIGN KEY (APP_SID, PRIORITY)
    REFERENCES CSR.METER_DATA_PRIORITY(APP_SID, PRIORITY)
;

ALTER TABLE CSR.METER_DATA_COVERAGE_IND ADD CONSTRAINT FK_METINP_METDATCOVIND
    FOREIGN KEY (APP_SID, METER_INPUT_ID)
    REFERENCES CSR.METER_INPUT(APP_SID, METER_INPUT_ID)
;



ALTER TABLE CSR.METER_DATA_PRIORITY ADD CONSTRAINT FK_CUSTOMER_MDPRIORITY
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.METER_DATA_SOURCE_HI_RES_INPUT ADD CONSTRAINT FK_METER_SRC_HI_RES_METER_SRC
	FOREIGN KEY (APP_SID, RAW_DATA_SOURCE_ID)
	REFERENCES CSR.METER_RAW_DATA_SOURCE (APP_SID, RAW_DATA_SOURCE_ID)
;

ALTER TABLE CSR.METER_DATA_SOURCE_HI_RES_INPUT ADD CONSTRAINT FK_METER_SRC_HI_RES_MTR_INPUT
	FOREIGN KEY (APP_SID, METER_INPUT_ID)
	REFERENCES CSR.METER_INPUT (APP_SID, METER_INPUT_ID)
;

ALTER TABLE CSR.METER_DOCUMENT ADD CONSTRAINT RefCUSTOMER1144
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_ELEMENT_LAYOUT ADD CONSTRAINT FK_METER_EL_LAYOUT_REG_METRIC
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.REGION_METRIC(APP_SID, IND_SID)
;

ALTER TABLE CSR.METER_ELEMENT_LAYOUT ADD CONSTRAINT FK_METER_EL_LAYOUT_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;



ALTER TABLE CSR.METER_EXCEL_MAPPING ADD CONSTRAINT RefMETER_EXCEL_OPTION2965
    FOREIGN KEY (APP_SID, RAW_DATA_SOURCE_ID)
    REFERENCES CSR.METER_EXCEL_OPTION(APP_SID, RAW_DATA_SOURCE_ID)
;



ALTER TABLE CSR.METER_EXCEL_OPTION ADD CONSTRAINT RefMETER_RAW_DATA_SOURCE2966
    FOREIGN KEY (APP_SID, RAW_DATA_SOURCE_ID)
    REFERENCES CSR.METER_RAW_DATA_SOURCE(APP_SID, RAW_DATA_SOURCE_ID)
;



ALTER TABLE CSR.METER_HEADER_ELEMENT ADD CONSTRAINT FK_METER_HEADER_EL_REG_METRIC
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.REGION_METRIC(APP_SID, IND_SID)
;

ALTER TABLE CSR.METER_HEADER_ELEMENT ADD CONSTRAINT FK_METER_HEADER_EL_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;



ALTER TABLE CSR.METER_INPUT ADD CONSTRAINT FK_CUSTOMER_METIMP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_INPUT_AGGR_IND ADD CONSTRAINT FK_AMETER_METINPAGGIND
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_INPUT_AGGR_IND ADD CONSTRAINT FK_AMETERTYPE_METINPAGGIND
    FOREIGN KEY (APP_SID, REGION_SID, METER_TYPE_ID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID, METER_TYPE_ID)
;

ALTER TABLE CSR.METER_INPUT_AGGR_IND ADD CONSTRAINT FK_MESCONV_METINPAGGRIND
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
;

ALTER TABLE CSR.METER_INPUT_AGGR_IND ADD CONSTRAINT FK_METINPAGGR_METINPAGRIND
    FOREIGN KEY (APP_SID, METER_INPUT_ID, AGGREGATOR)
    REFERENCES CSR.METER_INPUT_AGGREGATOR(APP_SID, METER_INPUT_ID, AGGREGATOR)
;

ALTER TABLE CSR.METER_INPUT_AGGR_IND ADD CONSTRAINT FK_METTYPINP_METINPAGGIND
    FOREIGN KEY (APP_SID, METER_TYPE_ID, METER_INPUT_ID, AGGREGATOR, MEASURE_SID)
    REFERENCES CSR.METER_TYPE_INPUT(APP_SID, METER_TYPE_ID, METER_INPUT_ID, AGGREGATOR, MEASURE_SID) DEFERRABLE INITIALLY DEFERRED
;



ALTER TABLE CSR.METER_INPUT_AGGREGATOR ADD CONSTRAINT FK_METAGG_METINPAGG
    FOREIGN KEY (AGGREGATOR)
    REFERENCES CSR.METER_AGGREGATOR(AGGREGATOR)
;

ALTER TABLE CSR.METER_INPUT_AGGREGATOR ADD CONSTRAINT FK_METIMP_METIMPAGG
    FOREIGN KEY (APP_SID, METER_INPUT_ID)
    REFERENCES CSR.METER_INPUT(APP_SID, METER_INPUT_ID)
;



ALTER TABLE CSR.METER_LIST_CACHE ADD CONSTRAINT FK_ALLMETER_MLISTCACHE
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_LIST_CACHE ADD CONSTRAINT FK_CSRUSER_MLISTCACHE
    FOREIGN KEY (APP_SID, READ_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.METER_LIVE_DATA ADD CONSTRAINT FK_MDPRIORITY_MLIVE
    FOREIGN KEY (APP_SID, PRIORITY)
    REFERENCES CSR.METER_DATA_PRIORITY(APP_SID, PRIORITY)
;

ALTER TABLE CSR.METER_LIVE_DATA ADD CONSTRAINT FK_METIMPAGG_METLIVDAT
    FOREIGN KEY (APP_SID, METER_INPUT_ID, AGGREGATOR)
    REFERENCES CSR.METER_INPUT_AGGREGATOR(APP_SID, METER_INPUT_ID, AGGREGATOR)
;

ALTER TABLE CSR.METER_LIVE_DATA ADD CONSTRAINT RefALL_METER3100
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_LIVE_DATA ADD CONSTRAINT RefMETER_BUCKET4476
    FOREIGN KEY (APP_SID, METER_BUCKET_ID)
    REFERENCES CSR.METER_BUCKET(APP_SID, METER_BUCKET_ID)
;

ALTER TABLE CSR.METER_LIVE_DATA ADD CONSTRAINT RefMETER_RAW_DATA2032
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;



ALTER TABLE CSR.METER_METER_ALARM_STATISTIC ADD CONSTRAINT RefALL_METER3101
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_METER_ALARM_STATISTIC ADD CONSTRAINT RefMETER_ALARM_STATISTIC2148
    FOREIGN KEY (APP_SID, STATISTIC_ID)
    REFERENCES CSR.METER_ALARM_STATISTIC(APP_SID, STATISTIC_ID)
;



ALTER TABLE CSR.METER_ORPHAN_DATA ADD CONSTRAINT FK_MDPRIORITY_MORPHAN
    FOREIGN KEY (APP_SID, PRIORITY)
    REFERENCES CSR.METER_DATA_PRIORITY(APP_SID, PRIORITY)
;

ALTER TABLE CSR.METER_ORPHAN_DATA ADD CONSTRAINT FK_METIMP_METORPDAT
    FOREIGN KEY (APP_SID, METER_INPUT_ID)
    REFERENCES CSR.METER_INPUT(APP_SID, METER_INPUT_ID)
;

ALTER TABLE CSR.METER_ORPHAN_DATA ADD CONSTRAINT RefCUSTOMER2064
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.METER_ORPHAN_DATA ADD CONSTRAINT RefMETER_RAW_DATA2065
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;

ALTER TABLE CSR.METER_ORPHAN_DATA ADD CONSTRAINT FK_METERORPHANDATADATA_REGION
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_ORPHAN_DATA ADD CONSTRAINT FK_DUFMETERRTYP_ORPMETDAT
	FOREIGN KEY (ERROR_TYPE_ID)
	REFERENCES CSR.DUFF_METER_ERROR_TYPE(ERROR_TYPE_ID)
;


ALTER TABLE CSR.METER_PATCH_BATCH_DATA ADD CONSTRAINT FK_METDATPRI_METPATBATDAT
    FOREIGN KEY (APP_SID, PRIORITY)
    REFERENCES CSR.METER_DATA_PRIORITY(APP_SID, PRIORITY)
;

ALTER TABLE CSR.METER_PATCH_BATCH_DATA ADD CONSTRAINT FK_METINP_METPATBATDAT
    FOREIGN KEY (APP_SID, METER_INPUT_ID)
    REFERENCES CSR.METER_INPUT(APP_SID, METER_INPUT_ID)
;

ALTER TABLE CSR.METER_PATCH_BATCH_DATA ADD CONSTRAINT FK_METPATBATJOB_METPATBADAT
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.METER_PATCH_BATCH_JOB(APP_SID, BATCH_JOB_ID)
;



ALTER TABLE CSR.METER_PATCH_BATCH_JOB ADD CONSTRAINT FK_ALLMET_METPATBATJOB
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_PATCH_BATCH_JOB ADD CONSTRAINT FK_CUSTOMER_METPATBATJOB
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_PATCH_DATA ADD CONSTRAINT FK_ALLMETER_MPATCH
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_PATCH_DATA ADD CONSTRAINT FK_MDPRIORITY_MPATCH
    FOREIGN KEY (APP_SID, PRIORITY)
    REFERENCES CSR.METER_DATA_PRIORITY(APP_SID, PRIORITY)
;

ALTER TABLE CSR.METER_PATCH_DATA ADD CONSTRAINT FK_METIMP_METPATDAT
    FOREIGN KEY (APP_SID, METER_INPUT_ID)
    REFERENCES CSR.METER_INPUT(APP_SID, METER_INPUT_ID)
;



ALTER TABLE CSR.METER_PATCH_JOB ADD CONSTRAINT FK_AMETER_METERPATCHJOB
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_PATCH_JOB ADD CONSTRAINT FK_METIMP_METPATJOB
    FOREIGN KEY (APP_SID, METER_INPUT_ID)
    REFERENCES CSR.METER_INPUT(APP_SID, METER_INPUT_ID)
;



ALTER TABLE CSR.METER_PHOTO ADD CONSTRAINT FK_METER_PHOTO_METER
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;


ALTER TABLE CSR.METER_PROCESSING_JOB ADD CONSTRAINT FK_CUSTOMER_METER_PROC_JOB
	FOREIGN KEY (APP_SID)
	REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.METER_PROCESSING_JOB ADD CONSTRAINT FK_METERPROCJOB_METERRAWDATA
	FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
	REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;


ALTER TABLE CSR.METER_RAW_DATA ADD CONSTRAINT RefCUSTOMER2035
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.METER_RAW_DATA ADD CONSTRAINT RefMETER_RAW_DATA_SOURCE2036
    FOREIGN KEY (APP_SID, RAW_DATA_SOURCE_ID)
    REFERENCES CSR.METER_RAW_DATA_SOURCE(APP_SID, RAW_DATA_SOURCE_ID)
;

ALTER TABLE CSR.METER_RAW_DATA ADD CONSTRAINT RefMETER_RAW_DATA_STATUS2066
    FOREIGN KEY (STATUS_ID)
    REFERENCES CSR.METER_RAW_DATA_STATUS(STATUS_ID)
;



ALTER TABLE CSR.METER_RAW_DATA_ERROR ADD CONSTRAINT RefMETER_RAW_DATA2067
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;



ALTER TABLE CSR.METER_RAW_DATA_LOG ADD CONSTRAINT FK_CSRUSR_METRAWDATLOG
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.METER_RAW_DATA_LOG ADD CONSTRAINT FK_METRAWDAT_METRAWDATLOG
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;


ALTER TABLE CSR.METER_RAW_DATA_SOURCE ADD CONSTRAINT RAW_DATA_AUTO_IMP
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID)
    REFERENCES CSR.AUTOMATED_IMPORT_CLASS(APP_SID, AUTOMATED_IMPORT_CLASS_SID)
;

ALTER TABLE CSR.METER_RAW_DATA_SOURCE ADD CONSTRAINT RefCSR_USER2772
    FOREIGN KEY (APP_SID, DEFAULT_ISSUE_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.METER_RAW_DATA_SOURCE ADD CONSTRAINT RefCUSTOMER2037
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_READING ADD CONSTRAINT FK_APPRUSR_METREADING
    FOREIGN KEY (APP_SID, APPROVED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.METER_READING ADD CONSTRAINT FK_FLOW_ITEM_METER_READING
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.METER_READING ADD CONSTRAINT FK_METREADING_REPLACES
    FOREIGN KEY (APP_SID, REPLACES_READING_ID)
    REFERENCES CSR.METER_READING(APP_SID, METER_READING_ID)
;

ALTER TABLE CSR.METER_READING ADD CONSTRAINT RefALL_METER3102
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_READING ADD CONSTRAINT RefCSR_USER784
    FOREIGN KEY (APP_SID, ENTERED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.METER_READING ADD CONSTRAINT RefMETER_DOCUMENT1115
    FOREIGN KEY (APP_SID, METER_DOCUMENT_ID)
    REFERENCES CSR.METER_DOCUMENT(APP_SID, METER_DOCUMENT_ID)
;

ALTER TABLE CSR.METER_READING ADD CONSTRAINT RefMETER_SOURCE_TYPE3451
    FOREIGN KEY (APP_SID, METER_SOURCE_TYPE_ID)
    REFERENCES CSR.METER_SOURCE_TYPE(APP_SID, METER_SOURCE_TYPE_ID)
;

ALTER TABLE CSR.METER_READING ADD CONSTRAINT RefUTILITY_INVOICE1367
    FOREIGN KEY (APP_SID, CREATED_INVOICE_ID)
    REFERENCES CSR.UTILITY_INVOICE(APP_SID, UTILITY_INVOICE_ID)
;



ALTER TABLE CSR.METER_READING_DATA ADD CONSTRAINT FK_MDPRIORITY_MREADING
    FOREIGN KEY (APP_SID, PRIORITY)
    REFERENCES CSR.METER_DATA_PRIORITY(APP_SID, PRIORITY)
;

ALTER TABLE CSR.METER_READING_DATA ADD CONSTRAINT FK_METIMP_METREDDAT
    FOREIGN KEY (APP_SID, METER_INPUT_ID)
    REFERENCES CSR.METER_INPUT(APP_SID, METER_INPUT_ID)
;

ALTER TABLE CSR.METER_READING_DATA ADD CONSTRAINT RefALL_METER3484
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_READING_DATA ADD CONSTRAINT RefMETER_RAW_DATA3485
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;



ALTER TABLE CSR.METER_RECOMPUTE_BATCH_JOB ADD CONSTRAINT FK_ALLMET_METRECOMPBATJOB
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;



ALTER TABLE CSR.METER_SOURCE_DATA ADD CONSTRAINT FK_MDPRIORITY_MSOURCE
    FOREIGN KEY (APP_SID, PRIORITY)
    REFERENCES CSR.METER_DATA_PRIORITY(APP_SID, PRIORITY)
;

ALTER TABLE CSR.METER_SOURCE_DATA ADD CONSTRAINT FK_METIMP_METSRCDAT
    FOREIGN KEY (APP_SID, METER_INPUT_ID)
    REFERENCES CSR.METER_INPUT(APP_SID, METER_INPUT_ID)
;

ALTER TABLE CSR.METER_SOURCE_DATA ADD CONSTRAINT RefALL_METER3103
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_SOURCE_DATA ADD CONSTRAINT RefCUSTOMER2104
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.METER_SOURCE_DATA ADD CONSTRAINT RefMETER_RAW_DATA2105
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;


ALTER TABLE CSR.METER_SOURCE_TYPE ADD CONSTRAINT RefCUSTOMER1236
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METER_TAB ADD CONSTRAINT FK_METER_TAB_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.METER_TAB ADD CONSTRAINT FK_METER_TAB_PLUGIN
    FOREIGN KEY (PLUGIN_ID, PLUGIN_TYPE_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID, PLUGIN_TYPE_ID)
;



ALTER TABLE CSR.METER_TAB_GROUP ADD CONSTRAINT FK_METER_TAB_GROUP_METER_TAB
    FOREIGN KEY (APP_SID, PLUGIN_ID)
    REFERENCES CSR.METER_TAB(APP_SID, PLUGIN_ID)
;

ALTER TABLE CSR.METER_TAB_GROUP ADD CONSTRAINT FK_METER_TAB_GROUP_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.METER_TYPE ADD CONSTRAINT FK_CUSTOMER_METER_TYPE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.METER_TYPE ADD CONSTRAINT FK_IND_METER_TYPE_COSTDAYS
    FOREIGN KEY (APP_SID, COSTDAYS_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.METER_TYPE ADD CONSTRAINT FK_IND_METER_TYPE_DAYS
    FOREIGN KEY (APP_SID, DAYS_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.METER_TYPE ADD CONSTRAINT FK_METER_TYPE_FLOW
	FOREIGN KEY (APP_SID, FLOW_SID)
	REFERENCES CSR.FLOW (APP_SID, FLOW_SID)
;

ALTER TABLE CSR.METER_TYPE_CHANGE_BATCH_JOB ADD CONSTRAINT FK_METINPAGG_METTYPCNGBATJOB
    FOREIGN KEY (APP_SID, METER_INPUT_ID, AGGREGATOR)
    REFERENCES CSR.METER_INPUT_AGGREGATOR(APP_SID, METER_INPUT_ID, AGGREGATOR)
;

ALTER TABLE CSR.METER_TYPE_CHANGE_BATCH_JOB ADD CONSTRAINT FK_METTYP_METTYPCNGBATJOB
    FOREIGN KEY (APP_SID, METER_TYPE_ID)
    REFERENCES CSR.METER_TYPE(APP_SID, METER_TYPE_ID)
;



ALTER TABLE CSR.METER_TYPE_INPUT ADD CONSTRAINT FK_IND_METER_TYPE_INPUT
    FOREIGN KEY (APP_SID, IND_SID, MEASURE_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID, MEASURE_SID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.METER_TYPE_INPUT ADD CONSTRAINT FK_METINPAGG_METTYPINP
    FOREIGN KEY (APP_SID, METER_INPUT_ID, AGGREGATOR)
    REFERENCES CSR.METER_INPUT_AGGREGATOR(APP_SID, METER_INPUT_ID, AGGREGATOR)
;

ALTER TABLE CSR.METER_TYPE_INPUT ADD CONSTRAINT FK_METTYP_METTYPINP
    FOREIGN KEY (APP_SID, METER_TYPE_ID)
    REFERENCES CSR.METER_TYPE(APP_SID, METER_TYPE_ID)
;



ALTER TABLE CSR.METER_UTILITY_CONTRACT ADD CONSTRAINT RefUTILITY_CONTRACT_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_UTILITY_CONTRACT ADD CONSTRAINT RefALL_METER3104
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE CSR.METER_UTILITY_CONTRACT ADD CONSTRAINT RefUTILITY_CONTRACT2011
    FOREIGN KEY (APP_SID, UTILITY_CONTRACT_ID)
    REFERENCES CSR.UTILITY_CONTRACT(APP_SID, UTILITY_CONTRACT_ID)
;



ALTER TABLE CSR.METER_XML_OPTION ADD CONSTRAINT RefMETER_RAW_DATA_SOURCE2787
    FOREIGN KEY (APP_SID, RAW_DATA_SOURCE_ID)
    REFERENCES CSR.METER_RAW_DATA_SOURCE(APP_SID, RAW_DATA_SOURCE_ID)
;

ALTER TABLE CSR.METERING_OPTIONS ADD CONSTRAINT FK_METERING_OPTIONS_PERIOD_SET
	FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
	REFERENCES CSR.PERIOD_INTERVAL (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.METER_IMPORT_REVERT_BATCH_JOB ADD CONSTRAINT FK_BJ_MIRBJ
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;

ALTER TABLE CSR.METER_IMPORT_REVERT_BATCH_JOB ADD CONSTRAINT FK_MRD_MIRBJ
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;

ALTER TABLE CSR.METRIC_DASHBOARD ADD CONSTRAINT FK_METRIC_DASH_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.METRIC_DASHBOARD ADD CONSTRAINT FK_METRIC_DASHBOARD_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.METRIC_DASHBOARD_IND ADD CONSTRAINT FK_METRIC_DASH_IND_ABS_SCN_RUN
    FOREIGN KEY (APP_SID, ABSOL_VIEW_SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.METRIC_DASHBOARD_IND ADD CONSTRAINT FK_METRIC_DASH_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.METRIC_DASHBOARD_IND ADD CONSTRAINT FK_METRIC_DASH_IND_INT_FA_IND
    FOREIGN KEY (APP_SID, INTEN_VIEW_FLOOR_AREA_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.METRIC_DASHBOARD_IND ADD CONSTRAINT FK_METRIC_DASH_IND_INT_SCN_RUN
    FOREIGN KEY (APP_SID, INTEN_VIEW_SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.METRIC_DASHBOARD_IND ADD CONSTRAINT FK_METRIC_DASH_IND_METRIC_DASH
    FOREIGN KEY (APP_SID, METRIC_DASHBOARD_SID)
    REFERENCES CSR.METRIC_DASHBOARD(APP_SID, METRIC_DASHBOARD_SID)
;



ALTER TABLE CSR.METRIC_DASHBOARD_PLUGIN ADD CONSTRAINT FK_METRIC_DASH_PLG_METRIC_DASH
    FOREIGN KEY (APP_SID, METRIC_DASHBOARD_SID)
    REFERENCES CSR.METRIC_DASHBOARD(APP_SID, METRIC_DASHBOARD_SID)
;

ALTER TABLE CSR.METRIC_DASHBOARD_PLUGIN ADD CONSTRAINT FK_METRIC_DASH_PLG_PLUGIN_ID
    FOREIGN KEY (PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID)
;


ALTER TABLE CSR.MIGRATED_AUDIT ADD CONSTRAINT FK_MIG_AUDIT_INT_AUDIT
	FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
	REFERENCES CSR.INTERNAL_AUDIT (APP_SID, INTERNAL_AUDIT_SID) ON DELETE CASCADE
;


ALTER TABLE CSR.MGMT_COMPANY ADD CONSTRAINT FK_SUPP_MGMT_COMPANY
    FOREIGN KEY (APP_SID, COMPANY_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;



ALTER TABLE CSR.MGMT_COMPANY_CONTACT ADD CONSTRAINT FK_MGMT_COMPANY_CONTACT
    FOREIGN KEY (APP_SID, MGMT_COMPANY_ID)
    REFERENCES CSR.MGMT_COMPANY(APP_SID, MGMT_COMPANY_ID)
;



ALTER TABLE CSR.MGMT_COMPANY_FUND_CONTACT ADD CONSTRAINT FK_FUND_MGMT_CO_FND_CT
    FOREIGN KEY (APP_SID, FUND_ID, MGMT_COMPANY_ID)
    REFERENCES CSR.FUND(APP_SID, FUND_ID, DEFAULT_MGMT_COMPANY_ID)
;

ALTER TABLE CSR.MGMT_COMPANY_FUND_CONTACT ADD CONSTRAINT FK_MGMT_CO_CON_FUND_CO
    FOREIGN KEY (APP_SID, MGMT_COMPANY_CONTACT_ID, MGMT_COMPANY_ID)
    REFERENCES CSR.MGMT_COMPANY_CONTACT(APP_SID, MGMT_COMPANY_CONTACT_ID, MGMT_COMPANY_ID)
;



ALTER TABLE CSR.MGT_COMPANY_TREE_SYNC_JOB ADD CONSTRAINT FK_MCTSJ_REGION
    FOREIGN KEY (APP_SID, TREE_ROOT_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.MODEL ADD CONSTRAINT FK_MODEL_SCN_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.MODEL ADD CONSTRAINT RefCUSTOMER1075
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.MODEL_DELEG_IMPORT ADD CONSTRAINT FK_MOD_DLG_IMP_DELEG
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.MODEL_DELEG_IMPORT ADD CONSTRAINT FK_MOD_DLG_IMP_MODEL
    FOREIGN KEY (APP_SID, MODEL_SID)
    REFERENCES CSR.MODEL(APP_SID, MODEL_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.MODEL_INSTANCE ADD CONSTRAINT RefCSR_USER1079
    FOREIGN KEY (APP_SID, OWNER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.MODEL_INSTANCE ADD CONSTRAINT RefCUSTOMER1077
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.MODEL_INSTANCE ADD CONSTRAINT RefMODEL1078
    FOREIGN KEY (APP_SID, BASE_MODEL_SID)
    REFERENCES CSR.MODEL(APP_SID, MODEL_SID)
;



ALTER TABLE CSR.MODEL_INSTANCE_MAP ADD CONSTRAINT FK_MIM_MI
    FOREIGN KEY (APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID)
    REFERENCES CSR.MODEL_INSTANCE(APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID)
;

ALTER TABLE CSR.MODEL_INSTANCE_MAP ADD CONSTRAINT FK_MODEL_INSTANCE_MAP_TO_IND
    FOREIGN KEY (APP_SID, MAP_TO_INDICATOR_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.MODEL_INSTANCE_MAP ADD CONSTRAINT RefREGION1572
    FOREIGN KEY (APP_SID, MAP_TO_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.MODEL_INSTANCE_REGION ADD CONSTRAINT FK_MIR_MI
    FOREIGN KEY (APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID)
    REFERENCES CSR.MODEL_INSTANCE(APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID)
;

ALTER TABLE CSR.MODEL_INSTANCE_REGION ADD CONSTRAINT RefREGION1575
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.MODEL_INSTANCE_SHEET ADD CONSTRAINT FK_MIS_MI
    FOREIGN KEY (APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID)
    REFERENCES CSR.MODEL_INSTANCE(APP_SID, MODEL_INSTANCE_SID, BASE_MODEL_SID)
;



ALTER TABLE CSR.MODEL_MAP ADD CONSTRAINT RefIND1083
    FOREIGN KEY (APP_SID, MAP_TO_INDICATOR_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.MODEL_MAP ADD CONSTRAINT RefMODEL_MAP_TYPE1082
    FOREIGN KEY (MODEL_MAP_TYPE_ID)
    REFERENCES CSR.MODEL_MAP_TYPE(MODEL_MAP_TYPE_ID)
;

ALTER TABLE CSR.MODEL_MAP ADD CONSTRAINT RefMODEL_SHEET1084
    FOREIGN KEY (APP_SID, MODEL_SID, SHEET_ID)
    REFERENCES CSR.MODEL_SHEET(APP_SID, MODEL_SID, SHEET_ID)
;



ALTER TABLE CSR.MODEL_RANGE ADD CONSTRAINT RefMODEL1578
    FOREIGN KEY (APP_SID, MODEL_SID)
    REFERENCES CSR.MODEL(APP_SID, MODEL_SID)
;



ALTER TABLE CSR.MODEL_RANGE_CELL ADD CONSTRAINT FK_MRC_MR
    FOREIGN KEY (APP_SID, MODEL_SID, RANGE_ID)
    REFERENCES CSR.MODEL_RANGE(APP_SID, MODEL_SID, RANGE_ID)
;



ALTER TABLE CSR.MODEL_REGION_RANGE ADD CONSTRAINT FK_MRR_MR
    FOREIGN KEY (APP_SID, MODEL_SID, RANGE_ID)
    REFERENCES CSR.MODEL_RANGE(APP_SID, MODEL_SID, RANGE_ID)
;



ALTER TABLE CSR.MODEL_SHEET ADD CONSTRAINT RefMODEL1085
    FOREIGN KEY (APP_SID, MODEL_SID)
    REFERENCES CSR.MODEL(APP_SID, MODEL_SID)
;



ALTER TABLE CSR.MODEL_VALIDATION ADD CONSTRAINT RefMODEL_MAP1093
    FOREIGN KEY (APP_SID, MODEL_SID, SHEET_ID, CELL_NAME)
    REFERENCES CSR.MODEL_MAP(APP_SID, MODEL_SID, SHEET_ID, CELL_NAME)
;



ALTER TABLE CSR.MODULE_PARAM ADD CONSTRAINT FK_MODULE_PARAM_ID
    FOREIGN KEY (MODULE_ID)
    REFERENCES CSR.MODULE(MODULE_ID)
;

ALTER TABLE CSR.MODULE_HISTORY ADD CONSTRAINT FK_MODULE_HISTORY_ID
	FOREIGN KEY (MODULE_ID)
	REFERENCES CSR.MODULE(MODULE_ID)
;



ALTER TABLE CSR.NEW_DELEGATION_ALERT ADD CONSTRAINT FK_NEW_DELEG_ALRT_NOTIFY_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.NEW_DELEGATION_ALERT ADD CONSTRAINT FK_NEW_DELEG_ALRT_RAISED_USER
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.NEW_DELEGATION_ALERT ADD CONSTRAINT FK_NEW_DELEG_ALRT_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;


ALTER TABLE CSR.NEW_PLANNED_DELEG_ALERT ADD CONSTRAINT FK_NEW_PLANNED_DELEG_ALRT_NOTIFY_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.NEW_PLANNED_DELEG_ALERT ADD CONSTRAINT FK_NEW_PLANNED_DELEG_ALRT_RAISED_USER
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.NEW_PLANNED_DELEG_ALERT ADD CONSTRAINT FK_NEW_PLANNED_DELEG_ALRT_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;

ALTER TABLE CSR.SHEET_CREATED_ALERT ADD CONSTRAINT FK_SHEET_CREATED_ALRT_NOTIFY_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SHEET_CREATED_ALERT ADD CONSTRAINT FK_SHEET_CREATED_ALRT_RAISED_USER
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SHEET_CREATED_ALERT ADD CONSTRAINT FK_SHEET_CREATED_ALRT_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;




ALTER TABLE CSR.NON_COMP_DEFAULT ADD CONSTRAINT FK_NON_COMP_DEF_NON_COMP_TYPE
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_TYPE_ID)
    REFERENCES CSR.NON_COMPLIANCE_TYPE(APP_SID, NON_COMPLIANCE_TYPE_ID)
;

ALTER TABLE CSR.NON_COMP_DEFAULT ADD CONSTRAINT FK_NON_COMP_DEFAULT_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.NON_COMP_DEFAULT ADD CONSTRAINT FK_NON_COMP_DEFLT_FLDR_ID
    FOREIGN KEY (APP_SID, NON_COMP_DEFAULT_FOLDER_ID)
    REFERENCES CSR.NON_COMP_DEFAULT_FOLDER(APP_SID, NON_COMP_DEFAULT_FOLDER_ID)
;



ALTER TABLE CSR.NON_COMP_DEFAULT_FOLDER ADD CONSTRAINT FK_NON_COMP_DEF_PRNT_FLDR
    FOREIGN KEY (APP_SID, PARENT_FOLDER_ID)
    REFERENCES CSR.NON_COMP_DEFAULT_FOLDER(APP_SID, NON_COMP_DEFAULT_FOLDER_ID)
;



ALTER TABLE CSR.NON_COMP_DEFAULT_ISSUE ADD CONSTRAINT FK_NC_DFLT_ISSUE_NC_DFLT
    FOREIGN KEY (APP_SID, NON_COMP_DEFAULT_ID)
    REFERENCES CSR.NON_COMP_DEFAULT(APP_SID, NON_COMP_DEFAULT_ID)
;



ALTER TABLE CSR.NON_COMP_DEFAULT_TAG ADD CONSTRAINT FK_NON_COMP_DEFAULT_DNC
    FOREIGN KEY (APP_SID, NON_COMP_DEFAULT_ID)
    REFERENCES CSR.NON_COMP_DEFAULT(APP_SID, NON_COMP_DEFAULT_ID)
;

ALTER TABLE CSR.NON_COMP_DEFAULT_TAG ADD CONSTRAINT FK_NON_COMP_DEFAULT_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.NON_COMP_TYPE_AUDIT_TYPE ADD CONSTRAINT FK_NC_TYPE_AUD_TYPE_AUD_TYPE
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.NON_COMP_TYPE_AUDIT_TYPE ADD CONSTRAINT FK_NC_TYPE_AUD_TYPE_NC_TYPE
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_TYPE_ID)
    REFERENCES CSR.NON_COMPLIANCE_TYPE(APP_SID, NON_COMPLIANCE_TYPE_ID)
;



ALTER TABLE CSR.NON_COMP_TYPE_RPT_AUDIT_TYPE ADD CONSTRAINT FK_NC_TYPE_RPT_IA_TYPE_IA_TYPE
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.NON_COMP_TYPE_RPT_AUDIT_TYPE ADD CONSTRAINT FK_NC_TYPE_RPT_IA_TYPE_NC_TYPE
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_TYPE_ID)
    REFERENCES CSR.NON_COMPLIANCE_TYPE(APP_SID, NON_COMPLIANCE_TYPE_ID)
;



ALTER TABLE CSR.NON_COMPLIANCE ADD CONSTRAINT FK_NC_ORIG_AUD
    FOREIGN KEY (APP_SID, CREATED_IN_AUDIT_SID)
    REFERENCES CSR.INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE CSR.NON_COMPLIANCE ADD CONSTRAINT FK_NON_COMP_DEFAULT
    FOREIGN KEY (APP_SID, FROM_NON_COMP_DEFAULT_ID)
    REFERENCES CSR.NON_COMP_DEFAULT(APP_SID, NON_COMP_DEFAULT_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE ADD CONSTRAINT FK_NON_COMP_NON_COMP_TYPE
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_TYPE_ID)
    REFERENCES CSR.NON_COMPLIANCE_TYPE(APP_SID, NON_COMPLIANCE_TYPE_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE ADD CONSTRAINT RefCSR_USER1357
    FOREIGN KEY (APP_SID, CREATED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.NON_COMPLIANCE ADD CONSTRAINT RefCUSTOMER1358
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.NON_COMPLIANCE ADD CONSTRAINT FK_NON_COMPLIANCE_Q
	FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT)
	REFERENCES CSR.QUESTION_VERSION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT)
;

ALTER TABLE CSR.NON_COMPLIANCE_EXPR_ACTION ADD CONSTRAINT FK_EXPR_NC_ACT_NC
    FOREIGN KEY (APP_SID, QS_EXPR_NON_COMPL_ACTION_ID)
    REFERENCES CSR.QS_EXPR_NON_COMPL_ACTION(APP_SID, QS_EXPR_NON_COMPL_ACTION_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE_EXPR_ACTION ADD CONSTRAINT FK_NC_NC_EXPR_ACT
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_ID)
    REFERENCES CSR.NON_COMPLIANCE(APP_SID, NON_COMPLIANCE_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE_EXPR_ACTION ADD CONSTRAINT FK_QSR_NC_EXPR_ACTION
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE_TYPE_FLOW_CAP ADD CONSTRAINT FK_NON_COMP_FC_NON_COMP_TYPE
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_TYPE_ID)
    REFERENCES CSR.NON_COMPLIANCE_TYPE(APP_SID, NON_COMPLIANCE_TYPE_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE_TYPE_FLOW_CAP ADD CONSTRAINT FK_NON_COMP_FC_CFC
    FOREIGN KEY (APP_SID, FLOW_CAPABILITY_ID)
    REFERENCES CSR.CUSTOMER_FLOW_CAPABILITY(APP_SID, FLOW_CAPABILITY_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE_TYPE_FLOW_CAP ADD CONSTRAINT FK_NON_COMP_FC_FC
    FOREIGN KEY (BASE_FLOW_CAPABILITY_ID)
    REFERENCES CSR.FLOW_CAPABILITY(FLOW_CAPABILITY_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE_TAG ADD CONSTRAINT FK_NON_CMPL_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE_TAG ADD CONSTRAINT FK_NON_CMPL_TAG_NON_CMPL
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_ID)
    REFERENCES CSR.NON_COMPLIANCE(APP_SID, NON_COMPLIANCE_ID)
;



ALTER TABLE CSR.NON_COMPLIANCE_TYPE ADD CONSTRAINT FK_NON_COMPLIANCE_TYPE_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


ALTER TABLE CSR.NON_COMPLIANCE_TYPE_TAG_GROUP ADD CONSTRAINT FK_NON_COMPL_TYP_TAG_GR_TAG_GR
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.NON_COMPLIANCE_TYPE_TAG_GROUP ADD CONSTRAINT FK_NON_COMPL_TYPE_TAG_GR_NON_C
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_TYPE_ID)
    REFERENCES CSR.NON_COMPLIANCE_TYPE(APP_SID, NON_COMPLIANCE_TYPE_ID)
;

ALTER TABLE CSR.NOTIFICATION_TYPE_PARAM ADD CONSTRAINT FK_NOTIFICATION_TYPE_PARAM_NOT_TYPE
    FOREIGN KEY (APP_SID, NOTIFICATION_TYPE_ID)
    REFERENCES CSR.NOTIFICATION_TYPE(APP_SID, NOTIFICATION_TYPE_ID)
;

ALTER TABLE CSR.OBJECTIVE ADD CONSTRAINT RefCSR_USER61
    FOREIGN KEY (APP_SID, RESPONSIBLE_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.OBJECTIVE ADD CONSTRAINT RefCSR_USER62
    FOREIGN KEY (APP_SID, DELIVERY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.OBJECTIVE ADD CONSTRAINT RefCUSTOMER1021
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.OBJECTIVE_STATUS ADD CONSTRAINT RefCSR_USER63
    FOREIGN KEY (APP_SID, UPDATED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.OBJECTIVE_STATUS ADD CONSTRAINT RefOBJECTIVE54
    FOREIGN KEY (APP_SID, OBJECTIVE_SID)
    REFERENCES CSR.OBJECTIVE(APP_SID, OBJECTIVE_SID)
;



ALTER TABLE CSR.OPTION_ITEM ADD CONSTRAINT RefCUSTOMER979
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.OPTION_ITEM ADD CONSTRAINT RefOPTION_SET189
    FOREIGN KEY (APP_SID, OPTION_SET_ID)
    REFERENCES CSR.OPTION_SET(APP_SID, OPTION_SET_ID)
;



ALTER TABLE CSR.OPTION_SET ADD CONSTRAINT RefCUSTOMER977
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.OSHA_MAPPING ADD CONSTRAINT FK_OSHA_MAP_FIELD_ID
	FOREIGN KEY (OSHA_MAP_FIELD_ID)
	REFERENCES CSR.OSHA_MAP_FIELD (OSHA_MAP_FIELD_ID)
;


ALTER TABLE CSR.OSHA_MAPPING ADD CONSTRAINT FK_IND_SID
	FOREIGN KEY (IND_SID)
	REFERENCES CSR.IND (IND_SID)
;

ALTER TABLE CSR.OSHA_MAPPING ADD CONSTRAINT FK_OSHA_MAP_REGION_DATA
    FOREIGN KEY (REGION_DATA_MAP_ID)
    REFERENCES CSR.REGION_DATA_MAP(REGION_DATA_MAP_ID)
;

ALTER TABLE CSR.OSHA_BASE_DATA ADD CONSTRAINT FK_OSHA_BASE_DATA_OSHA_MAP_FLD
	FOREIGN KEY (OSHA_MAP_FIELD_ID)
	REFERENCES CSR.OSHA_MAP_FIELD (OSHA_MAP_FIELD_ID)
;

ALTER TABLE CSR.OSHA_MAP_FIELD_TYPE ADD CONSTRAINT FK_OSHA_MAP_FIELD_TYPE_FIELD
	FOREIGN KEY (OSHA_MAP_FIELD_ID)
	REFERENCES CSR.OSHA_MAP_FIELD (OSHA_MAP_FIELD_ID)
;

ALTER TABLE CSR.OSHA_MAP_FIELD_TYPE ADD CONSTRAINT FK_OSHA_MAP_FIELD_TYPE_TYPE
	FOREIGN KEY (OSHA_MAP_TYPE_ID)
	REFERENCES CSR.OSHA_MAP_TYPE (OSHA_MAP_TYPE_ID)
;

ALTER TABLE CSR.OUTSTANDING_REQUESTS_JOB ADD CONSTRAINT FK_ACC_OUTS_REQ_JOB
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID)
    REFERENCES CSR.EST_ACCOUNT(APP_SID, EST_ACCOUNT_SID)
;

ALTER TABLE CSR.OUTSTANDING_REQUESTS_JOB ADD CONSTRAINT FK_BJOB_OUTS_REQ_JOB
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;



ALTER TABLE CSR.PCT_OWNERSHIP ADD CONSTRAINT RefREGION1201
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.PCT_OWNERSHIP_CHANGE ADD CONSTRAINT RefCSR_USER1022
    FOREIGN KEY (APP_SID, ADDED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.PCT_OWNERSHIP_CHANGE ADD CONSTRAINT RefCUSTOMER1023
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.PCT_OWNERSHIP_CHANGE ADD CONSTRAINT RefMEASURE571
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.PCT_OWNERSHIP_CHANGE ADD CONSTRAINT RefREGION1202
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.PENDING_DATASET ADD CONSTRAINT RefCUSTOMER501
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.PENDING_DATASET ADD CONSTRAINT RefREPORTING_PERIOD473
    FOREIGN KEY (APP_SID, REPORTING_PERIOD_SID)
    REFERENCES CSR.REPORTING_PERIOD(APP_SID, REPORTING_PERIOD_SID)
;



ALTER TABLE CSR.PENDING_IND ADD CONSTRAINT RefIND474
    FOREIGN KEY (APP_SID, MAPS_TO_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.PENDING_IND ADD CONSTRAINT RefMEASURE475
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.PENDING_IND ADD CONSTRAINT RefPENDING_DATASET476
    FOREIGN KEY (APP_SID, PENDING_DATASET_ID)
    REFERENCES CSR.PENDING_DATASET(APP_SID, PENDING_DATASET_ID)
;

ALTER TABLE CSR.PENDING_IND ADD CONSTRAINT RefPENDING_ELEMENT_TYPE528
    FOREIGN KEY (ELEMENT_TYPE)
    REFERENCES CSR.PENDING_ELEMENT_TYPE(ELEMENT_TYPE)
;

ALTER TABLE CSR.PENDING_IND ADD CONSTRAINT RefPENDING_IND502
    FOREIGN KEY (APP_SID, PARENT_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;

ALTER TABLE CSR.PENDING_IND ADD CONSTRAINT RefPENDING_IND526
    FOREIGN KEY (APP_SID, LINK_TO_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;



ALTER TABLE CSR.PENDING_IND_ACCURACY_TYPE ADD CONSTRAINT RefACCURACY_TYPE510
    FOREIGN KEY (APP_SID, ACCURACY_TYPE_ID)
    REFERENCES CSR.ACCURACY_TYPE(APP_SID, ACCURACY_TYPE_ID)
;

ALTER TABLE CSR.PENDING_IND_ACCURACY_TYPE ADD CONSTRAINT RefPENDING_IND511
    FOREIGN KEY (APP_SID, PENDING_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;



ALTER TABLE CSR.PENDING_PERIOD ADD CONSTRAINT RefPENDING_DATASET479
    FOREIGN KEY (APP_SID, PENDING_DATASET_ID)
    REFERENCES CSR.PENDING_DATASET(APP_SID, PENDING_DATASET_ID)
;



ALTER TABLE CSR.PENDING_REGION ADD CONSTRAINT RefPENDING_DATASET481
    FOREIGN KEY (APP_SID, PENDING_DATASET_ID)
    REFERENCES CSR.PENDING_DATASET(APP_SID, PENDING_DATASET_ID)
;

ALTER TABLE CSR.PENDING_REGION ADD CONSTRAINT RefPENDING_REGION503
    FOREIGN KEY (APP_SID, PARENT_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;

ALTER TABLE CSR.PENDING_REGION ADD CONSTRAINT RefREGION1203
    FOREIGN KEY (APP_SID, MAPS_TO_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.PENDING_VAL ADD CONSTRAINT RefAPPROVAL_STEP484
    FOREIGN KEY (APP_SID, APPROVAL_STEP_ID)
    REFERENCES CSR.APPROVAL_STEP(APP_SID, APPROVAL_STEP_ID)
;

ALTER TABLE CSR.PENDING_VAL ADD CONSTRAINT RefMEASURE_CONVERSION999
    FOREIGN KEY (APP_SID, FROM_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.PENDING_VAL ADD CONSTRAINT RefPENDING_IND483
    FOREIGN KEY (APP_SID, PENDING_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;

ALTER TABLE CSR.PENDING_VAL ADD CONSTRAINT RefPENDING_PERIOD485
    FOREIGN KEY (APP_SID, PENDING_PERIOD_ID)
    REFERENCES CSR.PENDING_PERIOD(APP_SID, PENDING_PERIOD_ID)
;

ALTER TABLE CSR.PENDING_VAL ADD CONSTRAINT RefPENDING_REGION482
    FOREIGN KEY (APP_SID, PENDING_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;



ALTER TABLE CSR.PENDING_VAL_ACCURACY_TYPE_OPT ADD CONSTRAINT RefACCURACY_TYPE_OPTION996
    FOREIGN KEY (APP_SID, ACCURACY_TYPE_OPTION_ID)
    REFERENCES CSR.ACCURACY_TYPE_OPTION(APP_SID, ACCURACY_TYPE_OPTION_ID)
;

ALTER TABLE CSR.PENDING_VAL_ACCURACY_TYPE_OPT ADD CONSTRAINT RefPENDING_VAL512
    FOREIGN KEY (APP_SID, PENDING_VAL_ID)
    REFERENCES CSR.PENDING_VAL(APP_SID, PENDING_VAL_ID)
;



ALTER TABLE CSR.PENDING_VAL_CACHE ADD CONSTRAINT RefPENDING_IND768
    FOREIGN KEY (APP_SID, PENDING_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;

ALTER TABLE CSR.PENDING_VAL_CACHE ADD CONSTRAINT RefPENDING_PERIOD770
    FOREIGN KEY (APP_SID, PENDING_PERIOD_ID)
    REFERENCES CSR.PENDING_PERIOD(APP_SID, PENDING_PERIOD_ID)
;

ALTER TABLE CSR.PENDING_VAL_CACHE ADD CONSTRAINT RefPENDING_REGION769
    FOREIGN KEY (APP_SID, PENDING_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;



ALTER TABLE CSR.PENDING_VAL_FILE_UPLOAD ADD CONSTRAINT RefFILE_UPLOAD514
    FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
    REFERENCES CSR.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CSR.PENDING_VAL_FILE_UPLOAD ADD CONSTRAINT RefPENDING_VAL515
    FOREIGN KEY (APP_SID, PENDING_VAL_ID)
    REFERENCES CSR.PENDING_VAL(APP_SID, PENDING_VAL_ID)
;



ALTER TABLE CSR.PENDING_VAL_LOG ADD CONSTRAINT RefCSR_USER524
    FOREIGN KEY (APP_SID, SET_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.PENDING_VAL_LOG ADD CONSTRAINT RefPENDING_VAL488
    FOREIGN KEY (APP_SID, PENDING_VAL_ID)
    REFERENCES CSR.PENDING_VAL(APP_SID, PENDING_VAL_ID)
;



ALTER TABLE CSR.PENDING_VAL_VARIANCE ADD CONSTRAINT RefPENDING_VAL516
    FOREIGN KEY (APP_SID, PENDING_VAL_ID)
    REFERENCES CSR.PENDING_VAL(APP_SID, PENDING_VAL_ID)
;



ALTER TABLE CSR.PERIOD ADD CONSTRAINT FK_PERIOD_PERIOD_SET
    FOREIGN KEY (APP_SID, PERIOD_SET_ID)
    REFERENCES CSR.PERIOD_SET(APP_SID, PERIOD_SET_ID)
;



ALTER TABLE CSR.PERIOD_DATES ADD CONSTRAINT FK_PERIOD_DATES_PERIOD
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_ID)
    REFERENCES CSR.PERIOD(APP_SID, PERIOD_SET_ID, PERIOD_ID)
;



ALTER TABLE CSR.PERIOD_INTERVAL ADD CONSTRAINT FK_PERIOD_INTERVAL_PERIOD_SET
    FOREIGN KEY (APP_SID, PERIOD_SET_ID)
    REFERENCES CSR.PERIOD_SET(APP_SID, PERIOD_SET_ID)
;



ALTER TABLE CSR.PERIOD_INTERVAL_MEMBER ADD CONSTRAINT FK_PERIOD_INT_MEM_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.PERIOD_INTERVAL_MEMBER ADD CONSTRAINT FK_PERIOD_INTRVL_END_PERIOD
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, END_PERIOD_ID)
    REFERENCES CSR.PERIOD(APP_SID, PERIOD_SET_ID, PERIOD_ID)
;

ALTER TABLE CSR.PERIOD_INTERVAL_MEMBER ADD CONSTRAINT FK_PERIOD_INTRVL_ST_PERIOD
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, START_PERIOD_ID)
    REFERENCES CSR.PERIOD(APP_SID, PERIOD_SET_ID, PERIOD_ID)
;



ALTER TABLE CSR.PERIOD_SET ADD CONSTRAINT FK_PERIOD_SET_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.PERIOD_SPAN_PATTERN ADD CONSTRAINT FK_PRD_SPAN_PTRN_PRD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.PERIOD_SPAN_PATTERN ADD CONSTRAINT FK_PRD_SPAN_PTRN_PRD_SET
    FOREIGN KEY (APP_SID, PERIOD_SET_ID)
    REFERENCES CSR.PERIOD_SET(APP_SID, PERIOD_SET_ID)
;

ALTER TABLE CSR.PERIOD_SPAN_PATTERN ADD CONSTRAINT FK_PRD_SPAN_PTRN_TYPE
    FOREIGN KEY (PERIOD_SPAN_PATTERN_TYPE_ID)
    REFERENCES CSR.PERIOD_SPAN_PATTERN_TYPE(PERIOD_SPAN_PATTERN_TYPE_ID)
;



ALTER TABLE CSR.PLUGIN ADD CONSTRAINT FK_PLUGIN_APP_SID
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.PLUGIN ADD CONSTRAINT FK_PLUGIN_PLUGIN_TYPE
    FOREIGN KEY (PLUGIN_TYPE_ID)
    REFERENCES CSR.PLUGIN_TYPE(PLUGIN_TYPE_ID)
;

ALTER TABLE CSR.PLUGIN ADD CONSTRAINT FK_PLUGIN_PORTAL
    FOREIGN KEY (APP_SID, PORTAL_SID)
    REFERENCES CSR.PORTAL_DASHBOARD(APP_SID, PORTAL_SID)
;



ALTER TABLE CSR.PLUGIN_INDICATOR ADD CONSTRAINT FK_PLUGIN_IND_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.PLUGIN_INDICATOR ADD CONSTRAINT FK_PLUGIN_IND_PLUGIN
    FOREIGN KEY (PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID)
;



ALTER TABLE CSR.PLUGIN_LOOKUP_FLOW_STATE ADD CONSTRAINT FK_PLGN_LKUP_FLW_ST_FLW_ST
    FOREIGN KEY (APP_SID, FLOW_SID, FLOW_STATE_ID)
    REFERENCES CSR.SECTION_ROUTED_FLOW_STATE(APP_SID, FLOW_SID, FLOW_STATE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.PLUGIN_LOOKUP_FLOW_STATE ADD CONSTRAINT FK_PLGN_LKUP_FLW_ST_PLGN_LKUP
    FOREIGN KEY (APP_SID, PLUGIN_NAME)
    REFERENCES CSR.PLUGIN_LOOKUP(APP_SID, PLUGIN_NAME) ON DELETE CASCADE
;



ALTER TABLE CSR.POSTCODE_EGRID ADD CONSTRAINT FK_EGRID_POSTCODE_EGRID
    FOREIGN KEY (EGRID_REF)
    REFERENCES CSR.EGRID(EGRID_REF)
;



ALTER TABLE CSR.POSTIT ADD CONSTRAINT FK_CUSTOMER_POSTIT
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.POSTIT ADD CONSTRAINT FK_USER_POSTIT
    FOREIGN KEY (APP_SID, CREATED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.POSTIT_FILE ADD CONSTRAINT FK_CUSTOMER_POSTIT_FILE
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.POSTIT_FILE ADD CONSTRAINT FK_POSTIT_POSTIT_FILE
    FOREIGN KEY (APP_SID, POSTIT_ID)
    REFERENCES CSR.POSTIT(APP_SID, POSTIT_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.PROJECT_DOC_FOLDER ADD CONSTRAINT FK_PROJECT_PROJECT_DOC_FOLDER
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;



ALTER TABLE CSR.PROJECT_INIT_METRIC_FLOW_STATE ADD CONSTRAINT FK_FLST_PRJ_INIT_MET_FLST
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID)
;

ALTER TABLE CSR.PROJECT_INIT_METRIC_FLOW_STATE ADD CONSTRAINT FK_PR_INIT_MET_PR_INIT_MET_FS
    FOREIGN KEY (APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
;



ALTER TABLE CSR.PROJECT_INITIATIVE_METRIC ADD CONSTRAINT FK_INIT_MET_GRP_PRJ_INIT_MET
    FOREIGN KEY (APP_SID, PROJECT_SID, POS_GROUP)
    REFERENCES CSR.INITIATIVE_METRIC_GROUP(APP_SID, PROJECT_SID, POS_GROUP)
;

ALTER TABLE CSR.PROJECT_INITIATIVE_METRIC ADD CONSTRAINT FK_INIT_MET_PRJ_INIT_MET
    FOREIGN KEY (APP_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.INITIATIVE_METRIC(APP_SID, INITIATIVE_METRIC_ID)
;

ALTER TABLE CSR.PROJECT_INITIATIVE_METRIC ADD CONSTRAINT FK_PRJ_PRJ_INIT_MET
    FOREIGN KEY (APP_SID, PROJECT_SID, FLOW_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID, FLOW_SID)
;



ALTER TABLE CSR.PROJECT_INITIATIVE_PERIOD_STAT ADD CONSTRAINT FK_INIT_PRD_ST_PRJ_INIT_PRD_ST
    FOREIGN KEY (APP_SID, INITIATIVE_PERIOD_STATUS_ID)
    REFERENCES CSR.INITIATIVE_PERIOD_STATUS(APP_SID, INITIATIVE_PERIOD_STATUS_ID)
;

ALTER TABLE CSR.PROJECT_INITIATIVE_PERIOD_STAT ADD CONSTRAINT FK_PRJ_PRJ_INIT_PRD_STAT
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;



ALTER TABLE CSR.PROJECT_TAG_FILTER ADD CONSTRAINT FK_PRJTAGGRP_PRJTAGFLT
    FOREIGN KEY (APP_SID, PROJECT_SID, TAG_GROUP_ID)
    REFERENCES CSR.PROJECT_TAG_GROUP(APP_SID, PROJECT_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.PROJECT_TAG_FILTER ADD CONSTRAINT FK_TAGGRPMBR_PRJTAGFLT
    FOREIGN KEY (APP_SID, TAG_GROUP_ID, TAG_ID)
    REFERENCES CSR.TAG_GROUP_MEMBER(APP_SID, TAG_GROUP_ID, TAG_ID)
;



ALTER TABLE CSR.PROJECT_TAG_GROUP ADD CONSTRAINT FK_PRJ_PRJ_TAG_GRP
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE CSR.PROJECT_TAG_GROUP ADD CONSTRAINT FK_TAG_GRP_PRJ_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.PROJECT_TAG_GROUP ADD CONSTRAINT FK_TAGGRPMBR_PRJTAGGRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID, DEFAULT_TAG_ID)
    REFERENCES CSR.TAG_GROUP_MEMBER(APP_SID, TAG_GROUP_ID, TAG_ID)
;



ALTER TABLE CSR.PROPERTY_CHARACTER_LAYOUT ADD CONSTRAINT FK_PROP_CHAR_LAYT_REG_METRIC
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.REGION_METRIC(APP_SID, IND_SID)
;

ALTER TABLE CSR.PROPERTY_CHARACTER_LAYOUT ADD CONSTRAINT FK_PROPERTY_CHAR_LAYOUT_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.PROPERTY_CHARACTER_LAYOUT ADD CONSTRAINT FK_PROPERTY_CHAR_LAYT_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;



ALTER TABLE CSR.PROPERTY_DIVISION ADD CONSTRAINT FK_PROP_PROP_DIV
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.ALL_PROPERTY(APP_SID, REGION_SID)
;

ALTER TABLE CSR.PROPERTY_DIVISION ADD CONSTRAINT RefDIVISION1618
    FOREIGN KEY (APP_SID, DIVISION_ID)
    REFERENCES CSR.DIVISION(APP_SID, DIVISION_ID)
;



ALTER TABLE CSR.PROPERTY_ELEMENT_LAYOUT ADD CONSTRAINT FK_PROP_EL_LAYOUT_REG_METRIC
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.REGION_METRIC(APP_SID, IND_SID)
;

ALTER TABLE CSR.PROPERTY_ELEMENT_LAYOUT ADD CONSTRAINT FK_PROPERTY_EL_LAYOUT_TAG_GRP
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.PROPERTY_ELEMENT_LAYOUT ADD CONSTRAINT FK_PROPERTY_ELMNT_LAYOUT_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.PROPERTY_FUND ADD CONSTRAINT FK_PROPERTY_FUND_CONTAINER
    FOREIGN KEY (APP_SID, CONTAINER_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.PROPERTY_FUND ADD CONSTRAINT FK_PROPERTY_FUND_FUND
    FOREIGN KEY (APP_SID, FUND_ID)
    REFERENCES CSR.FUND(APP_SID, FUND_ID)
;

ALTER TABLE CSR.PROPERTY_FUND ADD CONSTRAINT FK_PROPERTY_FUND_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.PROPERTY_FUND_OWNERSHIP ADD CONSTRAINT FK_PFO_PF
    FOREIGN KEY (APP_SID, REGION_SID, FUND_ID)
    REFERENCES CSR.PROPERTY_FUND(APP_SID, REGION_SID, FUND_ID);

ALTER TABLE CSR.PROPERTY_FUND_OWNERSHIP ADD CONSTRAINT FK_PFO_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.PROPERTY_OPTIONS ADD CONSTRAINT FK_PROP_OPTNS_GRESB_SRVC_CFG
    FOREIGN KEY (GRESB_SERVICE_CONFIG)
    REFERENCES CSR.GRESB_SERVICE_CONFIG(NAME)
;

ALTER TABLE CSR.PROPERTY_OPTIONS ADD CONSTRAINT FK_PROPOPT_GEOMAP
    FOREIGN KEY (APP_SID, PROPERTIES_GEO_MAP_SID)
    REFERENCES CSR.GEO_MAP(APP_SID, GEO_MAP_SID)
;



ALTER TABLE CSR.PROPERTY_PHOTO ADD CONSTRAINT FK_PROP_PHOTO_PROP_SID
    FOREIGN KEY (APP_SID, PROPERTY_REGION_SID)
    REFERENCES CSR.ALL_PROPERTY(APP_SID, REGION_SID)
;

ALTER TABLE CSR.PROPERTY_PHOTO ADD CONSTRAINT FK_PROP_PHOTO_SPACE_SID
    FOREIGN KEY (APP_SID, SPACE_REGION_SID)
    REFERENCES CSR.ALL_SPACE(APP_SID, REGION_SID)
;

ALTER TABLE csr.property_mandatory_roles ADD CONSTRAINT fk_property_mandatory_roles
	FOREIGN KEY (app_sid, role_sid)
	REFERENCES csr.role(app_sid, role_sid);


ALTER TABLE CSR.PROPERTY_SUB_TYPE ADD CONSTRAINT FK_PROP_TYP_PROP_SUB_TYP
    FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID)
    REFERENCES CSR.PROPERTY_TYPE(APP_SID, PROPERTY_TYPE_ID)
;



ALTER TABLE CSR.PROPERTY_TAB ADD CONSTRAINT FK_PROPERTY_TAB_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.PROPERTY_TAB ADD CONSTRAINT FK_PROPERTY_TAB_PLUGIN
    FOREIGN KEY (PLUGIN_ID, PLUGIN_TYPE_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID, PLUGIN_TYPE_ID)
;



ALTER TABLE CSR.PROPERTY_TAB_GROUP ADD CONSTRAINT FK_PRPTY_TAB_GROUP_PRPTY_TAB
    FOREIGN KEY (APP_SID, PLUGIN_ID)
    REFERENCES CSR.PROPERTY_TAB(APP_SID, PLUGIN_ID)
;


ALTER TABLE CSR.PROPERTY_TYPE ADD CONSTRAINT FK_PROP_TYPE_GRESB_PROP_TYPE
    FOREIGN KEY (GRESB_PROPERTY_TYPE_ID)
    REFERENCES CSR.GRESB_PROPERTY_TYPE(GRESB_PROPERTY_TYPE_ID)
;
    
ALTER TABLE CSR.PROPERTY_SUB_TYPE ADD CONSTRAINT FK_PROP_STYPE_GRESB_PROP_STYPE
    FOREIGN KEY (GRESB_PROPERTY_TYPE_ID, GRESB_PROPERTY_SUB_TYPE_ID)    
    REFERENCES CSR.GRESB_PROPERTY_SUB_TYPE(GRESB_PROPERTY_TYPE_ID, GRESB_PROPERTY_SUB_TYPE_ID)
;


ALTER TABLE CSR.PROPERTY_TYPE_SPACE_TYPE ADD CONSTRAINT FK_PRP_TYP_SPC_TYPE_PROP
    FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID)
    REFERENCES CSR.PROPERTY_TYPE(APP_SID, PROPERTY_TYPE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.PROPERTY_TYPE_SPACE_TYPE ADD CONSTRAINT FK_PRP_TYP_SPC_TYPE_SPC
    FOREIGN KEY (APP_SID, SPACE_TYPE_ID)
    REFERENCES CSR.SPACE_TYPE(APP_SID, SPACE_TYPE_ID) ON DELETE CASCADE
;

ALTER TABLE csr.property_gresb ADD CONSTRAINT fk_property_gresb_region
	FOREIGN KEY (app_sid, region_sid)
	REFERENCES csr.region(app_sid, region_sid)
;

ALTER TABLE CSR.PVC_REGION_RECALC_JOB ADD CONSTRAINT RefPENDING_DATASET722
    FOREIGN KEY (APP_SID, PENDING_DATASET_ID)
    REFERENCES CSR.PENDING_DATASET(APP_SID, PENDING_DATASET_ID)
;

ALTER TABLE CSR.PVC_REGION_RECALC_JOB ADD CONSTRAINT RefPENDING_IND712
    FOREIGN KEY (APP_SID, PENDING_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;



ALTER TABLE CSR.PVC_STORED_CALC_JOB ADD CONSTRAINT RefPENDING_DATASET725
    FOREIGN KEY (APP_SID, PENDING_DATASET_ID)
    REFERENCES CSR.PENDING_DATASET(APP_SID, PENDING_DATASET_ID)
;

ALTER TABLE CSR.PVC_STORED_CALC_JOB ADD CONSTRAINT RefPENDING_IND726
    FOREIGN KEY (APP_SID, CALC_PENDING_IND_ID)
    REFERENCES CSR.PENDING_IND(APP_SID, PENDING_IND_ID)
;

ALTER TABLE CSR.PVC_STORED_CALC_JOB ADD CONSTRAINT RefPENDING_PERIOD724
    FOREIGN KEY (APP_SID, PENDING_PERIOD_ID)
    REFERENCES CSR.PENDING_PERIOD(APP_SID, PENDING_PERIOD_ID)
;

ALTER TABLE CSR.PVC_STORED_CALC_JOB ADD CONSTRAINT RefPENDING_REGION727
    FOREIGN KEY (APP_SID, PENDING_REGION_ID)
    REFERENCES CSR.PENDING_REGION(APP_SID, PENDING_REGION_ID)
;

ALTER TABLE CSR.QUESTION ADD CONSTRAINT FK_QUESTION_QUICK_SURVEY
	FOREIGN KEY (APP_SID, OWNED_BY_SURVEY_SID)
	REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE CSR.QUESTION ADD CONSTRAINT FK_QUESTION_IND
    FOREIGN KEY (APP_SID, MAPS_TO_IND_SID, MEASURE_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID, MEASURE_SID)
;

ALTER TABLE CSR.QUESTION ADD CONSTRAINT FK_QUESTION_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.QUESTION ADD CONSTRAINT FK_QV_QUESTION_TYPE
    FOREIGN KEY (QUESTION_TYPE)
    REFERENCES CSR.QUESTION_TYPE(QUESTION_TYPE)
;

ALTER TABLE CSR.QUESTION ADD CONSTRAINT FK_Q_CUST_QUEST_TYPE
    FOREIGN KEY (APP_SID, CUSTOM_QUESTION_TYPE_ID)
    REFERENCES CSR.QS_CUSTOM_QUESTION_TYPE(APP_SID, CUSTOM_QUESTION_TYPE_ID)
;

ALTER TABLE CSR.QUESTION ADD (
	CONSTRAINT FK_LATEST_QUESTION_VERSION FOREIGN KEY (APP_SID, QUESTION_ID, LATEST_QUESTION_VERSION, LATEST_QUESTION_DRAFT)
	REFERENCES CSR.QUESTION_VERSION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT)
	DEFERRABLE INITIALLY DEFERRED
);

CREATE INDEX CSR.IX_LATEST_QUESTION_VERSION ON CSR.QUESTION(APP_SID, QUESTION_ID, LATEST_QUESTION_VERSION, LATEST_QUESTION_DRAFT);


ALTER TABLE CSR.QUESTION_VERSION ADD CONSTRAINT FK_QV_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.QUESTION_OPTION_NC_TAG ADD CONSTRAINT FK_Q_OPT_TAG_OPTION
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT, QUESTION_OPTION_ID)
    REFERENCES CSR.QUESTION_OPTION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT, QUESTION_OPTION_ID)
;

ALTER TABLE CSR.QUESTION_TAG ADD CONSTRAINT FK_QUESTION_TAG_QUESTION
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT)
    REFERENCES CSR.QUESTION_VERSION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT)
;

ALTER TABLE CSR.QS_ANSWER_FILE ADD CONSTRAINT FK_QS_ANS_FILE_QSTN_ID
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QS_ANSWER_FILE ADD CONSTRAINT FK_QS_ANS_FILE_RESP_ID
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.QS_ANSWER_FILE ADD CONSTRAINT FK_QS_ANSWER_FILE_FILE
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID, SHA1, FILENAME, MIME_TYPE)
    REFERENCES CSR.QS_RESPONSE_FILE(APP_SID, SURVEY_RESPONSE_ID, SHA1, FILENAME, MIME_TYPE)
;

ALTER TABLE CSR.QS_ANSWER_FILE ADD CONSTRAINT RefCUSTOMER2192
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.QS_ANSWER_LOG ADD CONSTRAINT FK_QSA_LOG_QSA
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID, SUBMISSION_ID)
    REFERENCES CSR.QUICK_SURVEY_ANSWER(APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID, SUBMISSION_ID)
;

ALTER TABLE CSR.QS_ANSWER_LOG ADD CONSTRAINT RefCUSTOMER1305
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


ALTER TABLE CSR.QS_CUSTOM_QUESTION_TYPE ADD CONSTRAINT FK_QS_CUST_QUEST_TYPE_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.QS_EXPR_MSG_ACTION ADD CONSTRAINT FK_CUS_QS_EXPR_MSG_ACTION
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.QS_EXPR_NC_ACTION_INVOLVE_ROLE ADD CONSTRAINT FK_ROLE_QS_EXPR_NC_ACT_INV
    FOREIGN KEY (APP_SID, INVOLVE_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.QS_EXPR_NC_ACTION_INVOLVE_ROLE ADD CONSTRAINT RefQS_EXPR_NON_COMPL_ACTIO2241
    FOREIGN KEY (APP_SID, QS_EXPR_NON_COMPL_ACTION_ID)
    REFERENCES CSR.QS_EXPR_NON_COMPL_ACTION(APP_SID, QS_EXPR_NON_COMPL_ACTION_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.QS_EXPR_NON_COMPL_ACTION ADD CONSTRAINT FK_CUS_QS_EXPR_NC_ACTION
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.QS_EXPR_NON_COMPL_ACTION ADD CONSTRAINT FK_QS_EX_NC_ACT_NON_COMP_TYPE
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_TYPE_ID)
    REFERENCES CSR.NON_COMPLIANCE_TYPE(APP_SID, NON_COMPLIANCE_TYPE_ID)
;

ALTER TABLE CSR.QS_EXPR_NON_COMPL_ACTION ADD CONSTRAINT FK_QS_EXPR_NC_ACTION_NC_DFLT
    FOREIGN KEY (APP_SID, NON_COMP_DEFAULT_ID)
    REFERENCES CSR.NON_COMP_DEFAULT(APP_SID, NON_COMP_DEFAULT_ID)
;

ALTER TABLE CSR.QS_EXPR_NON_COMPL_ACTION ADD CONSTRAINT FK_ROLE_QS_EXPR_NC_ACTION
    FOREIGN KEY (APP_SID, ASSIGN_TO_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.QS_FILTER_CONDITION ADD CONSTRAINT FK_QS_FIL_COND_CMP_OP
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, COMPARE_TO_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QS_QUESTION_OPTION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QS_FILTER_CONDITION ADD CONSTRAINT FK_QS_FIL_COND_QN
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QS_FILTER_CONDITION ADD CONSTRAINT FK_QS_FILTER_CONDITION_SURVEY
	FOREIGN KEY (APP_SID, SURVEY_SID)
	REFERENCES CSR.QUICK_SURVEY (APP_SID, SURVEY_SID)
;


ALTER TABLE CSR.QS_FILTER_CONDITION_GENERAL ADD CONSTRAINT FK_QS_FILTER_COND_GEN_SURVEY
    FOREIGN KEY (APP_SID, SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE CSR.QS_FILTER_CONDITION_GENERAL ADD CONSTRAINT FK_QS_FILTER_COND_GEN_TYPE
    FOREIGN KEY (QS_FILTER_COND_GEN_TYPE_ID)
    REFERENCES CSR.QS_FILTER_COND_GEN_TYPE(QS_FILTER_COND_GEN_TYPE_ID)
;

ALTER TABLE CSR.QS_QUESTION_OPTION ADD CONSTRAINT FK_IND_QS_QUESTION_OPT
    FOREIGN KEY (APP_SID, MAPS_TO_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.QS_QUESTION_OPTION ADD CONSTRAINT FK_QSQ_OPTION_DEF_NON_COMP
    FOREIGN KEY (APP_SID, NON_COMP_DEFAULT_ID)
    REFERENCES CSR.NON_COMP_DEFAULT(APP_SID, NON_COMP_DEFAULT_ID)
;

ALTER TABLE CSR.QS_QUESTION_OPTION ADD CONSTRAINT FK_QSQ_OPTION_NON_COMP_TYP
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_TYPE_ID)
    REFERENCES CSR.NON_COMPLIANCE_TYPE(APP_SID, NON_COMPLIANCE_TYPE_ID)
;

ALTER TABLE CSR.QS_QUESTION_OPTION ADD CONSTRAINT FK_QSQO_QO
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT, QUESTION_OPTION_ID)
    REFERENCES CSR.QUESTION_OPTION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT, QUESTION_OPTION_ID)
;

ALTER TABLE CSR.QS_QUESTION_OPTION ADD CONSTRAINT QS_Q_OPT_PARENT_OPT
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, PARENT_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QS_QUESTION_OPTION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QS_QUESTION_OPTION ADD CONSTRAINT RefCUSTOMER2194
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.QS_QUESTION_OPTION ADD CONSTRAINT FK_QSQO_QSQ
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QS_QUESTION_OPTION_NC_TAG ADD CONSTRAINT FK_QSQ_OPT_TAG_OPTION
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QS_QUESTION_OPTION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QS_QUESTION_OPTION_NC_TAG ADD CONSTRAINT FK_QSQ_OPT_TAG_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.QS_RESPONSE_FILE ADD CONSTRAINT FK_QS_RESPONSE_FILE_RESPONSE
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.QS_RESPONSE_POSTIT ADD CONSTRAINT FK_POSTIT_QS_RESPONSE
    FOREIGN KEY (APP_SID, POSTIT_ID)
    REFERENCES CSR.POSTIT(APP_SID, POSTIT_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.QS_RESPONSE_POSTIT ADD CONSTRAINT FK_QS_RESP_POSTIT
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.QS_SUBMISSION_FILE ADD CONSTRAINT FK_QS_SUBMSN_FILE_FILE
    FOREIGN KEY (APP_SID, QS_ANSWER_FILE_ID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QS_ANSWER_FILE(APP_SID, QS_ANSWER_FILE_ID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.QS_SUBMISSION_FILE ADD CONSTRAINT FK_SUBMSN_FILE_QSS
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID, SUBMISSION_ID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_SUBMISSION(APP_SID, SURVEY_RESPONSE_ID, SUBMISSION_ID, SURVEY_VERSION) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QUICK_SURVEY ADD CONSTRAINT FK_QS_AGG_IND_GRP
    FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
    REFERENCES CSR.AGGREGATE_IND_GROUP(APP_SID, AGGREGATE_IND_GROUP_ID)
;

ALTER TABLE CSR.QUICK_SURVEY ADD CONSTRAINT FK_QS_AUD_AUD_TYPE
    FOREIGN KEY (APP_SID, AUDITING_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.QUICK_SURVEY ADD CONSTRAINT FK_QS_QST
    FOREIGN KEY (APP_SID, QUICK_SURVEY_TYPE_ID)
    REFERENCES CSR.QUICK_SURVEY_TYPE(APP_SID, QUICK_SURVEY_TYPE_ID)
;

ALTER TABLE CSR.QUICK_SURVEY ADD CONSTRAINT FK_QS_ROOT_IND_SID
    FOREIGN KEY (APP_SID, ROOT_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.QUICK_SURVEY ADD CONSTRAINT FK_QUICK_SURVEY_CURR_VERSION
    FOREIGN KEY (APP_SID, SURVEY_SID, CURRENT_VERSION)
    REFERENCES CSR.QUICK_SURVEY_VERSION(APP_SID, SURVEY_SID, SURVEY_VERSION) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QUICK_SURVEY ADD CONSTRAINT FK_QUICK_SURVEY_SCORE_TYPE
    FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
    REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID)
;

ALTER TABLE CSR.QUICK_SURVEY ADD CONSTRAINT RefCUSTOMER1024
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.QUICK_SURVEY_ANSWER ADD CONSTRAINT FK_MEASURE_CONV_QSA
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
;

ALTER TABLE CSR.QUICK_SURVEY_ANSWER ADD CONSTRAINT FK_QS_Q_OPT_ANSWER
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QS_QUESTION_OPTION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QUICK_SURVEY_ANSWER ADD CONSTRAINT FK_QSA_SUBMSN_ID
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID, SUBMISSION_ID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_SUBMISSION(APP_SID, SURVEY_RESPONSE_ID, SUBMISSION_ID, SURVEY_VERSION) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QUICK_SURVEY_ANSWER ADD CONSTRAINT FK_QSQ_QSA_MEASURE
    FOREIGN KEY (APP_SID, QUESTION_ID, SURVEY_VERSION, MEASURE_SID)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, SURVEY_VERSION, MEASURE_SID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QUICK_SURVEY_ANSWER ADD CONSTRAINT FK_QSA_QSQ
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QUICK_SURVEY_ANSWER ADD CONSTRAINT FK_REGION_QS_ANSWER
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR ADD CONSTRAINT FK_QS_QS_EXPR
    FOREIGN KEY (APP_SID, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_VERSION(APP_SID, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR ADD CONSTRAINT FK_QUICK_SURVEY_EXPR_QSQ
	FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
	REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR ADD CONSTRAINT FK_QUICK_SURVEY_EXPR_QUEST_OPT
	FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
	REFERENCES CSR.QS_QUESTION_OPTION(APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_OPTION_ID, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR_ACTION ADD CONSTRAINT FK_CUS_QS_EXPR_ACTION
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR_ACTION ADD CONSTRAINT FK_EXPR_SHOW_QUESTION_ID
    FOREIGN KEY (APP_SID, SHOW_QUESTION_ID, SHOW_QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR_ACTION ADD CONSTRAINT FK_QS_EXPR_MSG_ACTION
    FOREIGN KEY (APP_SID, QS_EXPR_MSG_ACTION_ID)
    REFERENCES CSR.QS_EXPR_MSG_ACTION(APP_SID, QS_EXPR_MSG_ACTION_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR_ACTION ADD CONSTRAINT FK_QS_EXPR_NON_COMPL_ACTION
    FOREIGN KEY (APP_SID, QS_EXPR_NON_COMPL_ACTION_ID)
    REFERENCES CSR.QS_EXPR_NON_COMPL_ACTION(APP_SID, QS_EXPR_NON_COMPL_ACTION_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR_ACTION ADD CONSTRAINT FK_QS_EXPR_QS_EXPR_ACTION
    FOREIGN KEY (APP_SID, EXPR_ID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_EXPR(APP_SID, EXPR_ID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR_ACTION ADD CONSTRAINT QS_EA_SHOW_PAGE_QUESTION
    FOREIGN KEY (APP_SID, SHOW_PAGE_ID, SHOW_PAGE_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR_ACTION ADD CONSTRAINT FK_EXPR_MANDATORY_QUESTION_ID
    FOREIGN KEY (APP_SID, MANDATORY_QUESTION_ID, MANDATORY_QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_EXPR_ACTION ADD CONSTRAINT FK_QSEA_ISS_TEMP 
	FOREIGN KEY (APP_SID, ISSUE_TEMPLATE_ID)
	REFERENCES CSR.ISSUE_TEMPLATE (APP_SID, ISSUE_TEMPLATE_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.QUICK_SURVEY_LANG ADD CONSTRAINT FK_QS_LANG_QS
    FOREIGN KEY (APP_SID, SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;



ALTER TABLE CSR.QUICK_SURVEY_QUESTION ADD CONSTRAINT FK_IND_QSQ
    FOREIGN KEY (APP_SID, MAPS_TO_IND_SID, MEASURE_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID, MEASURE_SID)
;

ALTER TABLE CSR.QUICK_SURVEY_QUESTION ADD CONSTRAINT FK_QS_CUST_QUEST_TYPE
    FOREIGN KEY (APP_SID, CUSTOM_QUESTION_TYPE_ID)
    REFERENCES CSR.QS_CUSTOM_QUESTION_TYPE(APP_SID, CUSTOM_QUESTION_TYPE_ID)
;

ALTER TABLE CSR.QUICK_SURVEY_QUESTION ADD CONSTRAINT FK_QS_QUES_PARENT_QUES
    FOREIGN KEY (APP_SID, PARENT_ID, PARENT_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_QUESTION ADD CONSTRAINT FK_QUICK_SURV_QUEST_SURV_VER
    FOREIGN KEY (APP_SID, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_VERSION(APP_SID, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_QUESTION ADD CONSTRAINT RefCUSTOMER1309
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.QUICK_SURVEY_QUESTION ADD CONSTRAINT FK_QSQ_QUESTION_TYPE
    FOREIGN KEY (QUESTION_TYPE)
    REFERENCES CSR.QUESTION_TYPE(QUESTION_TYPE)
;

ALTER TABLE CSR.QUICK_SURVEY_QUESTION ADD CONSTRAINT FK_QSQ_QUESTION_VERSION
	FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT)
	REFERENCES CSR.QUESTION_VERSION (APP_SID, QUESTION_ID, QUESTION_VERSION, QUESTION_DRAFT)
;

ALTER TABLE CSR.QUICK_SURVEY_QUESTION_TAG ADD CONSTRAINT FK_QS_QUESTION_TAG_QS_QUESTION
    FOREIGN KEY (APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID, QUESTION_VERSION, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_QUESTION_TAG ADD CONSTRAINT FK_QS_QUESTION_TAG_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.QUICK_SURVEY_RESPONSE ADD CONSTRAINT FK_QS_RESP_LAST_SUBMSN
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID, LAST_SUBMISSION_ID)
    REFERENCES CSR.QUICK_SURVEY_SUBMISSION(APP_SID, SURVEY_RESPONSE_ID, SUBMISSION_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.QUICK_SURVEY_RESPONSE ADD CONSTRAINT FK_QUICK_SURV_RESP_SURV_VER
    FOREIGN KEY (APP_SID, SURVEY_SID, SURVEY_VERSION)
    REFERENCES CSR.QUICK_SURVEY_VERSION(APP_SID, SURVEY_SID, SURVEY_VERSION)
;

ALTER TABLE CSR.QUICK_SURVEY_SCORE_THRESHOLD ADD CONSTRAINT FK_IND_QSST
    FOREIGN KEY (APP_SID, MAPS_TO_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.QUICK_SURVEY_SCORE_THRESHOLD ADD CONSTRAINT FK_QS_QSST
    FOREIGN KEY (APP_SID, SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE CSR.QUICK_SURVEY_SCORE_THRESHOLD ADD CONSTRAINT FK_ST_QSST
    FOREIGN KEY (APP_SID, SCORE_THRESHOLD_ID)
    REFERENCES CSR.SCORE_THRESHOLD(APP_SID, SCORE_THRESHOLD_ID)
;



ALTER TABLE CSR.QUICK_SURVEY_SUBMISSION ADD CONSTRAINT FK_QSS_RESP_ID
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.QUICK_SURVEY_SUBMISSION ADD CONSTRAINT FK_QSS_SCORE_THRESH
    FOREIGN KEY (APP_SID, SCORE_THRESHOLD_ID)
    REFERENCES CSR.SCORE_THRESHOLD(APP_SID, SCORE_THRESHOLD_ID)
;



ALTER TABLE CSR.QUICK_SURVEY_TYPE ADD CONSTRAINT FK_QST_APP_SID
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.QUICK_SURVEY_VERSION ADD CONSTRAINT FK_QS_VERSION_SURVEY
    FOREIGN KEY (APP_SID, SURVEY_SID)
    REFERENCES CSR.QUICK_SURVEY(APP_SID, SURVEY_SID)
;



ALTER TABLE CSR.R_REPORT ADD CONSTRAINT FK_R_REPORT_REPORT_TYPE
    FOREIGN KEY (APP_SID, R_REPORT_TYPE_ID)
    REFERENCES CSR.R_REPORT_TYPE(APP_SID, R_REPORT_TYPE_ID)
;

ALTER TABLE CSR.R_REPORT ADD CONSTRAINT FK_R_REPORT_USER
    FOREIGN KEY (APP_SID, REQUESTED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.R_REPORT_FILE ADD CONSTRAINT FK_R_REPORT_FILE_REPORT
    FOREIGN KEY (APP_SID, R_REPORT_SID)
    REFERENCES CSR.R_REPORT(APP_SID, R_REPORT_SID)
;



ALTER TABLE CSR.R_REPORT_JOB ADD CONSTRAINT FK_R_REPORT_JOB_REPORT_TYPE
    FOREIGN KEY (APP_SID, R_REPORT_TYPE_ID)
    REFERENCES CSR.R_REPORT_TYPE(APP_SID, R_REPORT_TYPE_ID)
;



ALTER TABLE CSR.R_REPORT_TYPE ADD CONSTRAINT FK_R_REPORT_TYPE_PLUGIN
    FOREIGN KEY (PLUGIN_TYPE_ID, PLUGIN_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_TYPE_ID, PLUGIN_ID)
;



ALTER TABLE CSR.REGION ADD CONSTRAINT RefCUSTOMER_REGION_TYPE1713
    FOREIGN KEY (APP_SID, REGION_TYPE)
    REFERENCES CSR.CUSTOMER_REGION_TYPE(APP_SID, REGION_TYPE)
;

ALTER TABLE CSR.REGION ADD CONSTRAINT RefCUSTOMER1205
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.REGION ADD CONSTRAINT RefEGRID1238
    FOREIGN KEY (EGRID_REF)
    REFERENCES CSR.EGRID(EGRID_REF)
;

ALTER TABLE CSR.REGION ADD CONSTRAINT RefREGION1209
    FOREIGN KEY (APP_SID, LINK_TO_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_CERTIFICATE ADD CONSTRAINT FK_REG_CERT_REGION
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_CERTIFICATE ADD CONSTRAINT FK_REG_CERT_CERT_ID
	FOREIGN KEY (CERTIFICATION_ID)
	REFERENCES CSR.CERTIFICATION(CERTIFICATION_ID)
;

ALTER TABLE CSR.REGION_CERTIFICATE ADD CONSTRAINT FK_REG_CERT_CERT_LVL
	FOREIGN KEY (CERTIFICATION_LEVEL_ID, CERTIFICATION_ID)
	REFERENCES CSR.CERTIFICATION_LEVEL(CERTIFICATION_LEVEL_ID, CERTIFICATION_ID)
;

ALTER TABLE CSR.REGION_DESCRIPTION ADD CONSTRAINT FK_REGION_DESCRIPTION_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_ENERGY_RATING ADD CONSTRAINT FK_REG_ENE_RAT_REGION
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_ENERGY_RATING ADD CONSTRAINT FK_REG_ENE_RAT_ID
	FOREIGN KEY (ENERGY_RATING_ID)
	REFERENCES CSR.ENERGY_RATING(ENERGY_RATING_ID)
;

ALTER TABLE CSR.REGION_EVENT ADD CONSTRAINT RefEVENT1061
    FOREIGN KEY (APP_SID, EVENT_ID)
    REFERENCES CSR.EVENT(APP_SID, EVENT_ID)
;

ALTER TABLE CSR.REGION_EVENT ADD CONSTRAINT RefREGION1210
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.REGION_INTERNAL_AUDIT ADD CONSTRAINT FK_IAT_REGION_IA
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
    REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.REGION_INTERNAL_AUDIT ADD CONSTRAINT FK_REGION_REGION_IA
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_GROUP_REGION ADD CONSTRAINT FK_REG_GRP_REG_REG_GRP
	FOREIGN KEY (REGION_GROUP_ID)
	REFERENCES CSR.REGION_GROUP(REGION_GROUP_ID)
;

ALTER TABLE CSR.REGION_METER_ALARM ADD CONSTRAINT RefMETER_ALARM2150
    FOREIGN KEY (APP_SID, METER_ALARM_ID)
    REFERENCES CSR.METER_ALARM(APP_SID, METER_ALARM_ID)
;

ALTER TABLE CSR.REGION_METER_ALARM ADD CONSTRAINT RefREGION_METER_ALARM2149
    FOREIGN KEY (APP_SID, INHERITED_FROM_SID, METER_ALARM_ID)
    REFERENCES CSR.REGION_METER_ALARM(APP_SID, REGION_SID, METER_ALARM_ID)
;

ALTER TABLE CSR.REGION_METER_ALARM ADD CONSTRAINT RefREGION2151
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.REGION_METRIC ADD CONSTRAINT FK_CUST_REGION_METRIC
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.REGION_METRIC ADD CONSTRAINT FK_IND_REGION_METRIC
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.REGION_METRIC ADD CONSTRAINT FK_INDM_REGION_METRIC
    FOREIGN KEY (APP_SID, IND_SID, MEASURE_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID, MEASURE_SID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.REGION_METRIC ADD CONSTRAINT FK_MEASURE_REGION_METRIC
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;



ALTER TABLE CSR.REGION_METRIC_VAL ADD CONSTRAINT FK_REGION_METRIC_VAL_MEASURE_C
    FOREIGN KEY (APP_SID, MEASURE_SID, ENTRY_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.REGION_METRIC_VAL ADD CONSTRAINT FK_REGION_METRIC_VAL_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_METRIC_VAL ADD CONSTRAINT FK_REGION_METRIC_VAL_REGION_M
    FOREIGN KEY (APP_SID, IND_SID, MEASURE_SID)
    REFERENCES CSR.REGION_METRIC(APP_SID, IND_SID, MEASURE_SID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.REGION_METRIC_VAL ADD CONSTRAINT FK_REGION_METRIC_VAL_SOURCE_T
    FOREIGN KEY (SOURCE_TYPE_ID)
    REFERENCES CSR.SOURCE_TYPE(SOURCE_TYPE_ID)
;

ALTER TABLE CSR.REGION_METRIC_VAL ADD CONSTRAINT FK_RTYPE_RMETRIC_VAL
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.REGION_METRIC_VAL ADD CONSTRAINT FK_USER_RMETRIC_VAL
    FOREIGN KEY (APP_SID, ENTERED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.REGION_OWNER ADD CONSTRAINT RefCSR_USER73
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.REGION_OWNER ADD CONSTRAINT RefREGION1211
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.REGION_POSTIT ADD CONSTRAINT FK_POSTIT_REGION_POSTIT
    FOREIGN KEY (APP_SID, POSTIT_ID)
    REFERENCES CSR.POSTIT(APP_SID, POSTIT_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.REGION_POSTIT ADD CONSTRAINT FK_REGION_REGION_POSTIT
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.REGION_PROC_DOC ADD CONSTRAINT RefDOC1139
    FOREIGN KEY (APP_SID, DOC_ID)
    REFERENCES CSR.DOC(APP_SID, DOC_ID)
;

ALTER TABLE CSR.REGION_PROC_DOC ADD CONSTRAINT RefREGION1212
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.REGION_PROC_FILE ADD CONSTRAINT RefMETER_DOCUMENT1141
    FOREIGN KEY (APP_SID, METER_DOCUMENT_ID)
    REFERENCES CSR.METER_DOCUMENT(APP_SID, METER_DOCUMENT_ID)
;

ALTER TABLE CSR.REGION_PROC_FILE ADD CONSTRAINT RefREGION1213
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.REGION_ROLE_MEMBER ADD CONSTRAINT RefCSR_USER765
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.REGION_ROLE_MEMBER ADD CONSTRAINT RefREGION1214
    FOREIGN KEY (APP_SID, INHERITED_FROM_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_ROLE_MEMBER ADD CONSTRAINT RefREGION1382
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_ROLE_MEMBER ADD CONSTRAINT RefROLE764
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.REGION_SCORE ADD CONSTRAINT FK_REGION_SCORE_LAST_SCORE
    FOREIGN KEY (APP_SID, LAST_REGION_SCORE_LOG_ID)
    REFERENCES CSR.REGION_SCORE_LOG(APP_SID, REGION_SCORE_LOG_ID)
;

ALTER TABLE CSR.REGION_SCORE ADD CONSTRAINT FK_REGION_SCORE_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_SCORE ADD CONSTRAINT FK_REGION_SCORE_SCORE_TYPE
    FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
    REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID)
;



ALTER TABLE CSR.REGION_SCORE_LOG ADD CONSTRAINT FK_REGION_SCORE_LOG_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_SCORE_LOG ADD CONSTRAINT FK_REGION_SCORE_LOG_THRESH_ID
    FOREIGN KEY (APP_SID, SCORE_THRESHOLD_ID)
    REFERENCES CSR.SCORE_THRESHOLD(APP_SID, SCORE_THRESHOLD_ID)
;

ALTER TABLE CSR.REGION_SCORE_LOG ADD CONSTRAINT FK_REGION_SCORE_LOG_TYPE
    FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
    REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID)
;

ALTER TABLE CSR.REGION_SCORE_LOG ADD CONSTRAINT FK_REGION_SCORE_LOG_USER
    FOREIGN KEY (APP_SID, CHANGED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.REGION_SET ADD CONSTRAINT FK_REGION_SET_OWNER
    FOREIGN KEY (APP_SID, OWNER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.REGION_SET_REGION ADD CONSTRAINT FK_REGION_SET_R_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_SET_REGION ADD CONSTRAINT FK_REGION_SET_R_REGION_S
    FOREIGN KEY (APP_SID, REGION_SET_ID)
    REFERENCES CSR.REGION_SET(APP_SID, REGION_SET_ID)
;



ALTER TABLE CSR.REGION_START_POINT ADD CONSTRAINT FK_IND_START_POINT_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.REGION_START_POINT ADD CONSTRAINT FK_REGION_START_POINT_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.REGION_SURVEY_RESPONSE ADD CONSTRAINT FK_REG_SURV_RESP_REG_SID
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_SURVEY_RESPONSE ADD CONSTRAINT FK_REG_SURV_RESP_RESP_ID
    FOREIGN KEY (APP_SID, SURVEY_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_SID, SURVEY_RESPONSE_ID)
;



ALTER TABLE CSR.REGION_TAG ADD CONSTRAINT RefREGION1215
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.REGION_TAG ADD CONSTRAINT RefTAG230
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.REGION_TREE ADD CONSTRAINT RefCUSTOMER243
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.REGION_TYPE_METRIC ADD CONSTRAINT FK_CUST_RTYPE_RTYPE_METRIC
    FOREIGN KEY (APP_SID, REGION_TYPE)
    REFERENCES CSR.CUSTOMER_REGION_TYPE(APP_SID, REGION_TYPE)
;

ALTER TABLE CSR.REGION_TYPE_METRIC ADD CONSTRAINT FK_RMETRIC_RTYPE_METRIC
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.REGION_METRIC(APP_SID, IND_SID)
;



ALTER TABLE CSR.REGION_TYPE_TAG_GROUP ADD CONSTRAINT FK_REG_TYP_TG_REG_TYP
    FOREIGN KEY (APP_SID, REGION_TYPE)
    REFERENCES CSR.CUSTOMER_REGION_TYPE(APP_SID, REGION_TYPE)
;

ALTER TABLE CSR.REGION_TYPE_TAG_GROUP ADD CONSTRAINT FK_REG_TYP_TG_TG
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;



ALTER TABLE CSR.REPORTING_PERIOD ADD CONSTRAINT RefCUSTOMER659
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ROLE ADD CONSTRAINT RefCUSTOMER766
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ROLE_GRANT ADD CONSTRAINT FK_ROLE_GRANT_GRANT_ROLE
    FOREIGN KEY (APP_SID, GRANT_ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.ROLE_GRANT ADD CONSTRAINT FK_ROLE_GRANT_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;



ALTER TABLE CSR.ROLE_USER_COVER ADD CONSTRAINT FK_ROLE_USER_COVER_ID
    FOREIGN KEY (APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
    REFERENCES CSR.USER_COVER(APP_SID, USER_COVER_ID, USER_GIVING_COVER_SID, USER_BEING_COVERED_SID)
;



ALTER TABLE CSR.ROUTE ADD CONSTRAINT FK_SECTION_ROUTE
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;

ALTER TABLE CSR.ROUTE ADD CONSTRAINT FK_SECTION_ROUTED_FS_ROUTE
    FOREIGN KEY (APP_SID, FLOW_SID, FLOW_STATE_ID)
    REFERENCES CSR.SECTION_ROUTED_FLOW_STATE(APP_SID, FLOW_SID, FLOW_STATE_ID)
;

ALTER TABLE CSR.ROUTE ADD CONSTRAINT RefCUSTOMER3237
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.ROUTE_LOG ADD CONSTRAINT FK_ROUTE_LOG_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.ROUTE_STEP ADD CONSTRAINT FK_ROUTE_ROUTE_STEP
    FOREIGN KEY (APP_SID, ROUTE_ID)
    REFERENCES CSR.ROUTE(APP_SID, ROUTE_ID)
;



ALTER TABLE CSR.ROUTE_STEP_USER ADD CONSTRAINT FK_CSR_USER_ROUTE_STEP_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.ROUTE_STEP_USER ADD CONSTRAINT FK_ROUTE_STEP_USER
    FOREIGN KEY (APP_SID, ROUTE_STEP_ID)
    REFERENCES CSR.ROUTE_STEP(APP_SID, ROUTE_STEP_ID)
;



ALTER TABLE CSR.ROUTE_STEP_VOTE ADD CONSTRAINT FK_FL_STATE_RT_STP_VOTE
    FOREIGN KEY (APP_SID, DEST_FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;

ALTER TABLE CSR.ROUTE_STEP_VOTE ADD CONSTRAINT FK_RT_STEP_RT_STEP_APPR
    FOREIGN KEY (APP_SID, ROUTE_STEP_ID)
    REFERENCES CSR.ROUTE_STEP(APP_SID, ROUTE_STEP_ID)
;

ALTER TABLE CSR.ROUTE_STEP_VOTE ADD CONSTRAINT FK_RT_STEP_RT_STEP_VOTE
    FOREIGN KEY (APP_SID, DEST_ROUTE_STEP_ID)
    REFERENCES CSR.ROUTE_STEP(APP_SID, ROUTE_STEP_ID)
;

ALTER TABLE CSR.ROUTE_STEP_VOTE ADD CONSTRAINT FK_USR_RT_STEP_VOTE
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.RSS_FEED ADD CONSTRAINT RefCSR_USER883
    FOREIGN KEY (APP_SID, OWNER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.RSS_FEED ADD CONSTRAINT RefCUSTOMER882
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.RSS_FEED_ITEM ADD CONSTRAINT RefCSR_USER884
    FOREIGN KEY (APP_SID, OWNER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.RSS_FEED_ITEM ADD CONSTRAINT RefRSS_FEED885
    FOREIGN KEY (APP_SID, RSS_FEED_SID)
    REFERENCES CSR.RSS_FEED(APP_SID, RSS_FEED_SID)
;



ALTER TABLE CSR.RULESET ADD CONSTRAINT FK_RPT_PERIOD_RULESET
    FOREIGN KEY (APP_SID, REPORTING_PERIOD_SID)
    REFERENCES CSR.REPORTING_PERIOD(APP_SID, REPORTING_PERIOD_SID)
;

ALTER TABLE CSR.RULESET ADD CONSTRAINT FK_RULESET_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;



ALTER TABLE CSR.RULESET_MEMBER ADD CONSTRAINT FK_IND_RLSET_MBR
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.RULESET_MEMBER ADD CONSTRAINT FK_RLSET_RLSET_MBR
    FOREIGN KEY (APP_SID, RULESET_SID)
    REFERENCES CSR.RULESET(APP_SID, RULESET_SID)
;



ALTER TABLE CSR.RULESET_RUN ADD CONSTRAINT FK_REGION_RULESET_RUN
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.RULESET_RUN ADD CONSTRAINT FK_RLSET_RLSET_RUN
    FOREIGN KEY (APP_SID, RULESET_SID)
    REFERENCES CSR.RULESET(APP_SID, RULESET_SID)
;



ALTER TABLE CSR.RULESET_RUN_FINDING ADD CONSTRAINT FK_MEAS_CONV_RLST_RUN_FND
    FOREIGN KEY (APP_SID, ENTRY_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.RULESET_RUN_FINDING ADD CONSTRAINT FK_RLST_MBR_RLST_RN_FND
    FOREIGN KEY (APP_SID, RULESET_SID, IND_SID)
    REFERENCES CSR.RULESET_MEMBER(APP_SID, RULESET_SID, IND_SID)
;

ALTER TABLE CSR.RULESET_RUN_FINDING ADD CONSTRAINT FK_RLST_RUN_RLST_RUN_FND
    FOREIGN KEY (APP_SID, RULESET_SID, REGION_SID)
    REFERENCES CSR.RULESET_RUN(APP_SID, RULESET_SID, REGION_SID)
;

ALTER TABLE CSR.RULESET_RUN_FINDING ADD CONSTRAINT FK_USR_RLSET_RUN_FND
    FOREIGN KEY (APP_SID, EXPLAINED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.RULESET_RUN_FINDING ADD CONSTRAINT FK_USR_RLSET_RUN_FND_APR
    FOREIGN KEY (APP_SID, APPROVED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.SCENARIO ADD CONSTRAINT FK_SCENARIO_AURS_SCENARIO_RUN
    FOREIGN KEY (APP_SID, AUTO_UPDATE_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.SCENARIO ADD CONSTRAINT FK_SCENARIO_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.SCENARIO ADD CONSTRAINT FK_SCENARIO_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.SCENARIO ADD CONSTRAINT FK_SCENARIO_DATA_SOURCE_RUN
    FOREIGN KEY (APP_SID, DATA_SOURCE_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN (APP_SID, SCENARIO_RUN_SID)
;


ALTER TABLE CSR.SCENARIO_AUTO_RUN_REQUEST ADD CONSTRAINT FK_SCN_AUT_RUN_REQ_SCN
    FOREIGN KEY (APP_SID, SCENARIO_SID)
    REFERENCES CSR.SCENARIO(APP_SID, SCENARIO_SID)
;



ALTER TABLE CSR.SCENARIO_IND ADD CONSTRAINT FK_SCENARIO_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.SCENARIO_IND ADD CONSTRAINT RefSCENARIO1485
    FOREIGN KEY (APP_SID, SCENARIO_SID)
    REFERENCES CSR.SCENARIO(APP_SID, SCENARIO_SID)
;



ALTER TABLE CSR.SCENARIO_LIKE_FOR_LIKE_RULE ADD CONSTRAINT FK_SCN_LFL_RULE_SCN_RULE
    FOREIGN KEY (APP_SID, SCENARIO_SID, RULE_ID)
    REFERENCES CSR.SCENARIO_RULE(APP_SID, SCENARIO_SID, RULE_ID)
;



ALTER TABLE CSR.SCENARIO_MAN_RUN_REQUEST ADD CONSTRAINT FK_SCN_MAN_RUN_REQ_SCN
    FOREIGN KEY (APP_SID, SCENARIO_SID)
    REFERENCES CSR.SCENARIO(APP_SID, SCENARIO_SID)
;



ALTER TABLE CSR.SCENARIO_OPTIONS ADD CONSTRAINT RefCUSTOMER1995
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.SCENARIO_REGION ADD CONSTRAINT FK_SCENARIO_REGION_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.SCENARIO_REGION ADD CONSTRAINT RefSCENARIO1487
    FOREIGN KEY (APP_SID, SCENARIO_SID)
    REFERENCES CSR.SCENARIO(APP_SID, SCENARIO_SID)
;



ALTER TABLE CSR.SCENARIO_RULE ADD CONSTRAINT FK_SCENARIO_RULE_MEAS_CONV
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.SCENARIO_RULE ADD CONSTRAINT FK_SCENARIO_RULE_SCENARIO
    FOREIGN KEY (APP_SID, SCENARIO_SID)
    REFERENCES CSR.SCENARIO(APP_SID, SCENARIO_SID)
;



ALTER TABLE CSR.SCENARIO_RULE_IND ADD CONSTRAINT FK_SCENARIO_RULE_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.SCENARIO_RULE_IND ADD CONSTRAINT FK_SCENARIO_RULE_IND_SCENARIO
    FOREIGN KEY (APP_SID, SCENARIO_SID, RULE_ID)
    REFERENCES CSR.SCENARIO_RULE(APP_SID, SCENARIO_SID, RULE_ID)
;



ALTER TABLE CSR.SCENARIO_RULE_LIKE_CONTIG_IND ADD CONSTRAINT FK_SCN_RL_LIKE_CTG_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.SCENARIO_RULE_LIKE_CONTIG_IND ADD CONSTRAINT FK_SCN_RL_LIKE_CTG_IND_SCN_RL
    FOREIGN KEY (APP_SID, SCENARIO_SID, RULE_ID)
    REFERENCES CSR.SCENARIO_RULE(APP_SID, SCENARIO_SID, RULE_ID)
;



ALTER TABLE CSR.SCENARIO_RULE_REGION ADD CONSTRAINT FK_SCENARIO_RULE_REG_REG
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.SCENARIO_RULE_REGION ADD CONSTRAINT FK_SCENARIO_RULE_REG_SCENARIO
    FOREIGN KEY (APP_SID, SCENARIO_SID, RULE_ID)
    REFERENCES CSR.SCENARIO_RULE(APP_SID, SCENARIO_SID, RULE_ID)
;



ALTER TABLE CSR.SCENARIO_RUN ADD CONSTRAINT FK_SCENARIO_RUN_SCENARIO
    FOREIGN KEY (APP_SID, SCENARIO_SID)
    REFERENCES CSR.SCENARIO(APP_SID, SCENARIO_SID)
;

ALTER TABLE CSR.SCENARIO_RUN ADD CONSTRAINT FK_SCN_RUN_SCN_RUN_VER
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID, VERSION)
    REFERENCES CSR.SCENARIO_RUN_VERSION(APP_SID, SCENARIO_RUN_SID, VERSION)
;

ALTER TABLE CSR.SCENARIO_RUN ADD CONSTRAINT FK_SCENARIO_RUN_LAST_RUN_USER
    FOREIGN KEY (APP_SID, LAST_RUN_BY_USER_SID)
    REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID)
;


ALTER TABLE CSR.SCENARIO_RUN_SNAPSHOT ADD CONSTRAINT FK_SCENARIO_RUN_SNAPSHOT
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.SCENARIO_RUN_SNAPSHOT ADD CONSTRAINT FK_SCN_RUN_SCN_SNAP_RUN_FILE
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SNAPSHOT_SID, VERSION)
    REFERENCES CSR.SCENARIO_RUN_SNAPSHOT_FILE(APP_SID, SCENARIO_RUN_SNAPSHOT_SID, VERSION)
;

ALTER TABLE CSR.SCENARIO_RUN_SNAPSHOT ADD CONSTRAINT FK_SCN_RUN_SNAP_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;



ALTER TABLE CSR.SCENARIO_RUN_SNAPSHOT_FILE ADD CONSTRAINT FK_SCN_RUN_SNAP_FILE_SCN_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SNAPSHOT_SID)
    REFERENCES CSR.SCENARIO_RUN_SNAPSHOT(APP_SID, SCENARIO_RUN_SNAPSHOT_SID)
;



ALTER TABLE CSR.SCENARIO_RUN_SNAPSHOT_IND ADD CONSTRAINT FK_SCN_RUN_SNAPSHOT_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.SCENARIO_RUN_SNAPSHOT_REGION ADD CONSTRAINT FK_SCN_RUN_SNAPSHOT_REG_REG
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.SCENARIO_RUN_VAL ADD CONSTRAINT FK_SCENARIO_VAL_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.SCENARIO_RUN_VAL ADD CONSTRAINT FK_SCENARIO_VAL_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.SCENARIO_RUN_VAL ADD CONSTRAINT FK_SCENARIO_VAL_SRC
    FOREIGN KEY (SOURCE_TYPE_ID)
    REFERENCES CSR.SOURCE_TYPE(SOURCE_TYPE_ID)
;

ALTER TABLE CSR.SCENARIO_RUN_VAL ADD CONSTRAINT FK_SCNRIO_RUN_VAL_SCNRIO_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;



ALTER TABLE CSR.SCENARIO_RUN_VERSION_FILE ADD CONSTRAINT FK_SCN_RUN_FILE_SCN_RUN_VER
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID, VERSION)
    REFERENCES CSR.SCENARIO_RUN_VERSION(APP_SID, SCENARIO_RUN_SID, VERSION)
;



ALTER TABLE CSR.SCORE_THRESHOLD ADD CONSTRAINT FK_SCORE_THRESH_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.SCORE_THRESHOLD ADD CONSTRAINT FK_SCORE_THRESHOLD_TYPE
    FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
    REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID)
;

ALTER TABLE CSR.SCORE_THRESHOLD ADD CONSTRAINT FK_SUP_SCORE_IND_SID
    FOREIGN KEY (APP_SID, SUPPLIER_SCORE_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.SCORE_TYPE ADD CONSTRAINT FK_SCORE_TYPE_MEASURE
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.SCORE_TYPE ADD CONSTRAINT FK_SCORE_TYPE_SUP_IND
    FOREIGN KEY (APP_SID, SUPPLIER_SCORE_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.SCORE_TYPE_AGG_TYPE ADD CONSTRAINT FK_SCORE_TYP_AGG_TYP_SCORE_TYP
    FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
    REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID)
;


ALTER TABLE CSR.SECONDARY_REGION_TREE_CTRL ADD CONSTRAINT FK_SCNDRY_RGN_TREE_CTRL_REGION
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID)
;
ALTER TABLE CSR.SECONDARY_REGION_TREE_CTRL ADD CONSTRAINT FK_SCNDRY_RGN_TREE_CTRL_REG_RT
	FOREIGN KEY (APP_SID, REGION_ROOT_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID)
;
ALTER TABLE CSR.SECONDARY_REGION_TREE_CTRL ADD CONSTRAINT FK_SCNDRY_RGN_TREE_CTRL_USER
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SECONDARY_REGION_TREE_LOG ADD CONSTRAINT FK_SCNDRY_RGN_TREE_LOG_REGION
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID)
;
ALTER TABLE CSR.SECONDARY_REGION_TREE_LOG ADD CONSTRAINT FK_SCNDRY_RGN_TREE_LOG_USER
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CSR.CSR_USER (APP_SID, CSR_USER_SID)
;


ALTER TABLE CSR.SECTION ADD CONSTRAINT CK_PREVIOUS_SECTION_SID
    FOREIGN KEY (APP_SID, PREVIOUS_SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;

ALTER TABLE CSR.SECTION ADD CONSTRAINT FK_FLOW_ITEM_SECTION
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.SECTION ADD CONSTRAINT FK_ROUTE_STEP_SECTION
    FOREIGN KEY (APP_SID, CURRENT_ROUTE_STEP_ID)
    REFERENCES CSR.ROUTE_STEP(APP_SID, ROUTE_STEP_ID)
;

ALTER TABLE CSR.SECTION ADD CONSTRAINT RefCSR_USER832
    FOREIGN KEY (APP_SID, CHECKED_OUT_TO_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SECTION ADD CONSTRAINT RefSECTION_MODULE833
    FOREIGN KEY (APP_SID, MODULE_ROOT_SID)
    REFERENCES CSR.SECTION_MODULE(APP_SID, MODULE_ROOT_SID)
;

ALTER TABLE CSR.SECTION ADD CONSTRAINT RefSECTION_STATUS1037
    FOREIGN KEY (APP_SID, SECTION_STATUS_SID)
    REFERENCES CSR.SECTION_STATUS(APP_SID, SECTION_STATUS_SID)
;

ALTER TABLE CSR.SECTION ADD CONSTRAINT RefSECTION_VERSION830
    FOREIGN KEY (APP_SID, SECTION_SID, CHECKED_OUT_VERSION_NUMBER)
    REFERENCES CSR.SECTION_VERSION(APP_SID, SECTION_SID, VERSION_NUMBER)
;

ALTER TABLE CSR.SECTION ADD CONSTRAINT RefSECTION_VERSION831
    FOREIGN KEY (APP_SID, SECTION_SID, VISIBLE_VERSION_NUMBER)
    REFERENCES CSR.SECTION_VERSION(APP_SID, SECTION_SID, VERSION_NUMBER)
;

ALTER TABLE CSR.SECTION ADD CONSTRAINT RefSECTION834
    FOREIGN KEY (APP_SID, PARENT_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;



ALTER TABLE CSR.SECTION_ALERT ADD CONSTRAINT FK_CAT_SECTION_ALERT_TYPE
    FOREIGN KEY (APP_SID, CUSTOMER_ALERT_TYPE_ID)
    REFERENCES CSR.CUSTOMER_ALERT_TYPE(APP_SID, CUSTOMER_ALERT_TYPE_ID)
;

ALTER TABLE CSR.SECTION_ALERT ADD CONSTRAINT FK_FLOW_STATE_SECTION_ALERT
    FOREIGN KEY (APP_SID, FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID)
;

ALTER TABLE CSR.SECTION_ALERT ADD CONSTRAINT FK_ROUTE_STEP_SECTION_ALERT
    FOREIGN KEY (APP_SID, ROUTE_STEP_ID)
    REFERENCES CSR.ROUTE_STEP(APP_SID, ROUTE_STEP_ID)
;

ALTER TABLE CSR.SECTION_ALERT ADD CONSTRAINT FK_SECTION_SECTION_ALERT
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;

ALTER TABLE CSR.SECTION_ALERT ADD CONSTRAINT FK_USER_SECTION_ALERT_FROM
    FOREIGN KEY (APP_SID, FROM_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SECTION_ALERT ADD CONSTRAINT FK_USER_SECTION_ALERT_TO
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.SECTION_ATTACH_LOG ADD CONSTRAINT FK_SEC_ATT_LOG_SEC
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;

ALTER TABLE CSR.SECTION_ATTACH_LOG ADD CONSTRAINT FK_SEC_ATT_LOG_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.SECTION_CART ADD CONSTRAINT FK_CUST_SECTION_CART
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.SECTION_CART ADD CONSTRAINT FK_SECTION_CART_FOLDER
    FOREIGN KEY (APP_SID, SECTION_CART_FOLDER_ID)
    REFERENCES CSR.SECTION_CART_FOLDER(APP_SID, SECTION_CART_FOLDER_ID)
;



ALTER TABLE CSR.SECTION_CART_MEMBER ADD CONSTRAINT FK_SECTION_CART_CART_MEMB
    FOREIGN KEY (APP_SID, SECTION_CART_ID)
    REFERENCES CSR.SECTION_CART(APP_SID, SECTION_CART_ID)
;

ALTER TABLE CSR.SECTION_CART_MEMBER ADD CONSTRAINT FK_SECTION_SECTION_CART_MEMBER
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;



ALTER TABLE CSR.SECTION_COMMENT ADD CONSTRAINT RefCSR_USER838
    FOREIGN KEY (APP_SID, ENTERED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SECTION_COMMENT ADD CONSTRAINT RefSECTION_COMMENT839
    FOREIGN KEY (APP_SID, IN_REPLY_TO_ID)
    REFERENCES CSR.SECTION_COMMENT(APP_SID, SECTION_COMMENT_ID)
;

ALTER TABLE CSR.SECTION_COMMENT ADD CONSTRAINT RefSECTION837
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;



ALTER TABLE CSR.SECTION_CONTENT_DOC ADD CONSTRAINT FK_SEC_CON_DOC_DITTO_WAIT
    FOREIGN KEY (APP_SID, SECTION_SID, DOC_ID)
    REFERENCES CSR.SECTION_CONTENT_DOC(APP_SID, SECTION_SID, DOC_ID)
;

ALTER TABLE CSR.SECTION_CONTENT_DOC ADD CONSTRAINT FK_SECTION_CONTENT_DOC_DOC
    FOREIGN KEY (APP_SID, DOC_ID)
    REFERENCES CSR.DOC(APP_SID, DOC_ID)
;

ALTER TABLE CSR.SECTION_CONTENT_DOC ADD CONSTRAINT FK_SECTION_CONTENT_DOC_SECTION
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;



ALTER TABLE CSR.SECTION_FACT ADD CONSTRAINT FK_SEC_FACT_IND
    FOREIGN KEY (APP_SID, MAP_TO_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.SECTION_FACT ADD CONSTRAINT FK_SEC_FACT_REGION
    FOREIGN KEY (APP_SID, MAP_TO_REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.SECTION_FACT ADD CONSTRAINT FK_SEC_FACT_STD_MC
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.SECTION_FACT ADD CONSTRAINT FK_SECTION_FACT_SECTION
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;



ALTER TABLE CSR.SECTION_FACT_ATTACH ADD CONSTRAINT FK_SEC_FACT_ATT_ATT
    FOREIGN KEY (APP_SID, ATTACHMENT_ID)
    REFERENCES CSR.ATTACHMENT(APP_SID, ATTACHMENT_ID)
;

ALTER TABLE CSR.SECTION_FACT_ATTACH ADD CONSTRAINT FK_SEC_FACT_ATT_SEC_FACT
    FOREIGN KEY (APP_SID, SECTION_SID, FACT_ID)
    REFERENCES CSR.SECTION_FACT(APP_SID, SECTION_SID, FACT_ID)
;



ALTER TABLE CSR.SECTION_FACT_ENUM ADD CONSTRAINT FK_SEC_FACT_ENUM_SEC_FACT
    FOREIGN KEY (APP_SID, SECTION_SID, FACT_ID)
    REFERENCES CSR.SECTION_FACT(APP_SID, SECTION_SID, FACT_ID)
;



ALTER TABLE CSR.SECTION_FLOW ADD CONSTRAINT FK_FLOW_SECTION_FLOW
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;



ALTER TABLE CSR.SECTION_MODULE ADD CONSTRAINT CK_PREVIOUS_MODULE_SID
    FOREIGN KEY (APP_SID, PREVIOUS_MODULE_SID)
    REFERENCES CSR.SECTION_MODULE(APP_SID, MODULE_ROOT_SID)
;

ALTER TABLE CSR.SECTION_MODULE ADD CONSTRAINT FK_REGION_SECTION_MODULE
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.SECTION_MODULE ADD CONSTRAINT FK_SECTION_FLOW_SECTION_MODULE
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.SECTION_FLOW(APP_SID, FLOW_SID)
;

ALTER TABLE CSR.SECTION_MODULE ADD CONSTRAINT FK_SECTION_MOD_DOC_FLDR
    FOREIGN KEY (APP_SID, LIBRARY_SID)
    REFERENCES CSR.DOC_FOLDER(APP_SID, DOC_FOLDER_SID)
;

ALTER TABLE CSR.SECTION_MODULE ADD CONSTRAINT RefCUSTOMER840
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.SECTION_MODULE ADD CONSTRAINT RefSECTION_STATUS1043
    FOREIGN KEY (APP_SID, DEFAULT_STATUS_SID)
    REFERENCES CSR.SECTION_STATUS(APP_SID, SECTION_STATUS_SID)
;



ALTER TABLE CSR.SECTION_PLUGIN_LOOKUP ADD CONSTRAINT FK_PLGN_LKUP_SECT_PLGN_LKUP
    FOREIGN KEY (APP_SID, PLUGIN_NAME)
    REFERENCES CSR.PLUGIN_LOOKUP(APP_SID, PLUGIN_NAME) ON DELETE CASCADE
;

ALTER TABLE CSR.SECTION_PLUGIN_LOOKUP ADD CONSTRAINT FK_SECT_SECT_PLUGIN_LOOKUP
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.SECTION_ROUTED_FLOW_STATE ADD CONSTRAINT FK_FS_SECTION_ROUTED_FS
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID)
;

ALTER TABLE CSR.SECTION_ROUTED_FLOW_STATE ADD CONSTRAINT FK_FST_REJECT_FST
    FOREIGN KEY (APP_SID, REJECT_FS_TRANSITION_ID)
    REFERENCES CSR.FLOW_STATE_TRANSITION(APP_SID, FLOW_STATE_TRANSITION_ID)
;

ALTER TABLE CSR.SECTION_ROUTED_FLOW_STATE ADD CONSTRAINT FK_SECTION_FLOW_SR_FLOW_STATE
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.SECTION_FLOW(APP_SID, FLOW_SID)
;



ALTER TABLE CSR.SECTION_STATUS ADD CONSTRAINT RefCUSTOMER1038
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.SECTION_TAG ADD CONSTRAINT FK_CUST_SECTION_TAG
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.SECTION_TAG ADD CONSTRAINT RefSECTION_TAG3249
    FOREIGN KEY (APP_SID, PARENT_ID)
    REFERENCES CSR.SECTION_TAG(APP_SID, SECTION_TAG_ID)
;



ALTER TABLE CSR.SECTION_TAG_MEMBER ADD CONSTRAINT FK_SECTION_SECTION_TAG_MEMB
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;

ALTER TABLE CSR.SECTION_TAG_MEMBER ADD CONSTRAINT FK_SECTION_TAG_TAG_MEMBER
    FOREIGN KEY (APP_SID, SECTION_TAG_ID)
    REFERENCES CSR.SECTION_TAG(APP_SID, SECTION_TAG_ID)
;



ALTER TABLE CSR.SECTION_TRANS_COMMENT ADD CONSTRAINT FK_ST_COMMENT_SECTION
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;

ALTER TABLE CSR.SECTION_TRANS_COMMENT ADD CONSTRAINT FK_ST_COMMENT_USER
    FOREIGN KEY (APP_SID, ENTERED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.SECTION_TRANSITION ADD CONSTRAINT RefCUSTOMER1041
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.SECTION_TRANSITION ADD CONSTRAINT RefSECTION_STATUS1039
    FOREIGN KEY (APP_SID, FROM_SECTION_STATUS_SID)
    REFERENCES CSR.SECTION_STATUS(APP_SID, SECTION_STATUS_SID)
;

ALTER TABLE CSR.SECTION_TRANSITION ADD CONSTRAINT RefSECTION_STATUS1040
    FOREIGN KEY (APP_SID, TO_SECTION_STATUS_SID)
    REFERENCES CSR.SECTION_STATUS(APP_SID, SECTION_STATUS_SID)
;



ALTER TABLE CSR.SECTION_VAL ADD CONSTRAINT FK_SECTION_VAL_SECTION_FACT
    FOREIGN KEY (APP_SID, SECTION_SID, FACT_ID)
    REFERENCES CSR.SECTION_FACT(APP_SID, SECTION_SID, FACT_ID)
;

ALTER TABLE CSR.SECTION_VAL ADD CONSTRAINT CHK_SEC_VAL_ENTRY_TYPE
	CHECK (ENTRY_TYPE IN ('MANUAL', 'PREVIOUS', 'INDICATOR'))
;

ALTER TABLE CSR.SECTION_VERSION ADD CONSTRAINT RefCSR_USER841
    FOREIGN KEY (APP_SID, CHANGED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SECTION_VERSION ADD CONSTRAINT RefCSR_USER842
    FOREIGN KEY (APP_SID, APPROVED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SECTION_VERSION ADD CONSTRAINT RefSECTION843
    FOREIGN KEY (APP_SID, SECTION_SID)
    REFERENCES CSR.SECTION(APP_SID, SECTION_SID)
;


ALTER TABLE CSR.SESSION_EXTRA ADD CONSTRAINT RefCUSTOMER1025
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.SHEET ADD CONSTRAINT RefDELEGATION106
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.SHEET ADD CONSTRAINT RefSHEET_HISTORY116
    FOREIGN KEY (APP_SID, LAST_SHEET_HISTORY_ID)
    REFERENCES CSR.SHEET_HISTORY(APP_SID, SHEET_HISTORY_ID)
;



ALTER TABLE CSR.SHEET_ACTION_PERMISSION ADD CONSTRAINT RefSHEET_ACTION154
    FOREIGN KEY (SHEET_ACTION_ID)
    REFERENCES CSR.SHEET_ACTION(SHEET_ACTION_ID)
;



ALTER TABLE CSR.SHEET_ALERT ADD CONSTRAINT FK_SHEET_ALERT_CSR_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SHEET_ALERT ADD CONSTRAINT FK_SHEET_ALERT_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;



ALTER TABLE CSR.SHEET_AUTOMATIC_APPROVAL ADD CONSTRAINT FK_SHEETAA_BATCHJOB
    FOREIGN KEY (APP_SID, BATCH_JOB_ID)
    REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID)
;

ALTER TABLE CSR.SHEET_AUTOMATIC_APPROVAL ADD CONSTRAINT FK_SHEETAA_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;

ALTER TABLE CSR.SHEET_AUTOMATIC_APPROVAL ADD CONSTRAINT FK_SHEETAA_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.SHEET_CHANGE_LOG ADD CONSTRAINT FK_SHEET_CHANGE_LOG_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;



ALTER TABLE CSR.SHEET_CHANGE_REQ ADD CONSTRAINT FK_SHEET_CHANGE_REQ_CSR_USER_1
    FOREIGN KEY (APP_SID, PROCESSED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SHEET_CHANGE_REQ ADD CONSTRAINT FK_SHEET_CHANGE_REQ_CSR_USER_2
    FOREIGN KEY (APP_SID, RAISED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SHEET_CHANGE_REQ ADD CONSTRAINT FK_SHEET_CHANGE_REQ_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.SHEET_CHANGE_REQ ADD CONSTRAINT FK_SHEET_CHANGE_REQ_SHEET_1
    FOREIGN KEY (APP_SID, ACTIVE_SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;

ALTER TABLE CSR.SHEET_CHANGE_REQ ADD CONSTRAINT FK_SHEET_CHANGE_REQ_SHEET_2
    FOREIGN KEY (APP_SID, REQ_TO_CHANGE_SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;



ALTER TABLE CSR.SHEET_CHANGE_REQ_ALERT ADD CONSTRAINT FK_SCR_SCR_ALERT
    FOREIGN KEY (APP_SID, SHEET_CHANGE_REQ_ID)
    REFERENCES CSR.SHEET_CHANGE_REQ(APP_SID, SHEET_CHANGE_REQ_ID)
;

ALTER TABLE CSR.SHEET_CHANGE_REQ_ALERT ADD CONSTRAINT FK_USER_SCR_ALERT_NOTIFY
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SHEET_CHANGE_REQ_ALERT ADD CONSTRAINT FK_USER_SCR_ALERT_RAISED
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.SHEET_COMPLETENESS_SHEET ADD CONSTRAINT FK_SHEET_COMPLETENESS_SHEET
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;


ALTER TABLE CSR.SHEET_DATE_SCHEDULE ADD CONSTRAINT FK_SHEET_SCHDL_DELEG_SCHDL_ID
    FOREIGN KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID)
    REFERENCES CSR.DELEGATION_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;



ALTER TABLE CSR.SHEET_HISTORY ADD CONSTRAINT RefCSR_USER109
    FOREIGN KEY (APP_SID, FROM_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SHEET_HISTORY ADD CONSTRAINT RefDELEGATION158
    FOREIGN KEY (APP_SID, TO_DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.SHEET_HISTORY ADD CONSTRAINT RefSHEET_ACTION140
    FOREIGN KEY (SHEET_ACTION_ID)
    REFERENCES CSR.SHEET_ACTION(SHEET_ACTION_ID)
;

ALTER TABLE CSR.SHEET_HISTORY ADD CONSTRAINT RefSHEET108
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;



ALTER TABLE CSR.SHEET_INHERITED_VALUE ADD CONSTRAINT RefSHEET_VALUE119
    FOREIGN KEY (APP_SID, SHEET_VALUE_ID)
    REFERENCES CSR.SHEET_VALUE(APP_SID, SHEET_VALUE_ID)
;

ALTER TABLE CSR.SHEET_INHERITED_VALUE ADD CONSTRAINT RefSHEET_VALUE120
    FOREIGN KEY (APP_SID, INHERITED_VALUE_ID)
    REFERENCES CSR.SHEET_VALUE(APP_SID, SHEET_VALUE_ID)
;



ALTER TABLE CSR.SHEET_VAL_CHANGE_LOG ADD CONSTRAINT FK_SHEET_VAL_CHANGE_LOG_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.SHEET_VALUE ADD CONSTRAINT RefIND_FLAG177
    FOREIGN KEY (APP_SID, IND_SID, FLAG)
    REFERENCES CSR.IND_FLAG(APP_SID, IND_SID, FLAG)
;

ALTER TABLE CSR.SHEET_VALUE ADD CONSTRAINT RefIND110
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.SHEET_VALUE ADD CONSTRAINT RefMEASURE_CONVERSION113
    FOREIGN KEY (APP_SID, ENTRY_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.SHEET_VALUE ADD CONSTRAINT RefREGION1216
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.SHEET_VALUE ADD CONSTRAINT RefSHEET_VALUE_CHANGE141
    FOREIGN KEY (APP_SID, LAST_SHEET_VALUE_CHANGE_ID)
    REFERENCES CSR.SHEET_VALUE_CHANGE(APP_SID, SHEET_VALUE_CHANGE_ID)
;

ALTER TABLE CSR.SHEET_VALUE ADD CONSTRAINT RefSHEET112
    FOREIGN KEY (APP_SID, SHEET_ID)
    REFERENCES CSR.SHEET(APP_SID, SHEET_ID)
;



ALTER TABLE CSR.SHEET_VALUE_ACCURACY ADD CONSTRAINT RefACCURACY_TYPE_OPTION997
    FOREIGN KEY (APP_SID, ACCURACY_TYPE_OPTION_ID)
    REFERENCES CSR.ACCURACY_TYPE_OPTION(APP_SID, ACCURACY_TYPE_OPTION_ID)
;

ALTER TABLE CSR.SHEET_VALUE_ACCURACY ADD CONSTRAINT RefSHEET_VALUE439
    FOREIGN KEY (APP_SID, SHEET_VALUE_ID)
    REFERENCES CSR.SHEET_VALUE(APP_SID, SHEET_VALUE_ID)
;



ALTER TABLE CSR.SHEET_VALUE_CHANGE ADD CONSTRAINT RefCSR_USER144
    FOREIGN KEY (APP_SID, CHANGED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SHEET_VALUE_CHANGE ADD CONSTRAINT RefIND_FLAG179
    FOREIGN KEY (APP_SID, IND_SID, FLAG)
    REFERENCES CSR.IND_FLAG(APP_SID, IND_SID, FLAG)
;

ALTER TABLE CSR.SHEET_VALUE_CHANGE ADD CONSTRAINT RefIND142
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.SHEET_VALUE_CHANGE ADD CONSTRAINT RefMEASURE_CONVERSION145
    FOREIGN KEY (APP_SID, ENTRY_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.SHEET_VALUE_CHANGE ADD CONSTRAINT RefREGION1217
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.SHEET_VALUE_CHANGE ADD CONSTRAINT RefSHEET_VALUE146
    FOREIGN KEY (APP_SID, SHEET_VALUE_ID)
    REFERENCES CSR.SHEET_VALUE(APP_SID, SHEET_VALUE_ID)
;



ALTER TABLE CSR.SHEET_VALUE_CHANGE_FILE ADD CONSTRAINT RefFILE_UPLOAD736
    FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
    REFERENCES CSR.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CSR.SHEET_VALUE_CHANGE_FILE ADD CONSTRAINT RefSHEET_VALUE_CHANGE737
    FOREIGN KEY (APP_SID, SHEET_VALUE_CHANGE_ID)
    REFERENCES CSR.SHEET_VALUE_CHANGE(APP_SID, SHEET_VALUE_CHANGE_ID)
;



ALTER TABLE CSR.SHEET_VALUE_FILE ADD CONSTRAINT RefFILE_UPLOAD738
    FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
    REFERENCES CSR.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CSR.SHEET_VALUE_FILE ADD CONSTRAINT RefSHEET_VALUE739
    FOREIGN KEY (APP_SID, SHEET_VALUE_ID)
    REFERENCES CSR.SHEET_VALUE(APP_SID, SHEET_VALUE_ID)
;

ALTER TABLE CSR.SHEET_VALUE_FILE_HIDDEN_CACHE ADD CONSTRAINT FK_SVFHC_FU
    FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
    REFERENCES CSR.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CSR.SHEET_VALUE_FILE_HIDDEN_CACHE ADD CONSTRAINT FK_SVFHC_SV
    FOREIGN KEY (APP_SID, SHEET_VALUE_ID)
    REFERENCES CSR.SHEET_VALUE(APP_SID, SHEET_VALUE_ID)
;

ALTER TABLE CSR.SHEET_VALUE_HIDDEN_CACHE ADD CONSTRAINT FK_SHEET_VALUE_HIDDEN_CACHE_SV
    FOREIGN KEY (APP_SID, SHEET_VALUE_ID)
    REFERENCES CSR.SHEET_VALUE(APP_SID, SHEET_VALUE_ID)
;

ALTER TABLE CSR.SHEET_VALUE_VAR_EXPL ADD CONSTRAINT FK_SH_VAL_SH_VAL_VAR_EXPL
    FOREIGN KEY (APP_SID, SHEET_VALUE_ID)
    REFERENCES CSR.SHEET_VALUE(APP_SID, SHEET_VALUE_ID)
;

ALTER TABLE CSR.SHEET_VALUE_VAR_EXPL ADD CONSTRAINT FK_SH_VAR_EXPL_VAR_EXPL
    FOREIGN KEY (APP_SID, VAR_EXPL_ID)
    REFERENCES CSR.VAR_EXPL(APP_SID, VAR_EXPL_ID)
;

ALTER TABLE CSR.SITE_AUDIT_DETAILS_EXPIRY ADD CONSTRAINT FK_SITE_AUDIT_DETAILS_EXPIRY_ENTERED_BY 
	FOREIGN KEY (APP_SID, ENTERED_BY_SID) 
	REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SITE_AUDIT_DETAILS_CLIENT_NAME ADD CONSTRAINT FK_SITE_AUDIT_DETAILS_CLIENT_NAME_ENTERED_BY
	FOREIGN KEY (APP_SID, ENTERED_BY_SID) 
	REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);

ALTER TABLE CSR.SITE_AUDIT_DETAILS_REASON ADD CONSTRAINT FK_SITE_AUDIT_DETAILS_REASON_ENTERED_BY
	FOREIGN KEY (APP_SID, ENTERED_BY_SID) 
	REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);

ALTER TABLE CSR.SITE_AUDIT_DETAILS_CONTRACT_REF ADD CONSTRAINT FK_SITE_AUDIT_DETAILS_CONTRACT_REF_ENTERED_BY
	FOREIGN KEY (APP_SID, ENTERED_BY_SID) 
	REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);


ALTER TABLE CSR.SNAPSHOT ADD CONSTRAINT FK_SNAPSHOT_PERIOD_INTERVAL
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.SNAPSHOT ADD CONSTRAINT RefCUSTOMER869
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.SNAPSHOT_IND ADD CONSTRAINT RefIND870
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.SNAPSHOT_IND ADD CONSTRAINT RefSNAPSHOT871
    FOREIGN KEY (APP_SID, NAME)
    REFERENCES CSR.SNAPSHOT(APP_SID, NAME)
;



ALTER TABLE CSR.SNAPSHOT_REGION ADD CONSTRAINT RefREGION1218
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.SNAPSHOT_REGION ADD CONSTRAINT RefSNAPSHOT1098
    FOREIGN KEY (APP_SID, NAME)
    REFERENCES CSR.SNAPSHOT(APP_SID, NAME)
;



ALTER TABLE CSR.SNAPSHOT_TAG_GROUP ADD CONSTRAINT RefSNAPSHOT1424
    FOREIGN KEY (APP_SID, NAME)
    REFERENCES CSR.SNAPSHOT(APP_SID, NAME)
;

ALTER TABLE CSR.SNAPSHOT_TAG_GROUP ADD CONSTRAINT RefTAG_GROUP1423
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;



ALTER TABLE CSR.SOURCE_TYPE_ERROR_CODE ADD CONSTRAINT RefSOURCE_TYPE255
    FOREIGN KEY (SOURCE_TYPE_ID)
    REFERENCES CSR.SOURCE_TYPE(SOURCE_TYPE_ID)
;



ALTER TABLE CSR.SPACE_TYPE_REGION_METRIC ADD CONSTRAINT FK_REG_METRIC_SPACE_TYPE
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.REGION_METRIC(APP_SID, IND_SID)
;

ALTER TABLE CSR.SPACE_TYPE_REGION_METRIC ADD CONSTRAINT FK_SP_TYP_RG_MET_RG_TYP_MET
    FOREIGN KEY (APP_SID, REGION_TYPE, IND_SID)
    REFERENCES CSR.REGION_TYPE_METRIC(APP_SID, REGION_TYPE, IND_SID)
;

ALTER TABLE CSR.SPACE_TYPE_REGION_METRIC ADD CONSTRAINT FK_SPACE_TYPE_SPT_REG_MET
    FOREIGN KEY (APP_SID, SPACE_TYPE_ID)
    REFERENCES CSR.SPACE_TYPE(APP_SID, SPACE_TYPE_ID)
;



ALTER TABLE CSR.STD_ALERT_TYPE ADD CONSTRAINT FK_STD_ALERT_TYPE_ALERT_GROUP
    FOREIGN KEY (STD_ALERT_TYPE_GROUP_ID)
    REFERENCES CSR.STD_ALERT_TYPE_GROUP(STD_ALERT_TYPE_GROUP_ID)
;

ALTER TABLE CSR.STD_ALERT_TYPE ADD CONSTRAINT FK_STD_ALT_STD_ALT
    FOREIGN KEY (PARENT_ALERT_TYPE_ID)
    REFERENCES CSR.STD_ALERT_TYPE(STD_ALERT_TYPE_ID)
;



ALTER TABLE CSR.STD_ALERT_TYPE_PARAM ADD CONSTRAINT FK_ALRT_TYPE_PARM_ALRT_TYPE
    FOREIGN KEY (STD_ALERT_TYPE_ID)
    REFERENCES CSR.STD_ALERT_TYPE(STD_ALERT_TYPE_ID)
;



ALTER TABLE CSR.STD_FACTOR ADD CONSTRAINT RefEGRID1729
    FOREIGN KEY (EGRID_REF)
    REFERENCES CSR.EGRID(EGRID_REF)
;

ALTER TABLE CSR.STD_FACTOR ADD CONSTRAINT RefFACTOR_TYPE1220
    FOREIGN KEY (FACTOR_TYPE_ID)
    REFERENCES CSR.FACTOR_TYPE(FACTOR_TYPE_ID)
;

ALTER TABLE CSR.STD_FACTOR ADD CONSTRAINT RefGAS_TYPE1219
    FOREIGN KEY (GAS_TYPE_ID)
    REFERENCES CSR.GAS_TYPE(GAS_TYPE_ID)
;

ALTER TABLE CSR.STD_FACTOR ADD CONSTRAINT RefSTD_FACTOR_SET1222
    FOREIGN KEY (STD_FACTOR_SET_ID)
    REFERENCES CSR.STD_FACTOR_SET(STD_FACTOR_SET_ID)
;

ALTER TABLE CSR.STD_FACTOR ADD CONSTRAINT RefSTD_MEASURE_CONVERSION1535
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.STD_FACTOR_SET ADD CONSTRAINT FK_STD_FCTR_SET_FCTR_SET_GRP
    FOREIGN KEY (FACTOR_SET_GROUP_ID)
    REFERENCES CSR.FACTOR_SET_GROUP(FACTOR_SET_GROUP_ID)
;



ALTER TABLE CSR.STD_MEASURE_CONV_PERIOD ADD CONSTRAINT RefSTD_MEASURE_CONVERSION1223
    FOREIGN KEY (STD_MEASURE_CONVERSION_ID)
    REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.STD_MEASURE_CONVERSION ADD CONSTRAINT RefSTD_MEASURE1226
    FOREIGN KEY (STD_MEASURE_ID)
    REFERENCES CSR.STD_MEASURE(STD_MEASURE_ID)
;



ALTER TABLE CSR.SUPPLIER ADD CONSTRAINT FK_SUPPLIER_LOGO_FILE
    FOREIGN KEY (LOGO_FILE_SID)
    REFERENCES CSR.FILE_UPLOAD(FILE_UPLOAD_SID) ON DELETE SET NULL
;

ALTER TABLE CSR.SUPPLIER ADD CONSTRAINT RefSUP_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID) DEFERRABLE INITIALLY DEFERRED
;



ALTER TABLE CSR.SUPPLIER_DELEGATION ADD CONSTRAINT RefSUP_DELEG_DELEG
    FOREIGN KEY (APP_SID, DELEGATION_SID)
    REFERENCES CSR.DELEGATION(APP_SID, DELEGATION_SID)
;

ALTER TABLE CSR.SUPPLIER_DELEGATION ADD CONSTRAINT RefSUP_DELEG_SUPPLIER
    FOREIGN KEY (APP_SID, SUPPLIER_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;

ALTER TABLE CSR.SUPPLIER_DELEGATION ADD CONSTRAINT RefSUP_DELEG_TPL_DELEG
    FOREIGN KEY (APP_SID, TPL_DELEGATION_SID)
    REFERENCES CSR.CHAIN_TPL_DELEGATION(APP_SID, TPL_DELEGATION_SID)
;



ALTER TABLE CSR.SUPPLIER_SCORE_LOG ADD CONSTRAINT FK_SUP_SCORE_LOG_TYPE
    FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
    REFERENCES CSR.SCORE_TYPE(APP_SID, SCORE_TYPE_ID)
;

ALTER TABLE CSR.SUPPLIER_SCORE_LOG ADD CONSTRAINT FK_SUP_SCORE_LOG_USER
    FOREIGN KEY (APP_SID, CHANGED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.SUPPLIER_SCORE_LOG ADD CONSTRAINT FK_SUP_SCORE_SUPPLIER_SID
    FOREIGN KEY (APP_SID, SUPPLIER_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;

ALTER TABLE CSR.SUPPLIER_SCORE_LOG ADD CONSTRAINT FK_SUP_SCORE_THRESH_ID
    FOREIGN KEY (APP_SID, SCORE_THRESHOLD_ID)
    REFERENCES CSR.SCORE_THRESHOLD(APP_SID, SCORE_THRESHOLD_ID)
;



ALTER TABLE CSR.SUPPLIER_SURVEY_RESPONSE ADD CONSTRAINT FK_SUPP_SURV_RESP_QK_SURV_RESP
    FOREIGN KEY (APP_SID, SURVEY_SID, SURVEY_RESPONSE_ID)
    REFERENCES CSR.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_SID, SURVEY_RESPONSE_ID)
;

ALTER TABLE CSR.SUPPLIER_SURVEY_RESPONSE ADD CONSTRAINT FK_SUPP_SURV_RESP_SUPPLIER
    FOREIGN KEY (APP_SID, SUPPLIER_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID)
;



ALTER TABLE CSR.TAB ADD CONSTRAINT RefCUSTOMER801
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.TAB_DESCRIPTION ADD CONSTRAINT FK_TAB_DESCRIPTION_TAB
    FOREIGN KEY (APP_SID, TAB_ID)
    REFERENCES CSR.TAB(APP_SID, TAB_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.TAB_GROUP ADD CONSTRAINT RefTAB891
    FOREIGN KEY (APP_SID, TAB_ID)
    REFERENCES CSR.TAB(APP_SID, TAB_ID)
;



ALTER TABLE CSR.TAB_PORTLET ADD CONSTRAINT FK_CUSTOMER_PORTLET
    FOREIGN KEY (APP_SID, CUSTOMER_PORTLET_SID)
    REFERENCES CSR.CUSTOMER_PORTLET(APP_SID, CUSTOMER_PORTLET_SID)
;

ALTER TABLE CSR.TAB_PORTLET ADD CONSTRAINT FK_USER_TAB_PORTLET
    FOREIGN KEY (APP_SID, ADDED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.TAB_PORTLET ADD CONSTRAINT RefTAB798
    FOREIGN KEY (APP_SID, TAB_ID)
    REFERENCES CSR.TAB(APP_SID, TAB_ID)
;



ALTER TABLE CSR.TAB_PORTLET_RSS_FEED ADD CONSTRAINT RefRSS_CACHE887
    FOREIGN KEY (RSS_URL)
    REFERENCES CSR.RSS_CACHE(RSS_URL)
;

ALTER TABLE CSR.TAB_PORTLET_RSS_FEED ADD CONSTRAINT RefTAB_PORTLET886
    FOREIGN KEY (APP_SID, TAB_PORTLET_ID)
    REFERENCES CSR.TAB_PORTLET(APP_SID, TAB_PORTLET_ID)
;



ALTER TABLE CSR.TAB_PORTLET_USER_REGION ADD CONSTRAINT FK_REGION_TAB_PORTLET_UR
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.TAB_PORTLET_USER_REGION ADD CONSTRAINT FK_TAB_PORTLET_TAB_PORTLET_UR
    FOREIGN KEY (APP_SID, TAB_PORTLET_ID)
    REFERENCES CSR.TAB_PORTLET(APP_SID, TAB_PORTLET_ID)
;

ALTER TABLE CSR.TAB_PORTLET_USER_REGION ADD CONSTRAINT FK_USER_TAB_PORTLET_UR
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.TAB_USER ADD CONSTRAINT RefCSR_USER859
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.TAB_USER ADD CONSTRAINT RefTAB858
    FOREIGN KEY (APP_SID, TAB_ID)
    REFERENCES CSR.TAB(APP_SID, TAB_ID)
;



ALTER TABLE CSR.TAG ADD CONSTRAINT RefCUSTOMER1010
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.TAG ADD CONSTRAINT FK_PARENT_TAG_ID
	FOREIGN KEY (APP_SID, PARENT_ID)
	REFERENCES CSR.TAG(APP_SID, TAG_ID)
;



ALTER TABLE CSR.TAG_GROUP ADD CONSTRAINT RefCUSTOMER231
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.TAG_GROUP_MEMBER ADD CONSTRAINT RefTAG_GROUP232
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE CSR.TAG_GROUP_MEMBER ADD CONSTRAINT RefTAG233
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.TAG_GROUP_DESCRIPTION ADD CONSTRAINT FK_TAG_GROUP_DESCRIPTION
	FOREIGN KEY (APP_SID, TAG_GROUP_ID)
	REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID) ON DELETE CASCADE
;


ALTER TABLE CSR.TARGET_DASHBOARD ADD CONSTRAINT FK_TARGET_DASH_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.TARGET_DASHBOARD ADD CONSTRAINT RefCUSTOMER1011
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.TARGET_DASHBOARD_IND_MEMBER ADD CONSTRAINT RefIND127
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.TARGET_DASHBOARD_IND_MEMBER ADD CONSTRAINT RefIND128
    FOREIGN KEY (APP_SID, TARGET_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.TARGET_DASHBOARD_IND_MEMBER ADD CONSTRAINT RefTARGET_DASHBOARD129
    FOREIGN KEY (APP_SID, TARGET_DASHBOARD_SID)
    REFERENCES CSR.TARGET_DASHBOARD(APP_SID, TARGET_DASHBOARD_SID)
;



ALTER TABLE CSR.TARGET_DASHBOARD_REG_MEMBER ADD CONSTRAINT FK_TARGET_DASH_REG_MEM_REG
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.TARGET_DASHBOARD_REG_MEMBER ADD CONSTRAINT FK_TGT_DASH_REG_MEM_TGT_DASH
    FOREIGN KEY (APP_SID, TARGET_DASHBOARD_SID)
    REFERENCES CSR.TARGET_DASHBOARD(APP_SID, TARGET_DASHBOARD_SID)
;



ALTER TABLE CSR.TARGET_DASHBOARD_VALUE ADD CONSTRAINT RefIND130
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.TARGET_DASHBOARD_VALUE ADD CONSTRAINT RefREGION1230
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.TARGET_DASHBOARD_VALUE ADD CONSTRAINT RefTARGET_DASHBOARD132
    FOREIGN KEY (APP_SID, TARGET_DASHBOARD_SID)
    REFERENCES CSR.TARGET_DASHBOARD(APP_SID, TARGET_DASHBOARD_SID)
;



ALTER TABLE CSR.TEAMROOM ADD CONSTRAINT FK_TEAMROOM_DOCLIB
    FOREIGN KEY (APP_SID, DOC_LIBRARY_SID)
    REFERENCES CSR.DOC_LIBRARY(APP_SID, DOC_LIBRARY_SID)
;

ALTER TABLE CSR.TEAMROOM ADD CONSTRAINT FK_TEAMROOM_TMRM_TYPE
    FOREIGN KEY (APP_SID, TEAMROOM_TYPE_ID)
    REFERENCES CSR.TEAMROOM_TYPE(APP_SID, TEAMROOM_TYPE_ID)
;



ALTER TABLE CSR.TEAMROOM_COMPANY ADD CONSTRAINT FK_SUPPLIER_TMROOM_CPY
    FOREIGN KEY (APP_SID, COMPANY_SID)
    REFERENCES CSR.SUPPLIER(APP_SID, COMPANY_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.TEAMROOM_COMPANY ADD CONSTRAINT FK_TMROOM_TMROOM_CPY
    FOREIGN KEY (APP_SID, TEAMROOM_SID)
    REFERENCES CSR.TEAMROOM(APP_SID, TEAMROOM_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.TEAMROOM_EVENT ADD CONSTRAINT FK_CAL_EVNT_TMRM_EVNT
    FOREIGN KEY (APP_SID, CALENDAR_EVENT_ID)
    REFERENCES CSR.CALENDAR_EVENT(APP_SID, CALENDAR_EVENT_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.TEAMROOM_EVENT ADD CONSTRAINT FK_TMRM_EVENT_TMRM
    FOREIGN KEY (APP_SID, TEAMROOM_SID)
    REFERENCES CSR.TEAMROOM(APP_SID, TEAMROOM_SID)
;



ALTER TABLE CSR.TEAMROOM_INITIATIVE ADD CONSTRAINT FK_TMRM_INITVE_INITVE
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.TEAMROOM_INITIATIVE ADD CONSTRAINT FK_TMRM_INITVE_TMRM
    FOREIGN KEY (APP_SID, TEAMROOM_SID)
    REFERENCES CSR.TEAMROOM(APP_SID, TEAMROOM_SID) ON DELETE CASCADE
;



ALTER TABLE CSR.TEAMROOM_ISSUE ADD CONSTRAINT FK_TMRM_ISSUE_ISSUE
    FOREIGN KEY (APP_SID, ISSUE_ID)
    REFERENCES CSR.ISSUE(APP_SID, ISSUE_ID)
;

ALTER TABLE CSR.TEAMROOM_ISSUE ADD CONSTRAINT FK_TMRM_ISSUE_TMRM
    FOREIGN KEY (APP_SID, TEAMROOM_SID)
    REFERENCES CSR.TEAMROOM(APP_SID, TEAMROOM_SID)
;



ALTER TABLE CSR.TEAMROOM_MEMBER ADD CONSTRAINT FK_TMRM_MBR_TMRM
    FOREIGN KEY (APP_SID, TEAMROOM_SID)
    REFERENCES CSR.TEAMROOM(APP_SID, TEAMROOM_SID)
;

ALTER TABLE CSR.TEAMROOM_MEMBER ADD CONSTRAINT FK_TMRM_MEMBER_INV_BY
    FOREIGN KEY (APP_SID, INVITED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.TEAMROOM_MEMBER ADD CONSTRAINT FK_TMRM_MEMBER_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.TEAMROOM_TYPE_TAB ADD CONSTRAINT FK_PLUGIN_TMRM_TYPE_TAB
    FOREIGN KEY (PLUGIN_ID, PLUGIN_TYPE_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID, PLUGIN_TYPE_ID)
;

ALTER TABLE CSR.TEAMROOM_TYPE_TAB ADD CONSTRAINT FK_TMRM_TYPE_TAB_TMRM_TYPE
    FOREIGN KEY (APP_SID, TEAMROOM_TYPE_ID)
    REFERENCES CSR.TEAMROOM_TYPE(APP_SID, TEAMROOM_TYPE_ID)
;



ALTER TABLE CSR.TEAMROOM_TYPE_TAB_GROUP ADD CONSTRAINT FK_TR_TYP_TB_TR_TYP_TB_GRP
    FOREIGN KEY (APP_SID, TEAMROOM_TYPE_ID, PLUGIN_ID)
    REFERENCES CSR.TEAMROOM_TYPE_TAB(APP_SID, TEAMROOM_TYPE_ID, PLUGIN_ID)
;



ALTER TABLE CSR.TEAMROOM_USER_MSG ADD CONSTRAINT FK_TMRM_TMRM_USR_MSG
    FOREIGN KEY (APP_SID, TEAMROOM_SID)
    REFERENCES CSR.TEAMROOM(APP_SID, TEAMROOM_SID)
;

ALTER TABLE CSR.TEAMROOM_USER_MSG ADD CONSTRAINT FK_USR_MSG_TMRM_USR_MSG
    FOREIGN KEY (APP_SID, USER_MSG_ID)
    REFERENCES CSR.USER_MSG(APP_SID, USER_MSG_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.TEMPLATE ADD CONSTRAINT RefCSR_USER357
    FOREIGN KEY (APP_SID, UPLOADED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.TEMPLATE ADD CONSTRAINT RefCUSTOMER354
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.TEMPLATE ADD CONSTRAINT RefTEMPLATE_TYPE353
    FOREIGN KEY (TEMPLATE_TYPE_ID)
    REFERENCES CSR.TEMPLATE_TYPE(TEMPLATE_TYPE_ID)
;



ALTER TABLE CSR.TERM_COND_DOC ADD CONSTRAINT FK_TERM_COND_DOC
    FOREIGN KEY (APP_SID, DOC_ID)
    REFERENCES CSR.DOC(APP_SID, DOC_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.TERM_COND_DOC_LOG ADD CONSTRAINT FK_TERM_COND_DOC_LOG
    FOREIGN KEY (APP_SID, DOC_ID)
    REFERENCES CSR.DOC(APP_SID, DOC_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.TERM_COND_DOC_LOG ADD CONSTRAINT FK_TERM_COND_DOC_LOG_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.TERM_COND_DOC_LOG ADD CONSTRAINT FK_TERM_COND_DOC_LOG_VERSION
    FOREIGN KEY (APP_SID, DOC_ID, DOC_VERSION)
    REFERENCES CSR.DOC_VERSION(APP_SID, DOC_ID, VERSION) ON DELETE CASCADE
;



ALTER TABLE CSR.TPL_IMG ADD CONSTRAINT FK_CUS_TPL_IMG
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.TPL_REP_CUST_TAG_TYPE ADD CONSTRAINT RefCUSTOMER2646
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.TPL_REPORT ADD CONSTRAINT FK_TPL_REPORT_PERIOD_INTERVAL
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.TPL_REPORT ADD CONSTRAINT RefCUSTOMER905
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.TPL_REPORT_NON_COMPL ADD CONSTRAINT FK_TPL_REP_NC_REG_TYP
    FOREIGN KEY (TPL_REGION_TYPE_ID)
    REFERENCES CSR.TPL_REGION_TYPE(TPL_REGION_TYPE_ID)
;

ALTER TABLE CSR.TPL_REPORT_NON_COMPL ADD CONSTRAINT FK_TPL_REP_NC_TAG
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.TPL_REPORT_NON_COMPL ADD CONSTRAINT FK_TPL_REP_NON_COMPL_APP
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.TPL_REPORT_NON_COMPL ADD CONSTRAINT FK_TPL_RP_NC_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;



ALTER TABLE CSR.TPL_REPORT_SCHED_SAVED_DOC ADD CONSTRAINT FK_TPL_REP_SCHED_DOC_SID
    FOREIGN KEY (APP_SID, DOC_ID)
    REFERENCES CSR.DOC(APP_SID, DOC_ID)
;

ALTER TABLE CSR.TPL_REPORT_SCHED_SAVED_DOC ADD CONSTRAINT FK_TPL_REP_SCHED_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.TPL_REPORT_SCHED_SAVED_DOC ADD CONSTRAINT FK_TPL_REP_SCHED_SCHED_SID
    FOREIGN KEY (APP_SID, SCHEDULE_SID)
    REFERENCES CSR.TPL_REPORT_SCHEDULE(APP_SID, SCHEDULE_SID)
;



ALTER TABLE CSR.TPL_REPORT_SCHEDULE ADD CONSTRAINT FK_TPL_REP_SCHED_REG_SEL_TYPE
    FOREIGN KEY (REGION_SELECTION_TYPE_ID)
    REFERENCES CSR.REGION_SELECTION_TYPE(REGION_SELECTION_TYPE_ID)
;

ALTER TABLE CSR.TPL_REPORT_SCHEDULE ADD CONSTRAINT FK_TPL_REP_SCHED_REGION_TAG
    FOREIGN KEY (APP_SID, REGION_SELECTION_TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.TPL_REPORT_SCHEDULE ADD CONSTRAINT FK_TPL_REP_SCHED_SCEN_RUN
    FOREIGN KEY (APP_SID, SCENARIO_RUN_SID)
    REFERENCES CSR.SCENARIO_RUN(APP_SID, SCENARIO_RUN_SID)
;

ALTER TABLE CSR.TPL_REPORT_SCHEDULE ADD CONSTRAINT FK_TPL_REPORT_SCHED_DOC_LIB
    FOREIGN KEY (APP_SID, DOC_FOLDER_SID)
    REFERENCES CSR.DOC_FOLDER(APP_SID, DOC_FOLDER_SID)
;

ALTER TABLE CSR.TPL_REPORT_SCHEDULE ADD CONSTRAINT FK_TPL_REPORT_SCHED_OWNER
    FOREIGN KEY (APP_SID, OWNER_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.TPL_REPORT_SCHEDULE ADD CONSTRAINT FK_TPL_REPORT_SCHED_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.TPL_REPORT_SCHEDULE ADD CONSTRAINT FK_TPL_REPORT_SCHED_TPL_REP
    FOREIGN KEY (APP_SID, TPL_REPORT_SID)
    REFERENCES CSR.TPL_REPORT(APP_SID, TPL_REPORT_SID)
;



ALTER TABLE CSR.TPL_REPORT_SCHEDULE_REGION ADD CONSTRAINT FK_TPL_REP_SCHED_REGION_SCHED
    FOREIGN KEY (APP_SID, SCHEDULE_SID)
    REFERENCES CSR.TPL_REPORT_SCHEDULE(APP_SID, SCHEDULE_SID)
;

ALTER TABLE CSR.TPL_REPORT_SCHEDULE_REGION ADD CONSTRAINT FK_TPL_REPORT_SCHED_REGION
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.TPL_REPORT_TAG ADD CONSTRAINT FK_TPL_REP_TAG_LGN_FRM
    FOREIGN KEY (APP_SID, TPL_REPORT_TAG_LOGGING_FORM_ID)
    REFERENCES CSR.TPL_REPORT_TAG_LOGGING_FORM(APP_SID, TPL_REPORT_TAG_LOGGING_FORM_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.TPL_REPORT_TAG ADD CONSTRAINT FK_TPL_REP_TAG_NON_COMPL
    FOREIGN KEY (APP_SID, TPL_REPORT_NON_COMPL_ID)
    REFERENCES CSR.TPL_REPORT_NON_COMPL(APP_SID, TPL_REPORT_NON_COMPL_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.TPL_REPORT_TAG ADD CONSTRAINT FK_TPL_REPORT_TAG_CUST_TAG_TYP
    FOREIGN KEY (APP_SID, TPL_REP_CUST_TAG_TYPE_ID)
    REFERENCES CSR.TPL_REP_CUST_TAG_TYPE(APP_SID, TPL_REP_CUST_TAG_TYPE_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG ADD CONSTRAINT FK_TPL_RPT_TAG_TXT_TRT
    FOREIGN KEY (APP_SID, TPL_REPORT_TAG_TEXT_ID)
    REFERENCES CSR.TPL_REPORT_TAG_TEXT(APP_SID, TPL_REPORT_TAG_TEXT_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG ADD CONSTRAINT RefTPL_REPORT_TAG_DATAVIEW1414
    FOREIGN KEY (APP_SID, TPL_REPORT_TAG_DATAVIEW_ID)
    REFERENCES CSR.TPL_REPORT_TAG_DATAVIEW(APP_SID, TPL_REPORT_TAG_DATAVIEW_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.TPL_REPORT_TAG ADD CONSTRAINT RefTPL_REPORT_TAG_EVAL1257
    FOREIGN KEY (APP_SID, TPL_REPORT_TAG_EVAL_ID)
    REFERENCES CSR.TPL_REPORT_TAG_EVAL(APP_SID, TPL_REPORT_TAG_EVAL_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.TPL_REPORT_TAG ADD CONSTRAINT RefTPL_REPORT_TAG_IND1413
    FOREIGN KEY (APP_SID, TPL_REPORT_TAG_IND_ID)
    REFERENCES CSR.TPL_REPORT_TAG_IND(APP_SID, TPL_REPORT_TAG_IND_ID) DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CSR.TPL_REPORT_TAG ADD CONSTRAINT RefTPL_REPORT1
    FOREIGN KEY (APP_SID, TPL_REPORT_SID)
    REFERENCES CSR.TPL_REPORT(APP_SID, TPL_REPORT_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.TPL_REPORT_TAG_QCHART ADD CONSTRAINT fk_tpl_rp_tg_qc_period_int
    FOREIGN KEY (app_sid, period_set_id, period_interval_id)
    REFERENCES csr.period_interval(app_sid, period_set_id, period_interval_id)
;

ALTER TABLE CSR.TPL_REPORT_TAG_APPROVAL_MATRIX ADD CONSTRAINT FK_TPL_REP_TAG_AP_MTX_APP_DAS
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID)
;



ALTER TABLE CSR.TPL_REPORT_TAG_APPROVAL_NOTE ADD CONSTRAINT FK_TPL_REP_TAG_AP_NOTE_APP_DAS
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_APPROVAL_NOTE ADD CONSTRAINT FK_TPL_REP_TAG_AP_NOTE_TAB_POR
    FOREIGN KEY (APP_SID, TAB_PORTLET_ID)
    REFERENCES CSR.TAB_PORTLET(APP_SID, TAB_PORTLET_ID)
;



ALTER TABLE CSR.TPL_REPORT_TAG_DATAVIEW ADD CONSTRAINT FK_TPL_REP_TAG_DV_APP_DASH
    FOREIGN KEY (APP_SID, APPROVAL_DASHBOARD_SID)
    REFERENCES CSR.APPROVAL_DASHBOARD(APP_SID, APPROVAL_DASHBOARD_SID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_DATAVIEW ADD CONSTRAINT FK_TPL_REP_TAG_DV_IND_TAG
    FOREIGN KEY (APP_SID, IND_TAG)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_DATAVIEW ADD CONSTRAINT FK_TPL_RP_TG_DV_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_DATAVIEW ADD CONSTRAINT RefDATAVIEW907
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID)
;



ALTER TABLE CSR.TPL_REPORT_TAG_DV_REGION ADD CONSTRAINT FK_TPL_RP_TG_DV_RG_TAG
    FOREIGN KEY (APP_SID, FILTER_BY_TAG)
    REFERENCES CSR.TAG(APP_SID, TAG_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_DV_REGION ADD CONSTRAINT RefDATAVIEW_REGION_MEMBER1681
    FOREIGN KEY (APP_SID, DATAVIEW_SID, REGION_SID)
    REFERENCES CSR.DATAVIEW_REGION_MEMBER(APP_SID, DATAVIEW_SID, REGION_SID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_DV_REGION ADD CONSTRAINT RefTPL_REGION_TYPE1247
    FOREIGN KEY (TPL_REGION_TYPE_ID)
    REFERENCES CSR.TPL_REGION_TYPE(TPL_REGION_TYPE_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_DV_REGION ADD CONSTRAINT RefTPL_REPORT_TAG_DATAVIEW1248
    FOREIGN KEY (APP_SID, TPL_REPORT_TAG_DATAVIEW_ID, DATAVIEW_SID)
    REFERENCES CSR.TPL_REPORT_TAG_DATAVIEW(APP_SID, TPL_REPORT_TAG_DATAVIEW_ID, DATAVIEW_SID)
;



ALTER TABLE CSR.TPL_REPORT_TAG_EVAL ADD CONSTRAINT FK_TPL_RP_TG_EVAL_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_EVAL ADD CONSTRAINT RefCUSTOMER1417
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.TPL_REPORT_TAG_EVAL_COND ADD CONSTRAINT RefIND1258
    FOREIGN KEY (APP_SID, LEFT_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_EVAL_COND ADD CONSTRAINT RefIND1259
    FOREIGN KEY (APP_SID, RIGHT_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_EVAL_COND ADD CONSTRAINT RefTPL_REPORT_TAG_EVAL1260
    FOREIGN KEY (APP_SID, TPL_REPORT_TAG_EVAL_ID)
    REFERENCES CSR.TPL_REPORT_TAG_EVAL(APP_SID, TPL_REPORT_TAG_EVAL_ID)
;



ALTER TABLE CSR.TPL_REPORT_TAG_IND ADD CONSTRAINT FK_TAG_MEASURE_CONVERSION
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_IND ADD CONSTRAINT FK_TPL_REP_TAG_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_IND ADD CONSTRAINT RefCUSTOMER1418
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_IND ADD CONSTRAINT RefIND909
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


ALTER TABLE CSR.TPL_REPORT_TAG_LOGGING_FORM ADD CONSTRAINT FK_TPL_RP_TG_LGFRM_PERIOD_INT
    FOREIGN KEY (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
    REFERENCES CSR.PERIOD_INTERVAL(APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_LOGGING_FORM ADD CONSTRAINT RefTPL_REGION_TYPE2614
    FOREIGN KEY (TPL_REGION_TYPE_ID)
    REFERENCES CSR.TPL_REGION_TYPE(TPL_REGION_TYPE_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_REG_DATA ADD CONSTRAINT FK_TPL_REPORT_REG_DATA_TYPE
    FOREIGN KEY (TPL_REPORT_REG_DATA_TYPE_ID)
    REFERENCES CSR.TPL_REPORT_REG_DATA_TYPE(TPL_REPORT_REG_DATA_TYPE_ID)
;

ALTER TABLE CSR.TPL_REPORT_TAG_TEXT ADD CONSTRAINT FK_CUS_TPL_RPT_TAG_TEXT
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.TPL_REPORT_VARIANT ADD CONSTRAINT FK_TPL_REP_VARIANT_TPL_REP
	FOREIGN KEY (APP_SID, MASTER_TEMPLATE_SID)
	REFERENCES CSR.TPL_REPORT(APP_SID, TPL_REPORT_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.TPL_REPORT_VARIANT_TAG ADD CONSTRAINT FK_TPL_REP_VARIANT_TAG_RV
	FOREIGN KEY (APP_SID, TPL_REPORT_SID, LANGUAGE_CODE)
	REFERENCES CSR.TPL_REPORT_VARIANT(APP_SID, MASTER_TEMPLATE_SID, LANGUAGE_CODE) ON DELETE CASCADE
;

ALTER TABLE CSR.TRAINER ADD CONSTRAINT FK_TRAINER_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.TRAINING_OPTIONS ADD CONSTRAINT FK_TRAINING_OPTIONS_CALENDAR
    FOREIGN KEY (APP_SID, CALENDAR_SID)
    REFERENCES CSR.CALENDAR(APP_SID, CALENDAR_SID)
;

ALTER TABLE CSR.TRAINING_OPTIONS ADD CONSTRAINT FK_TRAINING_OPTIONS_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.TRAINING_OPTIONS ADD CONSTRAINT FK_TRAINING_OPTIONS_FLOW
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID)
;



ALTER TABLE CSR.TRASH ADD CONSTRAINT RefCSR_USER160
    FOREIGN KEY (APP_SID, TRASHED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.TRASH ADD CONSTRAINT RefCUSTOMER1026
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.URJANET_IMPORT_INSTANCE ADD CONSTRAINT FK_UII_AII
    FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
    REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE(APP_SID, AUTOMATED_IMPORT_INSTANCE_ID)
;

ALTER TABLE CSR.URJANET_IMPORT_INSTANCE ADD CONSTRAINT FK_UII_MRD
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES CSR.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;



ALTER TABLE CSR.URJANET_SERVICE_TYPE ADD CONSTRAINT FK_URJ_SERVICE_TYPE_METER_TYPE
    FOREIGN KEY (APP_SID, METER_TYPE_ID)
    REFERENCES CSR.METER_TYPE(APP_SID, METER_TYPE_ID)
;

ALTER TABLE CSR.URJANET_SERVICE_TYPE ADD CONSTRAINT SRV_TYPE_RAW_DATA_SRC_ID
    FOREIGN KEY (APP_SID, RAW_DATA_SOURCE_ID)
    REFERENCES CSR.METER_RAW_DATA_SOURCE(APP_SID, RAW_DATA_SOURCE_ID)
;



ALTER TABLE CSR.USER_COURSE ADD CONSTRAINT FK_USER_COURSE_COURSE
    FOREIGN KEY (APP_SID, COURSE_ID)
    REFERENCES CSR.COURSE(APP_SID, COURSE_ID)
;

ALTER TABLE CSR.USER_COURSE ADD CONSTRAINT FK_USER_COURSE_TRAINING
    FOREIGN KEY (APP_SID, USER_SID, COURSE_SCHEDULE_ID, COURSE_ID)
    REFERENCES CSR.USER_TRAINING(APP_SID, USER_SID, COURSE_SCHEDULE_ID, COURSE_ID)
;

ALTER TABLE CSR.USER_COURSE ADD CONSTRAINT FK_USER_COURSE_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.USER_COURSE_LOG ADD CONSTRAINT FK_USER_COURSE_LOG
    FOREIGN KEY (APP_SID, USER_SID, COURSE_ID)
    REFERENCES CSR.USER_COURSE(APP_SID, USER_SID, COURSE_ID)
;



ALTER TABLE CSR.USER_COVER ADD CONSTRAINT FK_CSR_USER_USER_COVER_B
    FOREIGN KEY (APP_SID, USER_BEING_COVERED_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_COVER ADD CONSTRAINT FK_CSR_USER_USER_COVER_G
    FOREIGN KEY (APP_SID, USER_GIVING_COVER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_COVER ADD CONSTRAINT FK_CUSTOMER_USER_COVER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.USER_FEED ADD CONSTRAINT FK_USER_FEED_ACTIVITY
    FOREIGN KEY (APP_SID, TARGET_ACTIVITY_ID)
    REFERENCES CSR.ACTIVITY(APP_SID, ACTIVITY_ID) ON DELETE CASCADE
;

ALTER TABLE CSR.USER_FEED ADD CONSTRAINT FK_USER_FEED_USER_1
    FOREIGN KEY (APP_SID, ACTING_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_FEED ADD CONSTRAINT FK_USER_FEED_USER_2
    FOREIGN KEY (APP_SID, TARGET_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_FEED ADD CONSTRAINT FK_USR_FEED_USR_FEED_ACTION
    FOREIGN KEY (USER_FEED_ACTION_ID)
    REFERENCES CSR.USER_FEED_ACTION(USER_FEED_ACTION_ID)
;



ALTER TABLE CSR.USER_FUNCTION ADD CONSTRAINT FK_FUNCTION_USER_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_FUNCTION ADD CONSTRAINT FK_JOB_FUNCTION_USER_FUNCTION
    FOREIGN KEY (APP_SID, FUNCTION_ID)
    REFERENCES CSR.FUNCTION(APP_SID, FUNCTION_ID)
;



ALTER TABLE CSR.USER_INACTIVE_MAN_ALERT ADD CONSTRAINT FK_INACTIVE_MAN_ALERT_CSR_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.USER_INACTIVE_REM_ALERT ADD CONSTRAINT FK_INACTIVE_REM_ALERT_CSR_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.USER_INACTIVE_SYS_ALERT ADD CONSTRAINT FK_INACTIVE_SYS_ALERT_CSR_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.USER_MESSAGE_ALERT ADD CONSTRAINT FK_USR_MESS_ALERT_NOTIFY_USER
    FOREIGN KEY (APP_SID, NOTIFY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_MESSAGE_ALERT ADD CONSTRAINT FK_USR_MESS_ALERT_RAISED_USER
    FOREIGN KEY (APP_SID, RAISED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.USER_MSG ADD CONSTRAINT FK_USER_MSG
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_MSG ADD CONSTRAINT FK_USER_MSG_REPLY
    FOREIGN KEY (APP_SID, REPLY_TO_MSG_ID)
    REFERENCES CSR.USER_MSG(APP_SID, USER_MSG_ID)
;



ALTER TABLE CSR.USER_MSG_FILE ADD CONSTRAINT FK_USR_MSG_FILE_USR_MSG
    FOREIGN KEY (APP_SID, USER_MSG_ID)
    REFERENCES CSR.USER_MSG(APP_SID, USER_MSG_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.USER_MSG_LIKE ADD CONSTRAINT FK_USR_MSG_LIKE_USER
    FOREIGN KEY (APP_SID, LIKED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID) ON DELETE CASCADE
;

ALTER TABLE CSR.USER_MSG_LIKE ADD CONSTRAINT FK_USR_MSG_LIKE_USR_MSG
    FOREIGN KEY (APP_SID, USER_MSG_ID)
    REFERENCES CSR.USER_MSG(APP_SID, USER_MSG_ID) ON DELETE CASCADE
;


ALTER TABLE CSR.USER_PROFILE ADD CONSTRAINT FK_USER_PROFILE_LOCATION_SID 
	FOREIGN KEY (APP_SID, LOCATION_REGION_SID) 
	REFERENCES CSR.REGION (APP_SID, REGION_SID)
;

ALTER TABLE CSR.USER_PROFILE ADD CONSTRAINT FK_USER_PRFL_CRTD_INSTNC_STP 
	FOREIGN KEY (APP_SID, CREATION_INSTANCE_STEP_ID) 
	REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE_STEP (APP_SID, AUTO_IMPORT_INSTANCE_STEP_ID)
;

ALTER TABLE CSR.USER_PROFILE ADD CONSTRAINT FK_USER_PRFL_CRTD_UPDATED_STP
	FOREIGN KEY (APP_SID, UPDATED_INSTANCE_STEP_ID) 
	REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE_STEP (APP_SID, AUTO_IMPORT_INSTANCE_STEP_ID)
;


ALTER TABLE CSR.USER_PROFILE_DEFAULT_GROUP ADD CONSTRAINT FK_USER_PROF_DEF_GRP_STEP
	FOREIGN KEY (APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
	REFERENCES CSR.AUTOMATED_IMPORT_CLASS_STEP(APP_SID, AUTOMATED_IMPORT_CLASS_SID, STEP_NUMBER)
;

ALTER TABLE CSR.USER_PROFILE_STAGED_RECORD ADD CONSTRAINT FK_USR_PRFL_STGD_RCRD_INST_STP 
	FOREIGN KEY (APP_SID, INSTANCE_STEP_ID) 
	REFERENCES CSR.AUTOMATED_IMPORT_INSTANCE_STEP (APP_SID, AUTO_IMPORT_INSTANCE_STEP_ID)
;


ALTER TABLE CSR.USER_PROFILE_PANEL ADD CONSTRAINT FK_USER_PROFILE_PANEL_PLUGIN
    FOREIGN KEY (PLUGIN_ID, PLUGIN_TYPE_ID)
    REFERENCES CSR.PLUGIN(PLUGIN_ID, PLUGIN_TYPE_ID)
;



ALTER TABLE CSR.USER_RELATIONSHIP ADD CONSTRAINT FK_USER_REL_CHILD_USER
    FOREIGN KEY (APP_SID, CHILD_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_RELATIONSHIP ADD CONSTRAINT FK_USER_REL_PARENT_USER
    FOREIGN KEY (APP_SID, PARENT_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_RELATIONSHIP ADD CONSTRAINT FK_USERS_REL_REL_TYPE
    FOREIGN KEY (APP_SID, USER_RELATIONSHIP_TYPE_ID)
    REFERENCES CSR.USER_RELATIONSHIP_TYPE(APP_SID, USER_RELATIONSHIP_TYPE_ID)
;



ALTER TABLE CSR.USER_SETTING_ENTRY ADD CONSTRAINT FK_USR_SET_ENTRY_TAB_PORTLET
    FOREIGN KEY (APP_SID, TAB_PORTLET_ID)
    REFERENCES CSR.TAB_PORTLET(APP_SID, TAB_PORTLET_ID)
;

ALTER TABLE CSR.USER_SETTING_ENTRY ADD CONSTRAINT FK_USR_SET_ENTRY_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_SETTING_ENTRY ADD CONSTRAINT FK_USR_SET_ENTRY_USR_SET
    FOREIGN KEY (CATEGORY, SETTING)
    REFERENCES CSR.USER_SETTING(CATEGORY, SETTING)
;



ALTER TABLE CSR.USER_TRAINING ADD CONSTRAINT FK_USER_TRAINING_CSR_USER
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.USER_TRAINING ADD CONSTRAINT FK_USER_TRAINING_FLOW_ITEM
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID)
;

ALTER TABLE CSR.USER_TRAINING ADD CONSTRAINT FK_USER_TRAINING_SCHEDULE
    FOREIGN KEY (APP_SID, COURSE_SCHEDULE_ID)
    REFERENCES CSR.COURSE_SCHEDULE(APP_SID, COURSE_SCHEDULE_ID)
;



ALTER TABLE CSR.UTIL_SCRIPT_PARAM ADD CONSTRAINT FK_UTIL_SCRIPT_PARAM_ID
    FOREIGN KEY (UTIL_SCRIPT_ID)
    REFERENCES CSR.UTIL_SCRIPT(UTIL_SCRIPT_ID)
;



ALTER TABLE CSR.UTIL_SCRIPT_RUN_LOG ADD CONSTRAINT FK_UTIL_SCRIPT_RUN_LOG_CLIENT
    FOREIGN KEY (APP_SID, CLIENT_UTIL_SCRIPT_ID)
    REFERENCES CSR.CLIENT_UTIL_SCRIPT(APP_SID, CLIENT_UTIL_SCRIPT_ID)
;

ALTER TABLE CSR.UTIL_SCRIPT_RUN_LOG ADD CONSTRAINT FK_UTIL_SCRIPT_RUN_SCRIPT_ID
    FOREIGN KEY (UTIL_SCRIPT_ID)
    REFERENCES CSR.UTIL_SCRIPT(UTIL_SCRIPT_ID)
;

ALTER TABLE CSR.UTIL_SCRIPT_RUN_LOG ADD CONSTRAINT FK_UTIL_SCRIPT_RUN_USER
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;



ALTER TABLE CSR.UTILITY_CONTRACT ADD CONSTRAINT RefCSR_USER1365
    FOREIGN KEY (APP_SID, CREATED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.UTILITY_CONTRACT ADD CONSTRAINT RefCUSTOMER1131
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.UTILITY_CONTRACT ADD CONSTRAINT RefUTILITY_SUPPLIER1130
    FOREIGN KEY (APP_SID, UTILITY_SUPPLIER_ID)
    REFERENCES CSR.UTILITY_SUPPLIER(APP_SID, UTILITY_SUPPLIER_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.UTILITY_INVOICE ADD CONSTRAINT FK_INV_CONS_MEASURE
    FOREIGN KEY (APP_SID, CONSUMPTION_MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.UTILITY_INVOICE ADD CONSTRAINT FK_INV_CONSUMPTION_CONV
    FOREIGN KEY (APP_SID, CONSUMPTION_CONV_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.UTILITY_INVOICE ADD CONSTRAINT FK_INV_COST_CONV
    FOREIGN KEY (APP_SID, COST_CONV_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.UTILITY_INVOICE ADD CONSTRAINT FK_INV_COST_MEASURE
    FOREIGN KEY (APP_SID, COST_MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.UTILITY_INVOICE ADD CONSTRAINT RefCUSTOMER1133
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.UTILITY_INVOICE ADD CONSTRAINT RefUTILITY_CONTRACT1132
    FOREIGN KEY (APP_SID, UTILITY_CONTRACT_ID)
    REFERENCES CSR.UTILITY_CONTRACT(APP_SID, UTILITY_CONTRACT_ID) ON DELETE CASCADE
;



ALTER TABLE CSR.UTILITY_INVOICE_FIELD ADD CONSTRAINT FK_UTIL_INV_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.UTILITY_INVOICE_FIELD ADD CONSTRAINT FK_UTIL_INV_MEASURE
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;



ALTER TABLE CSR.UTILITY_INVOICE_FIELD_VAL ADD CONSTRAINT FK_UTIL_INV_VAL_FIELD
    FOREIGN KEY (APP_SID, FIELD_ID)
    REFERENCES CSR.UTILITY_INVOICE_FIELD(APP_SID, FIELD_ID)
;

ALTER TABLE CSR.UTILITY_INVOICE_FIELD_VAL ADD CONSTRAINT FK_UTIL_INV_VAL_INV
    FOREIGN KEY (APP_SID, UTILITY_INVOICE_ID)
    REFERENCES CSR.UTILITY_INVOICE(APP_SID, UTILITY_INVOICE_ID)
;

ALTER TABLE CSR.UTILITY_INVOICE_FIELD_VAL ADD CONSTRAINT FK_UTIL_INV_VAL_MCONV
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;



ALTER TABLE CSR.UTILITY_SUPPLIER ADD CONSTRAINT RefCUSTOMER1134
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.VAL ADD CONSTRAINT FK_VAL_CSR_USER
    FOREIGN KEY (APP_SID, CHANGED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.VAL ADD CONSTRAINT FK_VAL_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.VAL ADD CONSTRAINT RefMEASURE_CONVERSION5
    FOREIGN KEY (APP_SID, ENTRY_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.VAL ADD CONSTRAINT RefREGION1232
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.VAL ADD CONSTRAINT RefSOURCE_TYPE205
    FOREIGN KEY (SOURCE_TYPE_ID)
    REFERENCES CSR.SOURCE_TYPE(SOURCE_TYPE_ID)
;



ALTER TABLE CSR.VAL_CHANGE ADD CONSTRAINT RefIND961
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.VAL_CHANGE ADD CONSTRAINT RefMEASURE_CONVERSION66
    FOREIGN KEY (APP_SID, ENTRY_MEASURE_CONVERSION_ID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID)
;

ALTER TABLE CSR.VAL_CHANGE ADD CONSTRAINT RefREGION1233
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.VAL_CHANGE_LOG ADD CONSTRAINT FK_VAL_CHANGE_LOG_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;



ALTER TABLE CSR.VAL_FILE ADD CONSTRAINT RefFILE_UPLOAD740
    FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
    REFERENCES CSR.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CSR.VAL_FILE ADD CONSTRAINT RefVAL741
    FOREIGN KEY (APP_SID, VAL_ID)
    REFERENCES CSR.VAL(APP_SID, VAL_ID)
;



ALTER TABLE CSR.VAL_NOTE ADD CONSTRAINT RefCSR_USER40
    FOREIGN KEY (APP_SID, ENTERED_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE CSR.VAL_NOTE ADD CONSTRAINT RefIND39
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE CSR.VAL_NOTE ADD CONSTRAINT RefREGION1234
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;



ALTER TABLE CSR.VAR_EXPL ADD CONSTRAINT FK_VAR_EXPL_CUS
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.VAR_EXPL ADD CONSTRAINT FK_VAR_EXPL_VAR_EXPL_GROUP
    FOREIGN KEY (APP_SID, VAR_EXPL_GROUP_ID)
    REFERENCES CSR.VAR_EXPL_GROUP(APP_SID, VAR_EXPL_GROUP_ID)
;



ALTER TABLE CSR.VAR_EXPL_GROUP ADD CONSTRAINT FK_VAR_EXPL_GROUP_CUST
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.WORKSHEET ADD CONSTRAINT FK_WST_WS
    FOREIGN KEY (WORKSHEET_TYPE_ID)
    REFERENCES CSR.WORKSHEET_TYPE(WORKSHEET_TYPE_ID)
;

ALTER TABLE CSR.WORKSHEET ADD CONSTRAINT RefCUSTOMER3297
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.WORKSHEET_COLUMN ADD CONSTRAINT FK_WS_WSC
    FOREIGN KEY (APP_SID, WORKSHEET_ID)
    REFERENCES CSR.WORKSHEET(APP_SID, WORKSHEET_ID)
;

ALTER TABLE CSR.WORKSHEET_COLUMN ADD CONSTRAINT FK_WSCT_WSC
    FOREIGN KEY (COLUMN_TYPE_ID)
    REFERENCES CSR.WORKSHEET_COLUMN_TYPE(COLUMN_TYPE_ID)
;



ALTER TABLE CSR.WORKSHEET_COLUMN_TYPE ADD CONSTRAINT FK_WCVM_WSCT
    FOREIGN KEY (VALUE_MAPPER_ID)
    REFERENCES CSR.WORKSHEET_VALUE_MAPPER(VALUE_MAPPER_ID)
;

ALTER TABLE CSR.WORKSHEET_COLUMN_TYPE ADD CONSTRAINT FK_WST_WSCT
    FOREIGN KEY (WORKSHEET_TYPE_ID)
    REFERENCES CSR.WORKSHEET_TYPE(WORKSHEET_TYPE_ID)
;



ALTER TABLE CSR.WORKSHEET_COLUMN_VALUE_MAP ADD CONSTRAINT FK_WSC_WSCVM
    FOREIGN KEY (APP_SID, WORKSHEET_ID, COLUMN_TYPE_ID)
    REFERENCES CSR.WORKSHEET_COLUMN(APP_SID, WORKSHEET_ID, COLUMN_TYPE_ID)
;

ALTER TABLE CSR.WORKSHEET_COLUMN_VALUE_MAP ADD CONSTRAINT FK_WSVMV_WSCVM
    FOREIGN KEY (APP_SID, VALUE_MAP_ID, COLUMN_TYPE_ID, VALUE_MAPPER_ID)
    REFERENCES CSR.WORKSHEET_VALUE_MAP_VALUE(APP_SID, VALUE_MAP_ID, COLUMN_TYPE_ID, VALUE_MAPPER_ID)
;



ALTER TABLE CSR.WORKSHEET_ROW ADD CONSTRAINT FK_WS_WSR
    FOREIGN KEY (APP_SID, WORKSHEET_ID)
    REFERENCES CSR.WORKSHEET(APP_SID, WORKSHEET_ID)
;



ALTER TABLE CSR.WORKSHEET_VALUE_MAP ADD CONSTRAINT FK_WSVM_WSVM
    FOREIGN KEY (VALUE_MAPPER_ID)
    REFERENCES CSR.WORKSHEET_VALUE_MAPPER(VALUE_MAPPER_ID)
;

ALTER TABLE CSR.WORKSHEET_VALUE_MAP ADD CONSTRAINT RefCUSTOMER3305
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;



ALTER TABLE CSR.WORKSHEET_VALUE_MAP_VALUE ADD CONSTRAINT FK_WSCT_WSVMV
    FOREIGN KEY (COLUMN_TYPE_ID)
    REFERENCES CSR.WORKSHEET_COLUMN_TYPE(COLUMN_TYPE_ID)
;

ALTER TABLE CSR.WORKSHEET_VALUE_MAP_VALUE ADD CONSTRAINT FK_WSVM_WSVMV
    FOREIGN KEY (APP_SID, VALUE_MAPPER_ID, VALUE_MAP_ID)
    REFERENCES CSR.WORKSHEET_VALUE_MAP(APP_SID, VALUE_MAPPER_ID, VALUE_MAP_ID)
;

ALTER TABLE CSR.SCORE_TYPE_AUDIT_TYPE ADD CONSTRAINT FK_SCORE_TYP_AUD_TYP_AUD_TYP
	FOREIGN KEY (APP_SID, INTERNAL_AUDIT_TYPE_ID)
	REFERENCES CSR.INTERNAL_AUDIT_TYPE (APP_SID, INTERNAL_AUDIT_TYPE_ID)
;

ALTER TABLE CSR.SCORE_TYPE_AUDIT_TYPE ADD CONSTRAINT FK_SCORE_TYP_AUD_TYP_SCORE_TYP
	FOREIGN KEY (APP_SID, SCORE_TYPE_ID)
	REFERENCES CSR.SCORE_TYPE (APP_SID, SCORE_TYPE_ID)
;

ALTER TABLE CSR.COMPLIANCE_ROLLOUT_REGIONS ADD CONSTRAINT FK_COMP_ROLLOUT_REG_COMP_ITEM
	FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
	REFERENCES CSR.COMPLIANCE_ITEM (APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMPLIANCE_ROLLOUT_REGIONS ADD CONSTRAINT FK_COMP_ROLLOUT_REGIONS_REGION
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID)
;

ALTER TABLE CSR.EXCEL_EXPORT_OPTIONS_TAG_GROUP ADD CONSTRAINT FK_EE_OPTIONS_TG_EE_OPTIONS
	FOREIGN KEY (APP_SID, DATAVIEW_SID)
	REFERENCES CSR.EXCEL_EXPORT_OPTIONS(APP_SID, DATAVIEW_SID)
;

ALTER TABLE CSR.EXCEL_EXPORT_OPTIONS_TAG_GROUP ADD CONSTRAINT FK_EE_OPTIONS_TG_TAG_GROUP
	FOREIGN KEY (APP_SID, TAG_GROUP_ID)
	REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE csr.compliance_enhesa_map ADD CONSTRAINT fk_compliance_ehesa_mp_it_par
	FOREIGN KEY (app_sid, enhesa_country, enhesa_region)
	REFERENCES csr.compliance_enhesa_map (app_sid, enhesa_country, enhesa_region);

ALTER TABLE csr.compliance_enhesa_map_item ADD CONSTRAINT fk_compliance_enhesa_mp_it_r
	FOREIGN KEY (app_sid, region_sid)
	REFERENCES csr.region (app_sid, region_sid);

ALTER TABLE CSR.DATA_BUCKET ADD CONSTRAINT FK_DATA_BUCKET_ACTIVE_INSTANCE
	FOREIGN KEY (APP_SID, DATA_BUCKET_SID, ACTIVE_INSTANCE_ID)
	REFERENCES CSR.DATA_BUCKET_INSTANCE(APP_SID, DATA_BUCKET_SID, DATA_BUCKET_INSTANCE_ID);

ALTER TABLE CSR.DATA_BUCKET_INSTANCE ADD CONSTRAINT FK_DATA_BUCKET_INSTANCE_BUCKET
	FOREIGN KEY (APP_SID, DATA_BUCKET_SID)
	REFERENCES CSR.DATA_BUCKET(APP_SID, DATA_BUCKET_SID);

ALTER TABLE CSR.DATA_BUCKET_VAL ADD CONSTRAINT FK_DATA_BUCKET_VAL_INSTANCE
	FOREIGN KEY (APP_SID, DATA_BUCKET_SID, DATA_BUCKET_INSTANCE_ID)
	REFERENCES CSR.DATA_BUCKET_INSTANCE(APP_SID, DATA_BUCKET_SID, DATA_BUCKET_INSTANCE_ID);

ALTER TABLE CSR.DATA_BUCKET_VAL ADD CONSTRAINT FK_DATA_BUCKET_VAL_IND
	FOREIGN KEY (APP_SID, IND_SID)
	REFERENCES CSR.IND(APP_SID, IND_SID);

ALTER TABLE CSR.DATA_BUCKET_VAL ADD CONSTRAINT FK_DATA_BUCKET_VAL_REGION
	FOREIGN KEY (APP_SID, REGION_SID)
	REFERENCES CSR.REGION(APP_SID, REGION_SID);

ALTER TABLE CSR.DATA_BUCKET_SOURCE_DETAIL ADD CONSTRAINT DATA_BUCKET_SOURCE_DTL_INSTNC
	FOREIGN KEY (APP_SID, DATA_BUCKET_SID, DATA_BUCKET_INSTANCE_ID)
	REFERENCES CSR.DATA_BUCKET_INSTANCE(APP_SID, DATA_BUCKET_SID, DATA_BUCKET_INSTANCE_ID);

ALTER TABLE CSR.BATCH_JOB_DATA_BUCKET_AGG_IND ADD CONSTRAINT FK_BJ_DTA_BCKT_AGG_IND_JB_ID
	FOREIGN KEY (APP_SID, BATCH_JOB_ID)
	REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID);

ALTER TABLE CSR.BATCH_JOB_DATA_BUCKET_AGG_IND ADD CONSTRAINT FK_BJ_DTA_BCKT_AGG_IND_BCKT_SID
	FOREIGN KEY (APP_SID, DATA_BUCKET_SID)
	REFERENCES CSR.DATA_BUCKET(APP_SID, DATA_BUCKET_SID);

ALTER TABLE CSR.BATCH_JOB_DATA_BUCKET_AGG_IND ADD CONSTRAINT FK_BJ_DTA_BCKT_AGG_IND_GRP_ID
	FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
	REFERENCES CSR.AGGREGATE_IND_GROUP(APP_SID, AGGREGATE_IND_GROUP_ID);

ALTER TABLE CSR.AGGREGATE_IND_GROUP ADD CONSTRAINT FK_AGGREGATE_IND_GRP_DATA_BCKT
	FOREIGN KEY (APP_SID, DATA_BUCKET_SID)
	REFERENCES CSR.DATA_BUCKET(APP_SID, DATA_BUCKET_SID);

ALTER TABLE CSR.AGG_IND_DATA_BUCKET_PENDING_JOB ADD CONSTRAINT FK_AGG_IND_DT_BCKT_PNDNG_JB_JOB
	FOREIGN KEY (APP_SID, BATCH_JOB_ID)
	REFERENCES CSR.BATCH_JOB(APP_SID, BATCH_JOB_ID);

ALTER TABLE CSR.USER_ANONYMISATION_BATCH_JOB ADD CONSTRAINT FK_USER_USERANONBATJOB
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);

ALTER TABLE CSR.AGG_IND_DATA_BUCKET_PENDING_JOB ADD CONSTRAINT FK_AGG_IND_DT_BCKT_PNDNG_JB_BCKET
	FOREIGN KEY (APP_SID, DATA_BUCKET_SID)
	REFERENCES CSR.DATA_BUCKET(APP_SID, DATA_BUCKET_SID);

ALTER TABLE CSR.EXTERNAL_TARGET_PROFILE ADD CONSTRAINT FK_EXT_TARGET_PROF_TYPE
	FOREIGN KEY (PROFILE_TYPE_ID)
	REFERENCES CSR.EXTERNAL_TARGET_PROFILE_TYPE (PROFILE_TYPE_ID);

ALTER TABLE CSR.EXTERNAL_TARGET_PROFILE ADD CONSTRAINT FK_CREDENTIAL_ID
	FOREIGN KEY (APP_SID, CREDENTIAL_PROFILE_ID)
	REFERENCES CSR.CREDENTIAL_MANAGEMENT (APP_SID, CREDENTIAL_ID);

ALTER TABLE CSR.CREDENTIAL_MANAGEMENT ADD CONSTRAINT FK_AUTH_TYPE_ID
	FOREIGN KEY (AUTH_TYPE_ID)
	REFERENCES CSR.AUTHENTICATION_TYPE(AUTH_TYPE_ID);
	
ALTER TABLE CSR.CREDENTIAL_MANAGEMENT ADD CONSTRAINT FK_AUTH_SCOPE_ID
	FOREIGN KEY (AUTH_SCOPE_ID)
	REFERENCES CSR.AUTHENTICATION_SCOPE(AUTH_SCOPE_ID);

ALTER TABLE CSR.AUTHENTICATION_SCOPE ADD CONSTRAINT FK_AUTH_SCOPE_AUTH_TYPE_ID
	FOREIGN KEY (AUTH_TYPE_ID)
	REFERENCES CSR.AUTHENTICATION_TYPE(AUTH_TYPE_ID);

ALTER TABLE csr.failed_notification ADD CONSTRAINT fk_failed_notification_notif_type_id
    FOREIGN KEY (app_sid, notification_type_id)
    REFERENCES csr.notification_type(app_sid, notification_type_id);

--
-- EXTERNAL TABLE
--
CREATE TABLE CSR.EXT_METER_DATA (
	CONTAINER_ID	VARCHAR2(1024),
	JOB_ID			VARCHAR2(1024),
	BUCKET_NAME		VARCHAR2(256),
	START_DTM		DATE,
	SERIAL_ID		VARCHAR2(1024),
	INPUT_KEY		VARCHAR2(256),
	UOM				VARCHAR2(256),
	VAL				NUMBER(24, 10)
)
ORGANIZATION EXTERNAL 
(
	TYPE ORACLE_LOADER 
	DEFAULT DIRECTORY DIR_EXT_METER_DATA 
	ACCESS PARAMETERS 
	( 
		RECORDS DELIMITED BY NEWLINE
		PREPROCESSOR DIR_SCRIPTS:'concatAllFiles.sh'
		FIELDS TERMINATED BY ','
		OPTIONALLY ENCLOSED BY '"'
		MISSING FIELD VALUES ARE NULL 
		(
			CONTAINER_ID,
			JOB_ID,
			BUCKET_NAME,
			START_DTM DATE 'YYYY-MM-DD HH24:MI:SS',
			SERIAL_ID,
			INPUT_KEY,
			UOM,
			VAL
		) 
	)
	LOCATION('path.txt') 
)
REJECT LIMIT UNLIMITED;

--About the note below, I don't understand why we need or want an autogeneration tool pointed to our local db. Any changes added into create_schema should be reviewed 
--before getting merged anyway, so I don't get what the problem with manually editing the file is assuming we do it in a sensible way in terms of the order.

-- IF YOU ARE THINKING ABOUT PASTING SHIT DOWN HERE YOU'VE PROBABLY GOT THE WRONG IDEA
-- USE csr/db/utils/makeCreateSchema.sql AGAINST A DATABASE CONTAINING YOUR CHANGES
-- AND IT WILL PUT THINGS IN THE RIGHT PLACE FOR YOU IN THE FILE IT GENERATES

-- please make sure this file ends with a new line (the same goes for all source code -- this avoids merge issues)
