create OR REPLACE PACKAGE CSR.Csr_Data_Pkg AS

-- standard constraint violated exception
CHILD_RECORD_FOUND EXCEPTION;
PRAGMA EXCEPTION_INIT(CHILD_RECORD_FOUND, -02292);

-- errors
ERR_PERIOD_UNRECOGNISED				CONSTANT NUMBER := -20310;
PERIOD_UNRECOGNISED EXCEPTION;
PRAGMA EXCEPTION_INIT(PERIOD_UNRECOGNISED, -20310);

ERR_OBJECT_IS_MOUNT_POINT			CONSTANT NUMBER := -20311;
OBJECT_IS_MOUNT_POINT EXCEPTION;
PRAGMA EXCEPTION_INIT(OBJECT_IS_MOUNT_POINT, -20311);

ERR_OBJECT_IN_USE					CONSTANT NUMBER := -20312;
OBJECT_IN_USE EXCEPTION;
PRAGMA EXCEPTION_INIT(OBJECT_IN_USE, -20312);

ERR_OBJECT_ALREADY_ALLOCATED		CONSTANT NUMBER := -20313;
OBJECT_ALREADY_ALLOCATED EXCEPTION;
PRAGMA EXCEPTION_INIT(OBJECT_ALREADY_ALLOCATED, -20313);

ERR_CIRCULAR_REFERENCE				CONSTANT NUMBER := -20314;
CIRCULAR_REFERENCE EXCEPTION;
PRAGMA EXCEPTION_INIT(CIRCULAR_REFERENCE, -20314);

ERR_JOB_NOT_FOUND					CONSTANT NUMBER := -20315;
JOB_NOT_FOUND EXCEPTION;
PRAGMA EXCEPTION_INIT(JOB_NOT_FOUND, -20315);

ERR_JOB_ALREADY_RUNNING				CONSTANT NUMBER := -20316;
JOB_ALREADY_RUNNING EXCEPTION;
PRAGMA EXCEPTION_INIT(JOB_ALREADY_RUNNING, -20316);

ERR_WRONG_IND_TYPE_FOR_CALC 		CONSTANT NUMBER := -20317;
WRONG_IND_TYPE_FOR_CALC EXCEPTION;
PRAGMA EXCEPTION_INIT(WRONG_IND_TYPE_FOR_CALC, -20317);

ERR_NOT_ALLOWED_WRITE				CONSTANT NUMBER := -20317;
NOT_ALLOWED_WRITE EXCEPTION;
PRAGMA EXCEPTION_INIT(NOT_ALLOWED_WRITE, -20317);

ERR_VALUES_NOT_COMPLETED			CONSTANT NUMBER := -20318;
VALUES_NOT_COMPLETED EXCEPTION;
PRAGMA EXCEPTION_INIT(VALUES_NOT_COMPLETED, -20318);

ERR_ALREADY_SUBMITTED				CONSTANT NUMBER := -20319;
ALREADY_SUBMITTED EXCEPTION;
PRAGMA EXCEPTION_INIT(ALREADY_SUBMITTED, -20319);

ERR_NOTES_NOT_COMPLETED				CONSTANT NUMBER := -20320;
NOTES_NOT_COMPLETED EXCEPTION;
PRAGMA EXCEPTION_INIT(NOTES_NOT_COMPLETED, -20320);

ERR_PREVIOUS_PARENT_TRASHED			CONSTANT NUMBER := -20321;
PREVIOUS_PARENT_TRASHED EXCEPTION;
PRAGMA EXCEPTION_INIT(PREVIOUS_PARENT_TRASHED, -20321);

ERR_ALERT_ALREADY_RAISED			CONSTANT NUMBER := -20322;
ALERT_ALREADY_RAISED EXCEPTION;
PRAGMA EXCEPTION_INIT(ALERT_ALREADY_RAISED, -20322);

ERR_ALERT_TEMPLATE_NOT_FOUND		CONSTANT NUMBER := -20323;
ALERT_TEMPLATE_NOT_FOUND EXCEPTION;
PRAGMA EXCEPTION_INIT(ALERT_TEMPLATE_NOT_FOUND, -20323);

ERR_SHEET_OVERLAPS					CONSTANT NUMBER := -20324;
SHEET_OVERLAPS EXCEPTION;
PRAGMA EXCEPTION_INIT(SHEET_OVERLAPS, -20324);

ERR_SUBMISSION_BLOCKED				CONSTANT NUMBER := -20325;
SUBMISSION_BLOCKED EXCEPTION;
PRAGMA EXCEPTION_INIT(SUBMISSION_BLOCKED, -20325);

ERR_CANNOT_SUBDIVIDE_REGION				CONSTANT NUMBER := -20326;
CANNOT_SUBDIVIDE_REGION EXCEPTION;
PRAGMA EXCEPTION_INIT(CANNOT_SUBDIVIDE_REGION, -20326);

ERR_INVALID_PROGRESSION_ID				CONSTANT NUMBER := -20327;
BAD_INVALID_PROGRESSION_ID EXCEPTION;
PRAGMA EXCEPTION_INIT(BAD_INVALID_PROGRESSION_ID, -20327);

ERR_INVALID_ISSUE_ID				CONSTANT NUMBER := -20328;
INVALID_ISSUE_ID EXCEPTION;
PRAGMA EXCEPTION_INIT(INVALID_ISSUE_ID, -20328);

ERR_ARRAY_SIZE_MISMATCH				CONSTANT NUMBER := -20329;
ARRAY_SIZE_MISMATCH EXCEPTION;
PRAGMA EXCEPTION_INIT(ARRAY_SIZE_MISMATCH, -20329);

ERR_PARENT_IN_PRIMARY_TREE				CONSTANT NUMBER := -20330;
PARENT_IN_PRIMARY_TREE EXCEPTION;
PRAGMA EXCEPTION_INIT(PARENT_IN_PRIMARY_TREE, -20330);

ERR_SHEETS_EXIST				CONSTANT NUMBER := -20331;
SHEETS_EXIST EXCEPTION;
PRAGMA EXCEPTION_INIT(SHEETS_EXIST, -20331);

ERR_METER_READING_TOO_LOW				CONSTANT NUMBER := -20332;
METER_READING_TOO_LOW EXCEPTION;
PRAGMA EXCEPTION_INIT(METER_READING_TOO_LOW, -20332);

ERR_METER_READING_TOO_HIGH				CONSTANT NUMBER := -20333;
METER_READING_TOO_HIGH EXCEPTION;
PRAGMA EXCEPTION_INIT(METER_READING_TOO_HIGH, -20333);

ERR_METER_PERIOD_OVERLAP				CONSTANT NUMBER := -20334;
METER_PERIOD_OVERLAP EXCEPTION;
PRAGMA EXCEPTION_INIT(METER_PERIOD_OVERLAP, -20334);

ERR_CANT_MOVE_REGION_GEO				CONSTANT NUMBER := -20335;
REGION_CANT_MOVE_REGION_GEO EXCEPTION;
PRAGMA EXCEPTION_INIT(REGION_CANT_MOVE_REGION_GEO, -20335);

ERR_VALUES_EXIST						CONSTANT NUMBER := -20336;
VALUES_EXIST EXCEPTION;
PRAGMA EXCEPTION_INIT(VALUES_EXIST, -20336);

ERR_NOT_UNDER_REGION_TREE				CONSTANT NUMBER := -20337;
NOT_UNDER_REGION_TREE EXCEPTION;
PRAGMA EXCEPTION_INIT(NOT_UNDER_REGION_TREE, -20337);

ERR_PARENT_MUST_BE_METER				CONSTANT NUMBER := -20338;
PARENT_MUST_BE_METER EXCEPTION;
PRAGMA EXCEPTION_INIT(PARENT_MUST_BE_METER, -20338);

ERR_DELEGATION_USED_AS_TPL				CONSTANT NUMBER := -20339;
DELEGATION_USED_AS_TPL EXCEPTION;
PRAGMA EXCEPTION_INIT(DELEGATION_USED_AS_TPL, -20339);

ERR_CANT_MODIFY_SYSTEM_IND				CONSTANT NUMBER := -20340;
CANT_MODIFY_SYSTEM_IND EXCEPTION;
PRAGMA EXCEPTION_INIT(CANT_MODIFY_SYSTEM_IND, -20340);

ERR_LOGISTICS_COUNTRY_INVALID			CONSTANT NUMBER := -20341;
LOGISTICS_COUNTRY_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(LOGISTICS_COUNTRY_INVALID, -20341);

ERR_FLOW_HAS_NO_DEFAULT_STATE					CONSTANT NUMBER := -20342;
FLOW_HAS_NO_DEFAULT_STATE EXCEPTION;
PRAGMA EXCEPTION_INIT(FLOW_HAS_NO_DEFAULT_STATE, -20342);

ERR_STD_MEASURE_CONV_CHANGE				CONSTANT NUMBER := -20343;
STD_MEASURE_CONV_CHANGE EXCEPTION;
PRAGMA EXCEPTION_INIT(STD_MEASURE_CONV_CHANGE, -20343);

ERR_FLOW_STATE_CHANGE_FAILED			CONSTANT NUMBER := -20344;
FLOW_STATE_CHANGE_FAILED EXCEPTION;
PRAGMA EXCEPTION_INIT(FLOW_STATE_CHANGE_FAILED, -20344);

ERR_OBJECT_ALREADY_EXISTS				CONSTANT NUMBER := -20345;
OBJECT_ALREADY_EXISTS EXCEPTION;
PRAGMA EXCEPTION_INIT(OBJECT_ALREADY_EXISTS, -20345);

ERR_METER_PERIOD_INVALID				CONSTANT NUMBER := -20347;
METER_PERIOD_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(METER_PERIOD_INVALID, -20347);

ERR_CONCURRENCY_CONFLICT				CONSTANT NUMBER := -20348;
CONCURRENCY_CONFLICT EXCEPTION;
PRAGMA EXCEPTION_INIT(CONCURRENCY_CONFLICT, -20348);

ERR_METER_REALTIME_IMPORT				CONSTANT NUMBER := -20349;
METER_REALTIME_IMPORT EXCEPTION;
PRAGMA EXCEPTION_INIT(METER_REALTIME_IMPORT, -20349);

ERR_METER_PERIOD_INCOMPLETE				CONSTANT NUMBER := -20350;
METER_PERIOD_INCOMPLETE EXCEPTION;
PRAGMA EXCEPTION_INIT(METER_PERIOD_INCOMPLETE, -20350);

ERR_CANT_MOVE_REGION_PRI2SEC			CONSTANT NUMBER := -20351;
CANT_MOVE_REGION_PRI2SEC EXCEPTION;
PRAGMA EXCEPTION_INIT(CANT_MOVE_REGION_PRI2SEC, -20351);

ERR_MEASURE_CONV_NOT_FOUND			CONSTANT NUMBER := -20352;
MEASURE_CONV_NOT_FOUND EXCEPTION;
PRAGMA EXCEPTION_INIT(MEASURE_CONV_NOT_FOUND, -20352);

ERR_DELEG_GRID_HELPER_FAIL			CONSTANT NUMBER := -20353;
DELEG_GRID_HELPER_FAIL EXCEPTION;
PRAGMA EXCEPTION_INIT(DELEG_GRID_HELPER_FAIL, -20353);

ERR_DELEG_FROM_DELEG_PLAN			CONSTANT NUMBER := -20354;
DELEG_FROM_DELEG_PLAN EXCEPTION;
PRAGMA EXCEPTION_INIT(DELEG_FROM_DELEG_PLAN, -20354);

ERR_DELEG_HAS_VALUES				CONSTANT NUMBER := -20355;
DELEG_HAS_VALUES EXCEPTION;
PRAGMA EXCEPTION_INIT(DELEG_HAS_VALUES, -20355);

ERR_CALC_DEPENDS_ON_REP_IND			CONSTANT NUMBER := -20356;
CALC_DEPENDS_ON_REP_IND EXCEPTION;
PRAGMA EXCEPTION_INIT(CALC_DEPENDS_ON_REP_IND, -20356);

ERR_READING_OVER_THRESHOLD			CONSTANT NUMBER := -20357;
READING_OVER_THRESHOLD EXCEPTION;
PRAGMA EXCEPTION_INIT(READING_OVER_THRESHOLD, -20357);

ERR_READING_UNDER_THRESHOLD			CONSTANT NUMBER := -20358;
READING_OVER_THRESHOLD EXCEPTION;
PRAGMA EXCEPTION_INIT(READING_OVER_THRESHOLD, -20358);

ERR_CHANGING_SYS_MANAGED_ROLE		CONSTANT NUMBER := -20359;
CHANGING_SYS_MANAGED_ROLE EXCEPTION;
PRAGMA EXCEPTION_INIT(CHANGING_SYS_MANAGED_ROLE, -20359);

ERR_CMS_ROW_SAVED					CONSTANT NUMBER := -20360;
CMS_ROW_SAVED EXCEPTION;
PRAGMA EXCEPTION_INIT(CMS_ROW_SAVED, -20360);

ERR_REGION_LINKS_TO_TRASH			CONSTANT NUMBER := -20361;
REGION_LINKS_TO_TRASH EXCEPTION;
PRAGMA EXCEPTION_INIT(REGION_LINKS_TO_TRASH, -20361);

ERR_CALC_USING_IND_IN_TRASH			CONSTANT NUMBER := -20362;
CALC_USING_IND_IN_TRASH EXCEPTION;
PRAGMA EXCEPTION_INIT(CALC_USING_IND_IN_TRASH, -20362);

ERR_UNIT_TEST_FAILED				CONSTANT NUMBER := -20363;
UNIT_TEST_FAILED EXCEPTION;
PRAGMA EXCEPTION_INIT(UNIT_TEST_FAILED, -20363);

ERR_DOC_ALREADY_LOCKED				CONSTANT NUMBER := -20364;
DOC_ALREADY_LOCKED EXCEPTION;
PRAGMA EXCEPTION_INIT(DOC_ALREADY_LOCKED, -20364);

ERR_MAX_OWNERSHIP_EXCEEDED			CONSTANT NUMBER := -20365;
MAX_OWNERSHIP_EXCEEDED EXCEPTION;
PRAGMA EXCEPTION_INIT(MAX_OWNERSHIP_EXCEEDED, -20365);

ERR_DELEG_HAS_CHILD_TPL				CONSTANT NUMBER := -20366;
DELEG_HAS_CHILD_TPL EXCEPTION;
PRAGMA EXCEPTION_INIT(DELEG_HAS_CHILD_TPL, -20366);

-- defined in aspen2.request_queue_pkg too
ERR_EXPIRED_REQUEST_ABORTED			CONSTANT NUMBER := -20367;
EXPIRED_REQUEST_ABORTED EXCEPTION;
PRAGMA EXCEPTION_INIT(EXPIRED_REQUEST_ABORTED, -20367);

ERR_DUP_SURVEY_LOOKUP_KEY			CONSTANT NUMBER := -20368;
DUPLICATE_SURVEY_LOOKUP_KEY EXCEPTION;
PRAGMA EXCEPTION_INIT(DUPLICATE_SURVEY_LOOKUP_KEY, -20368);

ERR_METER_PREVENT_FUTURE_DATES		CONSTANT NUMBER := -20369;
METER_PREVENT_FUTURE_DATES EXCEPTION;
PRAGMA EXCEPTION_INIT(METER_PREVENT_FUTURE_DATES, -20369);

ERR_OBJECT_IN_TRASH					CONSTANT NUMBER := -20370;
OBJECT_IN_TRASH EXCEPTION;
PRAGMA EXCEPTION_INIT(OBJECT_IN_TRASH, -20370);

ERR_METER_WITHIN_LOCK_PERIOD		CONSTANT NUMBER := -20371;
METER_WITHIN_LOCK_PERIOD EXCEPTION;
PRAGMA EXCEPTION_INIT(METER_WITHIN_LOCK_PERIOD, -20371);

ERR_CHAINED_LOGIN CONSTANT NUMBER := -20372;
CHAINED_LOGIN EXCEPTION;
PRAGMA EXCEPTION_INIT(CHAINED_LOGIN, -20372);


ERR_INVALID_BASELINE_COVER_START_DATE	CONSTANT NUMBER := -20380;
INVALID_BASELINE_COVER_START_DATE EXCEPTION;
PRAGMA EXCEPTION_INIT(INVALID_BASELINE_COVER_START_DATE, -20380);

ERR_INVALID_BASELINE_COVER_END_DATE		CONSTANT NUMBER := -20381;
INVALID_BASELINE_COVER_END_DATE EXCEPTION;
PRAGMA EXCEPTION_INIT(INVALID_BASELINE_COVER_END_DATE, -20381);

ERR_NULL_BASELINE_COVER_START_DATE		CONSTANT NUMBER := -20382;
NULL_BASELINE_COVER_START_DATE EXCEPTION;
PRAGMA EXCEPTION_INIT(NULL_BASELINE_COVER_START_DATE, -20382);

ERR_BASELINE_CONFIG_OVERLAP	CONSTANT NUMBER := -20383;
BASELINE_CONFIG_OVERLAP EXCEPTION;
PRAGMA EXCEPTION_INIT(BASELINE_CONFIG_OVERLAP, -20383);

ERR_BASELINE_CONFIG_COVER_START_OVERLAP	CONSTANT NUMBER := -20384;
BASELINE_CONFIG_OVERLAP EXCEPTION;
PRAGMA EXCEPTION_INIT(BASELINE_CONFIG_OVERLAP, -20384);

ERR_BASELINE_CONFIG_COVER_END_OVERLAP	CONSTANT NUMBER := -20385;
BASELINE_CONFIG_OVERLAP EXCEPTION;
PRAGMA EXCEPTION_INIT(BASELINE_CONFIG_OVERLAP, -20385);

ERR_INVALID_PARENT_TYPE CONSTANT NUMBER := -20524;
INVALID_PARENT_TYPE EXCEPTION;
PRAGMA EXCEPTION_INIT(INVALID_PARENT_TYPE, -20524);

ERR_AUDIT_TYPE_AUDIT_EXISTS CONSTANT NUMBER := -20525;
AUDIT_TYPE_AUDIT_EXISTS EXCEPTION;
PRAGMA EXCEPTION_INIT(AUDIT_TYPE_AUDIT_EXISTS, -20525);

ERR_EXCEEDS_MAX CONSTANT NUMBER := -20526;
EXCEEDS_MAX EXCEPTION;
PRAGMA EXCEPTION_INIT(EXCEEDS_MAX, -20526);

ERR_INVALID_TAG_APPLIES_CHANGE CONSTANT NUMBER := -20527;
INVALID_TAG_APPLIES_CHANGE EXCEPTION;
PRAGMA EXCEPTION_INIT(INVALID_TAG_APPLIES_CHANGE, -20527);

ERR_INVALID_REGION_TYPE CONSTANT NUMBER := -20528;
INVALID_REGION_TYPE EXCEPTION;
PRAGMA EXCEPTION_INIT(INVALID_REGION_TYPE, -20528);

ERR_NO_TENANT CONSTANT NUMBER := -20529;
NO_TENANT EXCEPTION;
PRAGMA EXCEPTION_INIT(NO_TENANT, -20529);

ERR_NO_LOOKUP_KEY CONSTANT NUMBER := -20530;
NO_LOOKUP_KEY EXCEPTION;
PRAGMA EXCEPTION_INIT(NO_LOOKUP_KEY, -20530);

ERR_NO_SITE_ID CONSTANT NUMBER := -20531;
NO_SITE_ID EXCEPTION;
PRAGMA EXCEPTION_INIT(NO_SITE_ID, -20531);

ERR_FEATURE_DISABLED CONSTANT NUMBER := -20532;
FEATURE_DISABLED EXCEPTION;
PRAGMA EXCEPTION_INIT(FEATURE_DISABLED, -20532);

ERR_NO_PERIOD_INTERVAL_ID CONSTANT NUMBER := -20533;
NO_PERIOD_INTERVAL_ID EXCEPTION;
PRAGMA EXCEPTION_INIT(NO_PERIOD_INTERVAL_ID, -20533);

ERR_INVALID_EST_OPTIONS CONSTANT NUMBER := -20534;
INVALID_EST_OPTIONS EXCEPTION;
PRAGMA EXCEPTION_INIT(INVALID_EST_OPTIONS, -20534);

ERR_LOOKUP_KEY_CONSTRAINT_VIOLATED		CONSTANT NUMBER := -20535;
DUPLICATE_LOOKUP_KEY		EXCEPTION;
PRAGMA EXCEPTION_INIT(DUPLICATE_LOOKUP_KEY, -20535);

ERR_SYSTEM_MANAGED_REGION_UPDATE	CONSTANT NUMBER := -20536;
SYSTEM_MANAGED_REGION_UPDATE		EXCEPTION;
PRAGMA EXCEPTION_INIT(SYSTEM_MANAGED_REGION_UPDATE, -20536);

ERR_DELETE_CLASS_RUNNING	CONSTANT NUMBER := -20537;
DELETE_CLASS_RUNNING		EXCEPTION;
PRAGMA EXCEPTION_INIT(DELETE_CLASS_RUNNING, -20537);

TYPE   T_VARCHAR_ARRAY  IS TABLE OF VARCHAR2(1024) INDEX BY PLS_INTEGER;
TYPE   T_NUMBER_ARRAY  IS TABLE OF NUMBER(10) INDEX BY PLS_INTEGER;

SUBTYPE T_VAL_NUMBER					IS VAL.VAL_NUMBER%TYPE;
SUBTYPE T_SHEET_ID						IS SHEET.SHEET_ID%TYPE;
SUBTYPE T_FLOW_STATE_ID					IS FLOW_STATE.FLOW_STATE_ID%TYPE;
SUBTYPE T_FLOW_STATE_TRANSITION_ID		IS FLOW_STATE_TRANSITION.FLOW_STATE_TRANSITION_ID%TYPE;
SUBTYPE T_FLOW_ITEM_ID					IS FLOW_ITEM.FLOW_ITEM_ID%TYPE;
SUBTYPE T_FLOW_COMMENT_TEXT				IS FLOW_STATE_LOG.COMMENT_TEXT%TYPE;
SUBTYPE T_LOOKUP_KEY					IS VARCHAR2(255);
SUBTYPE T_DOTNET_NUMBER					IS NUMBER(24,10);

-- indicator permission
PERMISSION_SET_TARGET			CONSTANT NUMBER(10) := 65536;
PERMISSION_SET_STATUS			CONSTANT NUMBER(10) := 131072;
PERMISSION_ALTER_SCHEMA			CONSTANT NUMBER(10) := 262144;
PERMISSION_OVERRIDE_DELEGATOR	CONSTANT NUMBER(10) := 524288;
-- csr user and csr group permissions
PERMISSION_LOGON_AS_USER		CONSTANT security_pkg.T_PERMISSION := 65536;
-- trash can permissions
PERMISSION_RESTORE_FROM_TRASH	CONSTANT security_pkg.T_PERMISSION := 65536;
-- teamroom permissions
PERMISSION_ADMINISTER_TEAMROOM	CONSTANT security_pkg.T_PERMISSION := 65536;
PERMISSION_STD_TEAMROOM_MEMBER	CONSTANT security_pkg.T_PERMISSION := 839;
-- quick survey permissions
PERMISSION_VIEW_ALL_RESULTS		CONSTANT security_pkg.T_PERMISSION := 65536;
PERMISSION_PUBLISH				CONSTANT security_pkg.T_PERMISSION := 131072;
-- corporate reporter permissions
PERMISSION_CHANGE_TITLE			CONSTANT security_pkg.T_PERMISSION := 65536;
PERMISSION_DOC_ADMIN			CONSTANT security_pkg.T_PERMISSION := 131072;
PERMISSION_EDIT_SECTION_MODULE	CONSTANT security_pkg.T_PERMISSION := 262144;

-- delegation permissions
/*
security_pkg.PERMISSION_READ
security_pkg.PERMISSION_WRITE
security_pkg.PERMISSION_READ_PERMISSIONS
security_pkg.PERMISSION_LIST_CONTENTS
security_pkg.PERMISSION_READ_ATTRIBUTES
security_pkg.PERMISSION_WRITE_ATTRIBUTES
security_pkg.PERMISSION_ADD_CONTENTS
*/
PERMISSION_STANDARD_DELEGEE		CONSTANT security_pkg.T_PERMISSION := 995; --
PERMISSION_STANDARD_DELEGATOR	CONSTANT security_pkg.T_PERMISSION := 263139; -- change to use 263143? includes PERMISSION_ALTER_SCHEMA -- HMM -- change so that users can delete?

DIVISIBILITY_AVERAGE 			CONSTANT NUMBER(1) := 0;
DIVISIBILITY_DIVISIBLE 			CONSTANT NUMBER(1) := 1;
DIVISIBILITY_LAST_PERIOD 		CONSTANT NUMBER(1) := 2;

IND_TYPE_NORMAL					CONSTANT NUMBER(1) := 0;
IND_TYPE_CALC					CONSTANT NUMBER(1) := 1;
IND_TYPE_STORED_CALC			CONSTANT NUMBER(1) := 2;
IND_TYPE_AGGREGATE				CONSTANT NUMBER(1) := 3;
IND_TYPE_REPORT_CALC			CONSTANT NUMBER(1) := 4;

DEP_ON_INDICATOR				CONSTANT NUMBER(10) := 1;
DEP_ON_CHILDREN					CONSTANT NUMBER(10) := 2;
DEP_ON_MODEL					CONSTANT NUMBER(10) := 3;

ACTION_WAITING					CONSTANT NUMBER(10) := 0;
ACTION_WAITING_WITH_MOD			CONSTANT NUMBER(10) := 10;
ACTION_SUBMITTED				CONSTANT NUMBER(10) := 1;
ACTION_SUBMITTED_WITH_MOD		CONSTANT NUMBER(10) := 11;
ACTION_ACCEPTED					CONSTANT NUMBER(10) := 3;
ACTION_ACCEPTED_WITH_MOD		CONSTANT NUMBER(10) := 6;
ACTION_MERGED					CONSTANT NUMBER(10) := 9;
ACTION_MERGED_WITH_MOD			CONSTANT NUMBER(10) := 12;
ACTION_RETURNED					CONSTANT NUMBER(10) := 2;
ACTION_RETURNED_WITH_MOD		CONSTANT NUMBER(10) := 13;
/* duff codes */
ACTION_AMENDED					CONSTANT NUMBER(10) := 4; -- unused
ACTION_REJECTED					CONSTANT NUMBER(10) := 5; -- unused
ACTION_PARTIALLY_SUBMITTED		CONSTANT NUMBER(10) := 7; -- unused
ACTION_PARTIALLY_AUTHORISED		CONSTANT NUMBER(10) := 8; -- unused

SOURCE_TYPE_DIRECT				CONSTANT NUMBER(10) := 0;
SOURCE_TYPE_DELEGATION			CONSTANT NUMBER(10) := 1;
SOURCE_TYPE_IMPORT				CONSTANT NUMBER(10) := 2;
SOURCE_TYPE_LOGGING				CONSTANT NUMBER(10) := 3;
SOURCE_TYPE_ESTIMATOR			CONSTANT NUMBER(10) := 4;
SOURCE_TYPE_AGGREGATOR			CONSTANT NUMBER(10) := 5;
SOURCE_TYPE_STORED_CALC			CONSTANT NUMBER(10) := 6;
SOURCE_TYPE_PENDING		    	CONSTANT NUMBER(10) := 7;
SOURCE_TYPE_METER		    	CONSTANT NUMBER(10) := 8;
SOURCE_TYPE_ROLLED_FORWARD		CONSTANT NUMBER(10) := 9;
SOURCE_TYPE_REALTIME_METER		CONSTANT NUMBER(10) := 10;
SOURCE_TYPE_QUICK_SURVEY		CONSTANT NUMBER(10) := 11;
SOURCE_TYPE_AGGREGATE_GRP		CONSTANT NUMBER(10) := 12;
SOURCE_TYPE_ENERGY_STAR			CONSTANT NUMBER(10) := 13;
SOURCE_TYPE_REGION_METRIC		CONSTANT NUMBER(10) := 14;
SOURCE_TYPE_AUTO_IMPORT			CONSTANT NUMBER(10) := 15;
SOURCE_TYPE_FIXED_CALC_RESULT	CONSTANT NUMBER(10) := 16;
SOURCE_TYPE_APPROVAL_DASHBOARD	CONSTANT NUMBER(10) := 17;
SOURCE_TYPE_CHAIN_PRD_MET_CALC	CONSTANT NUMBER(10) := 18;
SOURCE_TYPE_FILTERED			CONSTANT NUMBER(10) := 19; -- Not needed by the DB but here so you know not to use this id!
 
USER_LEVEL_DELEGATOR			CONSTANT NUMBER(10) := 1;
USER_LEVEL_DELEGEE				CONSTANT NUMBER(10) := 2;
USER_LEVEL_OTHER				CONSTANT NUMBER(10) := 3;
USER_LEVEL_BOTH					CONSTANT NUMBER(10) := 4;
                            	
SHEET_VALUE_ENTERED				CONSTANT NUMBER(10) := 0;
SHEET_VALUE_SUBMITTED			CONSTANT NUMBER(10) := 1;
SHEET_VALUE_ACCEPTED			CONSTANT NUMBER(10) := 2;
SHEET_VALUE_MERGED				CONSTANT NUMBER(10) := 3;
SHEET_VALUE_MODIFIED			CONSTANT NUMBER(10) := 4;
SHEET_VALUE_PROPAGATED			CONSTANT NUMBER(10) := 5;
                            	
CHANGE_TYPE_VALUE				CONSTANT NUMBER(10) := 1;
CHANGE_TYPE_FLAG				CONSTANT NUMBER(10) := 2;
CHANGE_TYPE_FILE				CONSTANT NUMBER(10) := 3;
CHANGE_TYPE_NOTE				CONSTANT NUMBER(10) := 4;
CHANGE_TYPE_ENTERED_VALUE		CONSTANT NUMBER(10) := 5;
CHANGE_TYPE_IS_NA				CONSTANT NUMBER(10) := 6;
                            	
-- don't forget to add these values to Credit360.Issues.IssueType as well
ISSUE_DATA_ENTRY				CONSTANT NUMBER(10) := 1;
ISSUE_SCHEDULED_TASK			CONSTANT NUMBER(10) := 4;
ISSUE_CMS						CONSTANT NUMBER(10) := 5;
ISSUE_METER_MONITOR				CONSTANT NUMBER(10) := 6;
ISSUE_METER_ALARM				CONSTANT NUMBER(10) := 7;
ISSUE_METER_RAW_DATA			CONSTANT NUMBER(10) := 8;
ISSUE_ENQUIRY					CONSTANT NUMBER(10) := 9;
ISSUE_BASIC						CONSTANT NUMBER(10) := 10;
ISSUE_NON_COMPLIANCE			CONSTANT NUMBER(10) := 11;
ISSUE_METER_DATA_SOURCE			CONSTANT NUMBER(10) := 12;
ISSUE_SUPPLIER					CONSTANT NUMBER(10) := 13;
ISSUE_INITIATIVE				CONSTANT NUMBER(10) := 14;
ISSUE_PROPERTY					CONSTANT NUMBER(10) := 15;
ISSUE_TEAMROOM					CONSTANT NUMBER(10) := 16;
ISSUE_SURVEY_ANSWER				CONSTANT NUMBER(10) := 17;
ISSUE_METER_MISSING_DATA		CONSTANT NUMBER(10) := 18;
ISSUE_METER						CONSTANT NUMBER(10) := 20;
ISSUE_COMPLIANCE				CONSTANT NUMBER(10) := 21;
ISSUE_PERMIT					CONSTANT NUMBER(10) := 22;

ISSUE_SOURCE_PERMIT_START		CONSTANT NUMBER(2) := 1;
ISSUE_SOURCE_PERMIT_EXPIRY		CONSTANT NUMBER(2) := 2;
ISSUE_SOURCE_ACTIVITY_START		CONSTANT NUMBER(2) := 3;
ISSUE_SOURCE_ACTIVITY_END		CONSTANT NUMBER(2) := 4;
ISSUE_SOURCE_PERMIT_CMN_DTM		CONSTANT NUMBER(2) := 5;

IT_APPLIES_TO_AUDIT				CONSTANT NUMBER(10) := 1;

IAT_OPENED						CONSTANT NUMBER(10) := 0;
IAT_ASSIGNED					CONSTANT NUMBER(10) := 1;
IAT_EMAILED_CORRESPONDENT		CONSTANT NUMBER(10) := 2;
IAT_RESOLVED					CONSTANT NUMBER(10) := 3;
IAT_CLOSED						CONSTANT NUMBER(10) := 4;
IAT_REOPENED					CONSTANT NUMBER(10) := 5;
IAT_DUE_DATE_CHANGED			CONSTANT NUMBER(10) := 6;
IAT_EMAILED_USER				CONSTANT NUMBER(10) := 7;
IAT_PRIORITY_CHANGED			CONSTANT NUMBER(10) := 8;
IAT_REJECTED					CONSTANT NUMBER(10) := 9;
IAT_LABEL_CHANGED				CONSTANT NUMBER(10) := 10;
IAT_EMAILED_ROLE				CONSTANT NUMBER(10) := 11;
IAT_EMAIL_RECEIVED				CONSTANT NUMBER(10) := 12;
IAT_ESCALATED					CONSTANT NUMBER(10) := 13;
IAT_ACCEPTED					CONSTANT NUMBER(10) := 14;
IAT_RETURNED					CONSTANT NUMBER(10) := 15;
IAT_PENDING_ASSIGN_CONF			CONSTANT NUMBER(10) := 16;
IAT_DESCRIPTION_CHANGED			CONSTANT NUMBER(10) := 17;
IAT_FORECAST_DATE_CHANGED		CONSTANT NUMBER(10) := 18;
IAT_RAG_STARUS_CHANGED			CONSTANT NUMBER(10) := 19;
IAT_EXPLAINED_VARIANCE			CONSTANT NUMBER(10) := 20;
IAT_OWNER_CHANGED				CONSTANT NUMBER(10) := 21;
IAT_REGION_CHANGED				CONSTANT NUMBER(10) := 22;
IAT_CRIT_CHANGED				CONSTANT NUMBER(10) := 23;
IAT_DELETED						CONSTANT NUMBER(10) := 24;
IAT_IS_PUBLIC_CHANGED			CONSTANT NUMBER(10) := 25;
IAT_INVOLVED_USER_ASSIGNED		CONSTANT NUMBER(10) := 26;
IAT_INVOLVED_USER_REMOVED		CONSTANT NUMBER(10) := 27;				

NON_COMP_CLOSURE_MANUAL			CONSTANT NUMBER(10) := 1;
NON_COMP_CLOSURE_AUTOMATIC		CONSTANT NUMBER(10) := 2;
NON_COMP_CLOSURE_ALWAYS_CLOSED	CONSTANT NUMBER(10) := 3;
                                         
ALERT_NEW_USER					CONSTANT NUMBER(10) := 1;
ALERT_NEW_DELEGATION			CONSTANT NUMBER(10) := 2;
ALERT_OVERDUE_SHEET				CONSTANT NUMBER(10) := 3;
ALERT_SHEET_CHANGED				CONSTANT NUMBER(10) := 4;
ALERT_REMINDER_SHEET			CONSTANT NUMBER(10) := 5;
ALERT_DELEG_TERMINATED			CONSTANT NUMBER(10) := 7;
ALERT_UPDATED_PLANNED_DELEG		CONSTANT NUMBER(10) := 8;
ALERT_NEW_ROOT_APS				CONSTANT NUMBER(10) := 9;
ALERT_SUBMIT					CONSTANT NUMBER(10) := 10;
ALERT_REJECT					CONSTANT NUMBER(10) := 11;
ALERT_SUB_DELEGATION			CONSTANT NUMBER(10) := 12;
ALERT_SUBMIT_TO_ROOT			CONSTANT NUMBER(10) := 13;
ALERT_REJECT_FROM_ROOT			CONSTANT NUMBER(10) := 14;
ALERT_NEW_SUBMISSION			CONSTANT NUMBER(10) := 15;
ALERT_FINAL_APPROVAL			CONSTANT NUMBER(10) := 16;
ALERT_ISSUE_COMMENT				CONSTANT NUMBER(10) := 17;
ALERT_ISSUE_SUMMARY				CONSTANT NUMBER(10) := 18;
ALERT_DOCLIB_CHANGE				CONSTANT NUMBER(10) := 19;
ALERT_GENERIC_MAILOUT			CONSTANT NUMBER(10) := 20;
ALERT_SELFREG_VALIDATE			CONSTANT NUMBER(10) := 21;
ALERT_SELFREG_NOTIFY			CONSTANT NUMBER(10) := 22;
ALERT_SELFREG_APPROVAL			CONSTANT NUMBER(10) := 23;
ALERT_SELFREG_REJECT			CONSTANT NUMBER(10) := 24;
ALERT_PASSWORD_RESET			CONSTANT NUMBER(10) := 25;
ALERT_ACCOUNT_DISABLED			CONSTANT NUMBER(10) := 26;
ALERT_REMINDER_PENDING			CONSTANT NUMBER(10) := 27;
ALERT_OVERDUE_PENDING			CONSTANT NUMBER(10) := 28;
ALERT_SHEET_CHANGE_REQ			CONSTANT NUMBER(10) := 29;
ALERT_SHEET_CHANGE_BATCHED		CONSTANT NUMBER(10) := 30;
ALERT_SURVEY					CONSTANT NUMBER(10) := 31;
ALERT_ISSUE_SUB_CONFIRM			CONSTANT NUMBER(10) := 32;
ALERT_ISSUE_RESOLVED			CONSTANT NUMBER(10) := 33;
ALERT_ISSUE_MESSAGE				CONSTANT NUMBER(10) := 34;
ALERT_ISSUE_REJECT				CONSTANT NUMBER(10) := 35;
ALERT_ISSUE_PRIORITY_SET		CONSTANT NUMBER(10) := 36;
ALERT_DELEG_GENERIC_MAILOUT		CONSTANT NUMBER(10) := 37;
ALERT_USER_COVER_STARTED		CONSTANT NUMBER(10) := 38;
ALERT_SUBMITTED_VAL_CHANGED		CONSTANT NUMBER(10) := 39;
ALERT_DONATION_FC_REMINDER		CONSTANT NUMBER(10) := 40;
ALERT_INBOUND_CMS_FAILURE		CONSTANT NUMBER(10) := 41;
ALERT_INBOUND_CMS_SUCCESS		CONSTANT NUMBER(10) := 42;
ALERT_BATCH_JOB_COMPLETED		CONSTANT NUMBER(10) := 43;
ALERT_SECTION_STATE_CHANGE		CONSTANT NUMBER(10) := 44;
ALERT_AUDIT_EXPIRING			CONSTANT NUMBER(10) := 45;
ALERT_AUDIT_OVERDUE				CONSTANT NUMBER(10) := 46;
ALERT_ISSUE_COMING_OVERDUE		CONSTANT NUMBER(10) := 47;
ALERT_SECTION_REMINDER			CONSTANT NUMBER(10) := 48;
ALERT_SECTION_OVERDUE			CONSTANT NUMBER(10) := 49;
ALERT_AUTO_APPROVE_SUCCESS		CONSTANT NUMBER(10) := 50;
ALERT_AUTO_APPROVE_INVALID		CONSTANT NUMBER(10) := 51;
ALERT_SECTION_ROUTE_FWD			CONSTANT NUMBER(10) := 52;
ALERT_SECTION_ROUTE_BACK		CONSTANT NUMBER(10) := 53;
ALERT_TEAMROOM_INVITATION		CONSTANT NUMBER(10) := 54;
ALERT_TEAMROOM_MBR_TERMINATE 	CONSTANT NUMBER(10) := 55;
ALERT_SECTION_DOC_AVAILABLE		CONSTANT NUMBER(10) := 56;
ALERT_SHEET_RETURNED			CONSTANT NUMBER(10) := 57;
ALERT_SHEET_CHANGE_REQ_APPR		CONSTANT NUMBER(10) := 58;
ALERT_SHEET_CHANGE_REQ_REJ		CONSTANT NUMBER(10) := 59;
ALERT_ISSUE_REMINDER			CONSTANT NUMBER(10) := 60;
ALERT_ISSUE_OVERDUE				CONSTANT NUMBER(10) := 61;
ALERT_SHEET_EDITED				CONSTANT NUMBER(10) := 62;
ALERT_SECTION_DECLINED			CONSTANT NUMBER(10) := 63;
ALERT_SCHEDULED_REPORT_SUCCESS	CONSTANT NUMBER(10) := 64;
ALERT_SCHEDULED_REPORT_FAILED	CONSTANT NUMBER(10) := 65;
ALERT_AUTO_IMPORT_COMPLETED 	CONSTANT NUMBER(10) := 66;
ALERT_AUDIT_ALL_ISSUES_CLOSED   CONSTANT NUMBER(10) := 67;
ALERT_NEW_PLANNED_DELEG			CONSTANT NUMBER(10) := 68;
ALERT_INBOUND_FEED_FAILURE		CONSTANT NUMBER(10) := 69;
ALERT_INBOUND_FEED_SUCCESS		CONSTANT NUMBER(10) := 70;
ALERT_FILTER_ALERT				CONSTANT NUMBER(10) := 71;
ALERT_AUTO_EXPORT_COMPLETED 	CONSTANT NUMBER(10) := 72;
ALERT_USER_INACTIVE_REMINDER	CONSTANT NUMBER(10) := 73;
ALERT_USER_INACTIVE_SYSTEM		CONSTANT NUMBER(10) := 74;
ALERT_USER_INACTIVE_MANUAL		CONSTANT NUMBER(10) := 75;
ALERT_LIKE_FOR_LIKE_SCENARIO	CONSTANT NUMBER(10) := 76;
ALERT_FORECASTING_SCENARIO		CONSTANT NUMBER(10) := 77;
ALERT_SHEET_CREATED				CONSTANT NUMBER(10) := 80;

   
ALERT_TO_NONE					CONSTANT NUMBER(10) := 0;
ALERT_TO_DELEGEE 				CONSTANT NUMBER(10) := 1;
ALERT_TO_DELEGATOR 				CONSTANT NUMBER(10) := 2;
ALERT_TO_ALL 					CONSTANT NUMBER(10) := 3;

ALERT_GROUP_USERS		        CONSTANT NUMBER(10) := 1;
ALERT_GROUP_DELEGTIONS	        CONSTANT NUMBER(10) := 2;
ALERT_GROUP_ACTIONS		        CONSTANT NUMBER(10) := 3;
ALERT_GROUP_TPLREPORTS	        CONSTANT NUMBER(10) := 4;
ALERT_GROUP_DOCLIBRARY	        CONSTANT NUMBER(10) := 5;
ALERT_GROUP_CORPREPORTER        CONSTANT NUMBER(10) := 6;
ALERT_GROUP_AUDITS		        CONSTANT NUMBER(10) := 7;
ALERT_GROUP_SUPPLYCHAIN	        CONSTANT NUMBER(10) := 8;
ALERT_GROUP_SRM			        CONSTANT NUMBER(10) := 9;
ALERT_GROUP_TEAMROOM	        CONSTANT NUMBER(10) := 10;
ALERT_GROUP_INITIATIVES	        CONSTANT NUMBER(10) := 11;
ALERT_GROUP_ETHICS		        CONSTANT NUMBER(10) := 12;
ALERT_GROUP_CMS			        CONSTANT NUMBER(10) := 13;
ALERT_GROUP_OTHER		        CONSTANT NUMBER(10) := 14;
                                         
NOT_FULLY_DELEGATED				CONSTANT NUMBER(10) := 0;
FULLY_DELEGATED_TO_ONE			CONSTANT NUMBER(10) := 1;
FULLY_DELEGATED_TO_MANY			CONSTANT NUMBER(10) := 2;
                                         
REGION_TYPE_NORMAL				CONSTANT NUMBER(2) := 0;
REGION_TYPE_METER				CONSTANT NUMBER(2) := 1;
REGION_TYPE_ROOT				CONSTANT NUMBER(2) := 2;
REGION_TYPE_PROPERTY			CONSTANT NUMBER(2) := 3;
REGION_TYPE_TENANT				CONSTANT NUMBER(2) := 4;
REGION_TYPE_RATE				CONSTANT NUMBER(2) := 5;
REGION_TYPE_AGENT				CONSTANT NUMBER(2) := 6;
REGION_TYPE_SUPPLIER			CONSTANT NUMBER(2) := 7;
REGION_TYPE_REALTIME_METER		CONSTANT NUMBER(2) := 8;
REGION_TYPE_SPACE				CONSTANT NUMBER(2) := 9;
REGION_TYPE_AGGR_REGION			CONSTANT NUMBER(2) := 10;
                                         
AUDIT_TYPE_LOGON				CONSTANT NUMBER(10) := 1;
AUDIT_TYPE_LOGOFF				CONSTANT NUMBER(10) := 2;
AUDIT_TYPE_LOGON_SU				CONSTANT NUMBER(10) := 3;
AUDIT_TYPE_CHANGE_SCHEMA		CONSTANT NUMBER(10) := 4; -- add to MEASURE, ALERT
AUDIT_TYPE_USER_ACCOUNT			CONSTANT NUMBER(10) := 5;
AUDIT_TYPE_CHANGE_VALUE			CONSTANT NUMBER(10) := 6;
AUDIT_TYPE_LOGON_FAILED			CONSTANT NUMBER(10) := 7;

-- Not used: AUDIT_TYPE_IMPORT			CONSTANT NUMBER(10) := 8; -- upload, merge
-- Not used: AUDIT_TYPE_DOWNLOAD		CONSTANT NUMBER(10) := 9; -- download data

AUDIT_TYPE_DELEGATION			CONSTANT NUMBER(10) := 10;
AUDIT_TYPE_TASK             	CONSTANT NUMBER(10) := 11;
AUDIT_TYPE_TASK_PERIOD      	CONSTANT NUMBER(10) := 12;
AUDIT_TYPE_ISSUES		    	CONSTANT NUMBER(10) := 13;
AUDIT_TYPE_TASK_STATUS			CONSTANT NUMBER(10) := 14;
AUDIT_TYPE_METER_READING    	CONSTANT NUMBER(10) := 15;
AUDIT_TYPE_CLIENT_SPECIFIC  	CONSTANT NUMBER(10) := 16;
AUDIT_TYPE_SUSPICIOUS  			CONSTANT NUMBER(10) := 17; -- large data downloads/trying to download docs where no permissions etc
AUDIT_TYPE_FEED					CONSTANT NUMBER(10) := 18;
AUDIT_TYPE_SSO_LOGON			CONSTANT NUMBER(10) := 19;
AUDIT_TYPE_GROUP_CHANGE			CONSTANT NUMBER(10) := 20;
AUDIT_TYPE_SURVEY_CHANGE		CONSTANT NUMBER(10) := 21;
AUDIT_TYPE_DOCUMENTS			CONSTANT NUMBER(10) := 22;
AUDIT_TYPE_INITIATIVE			CONSTANT NUMBER(10) := 23;
AUDIT_TYPE_METER_PATCH			CONSTANT NUMBER(10) := 24;
AUDIT_TYPE_PORTLET				CONSTANT NUMBER(10) := 25;
AUDIT_TYPE_DASHBOARD			CONSTANT NUMBER(10) := 26;
AUDIT_TYPE_BATCH_LOGON			CONSTANT NUMBER(10) := 27;
AUDIT_TYPE_FACTOR				CONSTANT NUMBER(10) := 28;
AUDIT_TYPE_ANONYMISED			CONSTANT NUMBER(10) := 29;

-- start > SUPPLIER specific but doesn't make sense to split constant declaration
AUDIT_TYPE_PROD_CREATED			CONSTANT NUMBER(10) := 50;
AUDIT_TYPE_PROD_UPDATED			CONSTANT NUMBER(10) := 51;
AUDIT_TYPE_PROD_SUPP_CHANGED	CONSTANT NUMBER(10) := 52;
AUDIT_TYPE_PROD_DA_CHANGED		CONSTANT NUMBER(10) := 53;
AUDIT_TYPE_PROD_DP_CHANGED		CONSTANT NUMBER(10) := 54;
AUDIT_TYPE_PROD_DP_DELETED		CONSTANT NUMBER(10) := 55;
AUDIT_TYPE_PROD_TAG_CHANGED		CONSTANT NUMBER(10) := 56;
AUDIT_TYPE_PROD_VOL_CHANGED		CONSTANT NUMBER(10) := 57;

AUDIT_TYPE_SUPP_CREATED			CONSTANT NUMBER(10) := 60;
AUDIT_TYPE_SUPP_UPDATED			CONSTANT NUMBER(10) := 61;
AUDIT_TYPE_SUPP_USER_ASS		CONSTANT NUMBER(10) := 62;
AUDIT_TYPE_SUPP_USER_UNASS		CONSTANT NUMBER(10) := 63;
AUDIT_TYPE_SUPP_DELETED			CONSTANT NUMBER(10) := 64;
AUDIT_TYPE_SUPP_TAG_CHANGED		CONSTANT NUMBER(10) := 65;

AUDIT_TYPE_PROD_STATE_CHANGED	CONSTANT NUMBER(10) := 70;
AUDIT_TYPE_QUEST_SAVED			CONSTANT NUMBER(10) := 71;
AUDIT_TYPE_QUEST_STATE_CHANGED	CONSTANT NUMBER(10) := 72;
AUDIT_TYPE_PROD_QUEST_LINKED	CONSTANT NUMBER(10) := 73;
AUDIT_TYPE_PROD_QUEST_UNLINKED	CONSTANT NUMBER(10) := 74;
AUDIT_TYPE_GT_VALUE_SAVED		CONSTANT NUMBER(10) := 75;
AUDIT_TYPE_GT_SCORE_CHANGED		CONSTANT NUMBER(10) := 76;
AUDIT_TYPE_GT_QUEST_COPIED		CONSTANT NUMBER(10) := 77;
-- end > SUPPLIER specific but doesn't make sense to split constant declaration
-- start > DONATIONS specific
AUDIT_TYPE_DONATIONS_DONATION   CONSTANT NUMBER(10) := 80;
AUDIT_TYPE_DONATIONS_BUDGET     CONSTANT NUMBER(10) := 81;
AUDIT_TYPE_DONATIONS_SCHEME     CONSTANT NUMBER(10) := 82;
AUDIT_TYPE_DONATIONS_STATUS     CONSTANT NUMBER(10) := 83;
AUDIT_TYPE_DONATIONS_CATEGORY   CONSTANT NUMBER(10) := 84;
AUDIT_TYPE_DONATIONS_RECIPIENT  CONSTANT NUMBER(10) := 85;
-- end > DONATIONS specific              
-- start > Internal Audit specific       
AUDIT_TYPE_INTERNAL_AUDIT		CONSTANT NUMBER(10) := 90;
AUDIT_TYPE_NON_COMPLIANCE		CONSTANT NUMBER(10) := 91;
-- end > Internal Audit specific         
-- start > Role specific                 
AUDIT_TYPE_REGION_ROLE_CHANGED	CONSTANT NUMBER(10) := 100;
AUDIT_TYPE_USER_ROLE_CHANGED	CONSTANT NUMBER(10) := 101;
-- end > Role specific                   
-- start > Tags/categories               
AUDIT_TYPE_REGION_TAG_CHANGED	CONSTANT NUMBER(10) := 110;
AUDIT_TYPE_IND_TAG_CHANGED		CONSTANT NUMBER(10) := 111;
AUDIT_TYPE_TAG_DESC_CHANGED		CONSTANT NUMBER(10) := 112;
-- end > Tags/categories                 
-- start > Application specific
AUDIT_TYPE_MODULE_ENABLED		CONSTANT NUMBER(10) := 120;
AUDIT_TYPE_CAPABILITY_ENABLED	CONSTANT NUMBER(10) := 121;
-- end > Application specific
-- start > Chain specific
AUDIT_TYPE_CHAIN_BUS_REL		CONSTANT NUMBER(10) := 200;
AUDIT_TYPE_CHAIN_PRODUCT_TYPE	CONSTANT NUMBER(10) := 201;
AUDIT_TYPE_CHAIN_COMP_PRODUCT	CONSTANT NUMBER(10) := 202;
AUDIT_TYPE_CHAIN_FILTER			CONSTANT NUMBER(10) := 203;
-- end > Chain
-- start > Application specific
AUDIT_TYPE_EXPIMP_MAILBOX		CONSTANT NUMBER(10) := 300;
AUDIT_TYPE_EXPIMP_AUTO_IMPORT	CONSTANT NUMBER(10) := 301;
-- Not used: AUDIT_TYPE_EXPIMP_FTP_PROFILE	CONSTANT NUMBER(10) := 302;
AUDIT_TYPE_EXPIMP_AUTO_EXPORT		CONSTANT NUMBER(10) := 303;
AUDIT_TYPE_CREDENTIAL_MANAGEMENT	CONSTANT NUMBER(10) := 304;
AUDIT_TYPE_IQA						CONSTANT NUMBER(10) := 305;
AUDIT_TYPE_LANDING_PAGE				CONSTANT NUMBER(10) := 306;
AUDIT_TYPE_PERIOD_SET				CONSTANT NUMBER(10) := 307;
-- end > Application specific
-- start > Region metrics
AUDIT_TYPE_REGION_METRIC		CONSTANT NUMBER(10) := 500;
-- end > Region metrics

TEMPLATE_TYPE_DEFAULT_CHART		CONSTANT NUMBER(10) := 1;
TEMPLATE_TYPE_DEFAULT_EXCEL		CONSTANT NUMBER(10) := 2;
TEMPLATE_TYPE_DEFAULT_WORD		CONSTANT NUMBER(10) := 3;
TEMPLATE_TYPE_DEFAULT_EXPLORER	CONSTANT NUMBER(10) := 4;
TEMPLATE_TYPE_DEFAULT_APPROVAL	CONSTANT NUMBER(10) := 5;
-- tolerance type
TOLERANCE_TYPE_NONE 							CONSTANT NUMBER(10) := 0;
TOLERANCE_TYPE_PREVIOUS_PERIOD 					CONSTANT NUMBER(10) := 1;
TOLERANCE_TYPE_PREVIOUS_YEAR 					CONSTANT NUMBER(10) := 2;
TOLERANCE_TYPE_STANDARD_DEVIATION 				CONSTANT NUMBER(10) := 3;
TOLERANCE_TYPE_STANDARD_DEVIATION_SAME_PERIOD 	CONSTANT NUMBER(10) := 4;
-- pending form elements
ELEMENT_TYPE_TEXT_ENTRY 		CONSTANT NUMBER(10) := 1;
ELEMENT_TYPE_TEXT_BLOCK 		CONSTANT NUMBER(10) := 2;
ELEMENT_TYPE_SECTION 			CONSTANT NUMBER(10) := 3;
ELEMENT_TYPE_NUMERIC 			CONSTANT NUMBER(10) := 4;
ELEMENT_TYPE_TABLE 				CONSTANT NUMBER(10) := 5;
ELEMENT_TYPE_CHECKBOX 			CONSTANT NUMBER(10) := 6;
ELEMENT_TYPE_RADIO 				CONSTANT NUMBER(10) := 7;
ELEMENT_TYPE_DROPDOWN 			CONSTANT NUMBER(10) := 8;
ELEMENT_TYPE_HIDDEN 			CONSTANT NUMBER(10) := 9;
ELEMENT_TYPE_GRID 				CONSTANT NUMBER(10) := 11;
ELEMENT_TYPE_DATE 				CONSTANT NUMBER(10) := 12;
ELEMENT_TYPE_FORM 				CONSTANT NUMBER(10) := 13;
ELEMENT_TYPE_FILE_UPLOAD 		CONSTANT NUMBER(10) := 14;
-- audit type group
ATG_SECURABLE_OBJECT 			CONSTANT NUMBER(10) := 1;
ATG_SUPPLIER_PRODUCT 			CONSTANT NUMBER(10) := 2;
ATG_SUPPLIER_QUESTIONNAIRE		CONSTANT NUMBER(10) := 3;
ATG_PROPERTY_OBJECT				CONSTANT NUMBER(10) := 5;
-- document status
DOCLIB_IN_DATE					CONSTANT NUMBER(10) := 0;
DOCLIB_NEARLY_EXPIRED 			CONSTANT NUMBER(10) := 1;
DOCLIB_EXPIRED					CONSTANT NUMBER(10) := 2;
-- location_type
LOC_TYPE_AIRPORT				CONSTANT NUMBER(10) := 1;
LOC_TYPE_COUNTRY				CONSTANT NUMBER(10) := 2;
LOC_TYPE_PORT					CONSTANT NUMBER(10) := 3;
LOC_TYPE_ROAD					CONSTANT NUMBER(10) := 4;
LOC_TYPE_BARGE_PORT				CONSTANT NUMBER(10) := 5;
LOC_TYPE_RAIL_STATION			CONSTANT NUMBER(10) := 6;
-- logistics_mode (defaults)
TRANSPORT_MODE_AIR				CONSTANT NUMBER(10) := 1;
TRANSPORT_MODE_SEA				CONSTANT NUMBER(10) := 2;
TRANSPORT_MODE_ROAD				CONSTANT NUMBER(10) := 3;
TRANSPORT_MODE_BARGE			CONSTANT NUMBER(10) := 4;
TRANSPORT_MODE_RAIL				CONSTANT NUMBER(10) := 5;

/*
AUDIT_TYPE_CHANGE_VALUE			CONSTANT	NUMBER(10) := 6;
*/
-- include stuff like imports, merge data etc
SHT_BLOCKED_MISSING_VALUE		CONSTANT NUMBER(10) := 1; -- 'This value must be entered before you can submit'
SHT_BLOCKED_MISSING_NOTE		CONSTANT NUMBER(10) := 2; -- 'An explanatory note must be provided for this value'
SHT_BLOCKED_MISSING_QUAL		CONSTANT NUMBER(10) := 3; -- 'A quality status must be selected for this value'
SHT_BLOCKED_MISS_QUAL_NOTE		CONSTANT NUMBER(10) := 4; -- 'A note must be entered for the selected quality status'
SHT_BLOCKED_TOLERANCE 			CONSTANT NUMBER(10) := 5; -- 'An explanatory note must be provided because the number differs significantly from a previous figure'
-- lock types               	
LOCK_TYPE_CALC					CONSTANT NUMBER(10) := 1;
LOCK_TYPE_SHEET_CALC			CONSTANT NUMBER(10) := 2;
LOCK_TYPE_ENERGY_STAR			CONSTANT NUMBER(10) := 3;
LOCK_TYPE_FORECASTING			CONSTANT NUMBER(10) := 4;

-- deleg_plan pending_deletion status
DELEG_PLAN_NO_DELETE			CONSTANT NUMBER(10) := 0;  -- don't delete
DELEG_PLAN_DELETE_ALL			CONSTANT NUMBER(10) := 1;  -- delete delegations and also from DELEG_PLAN_DELEG_REGION
DELEG_PLAN_DELETE_CREATE		CONSTANT NUMBER(10) := 2;  -- delete delegations but keep in DELEG_PLAN_DELEG_REGION and re-create

-- single delegation containing mulitple regions _S_
DELEG_PLAN_SEL_S_REGION			CONSTANT VARCHAR2(2) := 'R';    -- select the specified region
DELEG_PLAN_SEL_S_LOWEST_RT		CONSTANT VARCHAR2(2) := 'L';    -- select leaf nodes of specified region type (or any)
DELEG_PLAN_SEL_S_LOWER_RT		CONSTANT VARCHAR2(2) := 'P';    -- select nodes of specified region type (or any)
-- multiple delegations _M_
DELEG_PLAN_SEL_M_REGION			CONSTANT VARCHAR2(2) := 'RT';   -- select the specified region
DELEG_PLAN_SEL_M_LOWEST_RT		CONSTANT VARCHAR2(2) := 'LT';   -- select leaf nodes of specified region type (or any)
DELEG_PLAN_SEL_M_LOWER_RT		CONSTANT VARCHAR2(2) := 'PT';   -- select nodes of specified region type (or any)

PLAN_TEMPLATE_EXISTING			CONSTANT NUMBER(10) := 1;  -- when copying plan use existing templates
PLAN_TEMPLATE_COPY				CONSTANT NUMBER(10) := 2;  -- when copying plan create new templates from existing templates
PLAN_TEMPLATE_NO				CONSTANT NUMBER(10) := 3;  -- when copying plan do not copy template

DATAVIEW_CHART					CONSTANT NUMBER(10) := 1;
DATAVIEW_WORKBOOK				CONSTANT NUMBER(10) := 2;

-- 1,2,3,4,5,100 etc are defined by security_pkg LOGON_TYPE_FULL etc
LOGON_TYPE_SU					CONSTANT NUMBER(10) := 101;

-- Plugin types
PLUGIN_TYPE_PROPERTY_TAB		CONSTANT NUMBER(10) := 1;
PLUGIN_TYPE_FUND_FORM			CONSTANT NUMBER(10) := 2;
PLUGIN_TYPE_METRIC_DASHBOARD	CONSTANT NUMBER(10) := 3;
PLUGIN_TYPE_USER_PROFILE_PANEL	CONSTANT NUMBER(10) := 4;
PLUGIN_TYPE_TEAMROOM_TAB		CONSTANT NUMBER(10) := 5;
PLUGIN_TYPE_TEAMROOM_EDIT_PAGE	CONSTANT NUMBER(10) := 6;
PLUGIN_TYPE_TEAMROOM_MAIN_TAB	CONSTANT NUMBER(10) := 7;
PLUGIN_TYPE_INITIAT_TAB			CONSTANT NUMBER(10) := 8;
PLUGIN_TYPE_INITIAT_MAIN_TAB	CONSTANT NUMBER(10) := 9;
PLUGIN_TYPE_CHAIN_COMPANY_TAB	CONSTANT NUMBER(10) := 10;
PLUGIN_TYPE_CHAIN_COMPANY_HEAD	CONSTANT NUMBER(10) := 11;
PLUGIN_TYPE_CALENDAR			CONSTANT NUMBER(10) := 12;
PLUGIN_TYPE_AUDIT_TAB			CONSTANT NUMBER(10) := 13;
PLUGIN_TYPE_AUDIT_HEADER		CONSTANT NUMBER(10) := 14;
PLUGIN_TYPE_R_REPORT			CONSTANT NUMBER(10) := 15;
PLUGIN_TYPE_METER_TAB			CONSTANT NUMBER(10) := 16;
PLUGIN_TYPE_EMISS_FACTR_TAB		CONSTANT NUMBER(10) := 17;
PLUGIN_TYPE_CHAIN_PRODUCT_HEAD	CONSTANT NUMBER(10) := 18;
PLUGIN_TYPE_CHAIN_PRODUCT_TAB	CONSTANT NUMBER(10) := 19;
PLUGIN_TYPE_CHAIN_PROD_SUP_TAB	CONSTANT NUMBER(10) := 20;
PLUGIN_TYPE_PERMIT_TAB			CONSTANT NUMBER(10) := 21;
PLUGIN_TYPE_PERMIT_HEADER		CONSTANT NUMBER(10) := 22;

-- user feed
USER_FEED_ACTIVITY_POST			CONSTANT NUMBER(10) := 1;
USER_FEED_ACTIVITY_LIKE			CONSTANT NUMBER(10) := 2;
USER_FEED_ACTIVITY_FOLLOW		CONSTANT NUMBER(10) := 3;


-- Flow involvement types
FLOW_INV_TYPE_AUDITOR			CONSTANT NUMBER(10) := 1;
FLOW_INV_TYPE_AUDIT_COMPANY		CONSTANT NUMBER(10) := 2;

FLOW_INV_TYPE_TRAINEE			CONSTANT NUMBER(10) := 101;
FLOW_INV_TYPE_LINE_MANAGER		CONSTANT NUMBER(10) := 102;

FLOW_INV_TYPE_PURCHASER			CONSTANT NUMBER(10) := 1001;
FLOW_INV_TYPE_SUPPLIER			CONSTANT NUMBER(10) := 1002;

-- Flow capability perm_types (matches chain_pkg.T_CAPABILITY_PERM_TYPE)
FLOW_CAP_SPECIFIC_PERMISSION	CONSTANT NUMBER(10) := 0;
FLOW_CAP_BOOLEAN_PERMISSION		CONSTANT NUMBER(10) := 1;

-- Flow capabilities
FLOW_CAP_AUDIT					CONSTANT NUMBER(10) := 1;
FLOW_CAP_AUDIT_SURVEY			CONSTANT NUMBER(10) := 2;
FLOW_CAP_AUDIT_NON_COMPL		CONSTANT NUMBER(10) := 3;
FLOW_CAP_AUDIT_ADD_ACTION		CONSTANT NUMBER(10) := 4;
FLOW_CAP_AUDIT_DL_REPORT		CONSTANT NUMBER(10) := 5;
FLOW_CAP_AUDIT_PINBOARD			CONSTANT NUMBER(10) := 6;
FLOW_CAP_AUDIT_AUDIT_LOG		CONSTANT NUMBER(10) := 7;
FLOW_CAP_AUDIT_CLOSURE			CONSTANT NUMBER(10) := 8;
FLOW_CAP_AUDIT_COPY				CONSTANT NUMBER(10) := 9;
FLOW_CAP_AUDIT_DELETE			CONSTANT NUMBER(10) := 10;
FLOW_CAP_AUDIT_IMPORT_NC		CONSTANT NUMBER(10) := 11;
FLOW_CAP_AUDIT_DOCUMENTS		CONSTANT NUMBER(10) := 12;
FLOW_CAP_AUDIT_SCORE			CONSTANT NUMBER(10) := 13;
FLOW_CAP_AUDIT_EXEC_SUMMARY		CONSTANT NUMBER(10) := 14;
FLOW_CAP_AUDIT_DRAFT_ISSUES		CONSTANT NUMBER(10) := 15;
FLOW_CAP_AUDIT_VIEW_USERS		CONSTANT NUMBER(10) := 16;
FLOW_CAP_AUDIT_FINDING_TYPE		CONSTANT NUMBER(10) := 17;
FLOW_CAP_AUDIT_CLOSE_FINDINGS	CONSTANT NUMBER(10) := 18;
FLOW_CAP_AUDIT_CHANGE_SURVEY	CONSTANT NUMBER(10) := 19;
FLOW_CAP_AUDIT_AUDITEE			CONSTANT NUMBER(10) := 20;
FLOW_CAP_AUDIT_NC_TAGS			CONSTANT NUMBER(10) := 23;

FLOW_CAP_CORP_REP_EDIT_FACT		CONSTANT NUMBER(10) := 21;
FLOW_CAP_CORP_REP_CLEAR_FACT	CONSTANT NUMBER(10) := 22;

FLOW_CAP_CAMPAIGN_RESPONSE		CONSTANT NUMBER(10) := 1001;
FLOW_CAP_CAMPAIGN_SHARE			CONSTANT NUMBER(10) := 1002;
FLOW_CAP_CAMPAIGN_ACTIONS		CONSTANT NUMBER(10) := 1003;

FLOW_CAP_APP_DASH_REFRESH		CONSTANT NUMBER(10) := 2001;
FLOW_CAP_APP_DASH_RUNREPORT		CONSTANT NUMBER(10) := 2002;
FLOW_CAP_APP_DASH_EDITNOTES		CONSTANT NUMBER(10) := 2003;

FLOW_CAP_DISCLOSURE_RESPONSE	CONSTANT NUMBER(10) := 3001;
FLOW_CAP_DISC_ASS_CREATE_CANC	CONSTANT NUMBER(10) := 3002;

FLOW_CAP_DISCLOSURE_ASSIGNMENT_RESPONSE		CONSTANT NUMBER(10) := 4001;
FLOW_CAP_DISCLOSURE_ASSIGNMENT_COMPLETION	CONSTANT NUMBER(10) := 4002;

-- Flow state natures
NATURE_TRAINING_UNSCHEDULED			CONSTANT NUMBER(10) := 0;
NATURE_TRAINING_UNAPPROVED			CONSTANT NUMBER(10) := 1;
NATURE_TRAINING_APPROVED			CONSTANT NUMBER(10) := 2;
NATURE_TRAINING_POST_ATTENDED		CONSTANT NUMBER(10) := 3;
NATURE_TRAINING_DELETED				CONSTANT NUMBER(10) := 4;

NATURE_REGULATION_NEW				CONSTANT NUMBER(2) := 5;
NATURE_REGULATION_UPDATED			CONSTANT NUMBER(2) := 6;
NATURE_REGULATION_ACTION_REQ		CONSTANT NUMBER(2) := 7;
NATURE_REGULATION_COMPLIANT			CONSTANT NUMBER(2) := 8;
NATURE_REGULATION_NA				CONSTANT NUMBER(2) := 9;
NATURE_REGULATION_RETIRED			CONSTANT NUMBER(2) := 10;

NATURE_REQUIREMENT_NEW				CONSTANT NUMBER(2) := 11;
NATURE_REQUIREMENT_UPDATED			CONSTANT NUMBER(2) := 12;
NATURE_REQUIREMENT_ACTION_REQ		CONSTANT NUMBER(2) := 13;
NATURE_REQUIREMENT_COMPLIANT		CONSTANT NUMBER(2) := 14;
NATURE_REQUIREMENT_NA				CONSTANT NUMBER(2) := 15;
NATURE_REQUIREMENT_RETIRED			CONSTANT NUMBER(2) := 16;

NATURE_PERMIT_NOT_CREATED			CONSTANT NUMBER(2) := 17;
NATURE_PERMIT_APPLICATION			CONSTANT NUMBER(2) := 18;
NATURE_PERMIT_ACTIVE				CONSTANT NUMBER(2) := 19;
NATURE_PERMIT_SURRENDERED			CONSTANT NUMBER(2) := 20;
NATURE_PERMIT_REFUSED				CONSTANT NUMBER(2) := 29;
NATURE_PERMIT_UPDATED				CONSTANT NUMBER(2) := 35;
NATURE_PERMIT_SURR_ACK				CONSTANT NUMBER(2) := 36;

NATURE_CONDIT_NOT_CREATED			CONSTANT NUMBER(2) := 26;
NATURE_CONDIT_ACTIVE				CONSTANT NUMBER(2) := 27;
NATURE_CONDIT_INACTIVE				CONSTANT NUMBER(2) := 28;
NATURE_CONDIT_UPDATED				CONSTANT NUMBER(2) := 31;
NATURE_CONDIT_COMPLIANT				CONSTANT NUMBER(2) := 33;
NATURE_CONDIT_ACTION_REQ			CONSTANT NUMBER(2) := 34;

NATURE_APPLIC_NOT_CREATED			CONSTANT NUMBER(2) := 21;
NATURE_APPLIC_PRE_APPLICATION		CONSTANT NUMBER(2) := 22;
NATURE_APPLIC_INITIAL_CHECKS		CONSTANT NUMBER(2) := 23;
NATURE_APPLIC_DETERMINATION			CONSTANT NUMBER(2) := 24;
NATURE_APPLIC_DETERMINED			CONSTANT NUMBER(2) := 25;
NATURE_APPLIC_WITHDRAWN				CONSTANT NUMBER(2) := 30;
NATURE_APPLIC_PAUSED				CONSTANT NUMBER(2) := 32;
--CURRENT FLOW STATE NATURE MAX 32

PORTLET_TYPE_GEOMAP				CONSTANT NUMBER(10) := 1048;

GAS_TYPE_CO2					CONSTANT NUMBER(10) := 1;
GAS_TYPE_CO2E					CONSTANT NUMBER(10) := 2;
GAS_TYPE_CH4					CONSTANT NUMBER(10) := 3;
GAS_TYPE_N2O					CONSTANT NUMBER(10) := 4;

--Factor type already used so factor categories for custom or standard
FACTOR_CAT_STD					CONSTANT NUMBER(10) := 1;
FACTOR_CAT_CUSTOM				CONSTANT NUMBER(10) := 2;
FACTOR_CAT_BESPOKE				CONSTANT NUMBER(10) := 3;

-- supplier score source type
SCORE_SOURCE_TYPE_QS			CONSTANT NUMBER(10) := 1;
SCORE_SOURCE_TYPE_AUDIT			CONSTANT NUMBER(10) := 2;
SCORE_SOURCE_TYPE_SCORE_CALC	CONSTANT NUMBER(10) := 3;

SCORE_CALC_TYPE_SUPPLIER_SCORE	CONSTANT VARCHAR2(50) := 'supplier_scores';

SITE_TYPE_CUSTOMER					CONSTANT VARCHAR(10) := 'Customer';
SITE_TYPE_PROSPECT					CONSTANT VARCHAR(10) := 'Prospect';
SITE_TYPE_SANDBOX					CONSTANT VARCHAR(10) := 'Sandbox';
SITE_TYPE_STAFF						CONSTANT VARCHAR(10) := 'Staff';
SITE_TYPE_RETIRED					CONSTANT VARCHAR(10) := 'Retired';

-- Used if you want to preserve an existing number value (comes from chain_pkg)
PRESERVE_NUMBER					CONSTANT NUMBER(10) := -999999999;

IND_SELECTION_SELECTED		CONSTANT NUMBER(10) := 0;
IND_SELECTION_INCL_DESCEND	CONSTANT NUMBER(10) := 1;

PROCEDURE LockPeriod(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_start_dtm					IN	customer.lock_start_dtm%TYPE,
	in_end_dtm						IN	customer.lock_end_dtm%TYPE
);

PROCEDURE RemovePeriodLock(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_app_sid						IN	security_pkg.T_SID_ID
);

FUNCTION IsPeriodLocked(
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_start_dtm					IN	customer.lock_start_dtm%TYPE,
	in_end_dtm						IN	customer.lock_end_dtm%TYPE
) RETURN NUMBER;

PROCEDURE GetLockPeriod(	
	out_cur				OUT	SYS_REFCURSOR
);

/**
 * AddToAuditDescription
 *
 * @param in_field_name		.
 * @param in_old_value		.
 * @param in_new_value		.
 * @return 					.
 */
FUNCTION AddToAuditDescription(
	in_field_name					IN	VARCHAR2,
	in_old_value					IN	VARCHAR2,
	in_new_value					IN	VARCHAR2
) RETURN VARCHAR2;

PROCEDURE WriteAppAuditLogEntry(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid		    			IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_description					IN	audit_log.description%TYPE,
	in_param_1          			IN  audit_log.param_1%TYPE DEFAULT NULL,
	in_param_2          			IN  audit_log.param_2%TYPE DEFAULT NULL,
	in_param_3          			IN  audit_log.param_3%TYPE DEFAULT NULL,
	in_sub_object_id				IN	audit_log.sub_object_id%TYPE DEFAULT NULL
);

PROCEDURE WriteAuditLogEntry(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_description					IN	audit_log.description%TYPE,
	in_param_1          			IN  audit_log.param_1%TYPE DEFAULT NULL,
	in_param_2          			IN  audit_log.param_2%TYPE DEFAULT NULL,
	in_param_3          			IN  audit_log.param_3%TYPE DEFAULT NULL,
	in_sub_object_id				IN	audit_log.sub_object_id%TYPE DEFAULT NULL
);

PROCEDURE WriteAuditLogEntry_AT(
	in_act_id						IN	security_pkg.T_ACT_ID	DEFAULT SYS_CONTEXT('SECURITY','ACT'),
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid						IN	security_pkg.T_SID_ID DEFAULT SYS_CONTEXT('SECURITY','APP'),
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_description					IN	audit_log.description%TYPE,
	in_param_1          			IN  audit_log.param_1%TYPE DEFAULT NULL,
	in_param_2          			IN  audit_log.param_2%TYPE DEFAULT NULL,
	in_param_3          			IN  audit_log.param_3%TYPE DEFAULT NULL,
	in_sub_object_id				IN	audit_log.sub_object_id%TYPE DEFAULT NULL
);

PROCEDURE WriteAuditLogEntryAndSubObject(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_sub_object_id				IN  audit_log.sub_object_id%TYPE DEFAULT NULL,
	in_description					IN	audit_log.description%TYPE,
	in_param_1          			IN  audit_log.param_1%TYPE DEFAULT NULL,
	in_param_2          			IN  audit_log.param_2%TYPE DEFAULT NULL,
	in_param_3          			IN  audit_log.param_3%TYPE DEFAULT NULL
);

PROCEDURE WriteAuditLogEntryForSid(
	in_sid_id						IN	security_pkg.T_SID_ID,
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_description					IN	audit_log.description%TYPE,
	in_param_1          			IN  audit_log.param_1%TYPE DEFAULT NULL,
	in_param_2          			IN  audit_log.param_2%TYPE DEFAULT NULL,
	in_param_3          			IN  audit_log.param_3%TYPE DEFAULT NULL,
	in_sub_object_id				IN	audit_log.sub_object_id%TYPE DEFAULT NULL
);

PROCEDURE AuditClobChange(
	in_act							IN	security_pkg.T_ACT_ID,
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_field_name					IN	VARCHAR2,
	in_old_value					IN	CLOB,
	in_new_value					IN	CLOB,
	in_sub_object_id    			IN  audit_log.sub_object_id%TYPE DEFAULT NULL
);

PROCEDURE AuditValueChange(
	in_act							IN	security_pkg.T_ACT_ID,
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_field_name					IN	VARCHAR2,
	in_old_value					IN	VARCHAR2,
	in_new_value					IN	VARCHAR2,
	in_sub_object_id    			IN  audit_log.sub_object_id%TYPE DEFAULT NULL
);

PROCEDURE AuditValueDescChange(
	in_act							IN	security_pkg.T_ACT_ID,
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_field_name					IN	VARCHAR2,
	in_old_value					IN	VARCHAR2,
	in_new_value					IN	VARCHAR2,
	in_old_desc						IN	VARCHAR2,
	in_new_desc						IN	VARCHAR2,
	in_sub_object_id    			IN  audit_log.sub_object_id%TYPE DEFAULT NULL
);

PROCEDURE AuditInfoXmlChanges(
	in_act							IN	security_pkg.T_ACT_ID,
	in_audit_type_id				IN	audit_log.audit_type_id%TYPE,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_info_xml_fields				IN	XMLType,
	in_old_info_xml					IN	XMLType,
	in_new_info_xml					IN	XMLType,
	in_sub_object_id    			IN  audit_log.sub_object_id%TYPE DEFAULT NULL
);

PROCEDURE GetAuditLogForUser(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_user_sid						IN	security_pkg.T_SID_ID,
	in_order_by						IN	VARCHAR2, -- redundant but needed for quick list output
	out_cur							OUT	SYS_REFCURSOR
);

PROCEDURE GetAuditLogForUser(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_user_sid						IN	security_pkg.T_SID_ID,
	in_order_by						IN	VARCHAR2, -- redundant but needed for quick list output
	in_start_row					IN	NUMBER,
	in_page_size					IN	NUMBER,
	in_start_date					IN	DATE,
	in_end_date						IN	DATE,
	out_total						OUT	NUMBER,
	out_cur							OUT	SYS_REFCURSOR
);

PROCEDURE GetAuditLogForObject(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_order_by						IN	VARCHAR2, -- redundant but needed for quick list output
	out_cur							OUT	SYS_REFCURSOR
);

PROCEDURE GetAuditLogForObject(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_sub_object_id				IN	audit_log.sub_object_id%TYPE,
	in_order_by						IN	VARCHAR2, -- redundant but needed for quick list output
	out_cur							OUT	SYS_REFCURSOR
);

PROCEDURE GetAuditLogForObjectType(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_audit_type_id    			IN  audit_log.audit_type_id%TYPE,
	in_order_by						IN	VARCHAR2, -- redundant but needed for quick list output
	out_cur							OUT	SYS_REFCURSOR
);

PROCEDURE GetAuditLogForObjectType(
	in_act_id						IN	security_pkg.T_ACT_ID,
	in_app_sid						IN	security_pkg.T_SID_ID,
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_sub_object_id				IN	audit_log.sub_object_id%TYPE,
	in_audit_type_id    			IN  audit_log.audit_type_id%TYPE,
	in_order_by						IN	VARCHAR2, -- redundant but needed for quick list output
	out_cur							OUT	SYS_REFCURSOR
);

PROCEDURE GenerateAuditReport(
	in_start_dtm					IN	DATE,
	in_end_dtm						IN	DATE,
	out_cur							OUT SYS_REFCURSOR
);

PROCEDURE GetConfiguration(
	out_cur							OUT	SYS_REFCURSOR
);

PROCEDURE SetConfiguration(
	in_alert_mail_address					IN	customer.alert_mail_address%TYPE,
	in_alert_mail_name						IN	customer.alert_mail_name%TYPE,
	in_alert_batch_run_time					IN	customer.alert_batch_run_time%TYPE,
	in_raise_reminders						IN	customer.raise_reminders%TYPE,
	in_raise_split_deleg_alerts				IN	customer.raise_split_deleg_alerts%TYPE,
	in_cascade_reject       				IN	customer.cascade_reject%TYPE,
	in_approver_response_window				IN	customer.approver_response_Window%TYPE,
	in_self_reg_group_sid					IN	customer.self_reg_group_sid%TYPE,
	in_self_reg_needs_approval				IN	customer.self_reg_needs_approval%TYPE,
	in_self_reg_approver_sid				IN	customer.self_reg_approver_sid%TYPE,
    in_lock_end_dtm             			IN  customer.lock_end_dtm%TYPE,
    in_allow_partial_submit					IN	customer.allow_partial_submit%TYPE,
    in_create_sheets_period_end				IN	customer.create_sheets_at_period_end%TYPE,
	in_incl_inactive_regions				IN	customer.incl_inactive_regions%TYPE,
	in_lock_prevents_editing				IN	customer.lock_prevents_editing%TYPE,
	in_tear_off_deleg_header        		IN  customer.tear_off_deleg_header%TYPE,
	in_deleg_dropdown_threshold     		IN  customer.deleg_dropdown_threshold%TYPE,
	in_show_data_approve_confirm			IN	customer.show_data_approve_confirm%TYPE  DEFAULT 0,
	in_auto_anonymisation_enabled			IN	customer.auto_anonymisation_enabled%TYPE,
	in_inactive_days_before_anonymisation	IN	customer.inactive_days_before_anonymisation%TYPE
);

PROCEDURE SetSelfRegistrationPermissions(
	in_setting						IN	NUMBER
);


/**
 * Checks the capability is valid and creates a secobj of the right class in the right place.
 *
 * @param in_capability					The name of capability to create
 * @param in_swallow_dup_exception		Optionally swallows the security_pkg.DUPLICATE_OBJECT_NAME exception
 */
PROCEDURE EnableCapability(
	in_capability  					IN	security_pkg.T_SO_NAME,
	in_swallow_dup_exception    	IN  NUMBER DEFAULT 1
);

PROCEDURE DeleteCapability (
	in_name							VARCHAR2
);

/**
 * Check if app have Capabilities specified, and if user has certain capability.
 *
 * @param in_capability		The name of capability to check against.
 */
FUNCTION CheckCapability(
	in_capability  					IN	security_pkg.T_SO_NAME
) RETURN BOOLEAN;
PRAGMA RESTRICT_REFERENCES(CheckCapability, WNDS, WNPS);

FUNCTION SQL_CheckCapability(
	in_capability  					IN	security_pkg.T_SO_NAME
) RETURN BINARY_INTEGER;
PRAGMA RESTRICT_REFERENCES(SQL_CheckCapability, WNDS, WNPS);

FUNCTION SQL_CheckCapability(
    in_act_Id                   	IN  security_pkg.T_ACT_ID,
	in_capability  					IN	security_pkg.T_SO_NAME
) RETURN BINARY_INTEGER;
PRAGMA RESTRICT_REFERENCES(SQL_CheckCapability, WNDS, WNPS);

FUNCTION CheckCapabilityOfUser(
	in_user_sid						IN  security_Pkg.T_SID_ID,
	in_capability  					IN	security_pkg.T_SO_NAME
) RETURN BOOLEAN;

FUNCTION SQL_CheckCapabilityOfUser(
	in_user_sid						IN  security_Pkg.T_SID_ID,
	in_capability  					IN	security_pkg.T_SO_NAME
) RETURN BINARY_INTEGER;

PROCEDURE GetCapabilities(
	in_act_id      					IN 	security_pkg.T_ACT_ID,
	out_cur							OUT SYS_REFCURSOR
);

/**
 * Check if app have Capabilities specified, and if user has certain capability
 *
 * @param in_act_id				The access token.
 * @param in_capability		The name of capability to check against.
 */
FUNCTION CheckCapability(
	in_act_id      					IN 	security_pkg.T_ACT_ID,
	in_capability  					IN	security_pkg.T_SO_NAME
) RETURN BOOLEAN;
PRAGMA RESTRICT_REFERENCES(CheckCapability, WNDS, WNPS);

/**
 * Return all user groups for the current application
 *
 * @param out_cur				Output rowset of the form sid_id, name
 */
PROCEDURE GetAppGroups(
	out_cur							OUT	SYS_REFCURSOR
);

/**
 * Get a per application lock
 *
 * @param in_lock_type			The type of lock to take
 * @param in_app_sid			The application to take the lock for
 */
PROCEDURE LockApp(
	in_lock_type					IN	app_lock.lock_type%TYPE,
	in_app_sid						IN	app_lock.app_sid%TYPE DEFAULT SYS_CONTEXT('SECURITY', 'APP')
);

/**
 * Try to get a per application lock, returning TRUE if the lock
 * was successful, and FALSE if the lock could not be acquired
 * because another session already has it.
 *
 * @param in_lock_type			The type of lock to take
 * @param in_app_sid			The application to take the lock for
 * @return boolean indicating success
 */
FUNCTION TryLockApp(
	in_app_sid						IN	app_lock.app_sid%TYPE,
	in_lock_type					IN	app_lock.lock_type%TYPE
) RETURN BOOLEAN;

/**
 * Check if the current application has an unmerged scenario enabled
 *
 * @param in_app_sid			The application to check for
 */
FUNCTION HasUnmergedScenario(
	in_app_sid						IN	customer.app_sid%TYPE DEFAULT SYS_CONTEXT('SECURITY', 'APP')
)
RETURN BOOLEAN;
PRAGMA RESTRICT_REFERENCES(HasUnmergedScenario, WNDS, WNPS);

/**
 * Value change report
 *
 * @param in_region_sid			Region sid
 * @param in_user_sid			Last merged/changed by user sid
 * @param in_period_start_dtm	Data period start date
 * @param in_period_end_dtm		Data period end date
 * @param in_merged_start_dtm	Data merged/changed period start date
 * @param in_merged_end_dtm		Data merged/changed period end date
 * @param in_data_source_name	Delegation/import session name
 * @param in_indicator_sid		Indicator sid
 * @param out_cur				Output cursor
 */
PROCEDURE GetValueChangeReport(
	in_region_sid			IN	security.security_pkg.T_SID_ID,
	in_user_sid				IN	security.security_pkg.T_SID_ID,
	in_period_start_dtm		IN	DATE,
	in_period_end_dtm		IN	DATE,
	in_merged_start_dtm		IN	DATE,
	in_merged_end_dtm		IN	DATE,
	in_data_source_name		IN	VARCHAR2,
	in_indicator_sid		IN	security.securITY_PKG.T_SID_ID,
	out_cur					OUT	SYS_REFCURSOR
);

/**
 * Gets audit log
 *
 * @param in_act_id					Access token
 * @param in_app_sid				Application sid
 * @param in_object_sid				Securable object id
 * @param in_sub_object_id			Securable object id
 * @param in_audit_type_group_id	Audit type group restriction
 * @param in_start_row				Start row
 * @param in_page_size				Number of records
 * @param in_start_date				Audit start date
 * @param in_end_date				Audit end date
 * @param out_total					Output total number of records
 * @param out_cur					Output cursor
 */
PROCEDURE GetAuditLogForObject(
	in_act_id						IN	security_pkg.T_ACT_ID					DEFAULT SYS_CONTEXT('SECURITY', 'ACT'),
	in_app_sid						IN	security_pkg.T_SID_ID					DEFAULT SYS_CONTEXT('SECURITY', 'APP'),
	in_object_sid					IN	security_pkg.T_SID_ID,
	in_sub_object_id				IN	audit_log.sub_object_id%TYPE			DEFAULT NULL,
	in_audit_type_group_id			IN	audit_type.audit_type_group_id%TYPE		DEFAULT NULL,
	in_start_row					IN	NUMBER,
	in_page_size					IN	NUMBER,
	in_start_date					IN	DATE,
	in_end_date						IN	DATE,
	out_total						OUT	NUMBER,
	out_cur							OUT	SYS_REFCURSOR
);

/*
This is used in Merge statements where a match clause is using "nextval" on a sequence.
To avoid sequence inflation, the sequence is set to NO_CACHE and the sequence is
 incremented "just in time". 
This approach ensures that the sequence only increases by the number of records inserted.
Refer to https://docs.oracle.com/cd/B19306_01/server.102/b14200/pseudocolumns002.htm#sthref809
*/
FUNCTION JITNextVal (
	in_seq_name 		IN	varchar2
) RETURN NUMBER;

PROCEDURE GetAutoAnonymisedEnabled(
	out_auto_anonymised_enabled				OUT NUMBER
);

PROCEDURE GetAutoAnonymisedInactiveDays(
	out_auto_anonymised_inactive_days		OUT NUMBER
);

END Csr_Data_Pkg;
/
