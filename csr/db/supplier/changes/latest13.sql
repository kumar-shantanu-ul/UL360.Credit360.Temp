VARIABLE version NUMBER
BEGIN :version := 13; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM supplier.version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/

 CREATE GLOBAL TEMPORARY TABLE TEMP_SUPPLIER_USER
(
  CSR_USER_SID   NUMBER(22,10)                    NOT NULL,
  NAME  		 VARCHAR2(256 BYTE)               NOT NULL
)
ON COMMIT DELETE ROWS
NOCACHE;


CREATE UNIQUE INDEX TEMP_SUPPLIER_USER_PK ON TEMP_SUPPLIER_USER
(CSR_USER_SID);


ALTER TABLE TEMP_SUPPLIER_USER ADD (
  CONSTRAINT TEMP_SUPPLIER_USER_PK
 PRIMARY KEY
 (CSR_USER_SID));
 
 UPDATE supplier.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
