VARIABLE version NUMBER
BEGIN :version := 26; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM supplier.version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/


PROMPT Add new tables to hold one to many data provider option

CREATE TABLE CUSTOMER_OPTIONS(
    CSR_ROOT_SID              NUMBER(10, 0)     NOT NULL,
    EDIT_PRODUCT_URL          VARCHAR2(1024),
    EDIT_SUPPLIER_URL         VARCHAR2(1024),
    PRODUCT_CAT_FORM_CLASS    VARCHAR2(256),
    SUPPLIER_CAT_FORM_CLASS    VARCHAR2(256),
    CONSTRAINT PK168 PRIMARY KEY (CSR_ROOT_SID)
)
;

PROMPT  csr_root_sid dropped in all_company - need to fix up (prob can cascade this but need to be safe as v late) 
ALTER TABLE SUPPLIER.COMPANY_USER
 DROP CONSTRAINT COMPANY_USER_PK;
 
ALTER TABLE SUPPLIER.COMPANY_USER
ADD CONSTRAINT COMPANY_USER_PK
PRIMARY KEY
(CSR_USER_SID);

ALTER TABLE COMPANY_USER DROP COLUMN csr_root_sid;

-- remove all FK references to PK4 all_copmany 

ALTER TABLE SUPPLIER.COMPANY_USER DROP CONSTRAINT REFALL_COMPANY117;
ALTER TABLE SUPPLIER.COMPANY_USER DROP COLUMN CSR_ROOT_SID;

ALTER TABLE SUPPLIER.ALL_PRODUCT DROP CONSTRAINT REFALL_COMPANY111;

ALTER TABLE SUPPLIER.ALL_PRODUCT DROP CONSTRAINT REFALL_COMPANY116;

ALTER TABLE SUPPLIER.SUPPLIER_ANSWERS DROP CONSTRAINT REFALL_COMPANY215;

ALTER TABLE SUPPLIER.SUPPLIER_ANSWERS_WOOD DROP CONSTRAINT REFALL_COMPANY216;


-- recreate company_all PK 
ALTER TABLE SUPPLIER.ALL_COMPANY
 DROP CONSTRAINT PK4;
 
ALTER TABLE SUPPLIER.ALL_COMPANY
ADD CONSTRAINT PK4
PRIMARY KEY
(COMPANY_SID);

-- add back in constraints we need that hang off all_company
ALTER TABLE SUPPLIER.ALL_PRODUCT
ADD CONSTRAINT REFALL_COMPANY111
    FOREIGN KEY (SUPPLIER_COMPANY_SID)
    REFERENCES ALL_COMPANY(COMPANY_SID);

ALTER TABLE SUPPLIER.SUPPLIER_ANSWERS
ADD CONSTRAINT REFALL_COMPANY215
    FOREIGN KEY (COMPANY_SID)
    REFERENCES ALL_COMPANY(COMPANY_SID);
    
ALTER TABLE SUPPLIER.SUPPLIER_ANSWERS_WOOD
ADD CONSTRAINT REFALL_COMPANY216
    FOREIGN KEY (COMPANY_SID)
    REFERENCES ALL_COMPANY(COMPANY_SID);
--

-- 
-- TABLE: PRODUCT_QUESTIONNAIRE_PROVIDER 
--

CREATE TABLE PRODUCT_QUESTIONNAIRE_PROVIDER(
    PRODUCT_ID              NUMBER(10, 0)    NOT NULL,
    QUESTIONNAIRE_ID        NUMBER(10, 0)    NOT NULL,
    PROVIDER_SID            NUMBER(10, 0)    NOT NULL,
    PROVIDER_COMPANY_SID    NUMBER(10, 0),
    CONSTRAINT PK164 PRIMARY KEY (PRODUCT_ID, QUESTIONNAIRE_ID, PROVIDER_SID)
)
;



ALTER TABLE PRODUCT_QUESTIONNAIRE_PROVIDER ADD CONSTRAINT RefALL_COMPANY254 
    FOREIGN KEY (PROVIDER_COMPANY_SID)
    REFERENCES ALL_COMPANY(COMPANY_SID)
;

-- change name of product_questionnaire to product_questionnaire_link
rename product_questionnaire to product_questionnaire_link;

ALTER TABLE PRODUCT_QUESTIONNAIRE_PROVIDER ADD CONSTRAINT RefPRODUCT_QUESTIONNAIRE_LI261 
    FOREIGN KEY (PRODUCT_ID, QUESTIONNAIRE_ID)
    REFERENCES PRODUCT_QUESTIONNAIRE_LINK(PRODUCT_ID, QUESTIONNAIRE_ID)
;


-- 
-- TABLE: QUESTIONNAIRE_GROUP 
--

CREATE TABLE QUESTIONNAIRE_GROUP(
    GROUP_ID        NUMBER(10, 0)     NOT NULL,
    CSR_ROOT_SID    NUMBER(10, 0),
    NAME            VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK165 PRIMARY KEY (GROUP_ID)
)
;

CREATE TABLE QUESTIONNAIRE_GROUP_MEMBERSHIP(
    QUESTIONNAIRE_ID    NUMBER(10, 0)    NOT NULL,
    GROUP_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK167 PRIMARY KEY (QUESTIONNAIRE_ID, GROUP_ID)
)
;

ALTER TABLE QUESTIONNAIRE_GROUP_MEMBERSHIP ADD CONSTRAINT RefQUESTIONNAIRE_GROUP248 
    FOREIGN KEY (GROUP_ID)
    REFERENCES QUESTIONNAIRE_GROUP(GROUP_ID)
;

ALTER TABLE QUESTIONNAIRE_GROUP_MEMBERSHIP ADD CONSTRAINT RefQUESTIONNAIRE249 
    FOREIGN KEY (QUESTIONNAIRE_ID)
    REFERENCES QUESTIONNAIRE(QUESTIONNAIRE_ID)
;
/

PROMPT Copy approvers and providers to new style structures

ALTER TABLE PRODUCT_QUESTIONNAIRE_LINK ADD (APPROVER_SID  NUMBER(10, 0));
ALTER TABLE PRODUCT_QUESTIONNAIRE_LINK ADD (APPROVER_COMPANY_SID  NUMBER(10, 0));
ALTER TABLE PRODUCT_QUESTIONNAIRE_LINK ADD (USED  NUMBER(1, 0) DEFAULT 0 NOT NULL);

ALTER TABLE PRODUCT_QUESTIONNAIRE_LINK ADD CONSTRAINT RefALL_COMPANY253 
    FOREIGN KEY (APPROVER_COMPANY_SID)
    REFERENCES ALL_COMPANY(COMPANY_SID)
;
 
UPDATE product_questionnaire_link pq SET approver_sid = (SELECT p.data_approver_sid FROM all_product p WHERE p.product_id = pq.product_id);
UPDATE product_questionnaire_link pq SET approver_company_sid = (SELECT p.owner_company_sid FROM all_product p WHERE p.product_id = pq.product_id);
UPDATE product_questionnaire_link pq SET used = 1;

-- set up Q groups
INSERT INTO QUESTIONNAIRE_GROUP SELECT 1, csr_root_sid, 'Sustainable Sourcing' FROM csr.customer WHERE host = 'bootssupplier.credit360.com';                
INSERT INTO QUESTIONNAIRE_GROUP SELECT 2, csr_root_sid, 'Sustainable Sourcing' FROM csr.customer WHERE host = 'bootstest.credit360.com';
INSERT INTO QUESTIONNAIRE_GROUP SELECT 2, csr_root_sid, 'Sustainable Sourcing' FROM csr.customer WHERE host = 'bs.credit360.com';
INSERT INTO QUESTIONNAIRE_GROUP SELECT 2, csr_root_sid, 'Sustainable Sourcing' FROM csr.customer WHERE host = 'bsstage.credit360.com';

INSERT INTO QUESTIONNAIRE_GROUP_MEMBERSHIP SELECT questionnaire_id, 1 FROM QUESTIONNAIRE WHERE questionnaire_id <=5;
INSERT INTO QUESTIONNAIRE_GROUP_MEMBERSHIP SELECT questionnaire_id, 2 FROM QUESTIONNAIRE WHERE questionnaire_id <=5;

-- insert all remaining Q's (unused) into product_questionnaire 
insert into product_questionnaire_link 
	select product_id, questionnaire_id, 1, null, null, 0
		from 
		(select product_id, questionnaire_id from questionnaire q, all_product p 
			MINUS 
		select product_id, questionnaire_id from product_questionnaire_link);

--
INSERT INTO product_questionnaire_provider 
    SELECT p.product_id, pq.QUESTIONNAIRE_ID, p.data_provider_sid, p.data_provider_company_sid 
        FROM PRODUCT_QUESTIONNAIRE_LINK pq, all_product p
    WHERE p.PRODUCT_ID = pq.product_id;

-- create product_questionnaire_link view that just shows Q's in use
CREATE or replace VIEW PRODUCT_QUESTIONNAIRE AS
SELECT PR.PRODUCT_ID, PR.QUESTIONNAIRE_ID, PR.QUESTIONNAIRE_STATUS_ID, PR.APPROVER_COMPANY_SID, PR.APPROVER_SID
FROM PRODUCT_QUESTIONNAIRE_LINK	 PR
WHERE USED = 1
;

-- Update version
UPDATE supplier.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
