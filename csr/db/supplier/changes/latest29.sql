VARIABLE version NUMBER
BEGIN :version := 29; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM supplier.version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/

-- 
-- TABLE: NN_COUNTRY 
--

CREATE TABLE NN_COUNTRY(
    COUNTRY_CODE    VARCHAR2(8)      NOT NULL,
    COUNTRY         VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK54_1 PRIMARY KEY (COUNTRY_CODE)
)
;



-- 
-- TABLE: NN_MANUFACTURING_SITE 
--

CREATE TABLE NN_MANUFACTURING_SITE(
    COMPANY_PART_ID        NUMBER(10, 0)     NOT NULL,
    MANUFACTURER_NAME      VARCHAR2(1024)    NOT NULL,
    SITE_ADDRESS           CLOB              NOT NULL,
    SITE_CONTACT_NAME      VARCHAR2(1024),
    SITE_CONTACT_NUMBER    VARCHAR2(256),
    COUNTRY_CODE           VARCHAR2(8)       NOT NULL,
    EMPLOYEES_AT_SITE      NUMBER(10, 0),
    PROCESSES_AT_SITE      CLOB,
    CONSTRAINT PK177 PRIMARY KEY (COMPANY_PART_ID)
)
;


-- 
-- TABLE: NN_SUPPLIER_ANSWERS 
--

CREATE TABLE NN_SUPPLIER_ANSWERS(
    COMPANY_SID           NUMBER(10, 0)    NOT NULL,
    MANUFACTURING_CATS    CLOB,
    NOTES                 CLOB,
    DOCUMENT_GROUP_ID     NUMBER(10, 0),
    OTHER_PRODUCT_INFO    CLOB,
    CONSTRAINT PK142_1 PRIMARY KEY (COMPANY_SID)
)
;


-- 
-- TABLE: NN_MANUFACTURING_SITE 
--

ALTER TABLE NN_MANUFACTURING_SITE ADD CONSTRAINT RefNN_COUNTRY271 
    FOREIGN KEY (COUNTRY_CODE)
    REFERENCES NN_COUNTRY(COUNTRY_CODE)
;

-- 
-- TABLE: NN_SUPPLIER_ANSWERS 
--

ALTER TABLE NN_SUPPLIER_ANSWERS ADD CONSTRAINT RefDOCUMENT_GROUP273 
    FOREIGN KEY (DOCUMENT_GROUP_ID)
    REFERENCES DOCUMENT_GROUP(DOCUMENT_GROUP_ID)
;

ALTER TABLE NN_SUPPLIER_ANSWERS ADD CONSTRAINT RefALL_COMPANY274 
    FOREIGN KEY (COMPANY_SID)
    REFERENCES ALL_COMPANY(COMPANY_SID)
;


--
--
-- Update version
UPDATE supplier.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
