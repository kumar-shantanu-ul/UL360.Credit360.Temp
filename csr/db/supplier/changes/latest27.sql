VARIABLE version NUMBER
BEGIN :version := 27; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM supplier.version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/


PROMPT Drop cols on product table and update views 

ALTER TABLE ALL_PRODUCT DROP COLUMN DATA_PROVIDER_COMPANY_SID;
ALTER TABLE ALL_PRODUCT DROP COLUMN DATA_PROVIDER_SID;
ALTER TABLE SUPPLIER.ALL_PRODUCT DROP COLUMN OWNER_COMPANY_SID;
ALTER TABLE SUPPLIER.ALL_PRODUCT DROP COLUMN DATA_APPROVER_SID;
/

CREATE OR REPLACE VIEW PRODUCT
(PRODUCT_ID, CSR_ROOT_SID, PRODUCT_CODE, DESCRIPTION, SUPPLIER_COMPANY_SID, PRODUCT_STATUS_ID, 
 DUE_DATE, ACTIVE, DELETED, STATUS_CHANGED_DTM, DECLARATION_MADE_BY_SID)
AS 
SELECT AL.PRODUCT_ID, AL.CSR_ROOT_SID, AL.PRODUCT_CODE, AL.DESCRIPTION, AL.SUPPLIER_COMPANY_SID, AL.PRODUCT_STATUS_ID, AL.DUE_DATE, AL.ACTIVE, AL.DELETED, AL.STATUS_CHANGED_DTM, AL.DECLARATION_MADE_BY_SID
FROM ALL_PRODUCT AL
WHERE DELETED = 0;
/

PROMPT add company tag table and new rows to product_tag

ALTER TABLE PRODUCT_TAG ADD (NOTE  VARCHAR2(1024));
ALTER TABLE PRODUCT_TAG ADD (NUM  NUMBER(24, 10));


CREATE TABLE COMPANY_TAG(
    TAG_ID         NUMBER(10, 0)     NOT NULL,
    COMPANY_SID    NUMBER(10, 0)     NOT NULL,
    NOTE           VARCHAR2(1024),
    NUM            NUMBER(24, 10),
    CONSTRAINT PK48_1 PRIMARY KEY (TAG_ID, COMPANY_SID)
)
;

ALTER TABLE COMPANY_TAG ADD CONSTRAINT RefALL_COMPANY265 
    FOREIGN KEY (COMPANY_SID)
    REFERENCES ALL_COMPANY(COMPANY_SID)
;

ALTER TABLE COMPANY_TAG ADD CONSTRAINT RefTAG266 
    FOREIGN KEY (TAG_ID)
    REFERENCES TAG(TAG_ID)
;

--
--
-- Update version
UPDATE supplier.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
