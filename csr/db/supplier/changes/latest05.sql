VARIABLE version NUMBER
BEGIN :version := 5; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM supplier.version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/

ALTER TABLE NP_PRODUCTION_PROCESS_GROUP
	RENAME COLUMN NP_PRODUCTION_PROCESS_ID TO NP_PRODUCTION_PROCESS_GROUP_ID;

ALTER TABLE NP_PP_GROUP_MEMBER
	RENAME COLUMN NP_PRODUCTION_PROCESS_ID TO NP_PRODUCTION_PROCESS_GROUP_ID;

ALTER TABLE NP_COMPONENT_DESCRIPTION
	RENAME COLUMN NP_PRODUCTION_PROCESS_ID TO NP_PRODUCTION_PROCESS_GROUP_ID;
	
ALTER TABLE NP_COMPONENT_DESCRIPTION
	RENAME COLUMN COLLECTION_DESCRIPTION TO COLLECTION_DESC;

ALTER TABLE NP_PP_GROUP_MEMBER
	ADD NP_PRODUCTION_PROCESS_ID	NUMBER(10, 0)	NOT NULL;

ALTER TABLE NP_PP_GROUP_MEMBER DROP PRIMARY KEY;

ALTER TABLE NP_PP_GROUP_MEMBER DROP CONSTRAINT RefNP_PRODUCTION_PROCESS202;

ALTER TABLE NP_PP_GROUP_MEMBER DROP CONSTRAINT RefNP_PRODUCTION_PROCESS_GR203;

ALTER TABLE NP_PP_GROUP_MEMBER ADD CONSTRAINT PK125 PRIMARY KEY (NP_PRODUCTION_PROCESS_GROUP_ID, NP_PRODUCTION_PROCESS_ID);

ALTER TABLE NP_PP_GROUP_MEMBER ADD CONSTRAINT RefNP_PRODUCTION_PROCESS202 
    FOREIGN KEY (NP_PRODUCTION_PROCESS_ID)
    REFERENCES NP_PRODUCTION_PROCESS(NP_PRODUCTION_PROCESS_ID);

ALTER TABLE NP_PP_GROUP_MEMBER ADD CONSTRAINT RefNP_PRODUCTION_PROCESS_GR203 
    FOREIGN KEY (NP_PRODUCTION_PROCESS_GROUP_ID)
    REFERENCES NP_PRODUCTION_PROCESS_GROUP(NP_PRODUCTION_PROCESS_GROUP_ID);


UPDATE supplier.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
