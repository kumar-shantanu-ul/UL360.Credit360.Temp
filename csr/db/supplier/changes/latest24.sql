VARIABLE version NUMBER
BEGIN :version := 24; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM supplier.version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/

CREATE TABLE PRODUCT_CODE_STEM(
    PRODUCT_CODE_STEM_ID    NUMBER(10, 0)    NOT NULL,
    STEM                    VARCHAR2(32)     NOT NULL,
    CONSTRAINT PK148 PRIMARY KEY (PRODUCT_CODE_STEM_ID)
)
;

CREATE TABLE PRODUCT_CODE_STEM_TAG(
    PRODUCT_CODE_STEM_ID    NUMBER(10, 0)    NOT NULL,
    TAG_ID                  NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK151 PRIMARY KEY (PRODUCT_CODE_STEM_ID, TAG_ID)
)
;

ALTER TABLE PRODUCT_CODE_STEM_TAG ADD CONSTRAINT RefPRODUCT_CODE_STEM_FK 
    FOREIGN KEY (PRODUCT_CODE_STEM_ID)
    REFERENCES PRODUCT_CODE_STEM(PRODUCT_CODE_STEM_ID)
;

ALTER TABLE PRODUCT_CODE_STEM_TAG ADD CONSTRAINT RefTAG_FK 
    FOREIGN KEY (TAG_ID)
    REFERENCES TAG(TAG_ID)
;


CREATE INDEX Ref148218 ON PRODUCT_CODE_STEM_TAG(PRODUCT_CODE_STEM_ID)
;

CREATE INDEX Ref47219 ON PRODUCT_CODE_STEM_TAG(TAG_ID)
;

CREATE SEQUENCE PRODUCT_CODE_SEQ 
    START WITH 1000000
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    ORDER
;



-- Update version
UPDATE supplier.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
