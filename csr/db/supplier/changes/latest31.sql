VARIABLE version NUMBER
BEGIN :version := 31; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM supplier.version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/

-- 
-- TABLE: NN_COMPANY_RISK 
--

CREATE TABLE NN_COMPANY_RISK(
    COMPANY_SID             NUMBER(10, 0)    NOT NULL,
    COMPANY_RISK_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK184 PRIMARY KEY (COMPANY_SID)
)
;



-- 
-- TABLE: NN_COMPANY_RISK_TYPE 
--

CREATE TABLE NN_COMPANY_RISK_TYPE(
    COMPANY_RISK_TYPE_ID    NUMBER(10, 0)     NOT NULL,
    DESCRIPTION             VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK185 PRIMARY KEY (COMPANY_RISK_TYPE_ID)
)
;



-- 
-- TABLE: NN_COMPANY_RISK 
--

ALTER TABLE NN_COMPANY_RISK ADD CONSTRAINT RefNN_COMPANY_RISK_TYPE287 
    FOREIGN KEY (COMPANY_RISK_TYPE_ID)
    REFERENCES NN_COMPANY_RISK_TYPE(COMPANY_RISK_TYPE_ID)
;

ALTER TABLE NN_COMPANY_RISK ADD CONSTRAINT RefALL_COMPANY288 
    FOREIGN KEY (COMPANY_SID)
    REFERENCES ALL_COMPANY(COMPANY_SID)
;



INSERT INTO NN_COMPANY_RISK_TYPE VALUES (0, 'Unknown');
INSERT INTO NN_COMPANY_RISK_TYPE VALUES (1, 'Low');
INSERT INTO NN_COMPANY_RISK_TYPE VALUES (2, 'Medium');
INSERT INTO NN_COMPANY_RISK_TYPE VALUES (3, 'High');

-- Update version
UPDATE supplier.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
