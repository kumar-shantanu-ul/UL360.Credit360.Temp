VARIABLE version NUMBER
BEGIN :version := 38; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM supplier.version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/


ALTER TABLE GT_TRANSPORT_ANSWERS DROP COLUMN MADE_INTERNALLY;
ALTER TABLE GT_TRANSPORT_ANSWERS DROP COLUMN GT_TRANSPORT_TYPE_ID;

ALTER TABLE GT_COUNTRY_MADE_IN ADD (
	GT_TRANSPORT_TYPE_ID	NUMBER(10)		NOT NULL,
	MADE_INTERNALLY			NUMBER(1)		DEFAULT 0	NOT NULL,
	PCT						NUMBER(6,3)		NULL
);

ALTER TABLE GT_COUNTRY_MADE_IN ADD CONSTRAINT RefGT_TRANSPORT_TYPE419 
    FOREIGN KEY (GT_TRANSPORT_TYPE_ID)
    REFERENCES GT_TRANSPORT_TYPE(GT_TRANSPORT_TYPE_ID)
;


-- Add the transport type to the primary key
ALTER TABLE GT_COUNTRY_MADE_IN DROP CONSTRAINT PK199;
ALTER TABLE GT_COUNTRY_MADE_IN ADD CONSTRAINT PK199 PRIMARY KEY (PRODUCT_ID, COUNTRY_CODE, GT_TRANSPORT_TYPE_ID);

-- Add some base-data
INSERT INTO gt_transport_type (gt_transport_type_id, description, pos) VALUES(0, 'Onsite', 0);

PROMPT set forulation dropdown defaults to -1
ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS DROP COLUMN CONCENTRATE_PACK;

ALTER TABLE SUPPLIER.GT_FORMULATION_ANSWERS ADD (CONCENTRATE NUMBER(1) DEFAULT -1 NOT NULL);

ALTER TABLE SUPPLIER.GT_FORMULATION_ANSWERS ADD (BS_ACCREDITED_PRIORITY_SRC  VARCHAR2(4000));
ALTER TABLE SUPPLIER.GT_FORMULATION_ANSWERS ADD (BS_ACCREDITED_OTHER_SRC     VARCHAR2(4000));

PROMPT set packaging dropdown defaults to -1
ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(REFILL_PACK  DEFAULT -1);

ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(SINGLE_IN_PACK  DEFAULT -1);

ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(SETTLE_IN_TRANSIT  DEFAULT -1);

ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(PACK_FOR_PROTECTION  DEFAULT -1);

ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(RETAIL_PACKS_STACKABLE  DEFAULT -1);

ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(CORRECT_BIOPOLYMER_USE  DEFAULT -1);

ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(PACK_MEET_REQ  DEFAULT -1);

ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(PACK_SHELF_READY  DEFAULT -1);

ALTER TABLE SUPPLIER.GT_PACKAGING_ANSWERS
MODIFY(PACK_CONSUM_RCYLD  DEFAULT -1);

-- Update version
UPDATE supplier.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
