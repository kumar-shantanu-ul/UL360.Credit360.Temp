DECLARE
	TYPE t_tabs IS TABLE OF VARCHAR2(30); --table names
	v_list t_tabs := t_tabs(
		'CMS_COMPANY_STAGING',
		'CMS_COMPANY_STAGING_2',
		'COMPANY_DATA',
		'COMPANY_DATA_2',
		'SCORE_BAND_MAP',
		'SCORE_BAND',
		'MERCH_CAT',
		'SALES_ORG',
		'COMPANY_SALES_ORG',
		'CHILD_CMS_COMPANY_STAGING',
		'CHILD_CMS_COMPANY_STAGING_1',
		'CMS_COMPANY_STAGING_3',
		'CMS_COMPANY_STAGING_4',
		'CHILD_CMS_COMPANY_STAGING_4',
		'COMPANY_DATA_4',
		'TURNOVER_STAGING',
		'COMPANY_TURNOVER'
	);
BEGIN
	security.user_pkg.logonadmin(:bv_site_name);
	
	-- Unregister table if there is one
	FOR i IN 1 .. v_list.COUNT 
	LOOP
		FOR r IN (
			SELECT oracle_table
			  FROM cms.tab 
			 WHERE oracle_schema = 'RAG' 
			   AND oracle_table = v_list(i)
		)
		LOOP
			cms.tab_pkg.UnregisterTable(
				in_oracle_schema => 'RAG',
				in_oracle_table	 => r.oracle_table
			);
		END LOOP;
	END LOOP;

	FOR i IN 1 .. v_list.COUNT 
	LOOP
		cms.tab_pkg.DropTable('RAG', v_list(i), true);
	END LOOP;
END;
/

CREATE TABLE rag.CMS_COMPANY_STAGING (
	CMS_COMPANY_STAGING_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_REFERENCE		VARCHAR2(255)	NOT NULL,
	NAME					VARCHAR2(255)	NOT NULL,
	COUNTRY					VARCHAR2(255)	NOT NULL,
	REVENUE					NUMBER(10,2),
	ASSESSED_BY				VARCHAR2(255),
	SCORE_BAND				VARCHAR2(255),
	SCORE					NUMBER(10,2),
	ASSESSMENT_DATE			DATE,
	COMMENTS				VARCHAR2(255),
	EXPENSES_STRING			VARCHAR2(255),
	FAC_COMPANY_SID			NUMBER(10, 0),
	CONSTRAINT PK_CMS_COMPANY_STAGING PRIMARY KEY (CMS_COMPANY_STAGING_ID),
	CONSTRAINT UC_CMS_COMPANY_STAGING UNIQUE(COMPANY_REFERENCE)
);

CREATE TABLE rag.CMS_COMPANY_STAGING_2 (
	CMS_COMPANY_STAGING_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_REFERENCE		VARCHAR2(255)	NOT NULL,
	NAME					VARCHAR2(255)	NOT NULL,
	COUNTRY					VARCHAR2(255)	NOT NULL,
	REVENUE					NUMBER(10,2),
	ASSESSED_BY				VARCHAR2(255),
	SCORE_BAND				VARCHAR2(255),
	SCORE					NUMBER(10,2),
	ASSESSMENT_DATE			DATE,
	COMMENTS				VARCHAR2(255),
	EXPENSES_STRING			VARCHAR2(255),
	FAC_COMPANY_SID			NUMBER(10, 0),
	CONSTRAINT PK_CMS_COMPANY_STAGING_2 PRIMARY KEY (CMS_COMPANY_STAGING_ID),
	CONSTRAINT UC_CMS_COMPANY_STAGING_2 UNIQUE(COMPANY_REFERENCE)
);

-- CMS_COMPANY_STAGING_3 is used both in core and 1-N cms merging
-- CHILD_CMS_COMPANY_STAGING_1 & 2 are going to be used in 1-N merging by linking to CMS_COMPANY_STAGING_3
CREATE TABLE rag.CMS_COMPANY_STAGING_3 (
	CMS_COMPANY_STAGING_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_ID				VARCHAR2(255)	NOT NULL,
	REF_1					VARCHAR2(255)	NULL,
	REF_2					VARCHAR2(255)	NULL,
	REF_3					VARCHAR2(255)	NULL,
	BATCH_NUM				NUMBER(10, 0)	NULL, --will be switched on-off according to the child staging
	NAME					VARCHAR2(255)	NOT NULL,
	COUNTRY					VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK_CMS_COMPANY_STAGING_3 PRIMARY KEY (CMS_COMPANY_STAGING_ID),
	CONSTRAINT UC_CMS_COMPANY_STAGING_3 UNIQUE(COMPANY_ID, BATCH_NUM)
);

CREATE TABLE RAG.CMS_COMPANY_STAGING_4 (
	CMS_COMPANY_STAGING_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_ID				NUMBER(10, 0)	NOT NULL,
	NAME					VARCHAR2(255)	NOT NULL,
	COUNTRY					VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK_CMS_COMPANY_STAGING_4 PRIMARY KEY (CMS_COMPANY_STAGING_ID),
	CONSTRAINT UC_CMS_COMPANY_STAGING_4 UNIQUE(COMPANY_ID)
);

COMMENT ON COLUMN RAG.CMS_COMPANY_STAGING_4.CMS_COMPANY_STAGING_ID IS 'desc="Auto id",auto';

CREATE TABLE rag.CHILD_CMS_COMPANY_STAGING (
	CMS_COMPANY_STAGING_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_ID				VARCHAR2(255)	NOT NULL,
	SALES_ORG				VARCHAR2(255)	NOT NULL,
	MERCH_CAT				VARCHAR2(255)	NOT NULL,
	BATCH_NUM				NUMBER(10, 0),
	STARTED_BY				VARCHAR2(255),
	REVENUE					NUMBER(10,2),
	START_DATE				DATE,
	COMMENTS				VARCHAR2(255),
	DELETED					NUMBER(1),
	BAND_LABEL				VARCHAR2(255),
	CONSTRAINT PK_CHILD_CMS_COMPANY_STAGING PRIMARY KEY (CMS_COMPANY_STAGING_ID),
	CONSTRAINT UC_CHILD_CMS_COMPANY_STAGING UNIQUE(COMPANY_ID, BATCH_NUM, SALES_ORG, MERCH_CAT)
);

COMMENT ON COLUMN RAG.CHILD_CMS_COMPANY_STAGING.CMS_COMPANY_STAGING_ID IS 'desc="Auto id",auto';

CREATE TABLE RAG.CHILD_CMS_COMPANY_STAGING_4 (
	CHILD_CMS_COMPANY_STAGING_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_ID						NUMBER(10, 0)	NOT NULL,
	REPORTING_YEAR					NUMBER(10, 0),
	REVENUE							NUMBER(10, 2),
	ANOTHER_COMPANY_SID				NUMBER(10, 0),
	CONSTRAINT PK_CHILD_CMS_COMPANY_STAGING_4 PRIMARY KEY (CHILD_CMS_COMPANY_STAGING_ID)
);

COMMENT ON COLUMN RAG.CHILD_CMS_COMPANY_STAGING_4.CHILD_CMS_COMPANY_STAGING_ID IS 'desc="Auto id",auto';

CREATE TABLE RAG.TURNOVER_STAGING (
	TURNOVER_STAGING_ID			NUMBER(10, 0)	NOT NULL,
	BATCH_NUM					NUMBER(10, 0),
	SUPPLIER_ID					NUMBER(10, 0)	NOT NULL,
	M_COMPANY_SID				NUMBER(10, 0)	NOT NULL,
	MONTH_YEAR					VARCHAR2(6) NOT NULL,
	REVENUE						NUMBER(10, 2),
	ANOTHER_COMPANY_SID			NUMBER(10, 0),
	CONSTRAINT PK_TURNOVER_STAGING PRIMARY KEY (TURNOVER_STAGING_ID)
);

COMMENT ON COLUMN RAG.TURNOVER_STAGING.TURNOVER_STAGING_ID IS 'desc="Auto id",auto';

--create destination table +enums
--translation_table
CREATE TABLE rag.SCORE_BAND_MAP (
	SCORE_BAND_MAP_ID	NUMBER(10, 0) NOT NULL,
	SCORE_BAND_ID		NUMBER(10, 0) NOT NULL,
	ORIGINAL_TEXT		VARCHAR2(255),
	CONSTRAINT PK_SCORE_BAND_MAP PRIMARY KEY (SCORE_BAND_MAP_ID)
);

CREATE UNIQUE INDEX rag.UK_SCORE_BAND_MAP ON rag.SCORE_BAND_MAP(lower(trim(original_text)));

COMMENT ON TABLE RAG.SCORE_BAND_MAP IS 'desc="Translation table for score bands"';
COMMENT ON COLUMN RAG.SCORE_BAND_MAP.SCORE_BAND_MAP_ID IS 'auto';
COMMENT ON COLUMN RAG.SCORE_BAND_MAP.SCORE_BAND_ID IS 'enum,enum_desc_col=label';

CREATE TABLE rag.SCORE_BAND (
	SCORE_BAND_ID		NUMBER(10, 0) NOT NULL,
	LABEL				VARCHAR2(255),
	CONSTRAINT PK_SCORE_BAND PRIMARY KEY (SCORE_BAND_ID)
);
COMMENT ON TABLE RAG.SCORE_BAND IS 'desc="Score bands", enum_translation_tab="SCORE_BAND_MAP"';

ALTER TABLE rag.SCORE_BAND_MAP ADD CONSTRAINT FK_SCORE_BAND_MAP
	FOREIGN KEY(SCORE_BAND_ID) REFERENCES rag.SCORE_BAND (SCORE_BAND_ID);
	
CREATE TABLE rag.COMPANY_DATA (
	COMPANY_SID				NUMBER(10, 0)	NOT NULL,
	REVENUE					NUMBER(10,2)	NOT NULL,
	ASSESSED_BY_SID			NUMBER(10,0)	NOT NULL,
	SCORE_BAND_ID			NUMBER(10,0),
	SCORE					NUMBER(10,2),
	LAST_ASSESS_DATE		DATE,
	COMMENTS				VARCHAR2(255),
	EXPENSES				NUMBER(10, 2),
	FACILITY_COMPANY_SID	NUMBER(10, 0),
	CONSTRAINT PK_COMPANY_DATA PRIMARY KEY (COMPANY_SID)
);

COMMENT ON TABLE RAG.COMPANY_DATA IS 'desc="Company additional data"';
COMMENT ON COLUMN RAG.COMPANY_DATA.COMPANY_SID IS 'desc="Company",company';
COMMENT ON COLUMN RAG.COMPANY_DATA.REVENUE IS 'desc="Revenue"';
COMMENT ON COLUMN RAG.COMPANY_DATA.ASSESSED_BY_SID IS 'desc="Assessor user",user';
COMMENT ON COLUMN RAG.COMPANY_DATA.SCORE_BAND_ID IS 'desc="Band",enum,enum_desc_col=label';
COMMENT ON COLUMN RAG.COMPANY_DATA.SCORE IS 'desc="Score"';
COMMENT ON COLUMN RAG.COMPANY_DATA.LAST_ASSESS_DATE IS 'desc="Last assessment date"';
COMMENT ON COLUMN RAG.COMPANY_DATA.COMMENTS IS 'desc="Comments"';
COMMENT ON COLUMN RAG.COMPANY_DATA.FACILITY_COMPANY_SID IS 'company';

ALTER TABLE RAG.COMPANY_DATA ADD CONSTRAINT FK_COMPANY_DATA_SCORE_BAND
    FOREIGN KEY (SCORE_BAND_ID)
    REFERENCES RAG.SCORE_BAND(SCORE_BAND_ID);

CREATE TABLE rag.COMPANY_DATA_2 (
	COMPANY_SID				NUMBER(10, 0)	NOT NULL,
	REVENUE					NUMBER(10,2),
	ASSESSED_BY_SID			NUMBER(10,0),
	SCORE_BAND_ID			NUMBER(10,0),
	SCORE					NUMBER(10,2),
	LAST_ASSESS_DATE		DATE,
	COMMENTS				VARCHAR2(255),
	EXPENSES				NUMBER(10, 2),
	CONSTRAINT PK_COMPANY_DATA_2 PRIMARY KEY (COMPANY_SID)
);

COMMENT ON TABLE RAG.COMPANY_DATA_2 IS 'desc="Company additional data (second table)"';
COMMENT ON COLUMN RAG.COMPANY_DATA_2.COMPANY_SID IS 'desc="Company",company';
COMMENT ON COLUMN RAG.COMPANY_DATA_2.REVENUE IS 'desc="Revenue"';
COMMENT ON COLUMN RAG.COMPANY_DATA_2.ASSESSED_BY_SID IS 'desc="Assessor user",user';
COMMENT ON COLUMN RAG.COMPANY_DATA_2.SCORE_BAND_ID IS 'desc="Band",enum,enum_desc_col=label';
COMMENT ON COLUMN RAG.COMPANY_DATA_2.SCORE IS 'desc="Score"';
COMMENT ON COLUMN RAG.COMPANY_DATA_2.LAST_ASSESS_DATE IS 'desc="Last assessment date"';
COMMENT ON COLUMN RAG.COMPANY_DATA_2.COMMENTS IS 'desc="Comments"';

ALTER TABLE RAG.COMPANY_DATA_2 ADD CONSTRAINT FK_COMPANY_DATA2_SCORE_BAND
	FOREIGN KEY (SCORE_BAND_ID)
	REFERENCES RAG.SCORE_BAND(SCORE_BAND_ID);

CREATE TABLE rag.SALES_ORG (
	SALES_ORG_ID		NUMBER(10, 0) NOT NULL,
	LABEL				VARCHAR2(255),
	CONSTRAINT PK_SALES_ORG PRIMARY KEY (SALES_ORG_ID)
);
COMMENT ON TABLE RAG.SALES_ORG IS 'desc="Sales organisations"';

CREATE TABLE rag.MERCH_CAT (
	MERCH_CAT_ID		NUMBER(10, 0) NOT NULL,
	LABEL				VARCHAR2(255),
	CONSTRAINT PK_MERCH_CAT PRIMARY KEY (MERCH_CAT_ID)
);
COMMENT ON TABLE RAG.MERCH_CAT IS 'desc="Merchandise categories"';
	
CREATE TABLE rag.COMPANY_SALES_ORG (
	COMPANY_SALES_ORG_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_SID				NUMBER(10, 0)	NOT NULL,
	SALES_ORG_ID			NUMBER(10, 0)	NOT NULL,
	MERCH_CAT_ID			NUMBER(10, 0)	NOT NULL,
	REVENUE					NUMBER(10,2),
	STARTED_BY_SID			NUMBER(10,2),
	START_DATE				DATE,
	COMMENTS				VARCHAR2(255),
	DELETED					NUMBER(1),
	SCORE_BAND_ID			NUMBER(10, 0),
	CONSTRAINT PK_COMPANY_SALES_ORG PRIMARY KEY (COMPANY_SALES_ORG_ID),
	CONSTRAINT UC_COMPANY_SALES_ORG UNIQUE (COMPANY_SID, SALES_ORG_ID, MERCH_CAT_ID)
);

COMMENT ON TABLE RAG.COMPANY_SALES_ORG IS 'desc="Company sales organizations"';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.COMPANY_SALES_ORG_ID IS 'desc="Auto id",auto';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.COMPANY_SID IS 'desc="Company",company';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.SALES_ORG_ID IS 'desc="Sales organisation",enum,enum_desc_col=label';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.MERCH_CAT_ID IS 'desc="Merchandise category",enum,enum_desc_col=label';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.REVENUE IS 'desc="Revenue"';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.STARTED_BY_SID IS 'desc="Assessor user",user';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.START_DATE IS 'desc="Last assessment date"';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.COMMENTS IS 'desc="Comments"';
COMMENT ON COLUMN RAG.COMPANY_SALES_ORG.SCORE_BAND_ID IS 'desc="Score band",enum,enum_desc_col=label';

ALTER TABLE RAG.COMPANY_SALES_ORG ADD CONSTRAINT FK_COMPANY_SALES_ORG_SALES
	FOREIGN KEY (SALES_ORG_ID)
	REFERENCES RAG.SALES_ORG(SALES_ORG_ID);

ALTER TABLE RAG.COMPANY_SALES_ORG ADD CONSTRAINT FK_COMPANY_SALES_ORG_MERCH
	FOREIGN KEY (MERCH_CAT_ID)
	REFERENCES RAG.MERCH_CAT(MERCH_CAT_ID);
	
ALTER TABLE RAG.COMPANY_SALES_ORG ADD CONSTRAINT FK_COMPANY_SALES_ORG_BAND
	FOREIGN KEY (SCORE_BAND_ID)
	REFERENCES RAG.SCORE_BAND(SCORE_BAND_ID);

CREATE TABLE RAG.COMPANY_DATA_4 (
	COMPANY_DATA_ID					NUMBER(10, 0)	NOT NULL,
	COMPANY_SID						NUMBER(10, 0)	NOT NULL,
	REPORTING_YEAR					NUMBER(10, 0)	NOT NULL,
	REVENUE							NUMBER(10,2),
	ANOTHER_COMPANY_SID				NUMBER(10),
	CONSTRAINT PK_COMPANY_DATA_4 PRIMARY KEY (COMPANY_DATA_ID),
	CONSTRAINT UC_COMPANY_DATA_4 UNIQUE (COMPANY_SID, REPORTING_YEAR)
);

COMMENT ON TABLE RAG.COMPANY_DATA_4 IS 'desc="Company additional data"';
COMMENT ON COLUMN RAG.COMPANY_DATA_4.COMPANY_DATA_ID IS 'desc="Auto id",auto';
COMMENT ON COLUMN RAG.COMPANY_DATA_4.COMPANY_SID IS 'desc="Company",company';
COMMENT ON COLUMN RAG.COMPANY_DATA_4.REPORTING_YEAR IS 'desc="Reporting year"';
COMMENT ON COLUMN RAG.COMPANY_DATA_4.REVENUE IS 'desc="Revenue"';
COMMENT ON COLUMN RAG.COMPANY_DATA_4.ANOTHER_COMPANY_SID IS 'desc="Another Company",company';

CREATE TABLE RAG.COMPANY_TURNOVER (
	COMPANY_TURNOVER_ID				NUMBER(10, 0)	NOT NULL,
	SUPPLIER_SID					NUMBER(10, 0)	NOT NULL,
	M_COMPANY_SID					NUMBER(10, 0)	NOT NULL,
	MONTH_YEAR						VARCHAR2(6) NOT NULL,
	REVENUE							NUMBER(10,2),
	ANOTHER_COMPANY_SID				NUMBER(10),
	CONSTRAINT PK_COMPANY_TURNOVER PRIMARY KEY (COMPANY_TURNOVER_ID),
	CONSTRAINT UC_COMPANY_TURNOVER UNIQUE (SUPPLIER_SID, M_COMPANY_SID, MONTH_YEAR)
);

COMMENT ON TABLE RAG.COMPANY_TURNOVER IS 'desc="Company turnover data by month and M-company"';
COMMENT ON COLUMN RAG.COMPANY_TURNOVER.COMPANY_TURNOVER_ID IS 'desc="Auto id",auto';
COMMENT ON COLUMN RAG.COMPANY_TURNOVER.SUPPLIER_SID IS 'desc="Supplier",company';
COMMENT ON COLUMN RAG.COMPANY_TURNOVER.M_COMPANY_SID IS 'desc="M-Company",company';
COMMENT ON COLUMN RAG.COMPANY_TURNOVER.MONTH_YEAR IS 'desc="Month"';
COMMENT ON COLUMN RAG.COMPANY_TURNOVER.REVENUE IS 'desc="Revenue"';
COMMENT ON COLUMN RAG.COMPANY_TURNOVER.ANOTHER_COMPANY_SID IS 'desc="Another Company",company';

GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.COMPANY_DATA TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.COMPANY_DATA_2 TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.COMPANY_DATA_4 TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.COMPANY_SALES_ORG TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.SCORE_BAND TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.SCORE_BAND_MAP TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.CMS_COMPANY_STAGING TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.CMS_COMPANY_STAGING_2 TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.CMS_COMPANY_STAGING_3 TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.CMS_COMPANY_STAGING_4 TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.CHILD_CMS_COMPANY_STAGING TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.CHILD_CMS_COMPANY_STAGING_4 TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.TURNOVER_STAGING TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.SALES_ORG TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.MERCH_CAT TO CHAIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RAG.COMPANY_TURNOVER TO CHAIN;

DECLARE
	v_tabs VARCHAR2(4000);
BEGIN
	security.user_pkg.logonadmin(:bv_site_name);
	
	v_tabs := 'CMS_COMPANY_STAGING,CMS_COMPANY_STAGING_2,COMPANY_DATA,COMPANY_DATA_2,SCORE_BAND,SCORE_BAND_MAP,'||
		'CHILD_CMS_COMPANY_STAGING,CMS_COMPANY_STAGING_3,COMPANY_SALES_ORG,MERCH_CAT,SALES_ORG,'||
		'CMS_COMPANY_STAGING_4,CHILD_CMS_COMPANY_STAGING_4,COMPANY_DATA_4,TURNOVER_STAGING,COMPANY_TURNOVER';
	
	cms.tab_pkg.RegisterTable(
		in_oracle_schema => 'RAG',
		in_oracle_table => v_tabs,
		in_managed => FALSE
	);
END;
/
