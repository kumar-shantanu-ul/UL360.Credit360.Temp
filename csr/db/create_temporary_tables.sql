CREATE GLOBAL TEMPORARY TABLE CSR.transaction_context
(
	key		VARCHAR2(30),
	val		NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.SEARCH_TAG
(
  SET_ID  NUMBER(10)                            NOT NULL,
  TAG_ID  NUMBER(10)                            NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_LOGGING_VAL
(
  APP_SID			NUMBER(10)                  NOT NULL,
  IND_SID           NUMBER(10)                  NOT NULL,
  REGION_SID        NUMBER(10)                  NOT NULL,
  PERIOD_START_DTM  DATE                        NOT NULL,
  PERIOD_END_DTM    DATE                        NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.REGION_LIST
(
	REGION_SID		NUMBER(10)	NOT NULL,
	POS			NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.IND_LIST
(
	IND_SID		NUMBER(10)	NOT NULL,
	POS			NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_translations
(
	original	varchar2(4000) not null,
	translated	varchar2(4000) not null
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_tree (
	sid_id 			number(10),
	parent_sid_id	number(10),
	dacl_id			number(10),
	class_id		number(10),
	name			varchar2(255),
	flags			number(10),
	owner			number(10),
	so_level		number(10),
	is_leaf			number(1),
	path			varchar2(4000)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_IND_TREE
(
    APP_SID                       NUMBER(10, 0),
    IND_SID                       NUMBER(10, 0),
    PARENT_SID                    NUMBER(10, 0),
    DESCRIPTION                   VARCHAR2(1023),
    IND_TYPE                      NUMBER(10, 0),
    MEASURE_SID                   NUMBER(10, 0),
    MEASURE_DESCRIPTION			  VARCHAR2(255),
    FORMAT_MASK					  VARCHAR2(255),
    ACTIVE                        NUMBER(10, 0)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.temp_mime_types
(
	mime_type		varchar2(100)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.GET_VALUE_RESULT
(
	period_start_dtm	DATE,
	period_end_dtm		DATE,
	source				NUMBER(10,0),
	source_id			NUMBER(20,0),	
	source_type_id		NUMBER(10,0),
	ind_sid				NUMBER(10,0),
	region_sid			NUMBER(10,0),
	val_number			NUMBER(24,10),
	error_code			NUMBER(10,0),
	changed_dtm			DATE,
	note				CLOB,
	flags				NUMBER (10,0),
	is_leaf				NUMBER(1,0),
	is_merged			NUMBER(1,0),
	path				VARCHAR2(1024)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.temp_val_id
(
	app_sid				NUMBER(10,0),
	val_id				NUMBER(20,0)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_doc_id
(
	doc_id				NUMBER(10,0)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_doc_id_path
(
	doc_id				NUMBER(10,0),
	path				VARCHAR2(2000)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.pending_entry_ind
(
	pending_ind_id			NUMBER(10,0)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.region_list_2 (
	app_sid 	NUMBER(10), 
	region_sid 	NUMBER(10), 
	path 		VARCHAR2(4000),
	is_leaf 	NUMBER(1)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.rag_temp_tree (
	app_sid number(10),
	region_sid number(10),
	parent_sid number(10)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.model_temp_map
(
	model_instance_sid	NUMBER(10, 0) NOT NULL,
	sheet_id			NUMBER(10, 0) NOT NULL,
	source_cell_name	VARCHAR2(20) NOT NULL,
	cell_name			VARCHAR2(20) NOT NULL,
	cell_value			VARCHAR2(4000)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_alert_frame
(
	default_alert_frame_id	NUMBER(10),
	alert_frame_id			NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_lang
(
	lang VARCHAR2(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_alert_batch_run
(
	customer_alert_type_id			NUMBER(10) NOT NULL,
	std_alert_type_id				NUMBER(10) NULL,
	app_sid							NUMBER(10) NOT NULL,
	csr_user_sid					NUMBER(10) NOT NULL,
	prev_fire_time_gmt				TIMESTAMP(6),
	this_fire_time					TIMESTAMP(6) NOT NULL,
	this_fire_time_gmt				TIMESTAMP(6) NOT NULL
) ON COMMIT PRESERVE ROWS;

CREATE INDEX CSR.IX_TEMP_ALERT_BATCH_RUN ON CSR.TEMP_ALERT_BATCH_RUN (customer_alert_type_id, app_sid, csr_user_sid);

CREATE GLOBAL TEMPORARY TABLE CSR.temp_alert_batch_details
(
	app_sid							NUMBER(10) NOT NULL,
	csr_user_sid					NUMBER(10) NOT NULL,
	full_name						VARCHAR2(256), 
	friendly_name					VARCHAR2(256) NOT NULL, 
	email							VARCHAR2(256),         	
	user_name						VARCHAR2(256) NOT NULL,
	sheet_id						NUMBER(10) NOT NULL,
	sheet_url						VARCHAR2(400) NOT NULL,
	delegation_name					VARCHAR2(1023),
	period_set_id					NUMBER(10) NOT NULL,
	period_interval_id				NUMBER(10) NOT NULL,
	delegation_sid					NUMBER(10) NOT NULL,
	submission_dtm					DATE NOT NULL,
	reminder_dtm					DATE NOT NULL,
	start_dtm						DATE NOT NULL,
	end_dtm							DATE NOT NULL
) ON COMMIT DELETE ROWS;

CREATE INDEX CSR.IX_TEMP_ALERT_BATCH_DETAILS ON CSR.TEMP_ALERT_BATCH_DETAILS (app_sid, csr_user_sid);

CREATE GLOBAL TEMPORARY TABLE CSR.temp_region_sid
(
	region_sid		NUMBER(10) NOT NULL
) ON COMMIT DELETE ROWS;
CREATE INDEX CSR.ix_temp_region_sid ON CSR.temp_region_sid(region_sid);

CREATE GLOBAL TEMPORARY TABLE CSR.temp_region_tree
(
	root_region_sid		number(10) not null,
	child_region_sid	number(10) not null
) ON COMMIT DELETE ROWS;
CREATE INDEX CSR.ix_temp_region_tree_root ON CSR.temp_region_tree(root_region_sid);
CREATE INDEX CSR.ix_temp_region_tree_child ON CSR.temp_region_tree(child_region_sid);

CREATE GLOBAL TEMPORARY TABLE CSR.temp_new_val
(
	ind_sid 			number(10),
	region_sid 			number(10),
	period_start_dtm	date,
	period_end_dtm		date,
	source_type_id		number(10),
	val_number			number(24,10),
	error_code			number(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_scrag_queue
(
	app_sid				number(10)
) ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.approval_step_stats
(
approval_step_id number(10),
ind_count number(10),
region_count number(10),
period_count number(10),
constraint pk_approval_step_stats primary key (approval_step_id)
);

CREATE GLOBAL TEMPORARY TABLE CSR.approval_step_summary
(
approval_step_id number(10),
parent_step_id number(10),
sheet_key varchar2(255),
sheet_label varchar2(1204),
pending_period_id number(10),
pending_region_id number(10),
pending_ind_id number(10),
due_dtm date,
approver_response_due_dtm date,
max_ind_count number(10),
max_region_count number(10),
max_period_count number(10),
delegated_val_count number(10),
submitted_val_count number(10),
constraint pk_approval_step_summary primary key (approval_step_id, sheet_key)
);

CREATE GLOBAL TEMPORARY TABLE CSR.approval_step_hierarchy
(
ancestor_step_id number(10),
approval_step_id number(10),
constraint pk_approval_step_hierarchy primary key (ancestor_step_id, approval_step_id)
);

CREATE INDEX CSR.idx_approval_step_hierarchy on csr.approval_step_hierarchy (approval_step_id);

CREATE GLOBAL TEMPORARY TABLE CSR.pending_region_descendants
(
ancestor_region_id number(10),
pending_region_id number(10),
constraint pk_pending_region_stats primary key (ancestor_region_id, pending_region_id)
);

CREATE GLOBAL TEMPORARY TABLE CSR.approval_step_val
(
approval_step_id number(10),
pending_period_id number(10),
pending_region_id number(10),
pending_ind_id number(10),
constraint pk_approval_step_val primary key (approval_step_id, pending_period_id, pending_region_id, pending_ind_id)
);


CREATE GLOBAL TEMPORARY TABLE CSR.factor_for_update (
	app_sid				NUMBER(10, 0)	NOT NULL,
	geo_country			VARCHAR2(2),
	geo_region			VARCHAR2(4)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_pending_region (
	app_sid number(10),
	pending_region_id number(10),
	maps_to_region_sid number(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_ind
(
	app_sid		NUMBER(10, 0) NOT NULL,
	ind_sid		NUMBER(10, 0) NOT NULL,
	CONSTRAINT pk_temp_ind PRIMARY KEY (app_sid, ind_sid)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_delegation_detail
(
	sheet_id						number(10),
	parent_sheet_id					number(10),
	delegation_sid					number(10),
	parent_delegation_sid			number(10),
	is_visible						number(1),
	name							varchar2(1023),
	start_dtm						date,
	end_dtm							date,
	period_set_id					number(10),
	period_interval_id				number(10),
	delegation_start_dtm			date,
	delegation_end_dtm				date,
	submission_dtm					date,
	status							number(10),
	sheet_action_description		varchar2(255),
	sheet_action_downstream			varchar2(255),
	fully_delegated					number(1),
	editing_url						varchar2(255),
	last_action_id					number(10),
	is_top_level					number(1),
	approve_dtm						date,
	delegated_by_user				number(1),
	percent_complete				number(10,0),
	rid								number(10),
	root_delegation_sid				number(10),
	parent_sid						number(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_delegation_for_region
(
	sheet_id						number(10),
	delegation_sid					number(10),
	parent_sid						number(10),
	name							varchar2(1023),
	start_dtm						date,
	end_dtm							date,
	period_set_id					number(10),
	period_interval_id				number(10),
	delegation_start_dtm			date,
	delegation_end_dtm				date,
	last_action_id					number(10),
	submission_dtm					date,
	status							number(10),
	sheet_action_description		varchar2(255),
	editing_url						varchar2(255),
	root_delegation_sid				number(10),
	last_action_colour				char(1)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_sheets_to_use (
	app_sid 						number(10), 
	delegation_sid					number(10),
	lvl 							number(10),
	sheet_id 						number(10), 
	start_dtm 						date,
	end_dtm 						date, 
	last_action_colour 				varchar(1)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_sheets_ind_region_to_use (
	app_sid 						number(10),
	delegation_sid					number(10),
	lvl 							number(10),
	sheet_id 						number(10),
	ind_sid							number(10),
	region_sid						number(10),
	start_dtm 						date,
	end_dtm 						date,
	last_action_colour 				varchar(1)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.LIVE_METER_RAW_PROC
(
	METER_RAW_DATA_ID				NUMBER(10)	NOT NULL,
	POS								NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.METER_INSERT_DATA 
(
	METER_INPUT_ID		NUMBER(10)	NOT NULL,
	START_DTM			TIMESTAMP WITH TIME ZONE  NOT NULL,
	END_DTM				TIMESTAMP WITH TIME ZONE,
	CONSUMPTION 		NUMBER(24,10) NOT NULL,
	SOURCE_ROW			NUMBER(10),
	PRIORITY			NUMBER(10),
	ERROR_MSG			VARCHAR2(4000),
	NOTE				VARCHAR2(4000),
	STATEMENT_ID		VARCHAR2(256)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.METER_TYPE_CHANGE 
(
  REGION_SID	NUMBER(10)	NOT NULL,
  NEW_IND_SID	NUMBER(10)	NOT NULL,
  FROM_DTM   	DATE,
  TO_DTM   		DATE,
  NOTE			VARCHAR2(1024)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_VDS_IND
(
	IND_SID							NUMBER(10) NOT NULL,
	AGGREGATE						VARCHAR2(24) NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.IND_LIST_2 
(
	IND_SID 						NUMBER(10) NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_CSR_USER (
	APP_SID							NUMBER(10) NOT NULL,
	CSR_USER_SID 					NUMBER(10) NOT NULL, 
	CONSTRAINT PK_TEMP_CSR_USER PRIMARY KEY (APP_SID, CSR_USER_SID)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_ISSUE_SEARCH (
	ISSUE_ID 					NUMBER(10),
	LABEL 						VARCHAR2(2048), 
	SOURCE_LABEL 				VARCHAR2(2000), 
	IS_VISIBLE 					NUMBER(1), 
	SOURCE_URL 					VARCHAR2(2000), 
	REGION_SID					NUMBER(10),
	PARENT_ID					NUMBER(10),
	OWNER_ROLE_SID				NUMBER(10),
	OWNER_USER_SID				NUMBER(10),
	RAISED_BY_USER_SID 			NUMBER(10), 
	RAISED_DTM 					DATE,
	MANUAL_COMPLETION_DTM		DATE,
	RAISED_USER_NAME 			VARCHAR2(256), 
	RAISED_FULL_NAME 			VARCHAR2(256), 
	RAISED_EMAIL 				VARCHAR2(256), 
	RESOLVED_BY_USER_SID 		NUMBER(10), 
	RESOLVED_DTM 				DATE, 
	RESOLVED_USER_NAME 			VARCHAR2(256), 
	RESOLVED_FULL_NAME 			VARCHAR2(256), 
	RESOLVED_EMAIL 				VARCHAR2(256), 
	CLOSED_BY_USER_SID 			NUMBER(10), 
	CLOSED_DTM 					DATE, 
	CLOSED_USER_NAME 			VARCHAR2(256), 
	CLOSED_FULL_NAME 			VARCHAR2(256), 
	CLOSED_EMAIL 				VARCHAR2(256), 
	REJECTED_BY_USER_SID 		NUMBER(10), 
	REJECTED_DTM 				DATE, 
	REJECTED_USER_NAME 			VARCHAR2(256), 
	REJECTED_FULL_NAME 			VARCHAR2(256), 
	REJECTED_EMAIL 				VARCHAR2(256), 
	ASSIGNED_TO_USER_SID 		NUMBER(10), 
	ASSIGNED_TO_USER_NAME 		VARCHAR2(256), 
	ASSIGNED_TO_FULL_NAME		VARCHAR2(256), 
	ASSIGNED_TO_EMAIL 			VARCHAR2(256), 
	ASSIGNED_TO_ROLE_SID 		NUMBER(10), 
	ASSIGNED_TO_ROLE_NAME 		VARCHAR2(255), 
	CORRESPONDENT_ID 			NUMBER(10), 
	CORRESPONDENT_FULL_NAME 	VARCHAR2(255), 
	CORRESPONDENT_EMAIL 		VARCHAR2(255), 
	CORRESPONDENT_PHONE 		VARCHAR2(255), 
	CORRESPONDENT_MORE_INFO_1 	VARCHAR2(1000), 
	NOW_DTM 					DATE, 
	DUE_DTM 					DATE, 
	ISSUE_TYPE_ID 				NUMBER(10), 
	ISSUE_TYPE_LABEL 			VARCHAR2(255), 
	REQUIRE_PRIORITY 			NUMBER(1), 
	ISSUE_PRIORITY_ID 			NUMBER(10), 
	DUE_DATE_OFFSET 			NUMBER(10), 
	PRIORITY_OVERRIDDEN 		NUMBER(1), 
	FIRST_PRIORITY_SET_DTM 		DATE, 
	ISSUE_PENDING_VAL_ID 		NUMBER(10), 
	ISSUE_SHEET_VALUE_ID 		NUMBER(10), 
	ISSUE_SURVEY_ANSWER_ID 		NUMBER(10), 
	ISSUE_NON_COMPLIANCE_ID 	NUMBER(10), 
	ISSUE_ACTION_ID 			NUMBER(10), 
	ISSUE_METER_ID 				NUMBER(10), 
	ISSUE_METER_ALARM_ID 		NUMBER(10), 
	ISSUE_METER_RAW_DATA_ID 	NUMBER(10), 
	ISSUE_METER_DATA_SOURCE_ID 	NUMBER(10), 
	ISSUE_SUPPLIER_ID 			NUMBER(10), 
	ISSUE_COMPLIANCE_REGION_ID	NUMBER(10), 
	IS_OVERDUE 					NUMBER(1), 
	IS_OWNER 					NUMBER(1), 
	IS_RESOLVED 				NUMBER(1), 
	IS_CLOSED 					NUMBER(1), 
	IS_REJECTED 				NUMBER(1), 
	STATUS 						VARCHAR2(8),
	FIRST_ISSUE_LOG_ID			NUMBER(10),
	LAST_ISSUE_LOG_ID			NUMBER(10),
	IS_CRITICAL 				NUMBER(1),
	ALLOW_CRITICAL 				NUMBER(1),
	ALLOW_URGENT_ALERT			NUMBER(1),
	-- everything above is just a desc of v$issue
	POSITION			NUMBER(10)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_DATES (
	column_value 			DATE,
	eff_date				DATE,
	CONSTRAINT PK_TEMP_DATES PRIMARY KEY (column_value)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_CONSUMPTIONS(
	ID						NUMBER(10),
	START_DTM				DATE,
	END_DTM					DATE,
	CONSUMPTION				NUMBER(24,10),
	COST					NUMBER(24,10) NULL,
	IS_ESTIMATE				NUMBER(1),
	CHECK (IS_ESTIMATE IN (0,1))
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_deleg_plan_overlap
(	
	APP_SID						NUMBER(10)  DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	OVERLAPPING_DELEG_SID		NUMBER(10)  NOT NULL,
	OVERLAPPING_REGION_SID		NUMBER(10)  NOT NULL,
	APPLIED_TO_REGION_SID		NUMBER(10)  NULL,
	TPL_DELEG_SID				NUMBER(10)  NOT NULL,
	IS_SYNC_DELEG				NUMBER (1)  NOT NULL,
	REGION_SID					NUMBER(10)	NULL,
	DELEG_PLAN_SID				NUMBER(10)  NULL,
	DELEG_PLAN_COL_DELEG_ID		NUMBER(10)  NULL
) ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_ROLE_REGION
(
	ROLE_SID	NUMBER(10)	NOT NULL,
	REGION_SID	NUMBER(10)	NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.MAP_ID(
	OLD_ID					NUMBER(10)	NOT NULL,
	NEW_ID					NUMBER(10)	NOT NULL,
	CONSTRAINT PK_MAP_ID PRIMARY KEY (OLD_ID) USING INDEX,
	CONSTRAINT UK_MAP_ID UNIQUE (NEW_ID) USING INDEX
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_ALERT_BATCH_ISSUES 
(
	APP_SID							NUMBER(10), 
	ISSUE_LOG_ID					NUMBER(10), 
	CSR_USER_SID					NUMBER(10), 
	FRIENDLY_NAME					VARCHAR2(255),
	FULL_NAME						VARCHAR2(256),
	EMAIL							VARCHAR2(256)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_RESPONSE_REGION
(
	RESPONSE_ID			NUMBER(10)	NOT NULL,
	REGION_SID			NUMBER(10)	NOT NULL,
	SUBMISSION_ID		NUMBER(10)  NOT NULL,
	PERIOD_START_DTM	DATE		NOT NULL,
	PERIOD_END_DTM		DATE		NOT NULL,
	CONSTRAINT PK_TEMP_RESPONSE_REGION PRIMARY KEY (RESPONSE_ID, SUBMISSION_ID)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.temp_campaign_sid
(
	app_sid				NUMBER(10,0),
	qs_campaign_sid		NUMBER(10,0)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.WORKSHEET_COLUMN_REMAP
(
	COLUMN_TYPE_ID		NUMBER(10) NOT NULL,
	COLUMN_INDEX		NUMBER(10) NOT NULL,
	OLD_COLUMN_INDEX	NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_DELEGATION_SID
(
	DELEGATION_SID                NUMBER(10, 0)     NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_AUDIT_LOG
(
	AUDIT_DATE						DATE NOT NULL,
	AUDIT_TYPE_ID					NUMBER(10) NOT NULL,
	OBJECT_SID						NUMBER(10) NOT NULL,
	CSR_USER_SID					NUMBER(10) NOT NULL,
	DESCRIPTION						VARCHAR2(4000),
	NAME							VARCHAR2(4000),
	PARAM_1							VARCHAR2(4000),
	PARAM_2							VARCHAR2(4000),
	PARAM_3							VARCHAR2(4000),
	REMOTE_ADDR						VARCHAR2(40)
) ON COMMIT DELETE ROWS;



CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_SECTION_FILTER
(
	SECTION_SID						NUMBER(10) NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_FLOW_FILTER
(
	ID						NUMBER(10) NOT NULL,
	IS_EDITABLE				NUMBER(1) NOT NULL
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_READING_ROWS (
	SOURCE_ROW				NUMBER(10),
	REGION_SID				NUMBER(10),
	START_DTM				DATE,
	END_DTM					DATE,
	CONSUMPTION				NUMBER(24,10),
	REFERENCE				VARCHAR(1024),
	NOTE					VARCHAR(4000),
	ERROR_MSG				VARCHAR(4000),
	RESET_VAL				NUMBER(24,10),
	METER_INPUT_ID			NUMBER(10, 0),
	PRIORITY				NUMBER(10),
	UNIT_OF_MEASURE			VARCHAR2(256),
	IMPORT_CONVERSION_ID	NUMBER(10),
	METER_CONVERSION_ID 	NUMBER(10),
	MEASURE_SID 			NUMBER(10),
	STATEMENT_ID			VARCHAR2(256)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_IMPORT_ROWS (
	SOURCE_ROW				NUMBER(10),
	PARENT_SID				NUMBER(10),
	METER_NAME				VARCHAR(1024),
	METER_REF				VARCHAR(256),
	CONSUMPTION_SID			NUMBER(10),
	CONSUMPTION_UOM			VARCHAR2(256),
	COST_SID				NUMBER(10),
	COST_UOM				VARCHAR2(256),
	ERROR_MSG				VARCHAR2(4000)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMPOR_QUESTION (
	QUESTION_ID				NUMBER(10),
	QUESTION_VERSION		NUMBER(10),
	PARENT_ID				NUMBER(10),
	PARENT_VERSION			NUMBER(10),
	POS						NUMBER(10),
	LABEL					VARCHAR2(4000),
	QUESTION_TYPE			VARCHAR2(40),
	SCORE					NUMBER(13,3),
	MAX_SCORE				NUMBER(13,3),
	UPLOAD_SCORE			NUMBER(13,3),
	LOOKUP_KEY				VARCHAR2(255),
	INVERT_SCORE			VARCHAR2(255),
	CUSTOM_QUESTION_TYPE_ID	NUMBER(10),
	WEIGHT					NUMBER(15,5),
	DONT_NORMALISE_SCORE	NUMBER(1),
	HAS_SCORE_EXPRESSION	NUMBER(1),
	HAS_MAX_SCORE_EXPR		NUMBER(1),
	REMEMBER_ANSWER			NUMBER(1),
	COUNT_QUESTION			NUMBER(1),
	ACTION					VARCHAR2(50),
	QUESTION_XML			CLOB
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_QUESTION_OPTION (
	QUESTION_ID				NUMBER(10),
	QUESTION_VERSION		NUMBER(10),
	QUESTION_OPTION_ID		NUMBER(10),
	POS						NUMBER(10),
	LABEL					VARCHAR2(4000),
	SCORE					NUMBER(13,3),
	HAS_OVERRIDE			NUMBER(1),
	SCORE_OVERRIDE			NUMBER(13,3),
	HIDDEN					NUMBER(1),
	COLOR					NUMBER(10),
	LOOKUP_KEY				VARCHAR2(1000),
	OPTION_ACTION			VARCHAR2(50),
	NON_COMPLIANCE_POPUP	NUMBER(1),
	NON_COMP_DEFAULT_ID		NUMBER(10),
	NON_COMPLIANCE_TYPE_ID	NUMBER(10),
	NON_COMPLIANCE_LABEL	VARCHAR2(255),
	NON_COMPLIANCE_DETAIL	VARCHAR2(4000),
	NON_COMP_ROOT_CAUSE		VARCHAR2(4000),
	NON_COMP_SUGGESTED_ACTION VARCHAR2(4000),
	QUESTION_OPTION_XML		CLOB
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_QUESTION_OPTION_NC_TAG (
	QUESTION_ID				NUMBER(10),
	QUESTION_VERSION		NUMBER(10),
	QUESTION_OPTION_ID		NUMBER(10),
	TAG_ID					NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_QUESTION_OPTION_SHOW_Q (
	QUESTION_ID				NUMBER(10),
	QUESTION_VERSION		NUMBER(10),
	QUESTION_OPTION_ID		NUMBER(10),
	SHOW_QUESTION_ID		NUMBER(10),
	SHOW_QUESTION_VERSION	NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE csr.tmp_deleg_search (
	app_sid             			NUMBER(10) NOT NULL,
	delegation_sid      			NUMBER(10) NOT NULL,
	name                			VARCHAR2(1023) NOT NULL,
	start_dtm           			DATE NOT NULL,
	end_dtm             			DATE NOT NULL,
	period_set_id					NUMBER(10),
	period_interval_id				NUMBER(10),
	editing_url         			VARCHAR2(255) NOT NULL,
	root_delegation_sid 			NUMBER(10) NOT NULL,
	lvl                 			NUMBER(10) NOT NULL,
	max_lvl             			NUMBER(10) NOT NULL
) ON COMMIT DELETE ROWS;			

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_REGION_METRIC_VAL (
	APP_SID					NUMBER(10),
	REGION_SID				NUMBER(10),
	IND_SID					NUMBER(10),
	EFFECTIVE_DTM			DATE,
	VAL						NUMBER(24,10),
	NOTE					VARCHAR2(4000),
	SOURCE_TYPE_ID          NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_INITIATIVE_SIDS
(
	INITIATIVE_SID 			NUMBER(10, 0)	NOT NULL
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_INITIATIVE(
	INITIATIVE_SID			NUMBER(10),		
	FLOW_STATE_ID			NUMBER(10),
	FLOW_STATE_LABEL		VARCHAR2(255),
	FLOW_STATE_LOOKUP_KEY	VARCHAR2(255),	
	FLOW_STATE_COLOUR		NUMBER(10),
	FLOW_STATE_POS			NUMBER(10),
	IS_EDITABLE				NUMBER(1),
	ACTIVE					NUMBER(1),
	OWNER_SID				NUMBER(10),
	POS						NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_INITIATIVE_METRIC_IDS
(
	INITIATIVE_METRIC_ID 		NUMBER(10)	NOT NULL,
	MEASURE_CONVERSION_ID		NUMBER(10)	NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_INITIATIVE_AGGR_VAL
(
	INITIATIVE_SID			NUMBER(10)		NOT NULL,
  	INITIATIVE_METRIC_ID	NUMBER(10)		NOT NULL,
	REGION_SID				NUMBER(10)		NOT NULL,
	START_DTM				DATE			NOT NULL,
	END_DTM					DATE			NOT NULL,
	VAL_NUMBER				NUMBER(24, 10)	NULL
) ON COMMIT DELETE ROWS;

CREATE INDEX CSR.IX_TEMP_INIT_AGGR_VAL_DTM ON CSR.TEMP_INITIATIVE_AGGR_VAL(initiative_sid, initiative_metric_id, region_sid, start_dtm);


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_SECTION_SID_FILTER (
	SECTION_SID			NUMBER(10,0)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_SECTION_SEARCH_RESULT (
	SEARCH_ROOT			NUMBER(1),
	SECTION_SID			NUMBER(10,0),
	DOC_ID				NUMBER(10,0),
	DOC_DATA_ID			NUMBER(10,0),
	ATTACHMENT_ID		NUMBER(10,0),
	VERSION_NUMBER		NUMBER(10,0),
	TITLE				VARCHAR2(1024),
	USE_SNIPPET			NUMBER(1),
	PATH				VARCHAR2(1024),
	CHANGED_BY_SID		NUMBER(10,0),
	CHANGED_BY_NAME		VARCHAR2(256),
	CHANGED_DTM			DATE,
	RESULT_TYPE			NUMBER(1,0),
	RESULT_SCORE		NUMBER(10,0),
	MIME_TYPE			VARCHAR2(128)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_FLOW_STATE_ALERT_RUN
(
    APP_SID                         NUMBER(10)  DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID                        NUMBER(10)  NOT NULL,
    FLOW_STATE_ALERT_ID             NUMBER(10)  NOT NULL,
    USER_SID                        NUMBER(10)  NOT NULL,
    THIS_FIRE_DATE                  DATE        NOT NULL
) ON COMMIT PRESERVE ROWS;

CREATE INDEX CSR.IX_TMPFLSTALTRUN_FLST ON CSR.TEMP_FLOW_STATE_ALERT_RUN (app_sid, flow_sid, flow_state_alert_id);
CREATE INDEX CSR.IX_TMPFLSTALTRUN_FLSTUSR ON CSR.TEMP_FLOW_STATE_ALERT_RUN (app_sid, flow_sid, flow_state_alert_id, user_sid);

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_DELEGATION_TREE (
	DELEGATION_SID					NUMBER(10),
	PARENT_SID						NUMBER(10),
	LVL 							NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_CALC_TREE
(
	LVL								NUMBER(10)	NOT NULL,
	PARENT_SID						NUMBER(10),
	IND_SID							NUMBER(10)	NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_CONSUMPTION(
	REGION_SID			NUMBER(10)		NOT NULL,
	METER_INPUT_ID		NUMBER(10)		NOT NULL,
	PRIORITY			NUMBER(10)		NOT NULL,
	START_DTM			DATE			NOT NULL,
	END_DTM				DATE,
	VAL_NUMBER			NUMBER(24, 10),
	PER_DIEM			NUMBER(24, 10),
	RAW_DATA_ID			NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE INDEX CSR.IX_TEMP_METER_CONSUMPTION ON CSR.TEMP_METER_CONSUMPTION (REGION_SID, METER_INPUT_ID, PRIORITY, START_DTM);

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_DOC_REFERENCE
(
	MODULE				VARCHAR2(100)	NOT NULL,
	DESCRIPTION			VARCHAR2(500)	NOT NULL,
	URL					VARCHAR2(300)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_AUDIT_LOG_IDS (
	ROW_ID				ROWID			NOT NULL,
	AUDIT_DTM			DATE			NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_PERIOD_DTMS
(
	PERIOD_ID						NUMBER(10)	NOT NULL,
	YEAR							NUMBER(10)	NOT NULL,
	START_DTM						DATE		NOT NULL,
	END_DTM							DATE		NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_COURSE (
	APP_SID 					NUMBER(10) 		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	COURSE_ID 					NUMBER(10) 		NOT NULL,
	TITLE 						VARCHAR2(100) 	NOT NULL,
	REFERENCE 					VARCHAR2(40),
	DESCRIPTION 				VARCHAR2(4000),
	VERSION 					VARCHAR2(50),
	COURSE_TYPE_ID 				NUMBER(10) 		NOT NULL,
	REGION_SID					NUMBER(10) 		NOT NULL,
	DELIVERY_METHOD_ID 			NUMBER(10) 		NOT NULL,
	PROVISION_ID 				NUMBER(10)		NOT NULL,
	STATUS_ID 					NUMBER(10) 		NOT NULL,
	DEFAULT_TRAINER_ID 			NUMBER(10),
	DEFAULT_PLACE_ID 			NUMBER(10),
	DURATION 					NUMBER(5) 		NOT NULL,
	EXPIRY_PERIOD 				NUMBER(5),
	EXPIRY_NOTICE_PERIOD 		NUMBER(5),
	ESCALATION_NOTICE_PERIOD 	NUMBER(5),
	REMINDER_NOTICE_PERIOD 		NUMBER(5),
	PASS_SCORE 					NUMBER(5),
	SURVEY_SID 					NUMBER(10),
	QUIZ_SID 					NUMBER(10),
	PASS_FAIL 					NUMBER(1) 		DEFAULT 0 NOT NULL,
	ABSOLUTE_DEADLINE 			DATE,
	REGION_DESCRIPTION			VARCHAR2(4000),
	COURSE_TYPE_LABEL			VARCHAR2(50),
	DELIVERY_METHOD_LABEL		VARCHAR2(50),
	PROVISION_LABEL				VARCHAR2(50),
	STATUS_LABEL				VARCHAR2(50),
	DEFAULT_TRAINER_LABEL		VARCHAR2(100),
	DEFAULT_PLACE_LABEL			VARCHAR2(4000),
	CAN_EDIT 					NUMBER(1)		DEFAULT 0 NOT NULL,
	USER_SID					NUMBER(10),
	USER_NAME					VARCHAR2(255),
	FLOW_STATE					VARCHAR2(255),
	SCHEDULE_ID_FOR_FLOW_STATE	NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_COURSE_SCHEDULE (
	APP_SID 					NUMBER(10) 		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	COURSE_SCHEDULE_ID 			NUMBER(10) 		NOT NULL,
	COURSE_ID 					NUMBER(10) 		NOT NULL,
	MAX_CAPACITY 				NUMBER(5) 		NOT NULL,
	BOOKED						NUMBER(5) 		DEFAULT 0 NOT NULL,
	AVAILABLE 					NUMBER(5) 		NOT NULL,
	CANCELED					NUMBER(1) 		DEFAULT 0 NOT NULL,
	TRAINER_ID					NUMBER(10),
	PLACE_ID					NUMBER(10),
	CALENDAR_EVENT_ID 			NUMBER(10) 		NOT NULL,
	START_DTM         			DATE			NOT NULL,   
	END_DTM                    	DATE,
	CREATED_BY_SID    			NUMBER(10)    	NOT NULL,
	CREATED_DTM       			DATE			NOT NULL,          
	LOCATION                   	VARCHAR2(1000),
	TITLE 						VARCHAR2(100) 	NOT NULL,
	REFERENCE 					VARCHAR2(40),
	DESCRIPTION 				VARCHAR2(4000),
	VERSION 					VARCHAR2(50),
	COURSE_TYPE_ID 				NUMBER(10) 		NOT NULL,
	REGION_SID 					NUMBER(10) 		NOT NULL,
	DELIVERY_METHOD_ID 			NUMBER(10) 		NOT NULL,
	PROVISION_ID 				NUMBER(10)		NOT NULL,
	STATUS_ID 					NUMBER(10) 		NOT NULL,
	DEFAULT_TRAINER_ID 			NUMBER(10),
	DEFAULT_PLACE_ID 			NUMBER(10),
	DURATION 					NUMBER(5) 		NOT NULL,
	EXPIRY_PERIOD 				NUMBER(5),
	EXPIRY_NOTICE_PERIOD 		NUMBER(5),
	ESCALATION_NOTICE_PERIOD 	NUMBER(5),
	REMINDER_NOTICE_PERIOD 		NUMBER(5),
	PASS_SCORE 					NUMBER(5),
	SURVEY_SID 					NUMBER(10),
	QUIZ_SID 					NUMBER(10),
	PASS_FAIL 					NUMBER(1) 		DEFAULT 0 NOT NULL,
	ABSOLUTE_DEADLINE 			DATE,
	REGION_DESCRIPTION			VARCHAR2(4000),
	COURSE_TYPE_LABEL			VARCHAR2(50),
	DELIVERY_METHOD_LABEL		VARCHAR2(50),
	PROVISION_LABEL				VARCHAR2(50),
	STATUS_LABEL				VARCHAR2(50),
	TRAINER_LABEL				VARCHAR2(100),
	PLACE_LABEL					VARCHAR2(4000),
	CAN_EDIT 					NUMBER(1) 		DEFAULT 0 NOT NULL,
	USER_CURRENT_STATE			VARCHAR2(50),
	USER_SID					NUMBER(10),
	USER_NAME					VARCHAR2(255),
	ATTENDANCE_PASSWORD 		VARCHAR2(100)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_SHEET_ID (
	sheet_id					NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_ALERT_FLOW_ITEMS(
	FLOW_ITEM_ID  NUMBER(10)	NOT NULL, 
	CONSTRAINT PK_TT_ALERT_FLOW_ITEM PRIMARY KEY (FLOW_ITEM_ID)
) ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_GAPS(
	REGION_SID			NUMBER(10)		NOT NULL,
	METER_INPUT_ID		NUMBER(10)		NOT NULL,
	START_DTM			DATE			NOT NULL,
	END_DTM				DATE			NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_REGION_TAG (
	REGION_SID						NUMBER(10)		NOT NULL,
	TAG_ID							NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_PATCH_IMPORT_ROWS (
	SOURCE_ROW						NUMBER(10),
	REGION_SID						NUMBER(10),
	METER_INPUT_ID					NUMBER(10),
	PRIORITY						NUMBER(10),
	START_DTM						DATE,
	END_DTM							DATE,
	VAL								NUMBER(24,10),
	NOTE							VARCHAR2(800),
	ERROR_MSG						VARCHAR(4000)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_TYPE_INPUT (
	METER_INPUT_ID					NUMBER(10)  NOT NULL,
	AGGREGATOR						VARCHAR(32) NOT NULL,
	IND_SID							NUMBER(10)  NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_INPUT_AGGR_IND (
	REGION_SID						NUMBER(10)  NOT NULL,
	METER_INPUT_ID					NUMBER(10)  NOT NULL,
	AGGREGATOR						VARCHAR(32) NOT NULL,
	METER_TYPE_ID					NUMBER(10),
	MEASURE_SID						NUMBER(10),
	MEASURE_CONVERSION_ID			NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_METER_DATA_ID_REGION (
	METER_DATA_ID					NUMBER(10)		NOT NULL,
	REGION_SID						NUMBER(10)		NOT NULL
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_STATE
(
	FLOW_SID				NUMBER(10) NOT NULL,
	POS						NUMBER(10) NOT NULL,
	FLOW_STATE_ID			NUMBER(10) NOT NULL,
	LABEL					VARCHAR2(255) NOT NULL,
	LOOKUP_KEY				VARCHAR2(255),
	IS_FINAL				NUMBER(1) NOT NULL,
	STATE_COLOUR			NUMBER(10),
	EDITABLE_ROLE_SIDS		VARCHAR2(2000),
	NON_EDITABLE_ROLE_SIDS	VARCHAR2(2000),
	EDITABLE_COL_SIDS		VARCHAR2(2000),
	NON_EDITABLE_COL_SIDS	VARCHAR2(2000),
	INVOLVED_TYPE_IDS		VARCHAR2(2000),
	EDITABLE_GROUP_SIDS		VARCHAR2(2000),
	NON_EDITABLE_GROUP_SIDS	VARCHAR2(2000),
	MOVE_FROM_FLOW_STATE_ID	NUMBER(10),
	ATTRIBUTES_XML			XMLTYPE,
	FLOW_STATE_GROUP_IDS	VARCHAR2(2000),
	FLOW_STATE_NATURE_ID	NUMBER(10),
	SURVEY_EDITABLE			NUMBER(10) NOT NULL,
	SURVEY_TAG_IDS			VARCHAR2(2000)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_STATE_ALERT
(
	FLOW_SID					NUMBER(10) NOT NULL,
	FLOW_STATE_ID				NUMBER(10) NOT NULL,
	CUSTOMER_ALERT_TYPE_ID		NUMBER(10) NOT NULL,
	FLOW_STATE_ALERT_ID			NUMBER(10) NOT NULL,
	FLOW_ALERT_DESCRIPTION		VARCHAR2(500) NOT NULL,
	HELPER_SP					VARCHAR2(256),
	ROLE_SIDS					VARCHAR2(2000),
	GROUP_SIDS					VARCHAR2(2000),
	USER_SIDS					VARCHAR2(2000),
	RECURRENCE_XML				XMLTYPE NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_STATE_ROLE_CAP
(
	FLOW_SID					NUMBER(10) NOT NULL,
	FLOW_STATE_RL_CAP_ID 		NUMBER(10) NOT NULL,
	FLOW_STATE_ID				NUMBER(10) NOT NULL,
	FLOW_CAPABILITY_ID			NUMBER(10) NOT NULL,
	ROLE_SID					NUMBER(10),
	FLOW_INVOLVEMENT_TYPE_ID	NUMBER(10),
	PERMISSION_SET				NUMBER(10) NOT NULL,
	GROUP_SID					NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_STATE_TRANS
(
	FLOW_SID					NUMBER(10) NOT NULL,
	POS							NUMBER(10) NOT NULL,
	FLOW_STATE_TRANSITION_ID	NUMBER(10) NOT NULL,
	FROM_STATE_ID				NUMBER(10) NOT NULL,
	TO_STATE_ID					NUMBER(10) NOT NULL,
	ASK_FOR_COMMENT				VARCHAR2(16) NOT NULL,
	MANDATORY_FIELDS_MESSAGE	VARCHAR2(255),
	AUTO_TRANS_TYPE				NUMBER(10) NOT NULL,
	HOURS_BEFORE_AUTO_TRAN		NUMBER(10),
	AUTO_SCHEDULE_XML			XMLTYPE,
	BUTTON_ICON_PATH			VARCHAR2(255),
	VERB						VARCHAR2(255) NOT NULL,
	LOOKUP_KEY					VARCHAR2(255),
	HELPER_SP					VARCHAR2(255),
	ROLE_SIDS					VARCHAR2(2000),
	COLUMN_SIDS					VARCHAR2(2000),
	INVOLVED_TYPE_IDS			VARCHAR2(2000),
	GROUP_SIDS					VARCHAR2(2000),
	ATTRIBUTES_XML				XMLTYPE,
	ENFORCE_VALIDATION			NUMBER(1) DEFAULT 0 NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_TRANS_ALERT
(
	FLOW_SID						NUMBER(10) NOT NULL,
	FLOW_TRANSITION_ALERT_ID		NUMBER(10) NOT NULL,
	FLOW_STATE_TRANSITION_ID		NUMBER(10) NOT NULL,
	CUSTOMER_ALERT_TYPE_ID			NUMBER(10) NOT NULL,
	DESCRIPTION						VARCHAR2(500) NOT NULL,
	TO_INITIATOR					NUMBER(1) NOT NULL,
	CAN_BE_EDITED_BEFORE_SENDING	NUMBER(1) DEFAULT 0 NOT NULL,
	HELPER_SP						VARCHAR2(256),
	FLOW_CMS_COLS					VARCHAR2(2000),
	USER_SIDS						VARCHAR2(2000),
	ROLE_SIDS						VARCHAR2(2000),
	GROUP_SIDS						VARCHAR2(2000),
	CC_USER_SIDS					VARCHAR2(2000),
	CC_ROLE_SIDS					VARCHAR2(2000),
	CC_GROUP_SIDS					VARCHAR2(2000),
	ALERT_MANAGER_FLAGS				VARCHAR2(2000),
	INVOLVED_TYPE_IDS				VARCHAR2(2000)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.T_LIKE_FOR_LIKE_VAL_NORMALISED
(
	IND_SID				NUMBER(10) NOT NULL,
	REGION_SID			NUMBER(10) NOT NULL,
	PERIOD_START_DTM	DATE NOT NULL,
	PERIOD_END_DTM		DATE NOT NULL,
	VAL_NUMBER			NUMBER(24,10),
	SOURCE_TYPE_ID		NUMBER(10),
	SOURCE_ID			NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE csr.TT_CSRIMPEXPCHECK_DDL (
	OWNER             VARCHAR2(30) NOT NULL,
	TABLE_NAME         VARCHAR2(30) NOT NULL,
	COLUMN_NAME        VARCHAR2(30) NOT NULL,
	DATA_TYPE          VARCHAR2(106),
	DATA_LENGTH        NUMBER NOT NULL,
	DATA_PRECISION     NUMBER,
	NULLABLE           VARCHAR2(1),
	DATA_DEFAULT       CLOB,
	CHARACTER_SET_NAME VARCHAR2(44)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_USER_COURSE_FILTER
(
	APP_SID					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TRAINEE_SID				NUMBER(10),
	COURSE_ID				NUMBER(10),
	TITLE					VARCHAR2(100),
	TRAINING_PRIORITY_ID	NUMBER(10),
	TRAINING_PRIORITY_POS	NUMBER(2),
	FLOW_ITEM_ID			NUMBER(10),
	FLOW_STATE_ID			NUMBER(10)
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_PROJECT_INITIATIVE_METRIC(
    INITIATIVE_METRIC_ID    NUMBER(10) NOT NULL,
    POS                     NUMBER(10),
    INPUT_DP                NUMBER(10),
    INFO_TEXT               VARCHAR2(4000)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_INIT_METRIC_FLOW_STATE(
    INITIATIVE_METRIC_ID    NUMBER(10) NOT NULL,
    FLOW_STATE_ID           NUMBER(10) NOT NULL,
    MANDATORY               NUMBER(1),
    VISIBLE                 NUMBER(1)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_FILTER_CONDITIONS (
	SURVEY_SID						NUMBER(10) NOT NULL,
	QS_CAMPAIGN_SID					NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_FOLDER_SEARCH_EXTENSION (
  SID_ID       			NUMBER(10, 0)	NOT NULL,
  PARENT_SID			NUMBER(10, 0)	NOT NULL,
  SEARCH_RESULT_TEXT	VARCHAR2(255)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_DUFF_METER_REGION (
	URJANET_METER_ID				VARCHAR2(256)	NOT NULL,
	METER_NAME						VARCHAR2(1024)	NOT NULL,
	METER_NUMBER					VARCHAR2(256),
	REGION_REF						VARCHAR2(256),
	SERVICE_TYPE					VARCHAR2(256)	NOT NULL,
	METER_RAW_DATA_ID				NUMBER(10)		NOT NULL,
	METER_RAW_DATA_ERROR_ID			NUMBER(10),
	REGION_SID						NUMBER(10),
	ISSUE_ID						NUMBER(10),
	MESSAGE							VARCHAR2(4000),
	ERROR_TYPE_ID					NUMBER(10) 		NOT NULL,
	CONSTRAINT PK_TEMP_DUFF_METER_REGION PRIMARY KEY (URJANET_METER_ID)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_FIXED_DUFF_METER_REGION (
	URJANET_METER_ID				VARCHAR2(256)	NOT NULL,
	CONSTRAINT PK_TEMP_FIXED_DUFF_MTR_REGN PRIMARY KEY (URJANET_METER_ID)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_FLOW_ITEM_REGION (
	FLOW_ITEM_ID		NUMBER(10) NOT NULL,
	REGION_SID			NUMBER(10) NOT NULL
) ON COMMIT DELETE ROWS;

CREATE INDEX CSR.IX_TEMP_FLOW_ITEM_REGION_F ON CSR.TEMP_FLOW_ITEM_REGION(FLOW_ITEM_ID);
CREATE INDEX CSR.IX_TEMP_FLOW_ITEM_REGION_R ON CSR.TEMP_FLOW_ITEM_REGION(REGION_SID);

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_EST_ERROR_INFO
(
	REGION_SID					NUMBER(10),
	PROP_REGION_SID				NUMBER(10),
	EST_ACCOUNT_SID				NUMBER(10),
	PM_CUSTOMER_ID				VARCHAR2(256),
	PM_BUILDING_ID				VARCHAR2(256),
	PM_SPACE_ID					VARCHAR2(256),
	PM_METER_ID					VARCHAR2(256),
	BUILDING_NAME				VARCHAR2(1024),
	SPACE_NAME					VARCHAR2(1024),
	METER_NAME					VARCHAR2(1024),
	ERROR_ID					NUMBER(10),
	ERROR_CODE					NUMBER(10),
	ERROR_COUNT					NUMBER(10),
	ERROR_MESSAGE				VARCHAR2(4000),
	ERROR_DTM					DATE
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_FLOW_ITEM_AUDIT_LOG (
	FLOW_ITEM_AUDIT_LOG_ID			NUMBER(10)		NOT NULL,
	AUDIT_DTM						DATE			NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_DELEGATION_USER (
	DELEGATION_SID 					NUMBER(10),
	USER_SID 						NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_COMP_REGION_LVL_IDS (
	REGION_SID			NUMBER(10)		NOT NULL,
	REGION_DESCRIPTION	VARCHAR(1023)	NOT NULL,
	MGR_FULL_NAME		VARCHAR(255)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_EXPORT_SYSTEM_VALUES (
	REGION_SID				NUMBER(10),
	START_DTM				DATE,
	END_DTM					DATE,
	CONSTRAINT PK_TEMP_EXPORT_SYSTEM_VALUES PRIMARY KEY (REGION_SID)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_COMPANY_REGION_ROLE (
	COMPANY_SID					NUMBER(10) NOT NULL,
	REGION_SID					NUMBER(10) NOT NULL,
	ROLE_SID					NUMBER(10) NOT NULL,
	ACTIVE						NUMBER(1) NOT NULL,
	DELETED						NUMBER(1) NOT NULL
) ON COMMIT DELETE ROWS;



CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_QUESTION_XML
(
	ID			NUMBER(10)		NOT NULL,
	XML			CLOB			NOT NULL,
	CONSTRAINT PK_TEMP_QUESTION_XML PRIMARY KEY (ID)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_AUDIT_CAPABILITY(
	INTERNAL_AUDIT_SID		NUMBER(10) NOT NULL, 
	INTERNAL_AUDIT_TYPE_ID	NUMBER(10) NOT NULL,
	FLOW_CAPABILITY_ID		NUMBER(10) NOT NULL,
	PERMISSION_SET			NUMBER(10) NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_AUDIT_BROWSE(
	INTERNAL_AUDIT_SID			NUMBER(10) NOT NULL, 
	REGION_SID					NUMBER(10),
	REGION_DESCRIPTION			VARCHAR(1023),
	AUDIT_DTM					DATE NOT NULL,
	LABEL						VARCHAR(255) NOT NULL,
	AUDITOR_USER_SID			NUMBER(10) NOT NULL,
	AUDITOR_FULL_NAME			VARCHAR(256),
	CUSTOM_AUDIT_ID				VARCHAR(295),
	OPEN_NON_COMPLIANCES		NUMBER,
	AUDITOR_NAME				VARCHAR(256),
	AUDITOR_ORGANISATION		VARCHAR(50),
	AUDITOR_EMAIL				VARCHAR(256),
	REGION_TYPE					NUMBER(2),
	REGION_TYPE_CLASS_NAME		VARCHAR2(64),
	SHORT_NOTES					CLOB,
	FULL_NOTES					CLOB,
	AUDIT_TYPE_ID				NUMBER(10),
	AUDIT_TYPE_LABEL		 	VARCHAR2(255),
	INTERNAL_AUDIT_TYPE_GROUP_ID NUMBER(10),
	IA_TYPE_GROUP_LABEL		 	VARCHAR2(255),
	ICON_IMAGE_FILENAME			VARCHAR2(255),
	ICON_IMAGE_SHA1				VARCHAR2(40),
	INTERNAL_AUDIT_TYPE_ID		NUMBER(10) NOT NULL,
	FLOW_SID				 	NUMBER(10),
	FLOW_LABEL				  	VARCHAR2(255),
	FLOW_ITEM_ID				NUMBER(10),
	CURRENT_STATE_ID			NUMBER(10),
	FLOW_STATE_LABEL			VARCHAR2(255),
	FLOW_STATE_LOOKUP_KEY		VARCHAR2(255),
	FLOW_STATE_IS_FINAL		 	NUMBER(1),
	SURVEY_SCORE_TYPE_ID	 	NUMBER(10),
	SURVEY_SCORE_FORMAT_MASK 	VARCHAR2(20),
	SURVEY_OVERALL_MAX_SCORE 	NUMBER(15,5),
	SURVEY_SCORE_LABEL			VARCHAR2(255),
	NC_SCORE_TYPE_ID			NUMBER(10),
	NC_MAX_SCORE				NUMBER(15,5),
	NC_SCORE_LABEL				VARCHAR2(255),
	NC_SCORE_FORMAT_MASK		VARCHAR2(20),
	NC_SCORE					NUMBER(15,5),
	SUMMARY_SURVEY_VERSION		NUMBER(10),
	SUMMARY_RESPONSE_ID 		NUMBER(10),
	SUMMARY_SURVEY_LABEL		VARCHAR2(256),
	SUMMARY_SURVEY_SID			NUMBER(10),
	AUDITEE_USER_SID			NUMBER(10),
	AUDITEE_FULL_NAME			VARCHAR2(256),
	AUDITEE_EMAIL				VARCHAR2(256),
	SURVEY_SID					NUMBER(10),
	SURVEY_LABEL				VARCHAR2(256),
	SURVEY_COMPLETED			DATE,		
	SURVEY_RESPONSE_ID			NUMBER(10),
	SURVEY_VERSION				NUMBER(10),
	AUDIT_CLOSURE_TYPE_ID		NUMBER(10),
	CLOSURE_LABEL				VARCHAR2(255),
	SURVEY_OVERALL_SCORE		NUMBER(15,5),
	NEXT_AUDIT_DUE_DTM			DATE
) ON COMMIT DELETE ROWS;


CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_CORE_WORKING_HOURS (
	INHERITED_FROM_REGION_SID	NUMBER(10)		NOT NULL,
	CORE_WORKING_HOURS_ID		NUMBER(10)		NOT NULL,
	DAY							NUMBER(1)		NOT NULL,
	START_TIME					VARCHAR2(16)	NOT NULL,
	END_TIME					VARCHAR2(16)	NOT NULL,
	CONSTRAINT CK_TMP_CORE_WORKING_HOURS_DAY CHECK (DAY IN (1,2,3,4,5,6,7))
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_ISSUES_DUE (
	APP_SID					NUMBER(10)		NOT NULL,
	ISSUE_ID				NUMBER(10)		NOT NULL,
	DUE_DTM					DATE,
	EMAIL_INVOLVED_ROLES	NUMBER(1),		
	email_involved_users	NUMBER(1),		
	assigned_to_user_sid	NUMBER(10),		
	region_sid				NUMBER(10),		
	region_2_sid			NUMBER(10),		
	issue_priority_id		NUMBER(10),		
	alert_pending_due_days	NUMBER(10),		
	issue_type				VARCHAR2(255),		
	issue_label				VARCHAR2(2048),		
	issue_ref				NUMBER(10),			
	is_critical				NUMBER(1),		
	raised_dtm				DATE,		
	closed_dtm				DATE,		
	resolved_dtm			DATE,		
	rejected_dtm			DATE,		
	assigned_to_role_sid	NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_ISSUES_OVERDUE (
	APP_SID					NUMBER(10)		NOT NULL,
	ISSUE_ID				NUMBER(10)		NOT NULL,
	DUE_DTM					DATE,
	EMAIL_INVOLVED_ROLES	NUMBER(1),		
	email_involved_users	NUMBER(1),		
	assigned_to_user_sid	NUMBER(10),		
	region_sid				NUMBER(10),		
	region_2_sid			NUMBER(10),		
	issue_priority_id		NUMBER(10),		
	alert_overdue_days		NUMBER(10),		
	issue_type				VARCHAR2(255),		
	issue_label				VARCHAR2(2048),		
	issue_ref				NUMBER(10),		
	is_critical				NUMBER(1),		
	raised_dtm				DATE,		
	closed_dtm				DATE,		
	resolved_dtm			DATE,		
	rejected_dtm			DATE,		
	assigned_to_role_sid	NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_ISSUE_USER (
	APP_SID					NUMBER(10)		NOT NULL,
	ISSUE_ID				NUMBER(10)		NOT NULL,
	USER_SID				NUMBER(10)		NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_UPDATE_ISSUES_ERROR (
	ISSUE_ID				NUMBER NOT NULL,
	MESSAGE					VARCHAR2(4000) NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CSR.TT_NC_AUDIT (
    non_compliance_id               NUMBER(10,0) NOT NULL,
    label                           VARCHAR2(2048),
    detail                          CLOB,
    created_dtm                     DATE DEFAULT SYSDATE NOT NULL,
    created_by_user_sid             NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
    non_compliance_ref              VARCHAR2(255),
    internal_audit_sid              NUMBER(10,0),
    sid_id                          NUMBER(10,0),
    audit_label                     VARCHAR2(2048),
    created_by_full_name            VARCHAR2(256 BYTE),
    closed_issues                   NUMBER,
    total_issues                    NUMBER,
    root_cause                      CLOB,
    suggested_action                CLOB,
    open_issues                     NUMBER,
    region_sid                      NUMBER(10,0),
    region_description              VARCHAR2(255),
    non_compliance_type_id          NUMBER(10,0),
    non_compliance_type_label       CLOB,
    is_closed                       NUMBER(1,0),
    override_score                  NUMBER(15,5),
    is_repeat                       NUMBER,
    repeat_of_audit_sid             NUMBER(10,0),
    repeat_of_non_compliance_id     NUMBER(10,0)
) ON COMMIT DELETE ROWS;
