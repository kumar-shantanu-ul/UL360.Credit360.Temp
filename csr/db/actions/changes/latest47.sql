-- Please update version.sql too -- this keeps clean builds in sync
define version=47
@update_header

prompt Enter connection name
connect system/manager@&&1
declare
	v_c number;
begin
	select count(*) into v_c from dba_sys_privs where grantee=user and privilege='EXEMPT ACCESS POLICY';
	if v_c <> 1 then
		raise_application_error(-20001, 'Please run "grant exempt access policy to system" as a sysdba user and rerun the script afterwards');
	end if;
end;
/
-- some groups have apparently entered comments (381/812 rows)?!
-- these show as admin anyway when they are retrieved, so this should be ok...
update actions.task_comment set user_sid=3 where user_sid not in (select csr_user_sid from csr.csr_user);
update actions.task_status_history set set_by_user_sid=3 where set_by_user_sid not in (select csr_user_sid from csr.csr_user);
connect actions/actions@&&1

begin
	for r in (select object_name, policy_name from user_policies where function='APPSIDCHECK') loop
		dbms_rls.drop_policy(
            object_schema   => 'ACTIONS',
            object_name     => r.object_name,
            policy_name     => r.policy_name
        );
    end loop;
end;
/

alter table AGGR_TASK_IND_DEPENDENCY add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update AGGR_TASK_IND_DEPENDENCY set app_sid = (
	select p.app_sid 
	  from task t, project p
	 where AGGR_TASK_IND_DEPENDENCY.task_sid = t.task_sid and t.project_sid = p.project_sid);
alter table AGGR_TASK_IND_DEPENDENCY modify APP_SID not null;
alter table AGGR_TASK_IND_DEPENDENCY drop primary key cascade drop index;
alter table AGGR_TASK_IND_DEPENDENCY add 
    CONSTRAINT PK_AGGR_TASK_IND_DEPENDENCY PRIMARY KEY (APP_SID, TASK_SID, IND_SID)
    USING INDEX
TABLESPACE INDX
;

alter table AGGR_TASK_PERIOD add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update AGGR_TASK_PERIOD set app_sid = (
	select p.app_sid 
	  from task t, project p
	 where AGGR_TASK_PERIOD.task_sid = t.task_sid and t.project_sid = p.project_sid);
alter table AGGR_TASK_PERIOD modify app_sid not null;
alter table AGGR_TASK_PERIOD drop primary key cascade drop index;
alter table AGGR_TASK_PERIOD add 
    CONSTRAINT PK_AGGR_TASK_PERIOD PRIMARY KEY (APP_SID, TASK_SID, START_DTM, REGION_SID)
    USING INDEX
TABLESPACE INDX
;


alter table AGGR_TASK_PERIOD_OVERRIDE add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update AGGR_TASK_PERIOD_OVERRIDE set app_sid = (
	select p.app_sid 
	  from task t, project p
	 where AGGR_TASK_PERIOD_OVERRIDE.task_sid = t.task_sid and t.project_sid = p.project_sid);
alter table AGGR_TASK_PERIOD_OVERRIDE modify app_sid not null;
alter table AGGR_TASK_PERIOD_OVERRIDE drop primary key cascade drop index;
alter table AGGR_TASK_PERIOD_OVERRIDE add 
    CONSTRAINT PK_AGGR_TASK_PERIOD_OVERRIDE PRIMARY KEY (APP_SID, TASK_SID, START_DTM, REGION_SID)
    USING INDEX
TABLESPACE INDX
;


alter table AGGR_TASK_TASK_DEPENDENCY add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update AGGR_TASK_TASK_DEPENDENCY set app_sid = (
	select p.app_sid 
	  from task t, project p
	 where AGGR_TASK_TASK_DEPENDENCY.task_sid = t.task_sid and t.project_sid = p.project_sid);
alter table AGGR_TASK_TASK_DEPENDENCY modify app_sid not null;
alter table AGGR_TASK_TASK_DEPENDENCY drop primary key cascade drop index;
alter table AGGR_TASK_TASK_DEPENDENCY add 
    CONSTRAINT PK_AGGR_TASK_TASK_DEPENDENCY PRIMARY KEY (APP_SID, TASK_SID, DEPENDS_ON_TASK_SID)
    USING INDEX
TABLESPACE INDX
;

alter table ALLOW_TASK_STATUS_CHANGE add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update ALLOW_TASK_STATUS_CHANGE set app_sid = (
	select application_sid_id from security.securable_object so where ALLOW_TASK_STATUS_CHANGE.user_or_group_sid = so.sid_id);
alter table ALLOW_TASK_STATUS_CHANGE modify app_sid not null;
alter table ALLOW_TASK_STATUS_CHANGE drop primary key cascade drop index;
alter table ALLOW_TASK_STATUS_CHANGE add 
    CONSTRAINT PK_ALLOW_TASK_STATUS_CHANGE PRIMARY KEY (APP_SID, TASK_STATUS_ID, USER_OR_GROUP_SID)
    USING INDEX
TABLESPACE INDX
;

alter table CUSTOMER_OPTIONS modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
alter table CUSTOMER_OPTIONS drop primary key cascade drop index;
alter table CUSTOMER_OPTIONS add 
    CONSTRAINT PK_CUSTOMER_OPTIONS PRIMARY KEY (APP_SID)
    USING INDEX
TABLESPACE INDX
;

alter table FILE_UPLOAD add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update FILE_UPLOAD set app_sid = (
	select min(p.app_sid)
	  from project p, task t, task_file_upload tfu
	 where t.task_sid = tfu.task_sid and t.project_sid = p.project_sid and tfu.file_id = file_upload.file_id)
where app_sid is null;
update FILE_UPLOAD set app_sid = (
	select min(p.app_sid)
	  from project p, task t, task_period_file_upload tfpu
	 where p.project_sid = t.project_sid and t.task_sid = tfpu.task_sid and tfpu.file_id = file_upload.file_id)
where app_sid is null;	
alter table FILE_UPLOAD modify app_sid not null;
alter table FILE_UPLOAD drop primary key cascade drop index;
alter table FILE_UPLOAD add 
    CONSTRAINT PK_FILE_UPLOAD PRIMARY KEY (APP_SID, FILE_ID)
    USING INDEX
TABLESPACE INDX
;


alter table IND_TEMPLATE modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
alter table IND_TEMPLATE drop primary key cascade drop index;
alter table IND_TEMPLATE add 
    CONSTRAINT PK_IND_TEMPLATE PRIMARY KEY (APP_SID, IND_TEMPLATE_ID)
    USING INDEX
TABLESPACE INDX
;


alter table INITIATIVE_EXTRA_INFO add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update INITIATIVE_EXTRA_INFO set app_sid = (
	select p.app_sid from task t, project p where p.project_sid = t.project_sid and t.task_sid = INITIATIVE_EXTRA_INFO.task_sid);
alter table INITIATIVE_EXTRA_INFO modify app_sid not null;
alter table INITIATIVE_EXTRA_INFO drop primary key cascade drop index;
alter table INITIATIVE_EXTRA_INFO add 
    CONSTRAINT PK_INITIATIVE_EXTRA_INFO PRIMARY KEY (APP_SID, TASK_SID)
    USING INDEX
TABLESPACE INDX
;

alter table INITIATIVE_PROJECT_TEAM add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update INITIATIVE_PROJECT_TEAM set app_sid = (
	select p.app_sid from task t, project p where p.project_sid = t.project_sid and t.task_sid = INITIATIVE_PROJECT_TEAM.task_sid);
alter table INITIATIVE_PROJECT_TEAM modify app_sid not null;


alter table PROJECT modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
alter table PROJECT drop primary key cascade drop index;
alter table PROJECT add 
    CONSTRAINT PK_PROJECT PRIMARY KEY (APP_SID, PROJECT_SID)
    USING INDEX
TABLESPACE INDX
;


alter table PROJECT_IND_TEMPLATE add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update PROJECT_IND_TEMPLATE set app_sid = (
	select app_sid from project where project.project_sid = PROJECT_IND_TEMPLATE.project_sid);
alter table PROJECT_IND_TEMPLATE modify app_sid not null;
alter table PROJECT_IND_TEMPLATE drop primary key cascade drop index;
alter table PROJECT_IND_TEMPLATE add 
    CONSTRAINT PK_PROJECT_IND_TEMPLATE PRIMARY KEY (APP_SID, PROJECT_SID, IND_TEMPLATE_ID)
    USING INDEX
TABLESPACE INDX
;

alter table PROJECT_IND_TEMPLATE_INSTANCE add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update PROJECT_IND_TEMPLATE_INSTANCE set app_sid = (
	select app_sid from project where project.project_sid = PROJECT_IND_TEMPLATE_INSTANCE.project_sid);
alter table PROJECT_IND_TEMPLATE_INSTANCE modify app_sid not null;
alter table PROJECT_IND_TEMPLATE_INSTANCE drop primary key cascade drop index;
alter table PROJECT_IND_TEMPLATE_INSTANCE add 
    CONSTRAINT PK_PROJECT_IND_TEMPLATE_INST PRIMARY KEY (APP_SID, PROJECT_SID, FROM_IND_TEMPLATE_ID)
    USING INDEX
TABLESPACE INDX
;

alter table PROJECT_ROLE add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update PROJECT_ROLE set app_sid = (
	select app_sid from project where project.project_sid = PROJECT_ROLE.project_sid);
alter table PROJECT_ROLE modify app_sid not null;
alter table PROJECT_ROLE drop primary key cascade drop index;
alter table PROJECT_ROLE add 
    CONSTRAINT PK_PROJECT_ROLE PRIMARY KEY (APP_SID, PROJECT_SID, ROLE_ID)
    USING INDEX
TABLESPACE INDX
;


alter table PROJECT_ROLE_MEMBER add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update PROJECT_ROLE_MEMBER set app_sid = (
	select app_sid from project where project.project_sid = PROJECT_ROLE_MEMBER.project_sid);
alter table PROJECT_ROLE_MEMBER modify app_sid not null;
alter table PROJECT_ROLE_MEMBER drop primary key cascade drop index;
alter table PROJECT_ROLE_MEMBER add 
    CONSTRAINT PK_PROJECT_ROLE_MEMBER PRIMARY KEY (APP_SID, PROJECT_SID, ROLE_ID, USER_OR_GROUP_SID)
    USING INDEX
TABLESPACE INDX
;

alter table PROJECT_TAG_GROUP add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update PROJECT_TAG_GROUP set app_sid = (
	select app_sid from project where project.project_sid = PROJECT_TAG_GROUP.project_sid);
alter table PROJECT_TAG_GROUP modify app_sid not null;
alter table PROJECT_TAG_GROUP drop primary key cascade drop index;
alter table PROJECT_TAG_GROUP add 
    CONSTRAINT PK_PROJECT_TAG_GROUP PRIMARY KEY (APP_SID, TAG_GROUP_ID, PROJECT_SID)
    USING INDEX
TABLESPACE INDX
;


alter table PROJECT_TASK_PERIOD_STATUS add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update PROJECT_TASK_PERIOD_STATUS set app_sid = (
	select app_sid from project where project.project_sid = PROJECT_TASK_PERIOD_STATUS.project_sid);
alter table PROJECT_TASK_PERIOD_STATUS modify app_sid not null;
alter table PROJECT_TASK_PERIOD_STATUS drop primary key cascade drop index;
alter table PROJECT_TASK_PERIOD_STATUS add 
    CONSTRAINT PK_PROJECT_TASK_PERIOD_STATUS PRIMARY KEY (APP_SID, PROJECT_SID, TASK_PERIOD_STATUS_ID)
    USING INDEX
TABLESPACE INDX
;


alter table PROJECT_TASK_STATUS add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update PROJECT_TASK_STATUS set app_sid = (
	select app_sid from project where project.project_sid = PROJECT_TASK_STATUS.project_sid);
alter table PROJECT_TASK_STATUS modify app_sid not null;
alter table PROJECT_TASK_STATUS drop primary key cascade drop index;
alter table PROJECT_TASK_STATUS add 
    CONSTRAINT PK_PROJECT_TASK_STATUS PRIMARY KEY (APP_SID, PROJECT_SID, TASK_STATUS_ID)
    USING INDEX
TABLESPACE INDX
;

begin
	for r in (select table_name from user_tables where table_name='REF') loop
		execute immediate 'drop table REF';
	end loop;
end;
/

alter table ROLE modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
alter table ROLE drop primary key cascade drop index;
alter table ROLE add 
    CONSTRAINT PK_ROLE PRIMARY KEY (APP_SID, ROLE_ID)
    USING INDEX
TABLESPACE INDX
;


alter table ROOT_IND_TEMPLATE_INSTANCE  modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
alter table ROOT_IND_TEMPLATE_INSTANCE  drop primary key cascade drop index;
alter table ROOT_IND_TEMPLATE_INSTANCE  add 
    CONSTRAINT PK_ROOT_IND_TEMPLATE_INSTANCE PRIMARY KEY (APP_SID, FROM_IND_TEMPLATE_ID)
    USING INDEX
TABLESPACE INDX
;


alter table SCRIPT add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update SCRIPT set app_sid = (
	select app_sid from customer_options where customer_options.default_value_script_id = SCRIPT.script_id);
alter table SCRIPT modify app_sid not null;
alter table SCRIPT drop primary key cascade drop index;
alter table SCRIPT add 
    CONSTRAINT PK_SCRIPT PRIMARY KEY (APP_SID, SCRIPT_ID)
    USING INDEX
TABLESPACE INDX
;


alter table TAG add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TAG set app_sid = (
	select min(tg.app_sid)
	  from tag_group_member tgm, tag_group tg
	 where tgm.tag_id = tag.tag_id and tg.tag_group_id = tgm.tag_group_id)
where app_sid is null;
update TAG set app_sid = (
	select min(p.app_sid)
	  from task_tag tt, task t, project p
	 where tt.tag_id = tag.tag_id and t.task_sid = tt.task_sid and p.project_sid = t.project_sid)
where app_sid is null;
-- orphans... 213/901 ?
delete from tag where app_sid is null;
alter table TAG modify app_sid not null;
alter table TAG drop primary key cascade drop index;
alter table TAG add 
    CONSTRAINT PK_TAG PRIMARY KEY (APP_SID, TAG_ID)
    USING INDEX
TABLESPACE INDX
;

alter table TAG_GROUP modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
alter table TAG_GROUP drop primary key cascade drop index;
alter table TAG_GROUP add 
    CONSTRAINT PK_TAG_GROUP PRIMARY KEY (APP_SID, TAG_GROUP_ID)
    USING INDEX
TABLESPACE INDX
;

alter table TAG_GROUP_MEMBER add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TAG_GROUP_MEMBER set app_sid = (select app_sid from tag where TAG_GROUP_MEMBER.tag_id = tag.tag_id);
alter table TAG_GROUP_MEMBER modify app_sid not null;
alter table TAG_GROUP_MEMBER drop primary key cascade drop index;
alter table TAG_GROUP_MEMBER add 
    CONSTRAINT PK_TAG_GROUP_MEMBER PRIMARY KEY (APP_SID, TAG_GROUP_ID, TAG_ID)
    USING INDEX
TABLESPACE INDX
;

alter table TASK add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK set app_sid = (select app_sid from project where TASK.project_sid = project.project_sid);
alter table TASK modify app_sid not null;
alter table TASK drop primary key cascade drop index;
alter table TASK add 
    CONSTRAINT PK_TASK PRIMARY KEY (APP_SID, TASK_SID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_BUDGET_HISTORY add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_BUDGET_HISTORY set app_sid = (select app_sid from task where TASK.task_sid = TASK_BUDGET_HISTORY.task_sid);
alter table TASK_BUDGET_HISTORY modify app_sid not null;
alter table TASK_BUDGET_HISTORY drop primary key cascade drop index;
alter table TASK_BUDGET_HISTORY add 
    CONSTRAINT PK_TASK_BUDGET_HISTORY PRIMARY KEY (APP_SID, TASK_SID, SET_DTM)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_BUDGET_PERIOD add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_BUDGET_PERIOD set app_sid = (select app_sid from task where TASK.task_sid = TASK_BUDGET_PERIOD.task_sid);
alter table TASK_BUDGET_PERIOD modify app_sid not null;
alter table TASK_BUDGET_PERIOD drop primary key cascade drop index;
alter table TASK_BUDGET_PERIOD add 
    CONSTRAINT PK_TASK_BUDGET_PERIOD PRIMARY KEY (APP_SID, TASK_SID, START_DTM, END_DTM)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_COMMENT add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_COMMENT set app_sid = (select app_sid from task where TASK.task_sid = TASK_COMMENT.task_sid);
alter table TASK_COMMENT modify app_sid not null;
alter table TASK_COMMENT drop primary key cascade drop index;
alter table TASK_COMMENT add 
    CONSTRAINT PK_TASK_COMMENT PRIMARY KEY (APP_SID, TASK_COMMENT_ID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_FILE_UPLOAD add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_FILE_UPLOAD set app_sid = (select app_sid from task where TASK.task_sid = TASK_FILE_UPLOAD.task_sid);
alter table TASK_FILE_UPLOAD modify app_sid not null;
alter table TASK_FILE_UPLOAD drop primary key cascade drop index;
alter table TASK_FILE_UPLOAD add 
    CONSTRAINT PK_TASK_FILE_UPLOAD PRIMARY KEY (APP_SID, TASK_SID, FILE_ID)
    USING INDEX
TABLESPACE INDX
;

alter table TASK_IND_DEPENDENCY add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_IND_DEPENDENCY set app_sid = (select app_sid from task where TASK.task_sid = TASK_IND_DEPENDENCY.task_sid);
alter table TASK_IND_DEPENDENCY modify app_sid not null;
alter table TASK_IND_DEPENDENCY drop primary key cascade drop index;
alter table TASK_IND_DEPENDENCY add 
    CONSTRAINT PK_TASK_IND_DEPENDENCY PRIMARY KEY (APP_SID, TASK_SID, IND_SID)
    USING INDEX
TABLESPACE INDX
;

alter table TASK_IND_TEMPLATE_INSTANCE add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_IND_TEMPLATE_INSTANCE set app_sid = (select app_sid from task where TASK.task_sid = TASK_IND_TEMPLATE_INSTANCE.task_sid);
alter table TASK_IND_TEMPLATE_INSTANCE modify app_sid not null;
alter table TASK_IND_TEMPLATE_INSTANCE drop primary key cascade drop index;
alter table TASK_IND_TEMPLATE_INSTANCE add 
    CONSTRAINT PK_TASK_IND_TEMPLATE_INSTANCE PRIMARY KEY (APP_SID, TASK_SID, FROM_IND_TEMPLATE_ID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_INDICATOR add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_INDICATOR set app_sid = (select app_sid from task where TASK.task_sid = TASK_INDICATOR.task_sid);
alter table TASK_INDICATOR modify app_sid not null;
alter table TASK_INDICATOR drop primary key cascade drop index;
alter table TASK_INDICATOR add 
    CONSTRAINT PK_TASK_INDICATOR PRIMARY KEY (APP_SID, TASK_SID, INDICATOR_SID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_INSTANCE add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_INSTANCE set app_sid = (select app_sid from task where TASK.task_sid = TASK_INSTANCE.task_sid);
alter table TASK_INSTANCE modify app_sid not null;
alter table TASK_INSTANCE drop primary key cascade drop index;
alter table TASK_INSTANCE add 
    CONSTRAINT PK_TASK_INSTANCE PRIMARY KEY (APP_SID, TASK_SID, INSTANCE_ID, CONTEXT)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_PERIOD add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_PERIOD set app_sid = (select app_sid from task where TASK.task_sid = TASK_PERIOD.task_sid);
alter table TASK_PERIOD modify app_sid not null;
alter table TASK_PERIOD drop primary key cascade drop index;
alter table TASK_PERIOD add 
    CONSTRAINT PK_TASK_PERIOD PRIMARY KEY (APP_SID, TASK_SID, START_DTM, REGION_SID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_PERIOD_FILE_UPLOAD add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_PERIOD_FILE_UPLOAD set app_sid = (select app_sid from task where TASK.task_sid = TASK_PERIOD_FILE_UPLOAD.task_sid);
alter table TASK_PERIOD_FILE_UPLOAD modify app_sid not null;
alter table TASK_PERIOD_FILE_UPLOAD drop primary key cascade drop index;
alter table TASK_PERIOD_FILE_UPLOAD add 
    CONSTRAINT PK_TASK_PERIOD_FILE_UPLOAD PRIMARY KEY (APP_SID, TASK_SID, START_DTM, REGION_SID, FILE_ID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_PERIOD_OVERRIDE add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_PERIOD_OVERRIDE set app_sid = (select app_sid from task where TASK.task_sid = TASK_PERIOD_OVERRIDE.task_sid);
alter table TASK_PERIOD_OVERRIDE modify app_sid not null;
alter table TASK_PERIOD_OVERRIDE drop primary key cascade drop index;
alter table TASK_PERIOD_OVERRIDE add 
    CONSTRAINT PK_TASK_PERIOD_OVERRIDE PRIMARY KEY (APP_SID, TASK_SID, START_DTM, REGION_SID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_PERIOD_STATUS modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
alter table TASK_PERIOD_STATUS drop primary key cascade drop index;
alter table TASK_PERIOD_STATUS add 
    CONSTRAINT PK_TASK_PERIOD_STATUS PRIMARY KEY (APP_SID, TASK_PERIOD_STATUS_ID)
    USING INDEX
TABLESPACE INDX
;

alter table TASK_RECALC_JOB modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
alter table TASK_RECALC_JOB drop primary key cascade drop index;
alter table TASK_RECALC_JOB add 
    CONSTRAINT PK_TASK_RECALC_JOB PRIMARY KEY (APP_SID, TASK_SID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_REGION add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_REGION set app_sid = (select app_sid from task where TASK.task_sid = TASK_REGION.task_sid);
alter table TASK_REGION modify app_sid not null;
alter table TASK_REGION drop primary key cascade drop index;
alter table TASK_REGION add 
    CONSTRAINT PK_TASK_REGION PRIMARY KEY (APP_SID, TASK_SID, REGION_SID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_ROLE_MEMBER add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_ROLE_MEMBER set app_sid = (select app_sid from task where TASK.task_sid = TASK_ROLE_MEMBER.task_sid);
alter table TASK_ROLE_MEMBER modify app_sid not null;
alter table TASK_ROLE_MEMBER drop primary key cascade drop index;
alter table TASK_ROLE_MEMBER add 
    CONSTRAINT PK_TASK_ROLE_MEMBER PRIMARY KEY (APP_SID, TASK_SID, USER_OR_GROUP_SID, PROJECT_SID, ROLE_ID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_STATUS modify APP_SID DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_STATUS set app_sid = (
	select t.app_sid
	  from task t, task_status_history tsh
	 where t.task_sid = tsh.task_sid and tsh.task_status_id = TASK_STATUS.task_status_id)
where app_sid is null;
update TASK_STATUS set app_sid = (
	select app_sid
	  from project_task_status
	 where project_task_status.task_status_id = TASK_STATUS.task_status_id)
where app_sid is null;
update TASK_STATUS set app_sid = (
	select min(app_sid)
	  from allow_task_status_change
	 where allow_task_status_change.task_status_id = TASK_STATUS.task_status_id)
where app_sid is null;
alter table TASK_STATUS modify app_sid not null;
alter table TASK_STATUS drop primary key cascade drop index;
alter table TASK_STATUS add 
    CONSTRAINT PK_TASK_STATUS PRIMARY KEY (APP_SID, TASK_STATUS_ID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_STATUS_HISTORY add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_STATUS_HISTORY set app_sid = (select app_sid from task where TASK.task_sid = TASK_STATUS_HISTORY.task_sid);
alter table TASK_STATUS_HISTORY modify app_sid not null;
alter table TASK_STATUS_HISTORY drop primary key cascade drop index;
alter table TASK_STATUS_HISTORY add 
    CONSTRAINT PK_TASK_STATUS_HISTORY PRIMARY KEY (APP_SID, TASK_SID, SET_DTM, CNT)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_TAG add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_TAG set app_sid = (select app_sid from task where TASK.task_sid = TASK_TAG.task_sid);
alter table TASK_TAG modify app_sid not null;
alter table TASK_TAG drop primary key cascade drop index;
alter table TASK_TAG add 
    CONSTRAINT PK_TASK_TAG PRIMARY KEY (APP_SID, TASK_SID, TAG_ID)
    USING INDEX
TABLESPACE INDX
;


alter table TASK_TASK_DEPENDENCY add APP_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP');
update TASK_TASK_DEPENDENCY set app_sid = (select app_sid from task where TASK.task_sid = TASK_TASK_DEPENDENCY.task_sid);
alter table TASK_TASK_DEPENDENCY modify app_sid not null;
alter table TASK_TASK_DEPENDENCY drop primary key cascade drop index;
alter table TASK_TASK_DEPENDENCY add 
    CONSTRAINT PK_TASK_TASK_DEPENDENCY PRIMARY KEY (APP_SID, TASK_SID, DEPENDS_ON_TASK_SID)
    USING INDEX
TABLESPACE INDX
;

/*
begin
	for r in (select owner,table_name,constraint_name 
				from all_constraints 
			  where owner='ACTIONS' and constraint_type='R') loop
		execute immediate 'alter table '||r.owner||'.'||r.table_name||' drop constraint '||r.constraint_name;
	end loop;
end;
*/

connect system/manager@&&1	
begin
	for r in (select owner,table_name from all_tab_columns where owner='ACTIONS' and column_name='APP_SID' and table_name not like 'BIN$%') loop
		--dbms_output.put_line('delete from '||r.owner||'.'||r.table_name||' where app_sid not in (select app_sid from csr.customer)');
		execute immediate 'delete from '||r.owner||'."'||r.table_name||'" where app_sid not in (select app_sid from csr.customer)';
	end loop;
end;
/
connect actions/actions@&&1

-- 
-- TABLE: AGGR_TASK_IND_DEPENDENCY 
--

ALTER TABLE AGGR_TASK_IND_DEPENDENCY ADD CONSTRAINT RefTASK70 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE AGGR_TASK_IND_DEPENDENCY ADD CONSTRAINT RefIND146 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


-- 
-- TABLE: AGGR_TASK_PERIOD 
--

ALTER TABLE AGGR_TASK_PERIOD ADD CONSTRAINT RefTASK62 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE AGGR_TASK_PERIOD ADD CONSTRAINT RefPROJECT_TASK_PERIOD_STATU65 
    FOREIGN KEY (APP_SID, PROJECT_SID, TASK_PERIOD_STATUS_ID)
    REFERENCES PROJECT_TASK_PERIOD_STATUS(APP_SID, PROJECT_SID, TASK_PERIOD_STATUS_ID)
;

ALTER TABLE AGGR_TASK_PERIOD ADD CONSTRAINT RefREGION147 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;


-- 
-- TABLE: AGGR_TASK_PERIOD_OVERRIDE 
--

ALTER TABLE AGGR_TASK_PERIOD_OVERRIDE ADD CONSTRAINT RefAGGR_TASK_PERIOD100 
    FOREIGN KEY (APP_SID, TASK_SID, START_DTM, REGION_SID)
    REFERENCES AGGR_TASK_PERIOD(APP_SID, TASK_SID, START_DTM, REGION_SID)
;

ALTER TABLE AGGR_TASK_PERIOD_OVERRIDE ADD CONSTRAINT RefCSR_USER148 
    FOREIGN KEY (APP_SID, OVERRIDDEN_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;


-- 
-- TABLE: AGGR_TASK_TASK_DEPENDENCY 
--

ALTER TABLE AGGR_TASK_TASK_DEPENDENCY ADD CONSTRAINT RefTASK71 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE AGGR_TASK_TASK_DEPENDENCY ADD CONSTRAINT RefTASK72 
    FOREIGN KEY (APP_SID, DEPENDS_ON_TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


-- 
-- TABLE: ALLOW_TASK_STATUS_CHANGE 
--

ALTER TABLE ALLOW_TASK_STATUS_CHANGE ADD CONSTRAINT RefTASK_STATUS109 
    FOREIGN KEY (APP_SID, TASK_STATUS_ID)
    REFERENCES TASK_STATUS(APP_SID, TASK_STATUS_ID)
;


-- 
-- TABLE: CUSTOMER_OPTIONS 
--

ALTER TABLE CUSTOMER_OPTIONS ADD CONSTRAINT RefSCRIPT98 
    FOREIGN KEY (APP_SID, DEFAULT_VALUE_SCRIPT_ID)
    REFERENCES SCRIPT(APP_SID, SCRIPT_ID)
;

ALTER TABLE CUSTOMER_OPTIONS ADD CONSTRAINT RefCUSTOMER150 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: FILE_UPLOAD 
--

ALTER TABLE FILE_UPLOAD ADD CONSTRAINT RefCUSTOMER151 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: IND_TEMPLATE 
--

ALTER TABLE IND_TEMPLATE ADD CONSTRAINT RefMEASURE153 
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;


-- 
-- TABLE: INITIATIVE_EXTRA_INFO 
--

ALTER TABLE INITIATIVE_EXTRA_INFO ADD CONSTRAINT RefTASK106 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


-- 
-- TABLE: INITIATIVE_PROJECT_TEAM 
--

ALTER TABLE INITIATIVE_PROJECT_TEAM ADD CONSTRAINT RefTASK107 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


-- 
-- TABLE: PROJECT 
--

ALTER TABLE PROJECT ADD CONSTRAINT RefIND155 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE PROJECT ADD CONSTRAINT RefCUSTOMER156 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: PROJECT_IND_TEMPLATE 
--

ALTER TABLE PROJECT_IND_TEMPLATE ADD CONSTRAINT RefPROJECT90 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE PROJECT_IND_TEMPLATE ADD CONSTRAINT RefIND_TEMPLATE91 
    FOREIGN KEY (APP_SID, IND_TEMPLATE_ID)
    REFERENCES IND_TEMPLATE(APP_SID, IND_TEMPLATE_ID)
;


-- 
-- TABLE: PROJECT_IND_TEMPLATE_INSTANCE 
--

ALTER TABLE PROJECT_IND_TEMPLATE_INSTANCE ADD CONSTRAINT RefIND_TEMPLATE92 
    FOREIGN KEY (APP_SID, FROM_IND_TEMPLATE_ID)
    REFERENCES IND_TEMPLATE(APP_SID, IND_TEMPLATE_ID)
;

ALTER TABLE PROJECT_IND_TEMPLATE_INSTANCE ADD CONSTRAINT RefPROJECT93 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE PROJECT_IND_TEMPLATE_INSTANCE ADD CONSTRAINT RefIND157 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


-- 
-- TABLE: PROJECT_ROLE 
--

ALTER TABLE PROJECT_ROLE ADD CONSTRAINT RefPROJECT27 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE PROJECT_ROLE ADD CONSTRAINT RefROLE30 
    FOREIGN KEY (APP_SID, ROLE_ID)
    REFERENCES ROLE(APP_SID, ROLE_ID)
;


-- 
-- TABLE: PROJECT_ROLE_MEMBER 
--

ALTER TABLE PROJECT_ROLE_MEMBER ADD CONSTRAINT RefPROJECT_ROLE31 
    FOREIGN KEY (APP_SID, PROJECT_SID, ROLE_ID)
    REFERENCES PROJECT_ROLE(APP_SID, PROJECT_SID, ROLE_ID)
;


-- 
-- TABLE: PROJECT_TAG_GROUP 
--

ALTER TABLE PROJECT_TAG_GROUP ADD CONSTRAINT RefPROJECT39 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE PROJECT_TAG_GROUP ADD CONSTRAINT RefTAG_GROUP40 
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES TAG_GROUP(APP_SID, TAG_GROUP_ID)
;


-- 
-- TABLE: PROJECT_TASK_PERIOD_STATUS 
--

ALTER TABLE PROJECT_TASK_PERIOD_STATUS ADD CONSTRAINT RefPROJECT22 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE PROJECT_TASK_PERIOD_STATUS ADD CONSTRAINT RefTASK_PERIOD_STATUS23 
    FOREIGN KEY (APP_SID, TASK_PERIOD_STATUS_ID)
    REFERENCES TASK_PERIOD_STATUS(APP_SID, TASK_PERIOD_STATUS_ID)
;


-- 
-- TABLE: PROJECT_TASK_STATUS 
--

ALTER TABLE PROJECT_TASK_STATUS ADD CONSTRAINT RefPROJECT19 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES PROJECT(APP_SID, PROJECT_SID)
;

ALTER TABLE PROJECT_TASK_STATUS ADD CONSTRAINT RefTASK_STATUS20 
    FOREIGN KEY (APP_SID, TASK_STATUS_ID)
    REFERENCES TASK_STATUS(APP_SID, TASK_STATUS_ID)
;


-- 
-- TABLE: ROLE 
--

ALTER TABLE ROLE ADD CONSTRAINT RefCUSTOMER160 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: ROOT_IND_TEMPLATE_INSTANCE 
--

ALTER TABLE ROOT_IND_TEMPLATE_INSTANCE ADD CONSTRAINT RefIND_TEMPLATE94 
    FOREIGN KEY (APP_SID, FROM_IND_TEMPLATE_ID)
    REFERENCES IND_TEMPLATE(APP_SID, IND_TEMPLATE_ID)
;

ALTER TABLE ROOT_IND_TEMPLATE_INSTANCE ADD CONSTRAINT RefIND161 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


-- 
-- TABLE: SCRIPT 
--

ALTER TABLE SCRIPT ADD CONSTRAINT RefCUSTOMER162 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: TAG 
--

ALTER TABLE TAG ADD CONSTRAINT RefCUSTOMER163 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: TAG_GROUP 
--

ALTER TABLE TAG_GROUP ADD CONSTRAINT RefCUSTOMER164 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: TAG_GROUP_MEMBER 
--

ALTER TABLE TAG_GROUP_MEMBER ADD CONSTRAINT RefTAG_GROUP41 
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES TAG_GROUP(APP_SID, TAG_GROUP_ID)
;

ALTER TABLE TAG_GROUP_MEMBER ADD CONSTRAINT RefTAG42 
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES TAG(APP_SID, TAG_ID)
;


-- 
-- TABLE: TASK 
--

ALTER TABLE TASK ADD CONSTRAINT RefTASK2 
    FOREIGN KEY (APP_SID, PARENT_TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK ADD CONSTRAINT RefPROJECT_TASK_STATUS21 
    FOREIGN KEY (APP_SID, PROJECT_SID, TASK_STATUS_ID)
    REFERENCES PROJECT_TASK_STATUS(APP_SID, PROJECT_SID, TASK_STATUS_ID)
;

ALTER TABLE TASK ADD CONSTRAINT RefIND165 
    FOREIGN KEY (APP_SID, INPUT_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE TASK ADD CONSTRAINT RefIND166 
    FOREIGN KEY (APP_SID, TARGET_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE TASK ADD CONSTRAINT RefIND167 
    FOREIGN KEY (APP_SID, OUTPUT_IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


-- 
-- TABLE: TASK_BUDGET_HISTORY 
--

ALTER TABLE TASK_BUDGET_HISTORY ADD CONSTRAINT RefTASK32 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK_BUDGET_HISTORY ADD CONSTRAINT RefCSR_USER168 
    FOREIGN KEY (APP_SID, SET_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;


-- 
-- TABLE: TASK_BUDGET_PERIOD 
--

ALTER TABLE TASK_BUDGET_PERIOD ADD CONSTRAINT RefTASK14 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


-- 
-- TABLE: TASK_COMMENT 
--

ALTER TABLE TASK_COMMENT ADD CONSTRAINT RefTASK7 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

-- XXX:
ALTER TABLE TASK_COMMENT ADD CONSTRAINT RefCSR_USER169 
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;


-- 
-- TABLE: TASK_FILE_UPLOAD 
--

ALTER TABLE TASK_FILE_UPLOAD ADD CONSTRAINT RefFILE_UPLOAD79 
    FOREIGN KEY (APP_SID, FILE_ID)
    REFERENCES FILE_UPLOAD(APP_SID, FILE_ID)
;

ALTER TABLE TASK_FILE_UPLOAD ADD CONSTRAINT RefTASK80 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


-- 
-- TABLE: TASK_IND_DEPENDENCY 
--

ALTER TABLE TASK_IND_DEPENDENCY ADD CONSTRAINT RefTASK55 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK_IND_DEPENDENCY ADD CONSTRAINT RefIND170 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


-- 
-- TABLE: TASK_IND_TEMPLATE_INSTANCE 
--

ALTER TABLE TASK_IND_TEMPLATE_INSTANCE ADD CONSTRAINT RefTASK95 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK_IND_TEMPLATE_INSTANCE ADD CONSTRAINT RefIND_TEMPLATE96 
    FOREIGN KEY (APP_SID, FROM_IND_TEMPLATE_ID)
    REFERENCES IND_TEMPLATE(APP_SID, IND_TEMPLATE_ID)
;

ALTER TABLE TASK_IND_TEMPLATE_INSTANCE ADD CONSTRAINT RefIND171 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


-- 
-- TABLE: TASK_INDICATOR 
--

ALTER TABLE TASK_INDICATOR ADD CONSTRAINT RefTASK16 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK_INDICATOR ADD CONSTRAINT RefIND172 
    FOREIGN KEY (APP_SID, INDICATOR_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


-- 
-- TABLE: TASK_INSTANCE 
--

ALTER TABLE TASK_INSTANCE ADD CONSTRAINT RefTASK50 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


-- 
-- TABLE: TASK_PERIOD 
--

ALTER TABLE TASK_PERIOD ADD CONSTRAINT RefTASK_REGION102 
    FOREIGN KEY (APP_SID, TASK_SID, REGION_SID)
    REFERENCES TASK_REGION(APP_SID, TASK_SID, REGION_SID)
;

ALTER TABLE TASK_PERIOD ADD CONSTRAINT RefTASK6 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK_PERIOD ADD CONSTRAINT RefPROJECT_TASK_PERIOD_STATU26 
    FOREIGN KEY (APP_SID, PROJECT_SID, TASK_PERIOD_STATUS_ID)
    REFERENCES PROJECT_TASK_PERIOD_STATUS(APP_SID, PROJECT_SID, TASK_PERIOD_STATUS_ID)
;


-- 
-- TABLE: TASK_PERIOD_FILE_UPLOAD 
--

ALTER TABLE TASK_PERIOD_FILE_UPLOAD ADD CONSTRAINT RefFILE_UPLOAD81 
    FOREIGN KEY (APP_SID, FILE_ID)
    REFERENCES FILE_UPLOAD(APP_SID, FILE_ID)
;

ALTER TABLE TASK_PERIOD_FILE_UPLOAD ADD CONSTRAINT RefTASK_PERIOD82 
    FOREIGN KEY (APP_SID, TASK_SID, START_DTM, REGION_SID)
    REFERENCES TASK_PERIOD(APP_SID, TASK_SID, START_DTM, REGION_SID)
;


-- 
-- TABLE: TASK_PERIOD_OVERRIDE 
--

ALTER TABLE TASK_PERIOD_OVERRIDE ADD CONSTRAINT RefTASK_PERIOD74 
    FOREIGN KEY (APP_SID, TASK_SID, START_DTM, REGION_SID)
    REFERENCES TASK_PERIOD(APP_SID, TASK_SID, START_DTM, REGION_SID)
;

ALTER TABLE TASK_PERIOD_OVERRIDE ADD CONSTRAINT RefCSR_USER173 
    FOREIGN KEY (APP_SID, OVERRIDDEN_BY_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;


-- 
-- TABLE: TASK_PERIOD_STATUS 
--

ALTER TABLE TASK_PERIOD_STATUS ADD CONSTRAINT RefCUSTOMER174 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: TASK_RECALC_JOB 
--

ALTER TABLE TASK_RECALC_JOB ADD CONSTRAINT RefTASK56 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


-- 
-- TABLE: TASK_REGION 
--

ALTER TABLE TASK_REGION ADD CONSTRAINT RefTASK52 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK_REGION ADD CONSTRAINT RefREGION175 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID)
;


-- 
-- TABLE: TASK_ROLE_MEMBER 
--

ALTER TABLE TASK_ROLE_MEMBER ADD CONSTRAINT RefTASK4 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK_ROLE_MEMBER ADD CONSTRAINT RefPROJECT_ROLE_MEMBER5 
    FOREIGN KEY (APP_SID, PROJECT_SID, ROLE_ID, USER_OR_GROUP_SID)
    REFERENCES PROJECT_ROLE_MEMBER(APP_SID, PROJECT_SID, ROLE_ID, USER_OR_GROUP_SID)
;


-- 
-- TABLE: TASK_STATUS 
--

ALTER TABLE TASK_STATUS ADD CONSTRAINT RefCUSTOMER176 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;


-- 
-- TABLE: TASK_STATUS_HISTORY 
--

ALTER TABLE TASK_STATUS_HISTORY ADD CONSTRAINT RefTASK_STATUS47 
    FOREIGN KEY (APP_SID, TASK_STATUS_ID)
    REFERENCES TASK_STATUS(APP_SID, TASK_STATUS_ID)
;

ALTER TABLE TASK_STATUS_HISTORY ADD CONSTRAINT RefTASK48 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

-- XXX
ALTER TABLE TASK_STATUS_HISTORY ADD CONSTRAINT RefCSR_USER177 
    FOREIGN KEY (APP_SID, SET_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;


-- 
-- TABLE: TASK_TAG 
--

ALTER TABLE TASK_TAG ADD CONSTRAINT RefTAG43 
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES TAG(APP_SID, TAG_ID)
;

ALTER TABLE TASK_TAG ADD CONSTRAINT RefTASK44 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


-- 
-- TABLE: TASK_TASK_DEPENDENCY 
--

ALTER TABLE TASK_TASK_DEPENDENCY ADD CONSTRAINT RefTASK59 
    FOREIGN KEY (APP_SID, TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;

ALTER TABLE TASK_TASK_DEPENDENCY ADD CONSTRAINT RefTASK60 
    FOREIGN KEY (APP_SID, DEPENDS_ON_TASK_SID)
    REFERENCES TASK(APP_SID, TASK_SID)
;


@..\rls
@update_tail
