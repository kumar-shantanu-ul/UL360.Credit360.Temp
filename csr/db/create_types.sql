--set serveroutput on
begin
	for r in (select type_name from all_types where owner='CSR' and type_name in (
				'T_LEAGUE_TABLE',
				'T_VAL_TABLE',
				'T_CALC_DEP_TABLE',
				'T_FROM_TO_TABLE',
				'T_SHEET_INFO',
				'T_CHANGES_TABLE',
				'T_PENDING_LEAF_TABLE',
				'T_PENDING_MERGE_BLOCKER_TABLE',
				'T_DATASOURCE_DEP_TABLE',
				'T_SID_AND_DESCRIPTION_TABLE',
				'T_PENDING_VAL_TABLE',
				'T_RECALC_LOG_TABLE',
				'T_NORMALISED_VAL_TABLE',
				'T_CONSUMPTION_TABLE',
				'T_EDIEL_ERROR_TABLE',
				'T_USER_FILTER_TABLE',
				'T_USER_GROUP_TABLE',
				'T_EST_ATTR_TABLE',
				'T_FLOW_STATE_TABLE',
				'T_HIERARCHY',
				'T_QS_QUESTION_TABLE',
				'T_FLOW_STATE_TRANS_TABLE',
				'T_LOGISTICS_DATA_TABLE',
				'T_LIKE_FOR_LIKE',
				'T_TRAINING_FLOW_STATE_TABLE',
				'T_TRAINING_USER_COURSE_TABLE',
				'T_REGION_METRIC_AUDIT_TABLE',
				'T_SHEETS_IND_REG_TO_USE_TABLE')) loop
		--dbms_output.put_line('drop '||r.type_name);
		execute immediate 'DROP TYPE CSR.'||r.type_name;
	end loop;
end;
/

CREATE OR REPLACE TYPE CSR.T_LEAGUE_ROW AS 
  OBJECT ( 
	position		NUMBER(10,0),
	sid_id 			NUMBER(10,0),
	DESCRIPTION		VARCHAR2(255)
  );
/
CREATE OR REPLACE TYPE CSR.T_LEAGUE_TABLE AS 
  TABLE OF CSR.T_LEAGUE_ROW;
/


CREATE OR REPLACE TYPE CSR.T_VAL_ROW AS 
  OBJECT ( 
	PERIOD_START_DTM			DATE,
	PERIOD_END_DTM				DATE,
	VAL_NUMBER					NUMBER(24, 10),
	VAL_NULL					NUMBER(10),
	ESTIMATED					NUMBER(10),
	VAL_IDS_USED				VARCHAR2(2000),
	REGION_SID					NUMBER(10),
	FLAGS						NUMBER(10),
	MOST_RECENT_CHANGE_DTM		DATE
  );
/
CREATE OR REPLACE TYPE CSR.T_VAL_TABLE AS 
  TABLE OF CSR.T_VAL_ROW;
/


CREATE OR REPLACE TYPE CSR.T_CALC_DEP_ROW AS 
  OBJECT ( 
	DEP_TYPE					NUMBER(10,0),
	IND_SID						NUMBER(10,0),
	IND_TYPE					NUMBER(10,0),
	CALC_START_DTM_ADJUSTMENT	NUMBER(10,0),
	CALC_END_DTM_ADJUSTMENT		NUMBER(10,0)
  );
/
CREATE OR REPLACE TYPE CSR.T_CALC_DEP_TABLE AS 
  TABLE OF CSR.T_CALC_DEP_ROW;
/

CREATE OR REPLACE TYPE CSR.T_FROM_TO_ROW AS 
  OBJECT ( 
	FROM_SID	NUMBER(10,0),
	TO_SID		NUMBER(10,0)
  );
/
CREATE OR REPLACE TYPE CSR.T_FROM_TO_TABLE AS 
  TABLE OF CSR.T_FROM_TO_ROW;
/


CREATE OR REPLACE TYPE CSR.T_HIERARCHY_ROW AS 
  OBJECT (
	SID_ID			NUMBER(10,0),
	LVL				NUMBER(10,0),
	ROOT_SID_ID		NUMBER(10,0),
	MAX_LVL			NUMBER(10,0)
  );
/
CREATE OR REPLACE TYPE CSR.T_HIERARCHY AS 
  TABLE OF CSR.T_HIERARCHY_ROW;
/

CREATE OR REPLACE TYPE CSR.T_SHEET_INFO AS
  OBJECT (
	SHEET_ID						NUMBER(10,0),
	DELEGATION_SID					NUMBER(10,0),
	PARENT_DELEGATION_SID			NUMBER(10,0),
	NAME							VARCHAR2(1023),
	CAN_SAVE						NUMBER(10,0),
	CAN_SUBMIT						NUMBER(10,0),
	CAN_ACCEPT						NUMBER(10,0),
	CAN_RETURN						NUMBER(10,0),
	CAN_DELEGATE					NUMBER(10,0),
	CAN_VIEW						NUMBER(10,0),
	CAN_OVERRIDE_DELEGATOR			NUMBER(10,0),
	CAN_COPY_FORWARD				NUMBER(10,0),
	LAST_ACTION_ID					NUMBER(10,0),
	START_DTM						DATE,
	END_DTM							DATE,
	PERIOD_SET_ID					NUMBER(10),
	PERIOD_INTERVAL_ID				NUMBER(10),
	GROUP_BY						VARCHAR2(128),
	NOTE							CLOB,
	USER_LEVEL						NUMBER(10,0),
	IS_TOP_LEVEL					NUMBER(10,0),
	IS_READ_ONLY					NUMBER(1),
	CAN_EXPLAIN						NUMBER(1)
  );
/

CREATE OR REPLACE TYPE CSR.T_CHANGES_ROW AS 
  OBJECT ( 
	CHANGE_TYPE			NUMBER(10,0),
	FROM_VALUE			NUMBER(24,10),
	FROM_FORMAT_MASK	VARCHAR2(255),
	FROM_DESCRIPTION	VARCHAR2(255),
	TO_VALUE			NUMBER(24,10),
	TO_FORMAT_MASK		VARCHAR2(255),
	TO_DESCRIPTION		VARCHAR2(255),
	SHEET_VALUE_ID		NUMBER(10,0)
  );
/
CREATE OR REPLACE TYPE CSR.T_CHANGES_TABLE AS 
  TABLE OF CSR.T_CHANGES_ROW;
/

CREATE OR REPLACE TYPE CSR.T_PENDING_LEAF_ROW AS 
  OBJECT ( 
	PENDING_IND_ID				NUMBER(10),
  	IND_DESCRIPTION				VARCHAR2(2047),
	PENDING_REGION_ID			NUMBER(10),
	REGION_DESCRIPTION			VARCHAR2(255),
	ROOT_REGION_ID				NUMBER(10),
	ROOT_REGION_DESCRIPTION		VARCHAR2(255),
	APPROVAL_STEP_ID			NUMBER(10),
	MAPS_TO_IND_SID				NUMBER(10),
	MAPS_TO_REGION_SID			NUMBER(10)
  );
/
CREATE OR REPLACE TYPE CSR.T_PENDING_LEAF_TABLE AS 
  TABLE OF CSR.T_PENDING_LEAF_ROW;
/


CREATE OR REPLACE TYPE CSR.T_PENDING_MERGE_BLOCKER_ROW AS 
  OBJECT ( 
  	PENDING_REGION_ID			NUMBER(10),
  	PENDING_REGION_PATH			VARCHAR2(2000),
  	PENDING_IND_ID				NUMBER(10),
  	PENDING_IND_DESCRIPTION		VARCHAR2(2047),
	REGION_SID					NUMBER(10),
  	REGION_PATH					VARCHAR2(2000),  	
  	BLOCKER_PENDING_REGION_ID	NUMBER(10),
  	BLOCKER_PENDING_REGION_PATH	VARCHAR2(2000),
  	BLOCKER_REGION_SID			NUMBER(10),
  	BLOCKER_REGION_PATH			VARCHAR2(2000)
  );
/
CREATE OR REPLACE TYPE CSR.T_PENDING_MERGE_BLOCKER_TABLE AS 
  TABLE OF CSR.T_PENDING_MERGE_BLOCKER_ROW;
/


CREATE OR REPLACE TYPE CSR.T_DATASOURCE_DEP_ROW AS 
  OBJECT ( 
	SEEK_IND_SID				NUMBER(10, 0),
	CALC_DEP_TYPE				NUMBER(10, 0),
	DEP_IND_SID	 				NUMBER(10, 0),
	LVL		 					NUMBER(10, 0),
	CALC_START_DTM_ADJUSTMENT	NUMBER(10, 0),
	CALC_END_DTM_ADJUSTMENT		NUMBER(10, 0)
  );
/
CREATE OR REPLACE TYPE CSR.T_DATASOURCE_DEP_TABLE AS 
  TABLE OF CSR.T_DATASOURCE_DEP_ROW;
/


CREATE OR REPLACE TYPE CSR.T_SID_AND_DESCRIPTION_ROW AS 
  OBJECT ( 
	pos			NUMBER(10,0),
	sid_id 			NUMBER(10,0),
	DESCRIPTION		VARCHAR2(2047)
  );
/
CREATE OR REPLACE TYPE CSR.T_SID_AND_DESCRIPTION_TABLE AS 
  TABLE OF CSR.T_SID_AND_DESCRIPTION_ROW;
/


CREATE OR REPLACE TYPE CSR.T_SID_AND_PATH_AND_DESC_ROW AS
  OBJECT ( 
	pos				NUMBER(10,0),
	sid_id			NUMBER(10,0),
	path			VARCHAR2(2047),
	description		VARCHAR2(2047)
  );
/
CREATE OR REPLACE TYPE CSR.T_SID_AND_PATH_AND_DESC_TABLE AS 
  TABLE OF CSR.T_SID_AND_PATH_AND_DESC_ROW;
/



CREATE OR REPLACE TYPE CSR.T_PENDING_VAL_ROW AS 
  OBJECT ( 
	PENDING_IND_ID			NUMBER(10),
	PENDING_REGION_ID		NUMBER(10),
	ROOT_REGION_ID			NUMBER(10),
	PENDING_PERIOD_ID		NUMBER(10),
	APPROVAL_STEP_ID		NUMBER(10),
	PENDING_VAL_ID			NUMBER(10),  
	ACTION	  			VARCHAR2(1)  
  );
/
CREATE OR REPLACE TYPE CSR.T_PENDING_VAL_TABLE AS 
  TABLE OF CSR.T_PENDING_VAL_ROW;
/


CREATE OR REPLACE TYPE CSR.T_RECALC_LOG_ROW AS 
  OBJECT ( 
	PENDING_IND_ID 			NUMBER(10, 0),
	PENDING_REGION_ID		NUMBER(10, 0),
	PENDING_PERIOD_ID	 	NUMBER(10, 0),
	VAL_NUMBER		NUMBER(24,10)
  );
/
CREATE OR REPLACE TYPE CSR.T_RECALC_LOG_TABLE AS 
  TABLE OF CSR.T_RECALC_LOG_ROW;
/

CREATE OR REPLACE TYPE CSR.T_VARCHAR2_TABLE AS TABLE OF VARCHAR2(4000);
/

CREATE OR REPLACE TYPE CSR.T_NORMALISED_VAL_ROW AS 
  OBJECT ( 
	REGION_SID		NUMBER(10),
	START_DTM		DATE,
	END_DTM			DATE,
	VAL_NUMBER		NUMBER(24, 10)
  );
/
CREATE OR REPLACE TYPE CSR.T_NORMALISED_VAL_TABLE AS 
  TABLE OF CSR.T_NORMALISED_VAL_ROW;
/


CREATE OR REPLACE TYPE CSR.T_CONSUMPTION_ROW AS
	OBJECT (
		POS				NUMBER(10, 0),
		START_DTM		TIMESTAMP WITH TIME ZONE,
		END_DTM			TIMESTAMP WITH TIME ZONE,
		CONSUMPTION		NUMBER(24, 10)
	);
/

CREATE OR REPLACE TYPE CSR.T_CONSUMPTION_TABLE AS
	TABLE OF CSR.T_CONSUMPTION_ROW;
/


CREATE OR REPLACE TYPE CSR.T_METER_PATCH_DATA_ROW AS
	OBJECT (
		POS				NUMBER(10, 0),
		START_DTM		DATE,
		END_DTM			DATE,
		PERIOD_TYPE		VARCHAR2(32),
		CONSUMPTION		NUMBER(24, 10)
	);
/

CREATE OR REPLACE TYPE CSR.T_METER_PATCH_DATA_TABLE AS
	TABLE OF CSR.T_METER_PATCH_DATA_ROW;
/

CREATE OR REPLACE TYPE CSR.T_EDIEL_ERROR_ROW AS
	OBJECT (
		POS				NUMBER(10, 0),
		MSG				VARCHAR(4000),
		DTM				DATE,
		SID				NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_EDIEL_ERROR_TABLE AS
	TABLE OF CSR.T_EDIEL_ERROR_ROW;
/

CREATE OR REPLACE TYPE CSR.T_QS_QUESTION_ROW AS
	OBJECT (
		QUESTION_ID				NUMBER(10),
		PARENT_ID				NUMBER(10),
		POS						NUMBER(10), 
		LABEL					VARCHAR2(4000), 
		QUESTION_TYPE			VARCHAR2(40), 
		SCORE					NUMBER(13,3),
		MAX_SCORE				NUMBER(13,3),
		UPLOAD_SCORE			NUMBER(13,3),
		LOOKUP_KEY				VARCHAR2(255),
		INVERT_SCORE			VARCHAR2(255),
		CUSTOM_QUESTION_TYPE_ID	NUMBER(10),
		WEIGHT					NUMBER(15,5)
	);
/
CREATE OR REPLACE TYPE CSR.T_QS_QUESTION_TABLE AS
  TABLE OF CSR.T_QS_QUESTION_ROW;
/

CREATE OR REPLACE TYPE CSR.T_FLOW_STATE_ROW AS
	OBJECT (
		XML_POS					NUMBER(10),	
		POS						NUMBER(10), 
		ID						NUMBER(10), 
		LABEL					VARCHAR2(255), 
		LOOKUP_KEY				VARCHAR2(255),
		IS_FINAL				NUMBER(1),
		STATE_COLOUR			NUMBER(10),
		EDITABLE_ROLE_SIDS		VARCHAR2(2000),
		NON_EDITABLE_ROLE_SIDS	VARCHAR2(2000),
		EDITABLE_COL_SIDS		VARCHAR2(2000),
		NON_EDITABLE_COL_SIDS	VARCHAR2(2000),
		INVOLVED_TYPE_IDS		VARCHAR2(2000),
		ATTRIBUTES_XML			XMLType,
		FLOW_STATE_NATURE_ID	NUMBER(10),
		MOVE_FROM_FLOW_STATE_ID NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_FLOW_STATE_TABLE AS
  TABLE OF CSR.T_FLOW_STATE_ROW;
/

CREATE OR REPLACE TYPE CSR.T_FLOW_STATE_TRANS_ROW AS
	OBJECT (
		POS							NUMBER(10),
		ID							NUMBER(10),
		FROM_STATE_ID				NUMBER(10),
		TO_STATE_ID					NUMBER(10),
		ASK_FOR_COMMENT				VARCHAR2(16),
		MANDATORY_FIELDS_MESSAGE	VARCHAR2(255),
		HOURS_BEFORE_AUTO_TRAN		NUMBER(10),
		BUTTON_ICON_PATH			VARCHAR2(255),
		VERB						VARCHAR2(255),
		LOOKUP_KEY					VARCHAR2(255),
		HELPER_SP					VARCHAR2(255),
		ROLE_SIDS					VARCHAR2(2000),
		COLUMN_SIDS					VARCHAR2(2000),
		INVOLVED_TYPE_IDS			VARCHAR2(2000),
		ENFORCE_VALIDATION			NUMBER(1),
		ATTRIBUTES_XML				XMLType
	);
/

CREATE OR REPLACE TYPE CSR.T_FLOW_STATE_TRANS_TABLE AS
  TABLE OF CSR.T_FLOW_STATE_TRANS_ROW;
/

CREATE OR REPLACE TYPE CSR.T_USER_FILTER_ROW AS
	OBJECT (
		CSR_USER_SID		NUMBER(10),
		ACCOUNT_ENABLED		NUMBER(1),	
		IS_SA				NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_USER_FILTER_TABLE AS
  TABLE OF CSR.T_USER_FILTER_ROW;
/

CREATE OR REPLACE TYPE CSR.T_USER_GROUP_ROW AS
	OBJECT (
		CSR_USER_SID		NUMBER(10),
		GROUP_SID			NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_USER_GROUP_TABLE AS
  TABLE OF CSR.T_USER_GROUP_ROW;
/


CREATE OR REPLACE TYPE CSR.T_LOGISTICS_DATA_ROW AS
	OBJECT (
		ID						NUMBER(10),
		ORIGIN					VARCHAR2(255),
		ORIGIN_ADDRESS			VARCHAR2(1023),
		ORIGIN_CITY				VARCHAR2(255), 
		ORIGIN_PROVINCE			VARCHAR2(255),
		ORIGIN_POSTCODE			VARCHAR2(255),
		ORIGIN_COUNTRY			VARCHAR2(255),
		DESTINATION				VARCHAR2(255),
		DESTINATION_ADDRESS		VARCHAR2(1023),
		DESTINATION_CITY		VARCHAR2(255),
		DESTINATION_PROVINCE	VARCHAR2(255),
		DESTINATION_POSTCODE	VARCHAR2(255),
		DESTINATION_COUNTRY		VARCHAR2(255),
		VAL						NUMBER(24,10),
		DISTANCE				NUMBER(24,10),
		START_DTM				DATE,
		END_DTM					DATE,
		REGION					VARCHAR2(1023)
	);
/


CREATE OR REPLACE TYPE CSR.T_LOGISTICS_DATA_TABLE AS
  TABLE OF CSR.T_LOGISTICS_DATA_ROW;
/

CREATE OR REPLACE TYPE CSR.T_EST_ATTR_ROW AS
  OBJECT ( 
  	ID					NUMBER(10),
  	REGION_METRIC_ID	NUMBER(10),
	NAME				VARCHAR2(256),
	VAL					NUMBER(24, 10),
	STR					VARCHAR2(1024),
	DTM					DATE,
	UOM					VARCHAR2(256),
	POS					NUMBER(10)
  );
/

CREATE OR REPLACE TYPE CSR.T_EST_ATTR_TABLE AS 
  TABLE OF CSR.T_EST_ATTR_ROW;
/

CREATE OR REPLACE TYPE CSR.T_AGGREGATE_VAL_ROW AS 
  OBJECT ( 
  	IND_SID			NUMBER(10),
	REGION_SID		NUMBER(10),
	START_DTM		DATE,
	END_DTM			DATE,
	VAL_NUMBER		NUMBER(24, 10)
  );
/
CREATE OR REPLACE TYPE CSR.T_AGGREGATE_VAL_TABLE AS 
  TABLE OF CSR.T_AGGREGATE_VAL_ROW;
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_METRIC_VAL_ROW AS 
  OBJECT ( 
	ITEM		NUMBER,
	POS			NUMBER(10)
  );
/
CREATE OR REPLACE TYPE CSR.T_INITIATIVE_METRIC_VAL_TABLE AS 
  TABLE OF CSR.T_INITIATIVE_METRIC_VAL_ROW;
/

CREATE OR REPLACE TYPE CSR.T_DELEG_GRID_VAR_ROW AS OBJECT
(
	id				VARCHAR2(255),
	label			VARCHAR2(255),
	variance		VARCHAR2(255),
	explanation		CLOB
);
/

CREATE OR REPLACE TYPE CSR.T_DELEG_GRID_VAR_TABLE AS
  TABLE OF CSR.T_DELEG_GRID_VAR_ROW;
/

CREATE OR REPLACE TYPE CSR.T_INIT_METRIC_AUDIT_ROW AS 
  OBJECT ( 
  	INITIATIVE_METRIC_ID	NUMBER(10),
	CONVERSION_ID			NUMBER(10),
	VAL						NUMBER(24, 10)
  );
/
CREATE OR REPLACE TYPE CSR.T_INIT_METRIC_AUDIT_TABLE AS 
  TABLE OF CSR.T_INIT_METRIC_AUDIT_ROW;
/

CREATE OR REPLACE TYPE CSR.T_REGION_METRIC_AUDIT_ROW AS 
  OBJECT ( 
	REGION_METRIC_VAL_ID	NUMBER(10),
	IND_SID					NUMBER(10),
	CONVERSION_ID			NUMBER(10),
	VAL						NUMBER(24, 10),
	EFFECTIVE_DTM			DATE
  );
/
CREATE OR REPLACE TYPE CSR.T_REGION_METRIC_AUDIT_TABLE AS 
  TABLE OF CSR.T_REGION_METRIC_AUDIT_ROW;
/

CREATE OR REPLACE TYPE CSR.T_ENERGY_STAR_METRIC_ROW AS 
  OBJECT (
  	IND_SID					NUMBER(10),
	REGION_SID				NUMBER(10),
	DTM						DATE,
	VAL						NUMBER(24, 10),
	STR						VARCHAR2(4000),
	MEASURE_CONVERSION_ID	NUMBER(10),
	REGION_METRIC_VAL_ID	NUMBER(10),
	PM_VAL_ID				NUMBER(10),
	IS_DELETED				NUMBER(1)
  );
/
CREATE OR REPLACE TYPE CSR.T_ENERGY_STAR_METRIC_TABLE AS 
  TABLE OF CSR.T_ENERGY_STAR_METRIC_ROW;
/

CREATE OR REPLACE TYPE CSR.T_QS_ANSWER_FILES_ROW AS OBJECT
(
	SHA1				RAW(20),
	FILENAME			VARCHAR2(255),
	MIME_TYPE			VARCHAR2(256),
	CAPTION				VARCHAR2(1023)
);
/

CREATE OR REPLACE TYPE CSR.T_QS_ANSWER_FILES_ARRAY AS
  TABLE OF CSR.T_QS_ANSWER_FILES_ROW;
/

CREATE OR REPLACE TYPE CSR.T_ENERGY_STAR_ATTR_MAP_ROW AS 
  OBJECT (
  	ATTR_NAME				VARCHAR2(256),
  	IND_SID					NUMBER(10),
	UOM						VARCHAR2(256),
	MEASURE_CONVERSION_ID	NUMBER(10),
	IS_SPACE				NUMBER(1)
  );
/
CREATE OR REPLACE TYPE CSR.T_ENERGY_STAR_ATTR_MAP_TABLE AS 
  TABLE OF CSR.T_ENERGY_STAR_ATTR_MAP_ROW;
/

CREATE OR REPLACE TYPE CSR.T_SSO_LOG_ROW AS
	OBJECT (
		SAML_LOG_HOST			VARCHAR(255),
		LOG_DTM					DATE,
		SAML_REQUEST_ID			NUMBER(10, 0),
		MESSAGE_SEQUENCE		NUMBER(10, 0),
		MESSAGE					VARCHAR(4000),
		SAML_LOG_DATA			CLOB
	);
/
CREATE OR REPLACE TYPE CSR.T_SSO_LOG_TABLE AS
	TABLE OF CSR.T_SSO_LOG_ROW;
/

CREATE OR REPLACE TYPE CSR.T_LIKE_FOR_LIKE AS 
 OBJECT ( 
	LIKE_FOR_LIKE_SID			NUMBER(10),
	NAME						VARCHAR2(255),
	IND_SID						NUMBER(10),
	REGION_SID					NUMBER(10),
	INCLUDE_INACTIVE_REGIONS	NUMBER(1),
	PERIOD_START_DTM			DATE,
	PERIOD_END_DTM				DATE,
	PERIOD_SET_ID				NUMBER(10),
	PERIOD_INTERVAL_ID			NUMBER(10),
	RULE_TYPE					NUMBER(1),
	SCENARIO_RUN_SID			NUMBER(10),
	CREATED_BY_USER_SID			NUMBER(10),
	CREATED_DTM					DATE,
	LAST_REFRESH_USER_SID		NUMBER(10),
	LAST_REFRESH_DTM			DATE,
	CONSTRUCTOR FUNCTION T_LIKE_FOR_LIKE(SID NUMBER)
		RETURN SELF AS RESULT
	);
/

CREATE OR REPLACE TYPE BODY CSR.T_LIKE_FOR_LIKE AS
	CONSTRUCTOR FUNCTION T_LIKE_FOR_LIKE(SID NUMBER)
	RETURN SELF AS RESULT
AS
	BEGIN
		SELECT LIKE_FOR_LIKE_SID, NAME, IND_SID, REGION_SID, INCLUDE_INACTIVE_REGIONS,
			PERIOD_START_DTM, PERIOD_END_DTM, PERIOD_SET_ID, PERIOD_INTERVAL_ID,
			RULE_TYPE, SCENARIO_RUN_SID, CREATED_BY_USER_SID, CREATED_DTM,
			LAST_REFRESH_DTM
		  INTO SELF.LIKE_FOR_LIKE_SID, SELF.NAME, SELF.IND_SID, SELF.REGION_SID,
			SELF.INCLUDE_INACTIVE_REGIONS, SELF.PERIOD_START_DTM, SELF.PERIOD_END_DTM,
			SELF.PERIOD_SET_ID, SELF.PERIOD_INTERVAL_ID, SELF.RULE_TYPE, SELF.SCENARIO_RUN_SID,
			SELF.CREATED_BY_USER_SID, SELF.CREATED_DTM, SELF.LAST_REFRESH_DTM
		  FROM CSR.LIKE_FOR_LIKE_SLOT
		 WHERE LIKE_FOR_LIKE_SID = SID;

		 RETURN;
	END;
END;
/

CREATE OR REPLACE TYPE CSR.T_LIKE_FOR_LIKE_VAL_ROW AS 
	OBJECT (
	IND_SID				NUMBER(10),
	REGION_SID			NUMBER(10),
	PERIOD_START_DTM	DATE,
	PERIOD_END_DTM		DATE,
	VAL_NUMBER			NUMBER(24,10),
	SOURCE_TYPE_ID		NUMBER(10),
	SOURCE_ID			NUMBER(20)
	);
/

CREATE OR REPLACE TYPE CSR.T_LIKE_FOR_LIKE_VAL_TABLE AS 
	TABLE OF CSR.T_LIKE_FOR_LIKE_VAL_ROW;
/


CREATE OR REPLACE TYPE CSR.T_TRAINING_FLOW_STATE_ROW AS 
	OBJECT ( 
	FLOW_STATE_ID			NUMBER(10),
	FLOW_SID				NUMBER(10),
	LABEL					VARCHAR2(255),
	LOOKUP_KEY				VARCHAR2(255),
	FLOW_STATE_NATURE_ID	NUMBER(10),
	POS						NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_TRAINING_FLOW_STATE_TABLE AS 
	TABLE OF CSR.T_TRAINING_FLOW_STATE_ROW;
/

CREATE OR REPLACE TYPE CSR.T_TRAINING_USER_COURSE_ROW AS 
	OBJECT ( 
		APP_SID 	NUMBER(10,0),
		USER_SID 	NUMBER(10,0),
		COURSE_ID	NUMBER(10,0)
	);
/

CREATE OR REPLACE TYPE CSR.T_TRAINING_USER_COURSE_TABLE AS 
	TABLE OF CSR.T_TRAINING_USER_COURSE_ROW;
/

CREATE OR REPLACE TYPE csr.ScragFetchOptions AS OBJECT
(
	app_sid						NUMBER(10),
	scenario_run_sid 			NUMBER(10),
	ind_sids					security.T_SID_TABLE,
	region_sids					security.T_SID_TABLE,
	start_dtm					DATE,
	end_dtm						DATE,
	period_set_id				NUMBER(10),
	period_interval_id			NUMBER(10),
	fetch_source_values			NUMBER(1),
	fetch_file_uploads			NUMBER(1),
	fetch_source_details		NUMBER(1),
	fixed_analysis_server		VARCHAR2(255),
	finder_broadcast_addresses	VARCHAR2(4000),
	CONSTRUCTOR FUNCTION ScragFetchOptions(
		ind_sids					security.T_SID_TABLE,
		region_sids					security.T_SID_TABLE,
		app_sid 					NUMBER DEFAULT SYS_CONTEXT('SECURITY', 'APP'),
		scenario_run_sid 			NUMBER DEFAULT NULL,
		start_dtm					DATE DEFAULT NULL,
		end_dtm						DATE DEFAULT NULL,
		period_set_id				NUMBER DEFAULT NULL,
		period_interval_id			NUMBER DEFAULT NULL,
		fetch_source_values			NUMBER DEFAULT 1,
		fetch_file_uploads			NUMBER DEFAULT 0,
		fetch_source_details 		NUMBER DEFAULT 0,
		fixed_analysis_server		VARCHAR2 DEFAULT NULL,
		finder_broadcast_addresses	VARCHAR2 DEFAULT NULL
	) RETURN SELF AS RESULT 
)
/

CREATE OR REPLACE TYPE BODY csr.ScragFetchOptions AS
	CONSTRUCTOR FUNCTION ScragFetchOptions(
		ind_sids					security.T_SID_TABLE,
		region_sids					security.T_SID_TABLE,
		app_sid 					NUMBER DEFAULT SYS_CONTEXT('SECURITY', 'APP'),
		scenario_run_sid 			NUMBER DEFAULT NULL,
		start_dtm					DATE DEFAULT NULL,
		end_dtm						DATE DEFAULT NULL,
		period_set_id				NUMBER DEFAULT NULL,
		period_interval_id			NUMBER DEFAULT NULL,
		fetch_source_values			NUMBER DEFAULT 1,
		fetch_file_uploads			NUMBER DEFAULT 0,
		fetch_source_details 		NUMBER DEFAULT 0,
		fixed_analysis_server		VARCHAR2 DEFAULT NULL,
		finder_broadcast_addresses	VARCHAR2 DEFAULT NULL
	) RETURN SELF AS RESULT AS
	BEGIN
		self.app_sid := app_sid;
		self.scenario_run_sid := scenario_run_sid;
		self.ind_sids := ind_sids;
		self.region_sids := region_sids;
		self.start_dtm := start_dtm;
		self.end_dtm := end_dtm;
		self.period_set_id := period_set_id;
		self.period_interval_id := period_interval_id;
		self.fetch_source_values := fetch_source_values;
		self.fetch_file_uploads	:= fetch_file_uploads;
		self.fetch_source_details := fetch_source_details;
		self.fixed_analysis_server := fixed_analysis_server;
		self.finder_broadcast_addresses := finder_broadcast_addresses;
		RETURN;
	END;
END;
/

CREATE OR REPLACE TYPE csr.SourceValRow AS OBJECT
(
	ind_sid							NUMBER(10),
	region_sid						NUMBER(10),
	period_start_dtm				DATE,
	period_end_dtm					DATE,
	val_number						NUMBER(24, 10),
	error_code						NUMBER(10),
	source_type_id					NUMBER(10),
	source_id						NUMBER(10),
	val_id							NUMBER(20),
	entry_measure_conversion_id		NUMBER(10),
	entry_val_number				NUMBER(24, 10),
	is_merged						NUMBER(1),
	note							CLOB,
	var_expl_note					CLOB,
	changed_dtm						DATE,
	changed_by_sid					NUMBER(10)
);
/

CREATE OR REPLACE TYPE csr.SourceValTable AS TABLE OF SourceValRow;
/

CREATE OR REPLACE TYPE csr.ScragQuery AS OBJECT
(
	key INTEGER,

	STATIC FUNCTION ODCITableStart(
		sctx 					OUT ScragQuery,
		options					IN	ScragFetchOptions
	)
		RETURN NUMBER
		AS LANGUAGE JAVA
		NAME 'ScragQuery.ODCITableStart(java.sql.Struct[], java.sql.Struct) return java.math.BigDecimal',

	MEMBER FUNCTION ODCITableFetch(self IN OUT ScragQuery, nrows IN NUMBER,
																 outSet OUT SourceValTable) RETURN NUMBER
		AS LANGUAGE JAVA
		NAME 'ScragQuery.ODCITableFetch(java.math.BigDecimal, java.sql.Array[]) return java.math.BigDecimal',

	MEMBER FUNCTION ODCITableClose(self IN ScragQuery) RETURN NUMBER
		AS LANGUAGE JAVA
		NAME 'ScragQuery.ODCITableClose() return java.math.BigDecimal'

);
/

CREATE OR REPLACE FUNCTION csr.Scrag(
	options		ScragFetchOptions
)
RETURN csr.SourceValTable
PIPELINED USING csr.ScragQuery;
/

CREATE OR REPLACE TYPE CSR.T_GENERIC_SO_ROW AS 
	OBJECT ( 
		sid_id 			NUMBER(10,0),
		description		VARCHAR2(255),
		position		NUMBER(10,0)
  );
/

CREATE OR REPLACE TYPE CSR.T_GENERIC_SO_TABLE AS 
  TABLE OF CSR.T_GENERIC_SO_ROW;
/

CREATE OR REPLACE TYPE CSR.T_COMPLIANCE_ROLLOUT_ITEM AS
	OBJECT (
		COMPLIANCE_ITEM_ID			NUMBER(10),
		REGION_SID					NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_COMPLIANCE_ROLLOUT_TABLE AS
	TABLE OF CSR.T_COMPLIANCE_ROLLOUT_ITEM;
/

CREATE OR REPLACE TYPE CSR.T_USER_PROFILE_STAGED_ROW AS 
	OBJECT (
	PRIMARY_KEY						VARCHAR2(256),
	EMPLOYEE_REF					VARCHAR2(128),
	PAYROLL_REF						NUMBER(10),
	FIRST_NAME						VARCHAR2(256),
	LAST_NAME						VARCHAR2(256),
	MIDDLE_NAME						VARCHAR2(256),
	FRIENDLY_NAME					VARCHAR2(256),
	EMAIL_ADDRESS					VARCHAR2(256),
	USERNAME						VARCHAR2(256),
	WORK_PHONE_NUMBER				VARCHAR2(32),
	WORK_PHONE_EXTENSION			VARCHAR2(8),
	HOME_PHONE_NUMBER				VARCHAR2(32),
	MOBILE_PHONE_NUMBER				VARCHAR2(32),
	MANAGER_EMPLOYEE_REF			VARCHAR2(128),
	MANAGER_PAYROLL_REF				NUMBER(10),
	MANAGER_PRIMARY_KEY				VARCHAR2(128),
	EMPLOYMENT_START_DATE			DATE,
	EMPLOYMENT_LEAVE_DATE			DATE,
	PROFILE_ACTIVE					NUMBER(1),
	DATE_OF_BIRTH					DATE,
	GENDER							VARCHAR2(128),
	JOB_TITLE						VARCHAR2(128),
	CONTRACT						VARCHAR2(256),
	EMPLOYMENT_TYPE					VARCHAR2(256),
	PAY_GRADE						VARCHAR2(256),
	BUSINESS_AREA_REF				VARCHAR2(256),
	BUSINESS_AREA_CODE				NUMBER(10),
	BUSINESS_AREA_NAME				VARCHAR2(256),
	BUSINESS_AREA_DESCRIPTION		VARCHAR2(1024),
	DIVISION_REF					VARCHAR2(256),
	DIVISION_CODE					NUMBER(10),
	DIVISION_NAME					VARCHAR2(256),
	DIVISION_DESCRIPTION			VARCHAR2(1024),
	DEPARTMENT						VARCHAR2(256),
	NUMBER_HOURS					NUMBER(12,2),
	COUNTRY							VARCHAR2(128),
	LOCATION						VARCHAR2(256),
	BUILDING						VARCHAR2(256),
	COST_CENTRE_REF					VARCHAR2(256),
	COST_CENTRE_CODE				NUMBER(10),
	COST_CENTRE_NAME				VARCHAR2(256),
	COST_CENTRE_DESCRIPTION			VARCHAR2(1024),
	WORK_ADDRESS_1					VARCHAR2(256),
	WORK_ADDRESS_2					VARCHAR2(256),
	WORK_ADDRESS_3					VARCHAR2(256),
	WORK_ADDRESS_4					VARCHAR2(256),
	HOME_ADDRESS_1					VARCHAR2(256),
	HOME_ADDRESS_2					VARCHAR2(256),
	HOME_ADDRESS_3					VARCHAR2(256),
	HOME_ADDRESS_4					VARCHAR2(256),
	LOCATION_REGION_REF				VARCHAR(1024),
	INTERNAL_USERNAME				VARCHAR2(256),
	MANAGER_USERNAME				VARCHAR2(256),
	ACTIVATE_ON						DATE,
	DEACTIVATE_ON					DATE,
	INSTANCE_STEP_ID				NUMBER(10),
	LAST_UPDATED_DTM				DATE,
	LAST_UPDATED_USER_SID			NUMBER(10),
	LAST_UPDATE_METHOD				VARCHAR(256),
	ERROR_MESSAGE					VARCHAR(1024)
	);
/

CREATE OR REPLACE TYPE CSR.T_AUDIT_PERMISSIBLE_NCT AS
	OBJECT (
		AUDIT_SID					NUMBER(10),
		NON_COMPLIANCE_TYPE_ID		NUMBER(10)
	);
/
CREATE OR REPLACE TYPE CSR.T_AUDIT_PERMISSIBLE_NCT_TABLE AS
	TABLE OF CSR.T_AUDIT_PERMISSIBLE_NCT;
/

CREATE OR REPLACE TYPE CSR.T_AUDIT_ABILITY AS
	OBJECT (
		FLOW_CAPABILITY_ID  NUMBER(10),
		PERMISSION_SET		NUMBER(10) 
	);
/
CREATE OR REPLACE TYPE CSR.T_AUDIT_ABILITY_TABLE AS
	TABLE OF CSR.T_AUDIT_ABILITY;
/

CREATE OR REPLACE TYPE CSR.T_AUDIT_MIGRATED_GROUP AS
	OBJECT (
		ORIGINAL_SID  	NUMBER(10),
		NEW_GROUP_SID	NUMBER(10) 
	);
/
CREATE OR REPLACE TYPE CSR.T_AUDIT_MIGRATED_GROUP_MAP AS
	TABLE OF CSR.T_AUDIT_MIGRATED_GROUP;
/

CREATE OR REPLACE TYPE CSR.T_QS_INC_FIELD_ROW AS 
  OBJECT ( 
	ORACLE_COLUMN	VARCHAR2(30),
	BIND_TYPE		VARCHAR2(4),
	TEXT_VALUE		CLOB,
	NUM_VALUE		NUMBER(24,10),
	DATE_VALUE		DATE
  );
/
CREATE OR REPLACE TYPE CSR.T_QS_INC_FIELD_TABLE AS 
  TABLE OF CSR.T_QS_INC_FIELD_ROW;
/

CREATE OR REPLACE TYPE CSR.T_FLOW_ALERT_ROW AS
  OBJECT (
		APP_SID							NUMBER(10),
		FLOW_STATE_TRANSITION_ID		NUMBER(10),
		FLOW_ITEM_GENERATED_ALERT_ID	NUMBER(10),
		CUSTOMER_ALERT_TYPE_ID			NUMBER(10),
		FLOW_STATE_LOG_ID				NUMBER(10),
		FROM_STATE_LABEL				VARCHAR2(255),
		TO_STATE_LABEL					VARCHAR2(255),
		SET_BY_USER_SID					NUMBER(10),
		SET_BY_EMAIL					VARCHAR2(256),
		SET_BY_FULL_NAME				VARCHAR2(256),
		SET_BY_USER_NAME				VARCHAR2(256),
		TO_USER_SID						NUMBER(10),
		FLOW_ALERT_HELPER				VARCHAR2(256),
		TO_USER_NAME					VARCHAR2(256),
		TO_FULL_NAME					VARCHAR2(256),
		TO_EMAIL						VARCHAR2(256),
		TO_FRIENDLY_NAME				VARCHAR2(255),
		TO_INITIATOR					NUMBER(1),
		FLOW_ITEM_ID					NUMBER(10),
		FLOW_TRANSITION_ALERT_ID		NUMBER(10),
		COMMENT_TEXT					CLOB,
		SET_DTM							DATE
  );
/

CREATE OR REPLACE TYPE CSR.T_FLOW_ALERT_TABLE AS 
  TABLE OF CSR.T_FLOW_ALERT_ROW;
/

CREATE OR REPLACE TYPE CSR.T_FLOW_ITEM_PERM_ROW AS
	OBJECT (
		FLOW_ITEM_ID				NUMBER(10),
		PERMISSION_SET				NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_FLOW_ITEM_PERM_TABLE IS TABLE OF CSR.T_FLOW_ITEM_PERM_ROW;
/

CREATE OR REPLACE TYPE CSR.T_USER AS 
	OBJECT (
	CSR_USER_SID				NUMBER(10),
	EMAIL						VARCHAR2(256),
	FULL_NAME					VARCHAR2(256),
	USER_NAME					VARCHAR2(256),
	FRIENDLY_NAME				VARCHAR2(255),
	JOB_TITLE					VARCHAR2(100),
	ACTIVE						NUMBER(1),
	USER_REF					VARCHAR2(255),
	LINE_MANAGER_SID			NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_USER_PROFILE AS 
	OBJECT (
	PRIMARY_KEY					VARCHAR2(128),
	CSR_USER_SID				NUMBER(10),
	EMPLOYEE_REF				VARCHAR2(128),
	PAYROLL_REF					NUMBER(10),
	FIRST_NAME					VARCHAR2(256),
	LAST_NAME					VARCHAR2(256),
	MIDDLE_NAME					VARCHAR2(256),
	FRIENDLY_NAME				VARCHAR2(256),
	EMAIL_ADDRESS				VARCHAR2(256),
	WORK_PHONE_NUMBER			VARCHAR2(32),
	WORK_PHONE_EXTENSION		VARCHAR2(8),
	HOME_PHONE_NUMBER			VARCHAR2(32),
	MOBILE_PHONE_NUMBER			VARCHAR2(32),
	MANAGER_EMPLOYEE_REF		VARCHAR2(128),
	MANAGER_PAYROLL_REF			NUMBER(10),
	MANAGER_PRIMARY_KEY			VARCHAR2(128),
	EMPLOYMENT_START_DATE		DATE,
	EMPLOYMENT_LEAVE_DATE		DATE,
	DATE_OF_BIRTH				DATE,
	GENDER						VARCHAR2(128),
	JOB_TITLE					VARCHAR2(128),
	CONTRACT					VARCHAR2(256),
	EMPLOYMENT_TYPE				VARCHAR2(256),
	PAY_GRADE					VARCHAR2(256),
	BUSINESS_AREA_REF			VARCHAR2(256),
	BUSINESS_AREA_CODE			NUMBER(10),
	BUSINESS_AREA_NAME			VARCHAR2(256),
	BUSINESS_AREA_DESCRIPTION	VARCHAR2(1024),
	DIVISION_REF				VARCHAR2(256),
	DIVISION_CODE				NUMBER(10),
	DIVISION_NAME				VARCHAR2(256),
	DIVISION_DESCRIPTION		VARCHAR2(1024),
	DEPARTMENT					VARCHAR2(256),
	NUMBER_HOURS				NUMBER(12,2),
	COUNTRY						VARCHAR2(128),
	LOCATION					VARCHAR2(256),
	BUILDING					VARCHAR2(256),
	COST_CENTRE_REF				VARCHAR2(256),
	COST_CENTRE_CODE			NUMBER(10),
	COST_CENTRE_NAME			VARCHAR2(256),
	COST_CENTRE_DESCRIPTION		VARCHAR2(1024),
	WORK_ADDRESS_1				VARCHAR2(256),
	WORK_ADDRESS_2				VARCHAR2(256),
	WORK_ADDRESS_3				VARCHAR2(256),
	WORK_ADDRESS_4				VARCHAR2(256),
	HOME_ADDRESS_1				VARCHAR2(256),
	HOME_ADDRESS_2				VARCHAR2(256),
	HOME_ADDRESS_3				VARCHAR2(256),
	HOME_ADDRESS_4				VARCHAR2(256),
	LOCATION_REGION_SID			NUMBER(10),
	INTERNAL_USERNAME			VARCHAR2(256),
	MANAGER_USERNAME			VARCHAR2(256),
	ACTIVATE_ON					DATE,
	DEACTIVATE_ON				DATE,
	CREATION_INSTANCE_STEP_ID	NUMBER(10),
	CREATED_DTM					DATE,
	CREATED_USER_SID			NUMBER(10),
	CREATION_METHOD				VARCHAR2(256),
	UPDATED_INSTANCE_STEP_ID	NUMBER(10),
	LAST_UPDATED_DTM			DATE,
	LAST_UPDATED_USER_SID		NUMBER(10),
	LAST_UPDATE_METHOD			VARCHAR2(256)
);
/

CREATE OR REPLACE TYPE CSR.T_REGION AS 
	OBJECT (
	REGION_SID					NUMBER(10),
	LINK_TO_REGION_SID			NUMBER(10),
	PARENT_SID					NUMBER(10),
	DESCRIPTION					VARCHAR2(1023),
	ACTIVE						NUMBER(10),
	POS							NUMBER(10),
	INFO_XML					SYS.XMLTYPE,
	ACQUISITION_DTM				DATE,
	DISPOSAL_DTM				DATE,
	REGION_TYPE					NUMBER(2),
	LOOKUP_KEY					VARCHAR2(1024),
	GEO_COUNTRY					VARCHAR2(2),
	GEO_REGION					VARCHAR2(2),
	GEO_CITY_ID					NUMBER(10),
	GEO_LONGITUDE				NUMBER,
	GEO_LATITUDE				NUMBER,
	GEO_TYPE					NUMBER(10),
	EGRID_REF					VARCHAR2(4),
	REGION_REF					VARCHAR2(255)
);
/

CREATE OR REPLACE TYPE CSR.T_REGIONS AS TABLE OF CSR.T_REGION;
/

CREATE OR REPLACE TYPE CSR.T_ALERT_BATCH_ISSUES AS
	OBJECT (
		APP_SID							NUMBER(10),
		ISSUE_LOG_ID					NUMBER(10),
		CSR_USER_SID					NUMBER(10),
		FRIENDLY_NAME					VARCHAR2(255),
		FULL_NAME						VARCHAR2(256),
		EMAIL							VARCHAR2(256)
	);
/
CREATE OR REPLACE TYPE CSR.T_ALERT_BATCH_ISSUES_TABLE AS
	TABLE OF CSR.T_ALERT_BATCH_ISSUES;
/

CREATE OR REPLACE TYPE CSR.T_FIRST_SHEET_ACTION_DTM AS
	OBJECT (
		app_sid 				NUMBER(10),
		sheet_id 				NUMBER(10),
		first_action_dtm 		DATE
	);
/

CREATE OR REPLACE TYPE CSR.T_FIRST_SHEET_ACTION_DTM_TABLE AS
	TABLE OF CSR.T_FIRST_SHEET_ACTION_DTM;
/

CREATE OR REPLACE TYPE CSR.T_DELEGATION_DETAIL AS
	OBJECT (
		sheet_id						number(10),
		parent_sheet_id					number(10),
		delegation_sid					number(10),
		parent_delegation_sid			number(10),
		is_visible						number(1),
		name							varchar2(1023),
		start_dtm						date,
		end_dtm							date,
		period_set_id					number(10),
		period_interval_id				number(10),
		delegation_start_dtm			date,
		delegation_end_dtm				date,
		submission_dtm					date,
		status							number(10),
		sheet_action_description		varchar2(255),
		sheet_action_downstream			varchar2(255),
		fully_delegated					number(1),
		editing_url						varchar2(255),
		last_action_id					number(10),
		is_top_level					number(1),
		approve_dtm						date,
		delegated_by_user				number(1),
		percent_complete				number(10,0),
		rid								number(10),
		root_delegation_sid				number(10),
		parent_sid						number(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_DELEGATION_DETAIL_TABLE AS
	TABLE OF CSR.T_DELEGATION_DETAIL;
/

CREATE OR REPLACE TYPE CSR.T_DELEGATION_USER AS
	OBJECT (
		delegation_sid 					NUMBER(10),
		user_sid 						NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_DELEGATION_USER_TABLE AS
	TABLE OF CSR.T_DELEGATION_USER;
/


CREATE OR REPLACE TYPE CSR.T_FLOW_FILTER_DATA_ROW AS
	OBJECT (
		ID						NUMBER(10),
		IS_EDITABLE				NUMBER(1)
	);
/

CREATE OR REPLACE TYPE CSR.T_FLOW_FILTER_DATA_TABLE AS
	TABLE OF CSR.T_FLOW_FILTER_DATA_ROW;
/

CREATE OR REPLACE TYPE CSR.T_ALERT_BATCH_DETAILS_ROW AS
  OBJECT (
  APP_SID					NUMBER(10),
  CSR_USER_SID				NUMBER(10),
  FULL_NAME					VARCHAR2(256),
  FRIENDLY_NAME				VARCHAR2(256),
  EMAIL						VARCHAR2(256),
  USER_NAME					VARCHAR2(256),
  SHEET_ID					NUMBER(10),
  SHEET_URL					VARCHAR2(400),
  DELEGATION_NAME			VARCHAR2(1023),
  PERIOD_SET_ID				NUMBER(10),
  PERIOD_INTERVAL_ID		NUMBER(10),
  DELEGATION_SID			NUMBER(10),
  SUBMISSION_DTM			DATE,
  REMINDER_DTM				DATE,
  START_DTM					DATE,
  END_DTM					DATE
  );
/

CREATE OR REPLACE TYPE CSR.T_ALERT_BATCH_DETAILS_TABLE AS 
  TABLE OF CSR.T_ALERT_BATCH_DETAILS_ROW;
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_AGGR_VAL_DATA_ROW AS
  OBJECT (
	INITIATIVE_SID			NUMBER(10),
	INITIATIVE_METRIC_ID	NUMBER(10),
	REGION_SID				NUMBER(10),
	START_DTM				DATE,
	END_DTM					DATE,
	VAL_NUMBER				NUMBER(24, 10)
  );
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_AGGR_VAL_DATA_TABLE AS 
  TABLE OF CSR.T_INITIATIVE_AGGR_VAL_DATA_ROW;
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_SID_DATA_ROW AS
  OBJECT (
	INITIATIVE_SID			NUMBER(10)
  );
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_SID_DATA_TABLE AS 
  TABLE OF CSR.T_INITIATIVE_SID_DATA_ROW;
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_METRIC_ID_DATA_ROW AS
  OBJECT (
	INITIATIVE_METRIC_ID 		NUMBER(10),
	MEASURE_CONVERSION_ID		NUMBER(10)
  );
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_METRIC_ID_DATA_TABLE AS 
  TABLE OF CSR.T_INITIATIVE_METRIC_ID_DATA_ROW;
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_DATA_ROW AS
  OBJECT (
	INITIATIVE_SID			NUMBER(10),
	FLOW_STATE_ID			NUMBER(10),
	FLOW_STATE_LABEL		VARCHAR2(255),
	FLOW_STATE_LOOKUP_KEY	VARCHAR2(255),
	FLOW_STATE_COLOUR		NUMBER(10),
	FLOW_STATE_POS			NUMBER(10),
	IS_EDITABLE				NUMBER(1),
	ACTIVE					NUMBER(1),
	OWNER_SID				NUMBER(10),
	POS						NUMBER(10)
  )
/

CREATE OR REPLACE TYPE CSR.T_INITIATIVE_DATA_TABLE AS
  TABLE OF CSR.T_INITIATIVE_DATA_ROW;
/

CREATE OR REPLACE TYPE CSR.T_LIKE_FOR_LIKE_VAL_NORMALISED_ROW AS
	OBJECT (
		IND_SID				NUMBER(10),
		REGION_SID			NUMBER(10),
		PERIOD_START_DTM	DATE,
		PERIOD_END_DTM		DATE,
		VAL_NUMBER			NUMBER(24,10),
		SOURCE_TYPE_ID		NUMBER(10),
		SOURCE_ID			NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.T_LIKE_FOR_LIKE_VAL_NORMALISED_TABLE AS
	TABLE OF CSR.T_LIKE_FOR_LIKE_VAL_NORMALISED_ROW;
/


CREATE OR REPLACE TYPE CSR.T_SHEETS_IND_REG_TO_USE_ROW AS
  OBJECT (
  APP_SID             NUMBER(10),
  DELEGATION_SID      NUMBER(10),
  LVL                 NUMBER(10),
  SHEET_ID            NUMBER(10),
  IND_SID             NUMBER(10),
  REGION_SID          NUMBER(10),
  START_DTM           DATE,
  END_DTM             DATE,
  LAST_ACTION_COLOUR  VARCHAR2(1)
  );
/

CREATE OR REPLACE TYPE CSR.T_SHEETS_IND_REG_TO_USE_TABLE AS 
  TABLE OF CSR.T_SHEETS_IND_REG_TO_USE_ROW;
/

CREATE OR REPLACE TYPE CSR.T_GET_VALUE_RESULT_ROW AS
	OBJECT (
		period_start_dtm	DATE,
		period_end_dtm		DATE,
		source				NUMBER(10,0),
		source_id			NUMBER(20,0),
		source_type_id		NUMBER(10,0),
		ind_sid				NUMBER(10,0),
		region_sid			NUMBER(10,0),
		val_number			NUMBER(24,10),
		error_code			NUMBER(10,0),
		changed_dtm			DATE,
		note				CLOB,
		flags				NUMBER (10,0),
		is_leaf				NUMBER(1,0),
		is_merged			NUMBER(1,0),
		path				VARCHAR2(1024)
	);
/

CREATE OR REPLACE TYPE CSR.T_GET_VALUE_RESULT_TABLE AS
	TABLE OF CSR.T_GET_VALUE_RESULT_ROW;
/

CREATE OR REPLACE TYPE CSR.TT_AUDIT_CAP_DATA_ROW AS
	OBJECT ( 
		INTERNAL_AUDIT_SID		NUMBER(10), 
		INTERNAL_AUDIT_TYPE_ID	NUMBER(10),
		FLOW_CAPABILITY_ID		NUMBER(10),
		PERMISSION_SET			NUMBER(10)
	);
/

CREATE OR REPLACE TYPE CSR.TT_AUDIT_CAP_DATA_TABLE AS
	TABLE OF CSR.TT_AUDIT_CAP_DATA_ROW;
/
CREATE OR REPLACE TYPE CSR.T_IND_TREE_ROW AS
  OBJECT (
  APP_SID					NUMBER(10),
  IND_SID                   NUMBER(10, 0),
  PARENT_SID                NUMBER(10, 0),
  DESCRIPTION               VARCHAR2(1023),
  IND_TYPE                  NUMBER(10, 0),
  MEASURE_SID               NUMBER(10, 0),
  MEASURE_DESCRIPTION		VARCHAR2(255),
  FORMAT_MASK				VARCHAR2(255),
  ACTIVE                    NUMBER(10, 0)
  );
/

CREATE OR REPLACE TYPE CSR.T_IND_TREE_TABLE AS
  TABLE OF CSR.T_IND_TREE_ROW;
/

CREATE OR REPLACE TYPE CSR.T_SEARCH_TAG_ROW AS
  OBJECT (
  SET_ID					NUMBER(10),
  TAG_ID                    NUMBER(10, 0)
  );
/

CREATE OR REPLACE TYPE CSR.T_SEARCH_TAG_TABLE AS
  TABLE OF CSR.T_SEARCH_TAG_ROW;
/

@@stragg
@@stragg2
@@bitoragg
