-- Please update version.sql too -- this keeps clean builds in sync
define version=374
@update_header


-- 
-- SEQUENCE: ISSUE_PENDING_VAL_ID_SEQ 
--

CREATE SEQUENCE ISSUE_PENDING_VAL_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: ISSUE_SHEET_VALUE_ID_SEQ 
--

CREATE SEQUENCE ISSUE_SHEET_VALUE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: ISSUE_SURVEY_ANSWER_ID_SEQ 
--

CREATE SEQUENCE ISSUE_SURVEY_ANSWER_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: NON_COMPLIANCE_ID_SEQ 
--

CREATE SEQUENCE NON_COMPLIANCE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: QS_ANSWER_LOG_ID_SEQ 
--

CREATE SEQUENCE QS_ANSWER_LOG_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: QUESTION_ID 
--

CREATE SEQUENCE QUESTION_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: VAL_TRIGGER_ID_SEQ 
--

CREATE SEQUENCE VAL_TRIGGER_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- TABLE: IND_ASSERTION 
--

CREATE TABLE IND_ASSERTION(
    APP_SID             NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IND_ASSERTION_ID    NUMBER(10, 0)     NOT NULL,
    IND_SID             NUMBER(10, 0)     NOT NULL,
    EXPR                VARCHAR2(1024)    NOT NULL,
    MESSAGE             VARCHAR2(2047),
    CONSTRAINT PK659 PRIMARY KEY (APP_SID, IND_ASSERTION_ID)
)
;



-- 
-- TABLE: INTERNAL_AUDIT 
--

CREATE TABLE INTERNAL_AUDIT(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INTERNAL_AUDIT_SID      NUMBER(10, 0)    NOT NULL,
    SURVEY_SID              NUMBER(10, 0),
    REGION_SID              NUMBER(10, 0)    NOT NULL,
    LABEL                   VARCHAR2(255)    NOT NULL,
    AUDIT_DTM               DATE             NOT NULL,
    CREATED_BY_USER_SID     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    CREATED_DTM             DATE             DEFAULT SYSDATE NOT NULL,
    ASSIGNED_TO_USER_SID    NUMBER(10, 0)    NOT NULL,
    NOTES					CLOB,
    CONSTRAINT PK661 PRIMARY KEY (APP_SID, INTERNAL_AUDIT_SID)
)
;



-- 
ALTER TABLE ISSUE ADD(
    ASSIGNED_TO_USER_SID       NUMBER(10, 0),
    DUE_DTM                    DATE,
    ISSUE_TYPE_ID              NUMBER(10, 0),
    ISSUE_PENDING_VAL_ID       NUMBER(10, 0),
    ISSUE_SHEET_VALUE_ID       NUMBER(10, 0),
    ISSUE_SURVEY_ANSWER_ID     NUMBER(10, 0),
    ISSUE_NON_COMPLIANCE_ID    NUMBER(10, 0)
);

ALTER TABLE ISSUE ADD (CONSTRAINT CHK_ISSUE_FKS CHECK (
	(ISSUE_PENDING_VAL_ID IS NOT NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL)
	OR
	(ISSUE_SHEET_VALUE_ID IS NOT NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL)
	OR
	(ISSUE_SURVEY_ANSWER_ID IS NOT NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL)
	OR
	(ISSUE_NON_COMPLIANCE_ID IS NOT NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL)
	OR
	(ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL)
	)
);




--
-- TABLE: ISSUE_NON_COMPLIANCE 
--

CREATE TABLE ISSUE_NON_COMPLIANCE(
    APP_SID                    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_NON_COMPLIANCE_ID    NUMBER(10, 0)    NOT NULL,
    NON_COMPLIANCE_ID          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK663 PRIMARY KEY (APP_SID, ISSUE_NON_COMPLIANCE_ID)
)
;


-- SHEET_VALUE

ALTER TABLE ISSUE_SHEET_VALUE ADD (
	ISSUE_SHEET_VALUE_ID    NUMBER(10, 0)
);

UPDATE ISSUE_SHEET_VALUE SET ISSUE_SHEET_VALUE_ID = ISSUE_SHEET_VALUE_ID_SEQ.nextval;

ALTER TABLE ISSUE_SHEET_VALUE MODIFY ISSUE_SHEET_VALUE_ID NOT NULL;

UPDATE ISSUE SET ISSUE_SHEET_VALUE_ID = (SELECT ISSUE_SHEET_VALUE_ID FROM ISSUE_SHEET_VALUE ISV WHERE ISV.ISSUE_ID = ISSUE.ISSUE_ID);

ALTER TABLE ISSUE_SHEET_VALUE DROP COLUMN ISSUE_ID;

ALTER TABLE ISSUE_SHEET_VALUE DROP CONSTRAINT PK_ISSUE_SHEET_VALUE DROP INDEX; 

ALTER TABLE ISSUE_SHEET_VALUE ADD CONSTRAINT PK_ISSUE_SHEET_VALUE PRIMARY KEY (APP_SID, ISSUE_SHEET_VALUE_ID);




-- PENDING_VAL
 
ALTER TABLE ISSUE_PENDING_VAL ADD (
	ISSUE_PENDING_VAL_ID    NUMBER(10, 0)
);

UPDATE ISSUE_PENDING_VAL SET ISSUE_PENDING_VAL_ID = ISSUE_PENDING_VAL_ID_SEQ.nextval;

ALTER TABLE ISSUE_PENDING_VAL MODIFY ISSUE_PENDING_VAL_ID NOT NULL;

UPDATE ISSUE SET ISSUE_PENDING_VAL_ID = (SELECT ISSUE_PENDING_VAL_ID FROM ISSUE_PENDING_VAL ISV WHERE ISV.ISSUE_ID = ISSUE.ISSUE_ID);

ALTER TABLE ISSUE_PENDING_VAL DROP CONSTRAINT PK_ISSUE_PENDING_VAL DROP INDEX; 

ALTER TABLE ISSUE_PENDING_VAL ADD CONSTRAINT PK_ISSUE_PENDING_VAL PRIMARY KEY (APP_SID, ISSUE_PENDING_VAL_ID);

ALTER TABLE ISSUE_PENDING_VAL DROP CONSTRAINT FK_ISSUE_PENDVAL_ISSUE DROP INDEX;

ALTER TABLE ISSUE_PENDING_VAL DROP COLUMN ISSUE_ID;



-- 
-- TABLE: ISSUE_SURVEY_ANSWER 
--

CREATE TABLE ISSUE_SURVEY_ANSWER(
    APP_SID                   NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_SURVEY_ANSWER_ID    NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID        NUMBER(10, 0)    NOT NULL,
    QUESTION_ID               NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK642 PRIMARY KEY (APP_SID, ISSUE_SURVEY_ANSWER_ID)
)
;



-- 
-- TABLE: ISSUE_TYPE 
--

CREATE TABLE ISSUE_TYPE(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL            VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK643 PRIMARY KEY (APP_SID, ISSUE_TYPE_ID)
)
;



-- 
-- TABLE: NON_COMPLIANCE 
--

CREATE TABLE NON_COMPLIANCE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_ID      NUMBER(10, 0)    NOT NULL,
    INTERNAL_AUDIT_SID     NUMBER(10, 0)    NOT NULL,
    LABEL                  VARCHAR2(255)    NOT NULL,
    DETAIL                 CLOB,
    CREATED_DTM            DATE             DEFAULT SYSDATE NOT NULL,
    CREATED_BY_USER_SID    NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    CONSTRAINT PK662 PRIMARY KEY (APP_SID, NON_COMPLIANCE_ID)
)
;



-- 
-- TABLE: NON_COMPLIANCE_FILE_UPLOAD 
--

CREATE TABLE NON_COMPLIANCE_FILE_UPLOAD(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    NON_COMPLIANCE_ID    NUMBER(10, 0)    NOT NULL,
    FILE_UPLOAD_SID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK664 PRIMARY KEY (APP_SID, NON_COMPLIANCE_ID, FILE_UPLOAD_SID)
)
;



-- 
-- TABLE: QS_ANSWER_FILE_UPLOAD 
--

CREATE TABLE QS_ANSWER_FILE_UPLOAD(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)    NOT NULL,
    QUESTION_ID           NUMBER(10, 0)    NOT NULL,
    FILE_UPLOAD_SID       NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK640 PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID, FILE_UPLOAD_SID)
)
;



-- 
-- TABLE: QS_ANSWER_LOG 
--

CREATE TABLE QS_ANSWER_LOG(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QS_ANSWER_LOG_ID      NUMBER(10, 0)     NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)     NOT NULL,
    QUESTION_ID           NUMBER(10, 0)     NOT NULL,
    SET_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    SET_BY_USER_SID       NUMBER(10, 0)     NOT NULL,
    DESCRIPTION           VARCHAR2(255)     NOT NULL,
    PARAM_1               VARCHAR2(4000),
    PARAM_2               VARCHAR2(4000),
    PARAM_3               VARCHAR2(4000),
    CONSTRAINT PK_PENDING_VAL_LOG_1 PRIMARY KEY (APP_SID, QS_ANSWER_LOG_ID)
)
;

BEGIN
	INSERT INTO ISSUE_TYPE (app_sid, issue_type_Id, label)
		SELECT APP_SID, 1, 'Data entry form' FROM CUSTOMER;
	INSERT INTO ISSUE_TYPE (app_sid, issue_type_Id, label)
		SELECT APP_SID, 2, 'Questionnaire' FROM CUSTOMER;
	INSERT INTO ISSUE_TYPE (app_sid, issue_type_Id, label)
		SELECT APP_SID, 3, 'Corrective action' FROM CUSTOMER;
	-- they're all on data entry forms to date
	UPDATE ISSUE SET ISSUE_TYPE_ID = 1;
	-- new feature, so jsut assign to the person who raised it
	UPDATE ISSUE SET ASSIGNED_TO_USER_SID = RAISED_BY_USER_SID;
END;
/

ALTER TABLE ISSUE MODIFY ISSUE_TYPE_ID NOT NULL;

ALTER TABLE ISSUE MODIFY ASSIGNED_TO_USER_SID NOT NULL;




-- 
-- TABLE: QUICK_SURVEY_ANSWER 
--


ALTER TABLE QUICK_SURVEY_RESPONSE_ANSWER RENAME TO QUICK_SURVEY_ANSWER;

ALTER TABLE QUICK_SURVEY_ANSWER ADD (QUESTION_ID NUMBER(10));

ALTER TABLE QUICK_SURVEY_ANSWER ADD (
    NOTE                  CLOB
);

-- 
-- TABLE: QUICK_SURVEY_QUESTION 
--

CREATE TABLE QUICK_SURVEY_QUESTION(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    QUESTION_ID    NUMBER(10, 0)    NOT NULL,
    SURVEY_SID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK638 PRIMARY KEY (APP_SID, QUESTION_ID)
)
;

DECLARE
	v_question_id	quick_survey_question.question_id%TYPE;
BEGIN
	FOR r IN (
		SELECT DISTINCT qsr.app_sid, question_code, qsr.survey_sid 
		  FROM quick_survey_answer qsa, quick_survey_response qsr 
		 WHERE qsa.survey_response_id = qsr.survey_response_id
	)
	LOOP
		INSERT INTO QUICK_SURVEY_QUESTION (app_sid, question_Id, surveY_sid) 
			VALUES (r.app_sid, questioN_id_seq.nextval, r.survey_sid)
		 RETURNING question_id INTO v_question_id;
		UPDATE QUICK_SURVEY_ANSWER
		   SET question_id = v_question_id
		 WHERE question_code = r.question_code
		   AND survey_response_Id IN (
				SELECT survey_response_id 
				  FROM quick_survey_response
				 WHERE survey_sid = r.surveY_sid
		   );
	END LOOP;
END;
/

ALTER TABLE QUICK_SURVEY_ANSWER MODIFY QUESTION_ID NOT NULL;


-- TABLE: VAL_TRIGGER 
--

CREATE TABLE VAL_TRIGGER(
    APP_SID           NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAL_TRIGGER_ID    NUMBER(10, 0)     NOT NULL,
    IND_SID           NUMBER(10, 0)     NOT NULL,
    LABEL             VARCHAR2(1024)    NOT NULL,
    INTERVAL          VARCHAR2(1)       NOT NULL,
    EXPR              VARCHAR2(255)     NOT NULL,
    OWNER_SID         NUMBER(10, 0)     NOT NULL,
    CREATED_DTM       DATE              DEFAULT SYSDATE NOT NULL,
    NOTE              VARCHAR2(2047)    NOT NULL,
    CHECK (INTERVAL IN ('m','q','h','y')),
    CONSTRAINT PK651 PRIMARY KEY (APP_SID, VAL_TRIGGER_ID)
)
;



-- 
-- TABLE: VAL_TRIGGER_FIRED 
--

CREATE TABLE VAL_TRIGGER_FIRED(
    APP_SID            NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAL_TRIGGER_ID     NUMBER(10, 0)     NOT NULL,
    REGION_SID         NUMBER(10, 0)     NOT NULL,
    START_DTM          DATE              NOT NULL,
    END_DTM            DATE              NOT NULL,
    VAL_NUMBER         NUMBER(24, 10)    NOT NULL,
    FIRED_DTM          DATE              DEFAULT SYSDATE NOT NULL,
    ACK_BY_USER_SID    NUMBER(10, 0),
    ACK_DTM            DATE,
    ACK_NOTE           VARCHAR2(2047),
    CONSTRAINT PK655 PRIMARY KEY (APP_SID, VAL_TRIGGER_ID)
)
;



-- 
-- TABLE: VAL_TRIGGER_REGION 
--

CREATE TABLE VAL_TRIGGER_REGION(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    VAL_TRIGGER_ID     NUMBER(10, 0)    NOT NULL,
    REGION_SID         NUMBER(10, 0)    NOT NULL,
    ALL_DESCENDENTS    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK652 PRIMARY KEY (APP_SID, VAL_TRIGGER_ID, REGION_SID)
)
;



-- 
-- INDEX: UK_ISSUE_PENDING_VAL 
--

CREATE UNIQUE INDEX UK_ISSUE_PENDING_VAL ON ISSUE_PENDING_VAL(PENDING_IND_ID, PENDING_REGION_ID, PENDING_PERIOD_ID)
;
-- 
-- INDEX: UK_ISSUE_SHEET_VALUE 
--

CREATE UNIQUE INDEX UK_ISSUE_SHEET_VALUE ON ISSUE_SHEET_VALUE(IND_SID, REGION_SID, START_DTM, END_DTM)
;
-- 
-- INDEX: UK_ISSUE_SURVEY_ANSWER 
--

CREATE UNIQUE INDEX UK_ISSUE_SURVEY_ANSWER ON ISSUE_SURVEY_ANSWER(SURVEY_RESPONSE_ID, QUESTION_ID)
;
-- 
-- TABLE: IND_ASSERTION 
--

ALTER TABLE IND_ASSERTION ADD CONSTRAINT RefCUSTOMER1330 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;

ALTER TABLE IND_ASSERTION ADD CONSTRAINT RefIND1331 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;


-- 
-- TABLE: INTERNAL_AUDIT 
--

ALTER TABLE INTERNAL_AUDIT ADD CONSTRAINT RefQUICK_SURVEY1347 
    FOREIGN KEY (APP_SID, SURVEY_SID)
    REFERENCES QUICK_SURVEY(APP_SID, SURVEY_SID)
;

ALTER TABLE INTERNAL_AUDIT ADD CONSTRAINT RefREGION1348 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES REGION(APP_SID, REGION_SID)
;

ALTER TABLE INTERNAL_AUDIT ADD CONSTRAINT RefCSR_USER1349 
    FOREIGN KEY (APP_SID, CREATED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE INTERNAL_AUDIT ADD CONSTRAINT RefCSR_USER1350 
    FOREIGN KEY (APP_SID, ASSIGNED_TO_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE INTERNAL_AUDIT ADD CONSTRAINT RefCUSTOMER1351 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;


-- 
ALTER TABLE ISSUE ADD CONSTRAINT RefISSUE_PENDING_VAL1292 
    FOREIGN KEY (APP_SID, ISSUE_PENDING_VAL_ID)
    REFERENCES ISSUE_PENDING_VAL(APP_SID, ISSUE_PENDING_VAL_ID)
    ON DELETE SET NULL
;
 
ALTER TABLE ISSUE ADD CONSTRAINT RefISSUE_SHEET_VALUE1293 
    FOREIGN KEY (APP_SID, ISSUE_SHEET_VALUE_ID)
    REFERENCES ISSUE_SHEET_VALUE(APP_SID, ISSUE_SHEET_VALUE_ID)
    ON DELETE SET NULL
;

ALTER TABLE ISSUE ADD CONSTRAINT RefCSR_USER1294 
    FOREIGN KEY (APP_SID, ASSIGNED_TO_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE ISSUE ADD CONSTRAINT RefISSUE_SURVEY_ANSWER1295 
    FOREIGN KEY (APP_SID, ISSUE_SURVEY_ANSWER_ID)
    REFERENCES ISSUE_SURVEY_ANSWER(APP_SID, ISSUE_SURVEY_ANSWER_ID)
    ON DELETE SET NULL
;

ALTER TABLE ISSUE ADD CONSTRAINT RefISSUE_TYPE1296 
    FOREIGN KEY (APP_SID, ISSUE_TYPE_ID)
    REFERENCES ISSUE_TYPE(APP_SID, ISSUE_TYPE_ID)
;

ALTER TABLE ISSUE ADD CONSTRAINT RefISSUE_NON_COMPLIANCE1352 
    FOREIGN KEY (APP_SID, ISSUE_NON_COMPLIANCE_ID)
    REFERENCES ISSUE_NON_COMPLIANCE(APP_SID, ISSUE_NON_COMPLIANCE_ID)
    ON DELETE SET NULL
;


-- TABLE: ISSUE_NON_COMPLIANCE 
--

ALTER TABLE ISSUE_NON_COMPLIANCE ADD CONSTRAINT RefNON_COMPLIANCE1353 
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_ID)
    REFERENCES NON_COMPLIANCE(APP_SID, NON_COMPLIANCE_ID)
;

ALTER TABLE ISSUE_NON_COMPLIANCE ADD CONSTRAINT RefCUSTOMER1354 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;



ALTER TABLE ISSUE_PENDING_VAL ADD CONSTRAINT RefCUSTOMER1297 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;

-- TABLE: ISSUE_SHEET_VALUE 
--

ALTER TABLE ISSUE_SHEET_VALUE ADD CONSTRAINT RefIND1298 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE ISSUE_SHEET_VALUE ADD CONSTRAINT RefREGION1299 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES REGION(APP_SID, REGION_SID)
;

ALTER TABLE ISSUE_SHEET_VALUE ADD CONSTRAINT RefCUSTOMER1300 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;


-- 
-- TABLE: ISSUE_SURVEY_ANSWER 
--

ALTER TABLE QUICK_SURVEY_ANSWER DROP CONSTRAINT PK_QUICK_SURVEY_RESP_ANSWR DROP INDEX;

ALTER TABLE QUICK_SURVEY_ANSWER  ADD PRIMARY KEY (APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID);

ALTER TABLE ISSUE_SURVEY_ANSWER ADD CONSTRAINT RefQUICK_SURVEY_ANSWER1301 
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID)
    REFERENCES QUICK_SURVEY_ANSWER(APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID)
;

ALTER TABLE ISSUE_SURVEY_ANSWER ADD CONSTRAINT RefCUSTOMER1302 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;


-- 
-- TABLE: ISSUE_TYPE 
--

ALTER TABLE ISSUE_TYPE ADD CONSTRAINT RefCUSTOMER1355 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;


-- 
-- TABLE: NON_COMPLIANCE 
--

ALTER TABLE NON_COMPLIANCE ADD CONSTRAINT RefINTERNAL_AUDIT1356 
    FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
    REFERENCES INTERNAL_AUDIT(APP_SID, INTERNAL_AUDIT_SID)
;

ALTER TABLE NON_COMPLIANCE ADD CONSTRAINT RefCSR_USER1357 
    FOREIGN KEY (APP_SID, CREATED_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE NON_COMPLIANCE ADD CONSTRAINT RefCUSTOMER1358 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;


-- 
-- TABLE: NON_COMPLIANCE_FILE_UPLOAD 
--

ALTER TABLE NON_COMPLIANCE_FILE_UPLOAD ADD CONSTRAINT RefFILE_UPLOAD1359 
    FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
    REFERENCES CSR.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE NON_COMPLIANCE_FILE_UPLOAD ADD CONSTRAINT RefNON_COMPLIANCE1360 
    FOREIGN KEY (APP_SID, NON_COMPLIANCE_ID)
    REFERENCES NON_COMPLIANCE(APP_SID, NON_COMPLIANCE_ID)
;


-- 
-- TABLE: QS_ANSWER_FILE_UPLOAD 
--

ALTER TABLE QS_ANSWER_FILE_UPLOAD ADD CONSTRAINT RefQUICK_SURVEY_ANSWER1303 
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID)
    REFERENCES QUICK_SURVEY_ANSWER(APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID)
;

ALTER TABLE QS_ANSWER_FILE_UPLOAD ADD CONSTRAINT RefFILE_UPLOAD1304 
    FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
    REFERENCES CSR.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;


-- 
-- TABLE: QS_ANSWER_LOG 
--

ALTER TABLE QS_ANSWER_LOG ADD CONSTRAINT RefCUSTOMER1305 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;

ALTER TABLE QS_ANSWER_LOG ADD CONSTRAINT RefQUICK_SURVEY_ANSWER1306 
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID)
    REFERENCES QUICK_SURVEY_ANSWER(APP_SID, SURVEY_RESPONSE_ID, QUESTION_ID)
;


 
 
ALTER TABLE QUICK_SURVEY_RESPONSE DROP CONSTRAINT RefQUICK_SURVEY896;

ALTER TABLE QUICK_SURVEY_ANSWER ADD CONSTRAINT RefQUICK_SURVEY_QUESTION1307 
    FOREIGN KEY (APP_SID, QUESTION_ID)
    REFERENCES QUICK_SURVEY_QUESTION(APP_SID, QUESTION_ID)
;

ALTER TABLE QUICK_SURVEY_ANSWER DROP CONSTRAINT RefQUICK_SURVEY_RESPONSE897;

ALTER TABLE QUICK_SURVEY_ANSWER ADD CONSTRAINT RefQUICK_SURVEY_RESPONSE1308 
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID)
;

-- 
-- TABLE: QUICK_SURVEY_QUESTION 
--

ALTER TABLE QUICK_SURVEY_QUESTION ADD CONSTRAINT RefCUSTOMER1309 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;

ALTER TABLE QUICK_SURVEY_QUESTION ADD CONSTRAINT RefQUICK_SURVEY1310 
     FOREIGN KEY (APP_SID, SURVEY_SID)
     REFERENCES QUICK_SURVEY(APP_SID, SURVEY_SID)
 ;
 
 

ALTER TABLE QUICK_SURVEY_RESPONSE ADD CONSTRAINT RefQUICK_SURVEY896 
    FOREIGN KEY (APP_SID, SURVEY_SID)
    REFERENCES QUICK_SURVEY(APP_SID, SURVEY_SID);
    
-- TABLE: VAL_TRIGGER 
--

ALTER TABLE VAL_TRIGGER ADD CONSTRAINT RefIND1319 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID)
;

ALTER TABLE VAL_TRIGGER ADD CONSTRAINT RefCSR_USER1320 
    FOREIGN KEY (APP_SID, OWNER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE VAL_TRIGGER ADD CONSTRAINT RefCUSTOMER1321 
    FOREIGN KEY (APP_SID)
    REFERENCES CUSTOMER(APP_SID)
;


-- 
-- TABLE: VAL_TRIGGER_FIRED 
--

ALTER TABLE VAL_TRIGGER_FIRED ADD CONSTRAINT RefCSR_USER1322 
    FOREIGN KEY (APP_SID, ACK_BY_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;

ALTER TABLE VAL_TRIGGER_FIRED ADD CONSTRAINT RefVAL_TRIGGER1323 
    FOREIGN KEY (APP_SID, VAL_TRIGGER_ID)
    REFERENCES VAL_TRIGGER(APP_SID, VAL_TRIGGER_ID)
;

ALTER TABLE VAL_TRIGGER_FIRED ADD CONSTRAINT RefREGION1327 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES REGION(APP_SID, REGION_SID)
;


-- 
-- TABLE: VAL_TRIGGER_REGION 
--

ALTER TABLE VAL_TRIGGER_REGION ADD CONSTRAINT RefREGION1324 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES REGION(APP_SID, REGION_SID)
;

ALTER TABLE VAL_TRIGGER_REGION ADD CONSTRAINT RefVAL_TRIGGER1325 
    FOREIGN KEY (APP_SID, VAL_TRIGGER_ID)
    REFERENCES VAL_TRIGGER(APP_SID, VAL_TRIGGER_ID)
;

@..\create_views

@..\csr_data_pkg
@..\sheet_pkg
@..\approval_step_range_pkg
@..\pending_pkg
@..\issue_pkg
@..\quick_survey_pkg

@..\csr_data_body
@..\sheet_body
@..\approval_step_range_body
@..\pending_body
@..\issue_body
@..\quick_survey_body

@update_tail
