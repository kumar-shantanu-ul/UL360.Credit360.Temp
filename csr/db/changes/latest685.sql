-- Please update version.sql too -- this keeps clean builds in sync
define version=685
@update_header

CREATE SEQUENCE csr.METER_ALARM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

CREATE SEQUENCE csr.METER_COMPARISON_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

CREATE SEQUENCE csr.METER_ISSUE_PERIOD_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE csr.METER_STATISTIC_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

CREATE SEQUENCE csr.METER_TEST_TIME_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

CREATE TABLE csr.METER_ALARM(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    METER_ALARM_ID          NUMBER(10, 0)     NOT NULL,
    INHERITABLE             NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    ENABLED                 NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    NAME                    VARCHAR2(1024)    NOT NULL,
    TEST_TIME_ID            NUMBER(10, 0)     NOT NULL,
    LOOK_AT_STATISTIC_ID    NUMBER(10, 0)     NOT NULL,
    COMPARE_STATISTIC_ID    NUMBER(10, 0)     NOT NULL,
    COMPARISON_ID           NUMBER(10, 0)     NOT NULL,
    COMPARISON_PCT          NUMBER(10, 5)     DEFAULT 0 NOT NULL,
    ISSUE_PERIOD_ID         NUMBER(10, 0)     NOT NULL,
    ISSUE_TRIGGER_COUNT     NUMBER(10, 0)     NOT NULL,
    CHECK (INHERITABLE IN(0,1)),
    CHECK (ENABLED IN(0,1)),
    CONSTRAINT PK960 PRIMARY KEY (APP_SID, METER_ALARM_ID)
)
;

CREATE TABLE csr.METER_ALARM_COMPARISON(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    COMPARISON_ID    NUMBER(10, 0)    NOT NULL,
    NAME             VARCHAR2(256)    NOT NULL,
    SHOW_PCT         NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    TEST_FUNCTION      VARCHAR2(256)  NOT NULL,
    CHECK (SHOW_PCT IN(0,1)),
    CONSTRAINT PK962 PRIMARY KEY (APP_SID, COMPARISON_ID)
)
;

CREATE TABLE csr.METER_ALARM_ISSUE_PERIOD(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_PERIOD_ID    NUMBER(10, 0)    NOT NULL,
    NAME               VARCHAR2(256)    NOT NULL,
    TEST_FUNCTION      VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK964 PRIMARY KEY (APP_SID, ISSUE_PERIOD_ID)
)
;

CREATE TABLE csr.METER_ALARM_STATISTIC(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    STATISTIC_ID    NUMBER(10, 0)    NOT NULL,
    NAME            VARCHAR2(256)    NOT NULL,
    IS_AVERAGE      NUMBER(1, 0)     NOT NULL,
    IS_SUM          NUMBER(1, 0)     NOT NULL,
    COMP_PROC       VARCHAR2(256)    NOT NULL,
    CHECK (IS_AVERAGE IN(0,1)),
    CHECK (IS_SUM  IN(0,1)),
    CONSTRAINT PK963 PRIMARY KEY (APP_SID, STATISTIC_ID)
)
;

CREATE TABLE csr.METER_ALARM_STATISTIC_JOB(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID      NUMBER(10, 0)    NOT NULL,
    STATISTIC_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM       DATE             NOT NULL,
    END_DTM         DATE             NOT NULL,
    CONSTRAINT PK966 PRIMARY KEY (APP_SID, REGION_SID, STATISTIC_ID)
)
;

CREATE TABLE csr.METER_ALARM_TEST_TIME(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    TEST_TIME_ID     NUMBER(10, 0)    NOT NULL,
    NAME             VARCHAR2(256)    NOT NULL,
    TEST_FUNCTION    VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK961 PRIMARY KEY (APP_SID, TEST_TIME_ID)
)
;

CREATE TABLE csr.METER_METER_ALARM_STATISTIC(
    APP_SID          NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID       NUMBER(10, 0)     NOT NULL,
    STATISTIC_ID     NUMBER(10, 0)     NOT NULL,
    LAST_RUN_DTM     DATE,
    LAST_COMP_DTM    DATE,
    VAL              NUMBER(24, 10),
    AVERAGE_COUNT    NUMBER(10, 0),
    CONSTRAINT PK965 PRIMARY KEY (APP_SID, REGION_SID, STATISTIC_ID)
)
;

CREATE TABLE csr.REGION_METER_ALARM(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID         NUMBER(10, 0)    NOT NULL,
    METER_ALARM_ID     NUMBER(10, 0)    NOT NULL,
    INHERITED_FROM_SID NUMBER(10, 0)    NOT NULL,
    IGNORE             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IGNORE_CHILDREN    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IGNORE IN(0,1)),
    CHECK (IGNORE_CHILDREN IN(0,1)),
    CONSTRAINT PK959 PRIMARY KEY (APP_SID, REGION_SID, METER_ALARM_ID)
)
;

ALTER TABLE csr.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_TEST_TIME2134 
    FOREIGN KEY (APP_SID, TEST_TIME_ID)
    REFERENCES csr.METER_ALARM_TEST_TIME(APP_SID, TEST_TIME_ID)
;

ALTER TABLE csr.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_STATISTIC2135 
    FOREIGN KEY (APP_SID, LOOK_AT_STATISTIC_ID)
    REFERENCES csr.METER_ALARM_STATISTIC(APP_SID, STATISTIC_ID)
;

ALTER TABLE csr.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_STATISTIC2136 
    FOREIGN KEY (APP_SID, COMPARE_STATISTIC_ID)
    REFERENCES csr.METER_ALARM_STATISTIC(APP_SID, STATISTIC_ID)
;

ALTER TABLE csr.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_COMPARISON2137 
    FOREIGN KEY (APP_SID, COMPARISON_ID)
    REFERENCES csr.METER_ALARM_COMPARISON(APP_SID, COMPARISON_ID)
;

ALTER TABLE csr.METER_ALARM ADD CONSTRAINT RefMETER_ALARM_ISSUE_PERIO2138 
    FOREIGN KEY (APP_SID, ISSUE_PERIOD_ID)
    REFERENCES csr.METER_ALARM_ISSUE_PERIOD(APP_SID, ISSUE_PERIOD_ID)
;

ALTER TABLE csr.METER_ALARM ADD CONSTRAINT RefCUSTOMER2139 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID)
;

ALTER TABLE csr.METER_ALARM_COMPARISON ADD CONSTRAINT RefCUSTOMER2140 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID)
;

ALTER TABLE csr.METER_ALARM_ISSUE_PERIOD ADD CONSTRAINT RefCUSTOMER2141 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID)
;

ALTER TABLE csr.METER_ALARM_STATISTIC ADD CONSTRAINT RefCUSTOMER2142 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID)
;

ALTER TABLE csr.METER_ALARM_STATISTIC_JOB ADD CONSTRAINT RefMETER_METER_ALARM_STATI2143 
    FOREIGN KEY (APP_SID, REGION_SID, STATISTIC_ID)
    REFERENCES csr.METER_METER_ALARM_STATISTIC(APP_SID, REGION_SID, STATISTIC_ID)
;

ALTER TABLE csr.METER_ALARM_TEST_TIME ADD CONSTRAINT RefCUSTOMER2144 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID)
;

ALTER TABLE csr.METER_METER_ALARM_STATISTIC ADD CONSTRAINT RefMETER_ALARM_STATISTIC2147 
    FOREIGN KEY (APP_SID, STATISTIC_ID)
    REFERENCES csr.METER_ALARM_STATISTIC(APP_SID, STATISTIC_ID)
;

ALTER TABLE csr.METER_METER_ALARM_STATISTIC ADD CONSTRAINT RefALL_METER2148 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES csr.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE csr.REGION_METER_ALARM ADD CONSTRAINT RefREGION2150 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES csr.REGION(APP_SID, REGION_SID)
;

ALTER TABLE csr.REGION_METER_ALARM ADD CONSTRAINT RefMETER_ALARM2151 
    FOREIGN KEY (APP_SID, METER_ALARM_ID)
    REFERENCES csr.METER_ALARM(APP_SID, METER_ALARM_ID)
;

ALTER TABLE csr.REGION_METER_ALARM ADD CONSTRAINT RefREGION_METER_ALARM2153 
    FOREIGN KEY (APP_SID, INHERITED_FROM_SID, METER_ALARM_ID)
    REFERENCES csr.REGION_METER_ALARM(APP_SID, REGION_SID, METER_ALARM_ID)
;


DECLARE
	policy_already_exists exception;
	pragma exception_init(policy_already_exists, -28101);

	type t_tabs is table of varchar2(30);
	v_list t_tabs;
	v_null_list t_tabs;
BEGIN	
	v_list := t_tabs(
		'METER_ALARM',
		'METER_ALARM_COMPARISON',
		'METER_ALARM_ISSUE_PERIOD',
		'METER_ALARM_STATISTIC',
		'METER_ALARM_STATISTIC_JOB',
		'METER_METER_ALARM_STATISTIC',
		'METER_ALARM_TEST_TIME',
		'REGION_METER_ALARM'
	);
	for i in 1 .. v_list.count loop
		declare
			v_name varchar2(30);
			v_i pls_integer default 1;
		begin
			loop
				begin
					if v_i = 1 then
						v_name := SUBSTR(v_list(i), 1, 23)||'_POLICY';
					else
						v_name := SUBSTR(v_list(i), 1, 21)||'_POLICY_'||v_i;
					end if;
					dbms_output.put_line('doing '||v_name);
				    dbms_rls.add_policy(
				        object_schema   => 'CSR',
				        object_name     => v_list(i),
				        policy_name     => v_name,
				        function_schema => 'CSR',
				        policy_function => 'appSidCheck',
				        statement_types => 'select, insert, update, delete',
				        update_check	=> true,
				        policy_type     => dbms_rls.context_sensitive );
				    -- dbms_output.put_line('done  '||v_name);
				  	exit;
				exception
					when policy_already_exists then
						v_i := v_i + 1;
				end;
			end loop;
		end;
	end loop;
END;
/

@../meter_monitor_pkg
@../meter_alarm_pkg

@../region_body
@../meter_monitor_body
@../meter_alarm_body

grant execute on meter_alarm_pkg to web_user;

@update_tail
