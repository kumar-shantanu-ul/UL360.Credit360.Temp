-- Please update version.sql too -- this keeps clean builds in sync
define version=2537
@update_header

--DO NOT RE RUN THIS ON LIVE
DECLARE
	v_count NUMBER(10);
BEGIN
	SELECT count(*) INTO v_count FROM all_tables WHERE owner = 'CSR' AND table_name = 'ENHESA_TOPIC';
	IF v_count > 0 THEN
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_TEXT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_REGION';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;    
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_SCHED_TASK';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_REG';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_ISSUE';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;        
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_KEYWORD';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_HEADING';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;	
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_AUTH_ORG_TITLE';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC_AUTH';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;    
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_TOPIC';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_SUP_DOC_ITEM_TEXT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_SUP_DOC';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_STATUS_NAME';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_STATUS';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_SCRNGQN_TEXT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_SCRNGQN_HEADING';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_SCRNGQN';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_RQMT_TEXT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_RQMT_SUP_DOC';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_RQMT_REG_CITATION';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_RQMT_DOMAIN';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_RQMT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_REG_TEXT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_REG_REGION';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_REG_HEADING';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_REG';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_KEYWORD_TEXT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_KEYWORD';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_INTRO_TEXT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_INTRO';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_HEADING_TEXT';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_HEADING';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_COUNTRY_REGION_NAME';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_COUNTRY_REGION';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_COUNTRY_NAME';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_COUNTRY';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_LANG_NAME';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_LANG';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;
		BEGIN
			EXECUTE IMMEDIATE 'DROP TABLE CSR.ENHESA_PROTOCOL';
			EXCEPTION WHEN OTHERS THEN NULL;
		END;    
    
	
	END IF;
END;
/
--DO NOT RE RUN THIS ON LIVE

CREATE TABLE CSR.ENHESA_PROTOCOL (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL			VARCHAR(255) NOT NULL,
    CONSTRAINT PK_ENHESA_PROTOCOL PRIMARY KEY (APP_SID, PROTOCOL)
);

CREATE TABLE CSR.ENHESA_LANG (
	LANG		VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_LANG PRIMARY KEY (LANG),
	CONSTRAINT CHK_ENHESA_LANG_UC CHECK (LANG = UPPER(LANG))
);

CREATE TABLE CSR.ENHESA_LANG_NAME (
	LANG		VARCHAR2(255) NOT NULL,
	NAME_LANG	VARCHAR2(255) NOT NULL,
	NAME		VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_LANG_NAME PRIMARY KEY (LANG, NAME_LANG),
	CONSTRAINT FK_ENH_LANG_NAME_LANG_1 FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_LANG_NAME_UC CHECK (LANG = UPPER(LANG))
);

CREATE TABLE CSR.ENHESA_COUNTRY (
	COUNTRY_CODE		VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_COUNTRY PRIMARY KEY (COUNTRY_CODE)
);

CREATE TABLE CSR.ENHESA_COUNTRY_NAME (
	COUNTRY_CODE	VARCHAR2(255) NOT NULL,
	LANG			VARCHAR2(255) NOT NULL,
	NAME			VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_COUNTRY_NAME PRIMARY KEY (COUNTRY_CODE),
	CONSTRAINT FK_ENH_COUNTRY_NM_COUNTRY FOREIGN KEY (COUNTRY_CODE) REFERENCES CSR.ENHESA_COUNTRY (COUNTRY_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENH_COUNTRY_NM_LANG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_COUNTRY_NAME_UC CHECK (LANG = UPPER(LANG))
);

CREATE TABLE CSR.ENHESA_COUNTRY_REGION (
	COUNTRY_CODE	VARCHAR2(255) NOT NULL,
	REGION_CODE		VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_COUNTRY_REGION PRIMARY KEY (COUNTRY_CODE, REGION_CODE),
	CONSTRAINT FK_ENH_COUNTRY_RG_COUNTRY FOREIGN KEY (COUNTRY_CODE) REFERENCES CSR.ENHESA_COUNTRY (COUNTRY_CODE) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_COUNTRY_REGION_NAME (
	COUNTRY_CODE	VARCHAR2(255) NOT NULL,
	REGION_CODE		VARCHAR2(255) NOT NULL,
	LANG			VARCHAR2(255) NOT NULL,
	NAME			VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_COUNTRY_REGION_NAME PRIMARY KEY (COUNTRY_CODE, REGION_CODE, LANG),
	CONSTRAINT FK_ENH_COU_REG_NM_ENH_COU_REG FOREIGN KEY (COUNTRY_CODE, REGION_CODE) REFERENCES CSR.ENHESA_COUNTRY_REGION (COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENH_COU_REG_NM_LANG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_CNTRY_REG_NAME_UC CHECK (LANG = UPPER(LANG))
);

CREATE TABLE CSR.ENHESA_STATUS (
	STATUS_ID		NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_STATUS PRIMARY KEY (STATUS_ID)
);

CREATE TABLE CSR.ENHESA_STATUS_NAME (
	STATUS_ID		NUMBER(10) NOT NULL,
	LANG			VARCHAR2(255) NOT NULL,
	NAME			VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_STATUS_NAME PRIMARY KEY (STATUS_ID, LANG),
	CONSTRAINT FK_ENHESA_STATUS_NAME_LANG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_STATUS_NAME_UC CHECK (LANG = UPPER(LANG))
);

CREATE TABLE CSR.ENHESA_HEADING (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,	
	HEADING_CODE	VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_HEADING PRIMARY KEY (APP_SID, PROTOCOL, HEADING_CODE),
	CONSTRAINT FK_ENHESA_HEADING_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE	
);


CREATE TABLE CSR.ENHESA_HEADING_TEXT (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,	
	HEADING_CODE	VARCHAR2(255) NOT NULL,
	LANG			VARCHAR2(255) NOT NULL,
	TITLE 			VARCHAR2(2048) NOT NULL,
	DESCRIPTION		VARCHAR2(4000),
	VERSION 		NUMBER(10) NOT NULL,
	VERSION_PUB_DTM	DATE NULL,
	CONSTRAINT PK_ENHESA_HEADING_TEXT PRIMARY KEY (APP_SID, PROTOCOL, HEADING_CODE, LANG),
	CONSTRAINT FK_ENHESA_HEAD_TXT_HEADING FOREIGN KEY (APP_SID, PROTOCOL, HEADING_CODE) REFERENCES CSR.ENHESA_HEADING (APP_SID, PROTOCOL, HEADING_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_HEAD_TXT_LANG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_HEADING_TEXT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_HEADING_TEXT_UC CHECK (LANG = UPPER(LANG))
);


CREATE TABLE CSR.ENHESA_RQMT (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,	
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	QN_CODE			VARCHAR2(255) NOT NULL,
	QN_REF			VARCHAR2(255) NOT NULL,
	HEADING_CODE	VARCHAR2(255) NOT NULL,
	COUNTRY_CODE	VARCHAR2(255) NOT NULL,
	REGION_CODE		VARCHAR2(255) NOT NULL,
	SORT_INDEX		NUMBER(10) NOT NULL,
	LINK 			VARCHAR2(1024),
	ARCHIVED		NUMBER(1) DEFAULT 0 NOT NULL,
	VERSION 		NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_RQMT PRIMARY KEY (APP_SID, PROTOCOL, QN_CODE), --not sure what else to use as PK here
	CONSTRAINT FK_ENHESA_RQMT_HEAD FOREIGN KEY (APP_SID, PROTOCOL, HEADING_CODE) REFERENCES CSR.ENHESA_HEADING (APP_SID, PROTOCOL, HEADING_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_RQMT_COUNTRY FOREIGN KEY (COUNTRY_CODE) REFERENCES CSR.ENHESA_COUNTRY (COUNTRY_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_RQMT_REGION FOREIGN KEY (COUNTRY_CODE, REGION_CODE) REFERENCES CSR.ENHESA_COUNTRY_REGION (COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE,	
	CONSTRAINT CHK_ENHESA_RQMT_ARCHIVED CHECK (ARCHIVED IN (0,1)),
	CONSTRAINT FK_ENHESA_RQMT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_RQMT_TEXT (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL			VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	QN_CODE				VARCHAR2(255) NOT NULL,
	QN					VARCHAR2(4000) NOT NULL,
	GUIDE_NOTE			CLOB NOT NULL,
	LANG 				VARCHAR2(255) NOT NULL,
	VERSION				NUMBER(10) NOT NULL,	
	VERSION_PUB_DTM		DATE NULL,
	VERSION_RSRCH_DTM	DATE NULL,
    CONSTRAINT PK_ENHESA_RQMT_TEXT PRIMARY KEY (APP_SID, PROTOCOL, QN_CODE, LANG),
    CONSTRAINT FK_ENHESA_RQMT_TEXT_RQMT FOREIGN KEY (APP_SID, PROTOCOL, QN_CODE) REFERENCES CSR.ENHESA_RQMT (APP_SID, PROTOCOL, QN_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_RQMT_TEXT_LANG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_RQMT_TEXT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_RQMT_TEXT_UC CHECK (LANG = UPPER(LANG))
);

CREATE TABLE CSR.ENHESA_RQMT_DOMAIN (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	QN_CODE			VARCHAR2(255) NOT NULL,
	DOMAIN		    VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_RQMT_DOMAIN PRIMARY KEY (APP_SID, PROTOCOL, QN_CODE, DOMAIN),
    CONSTRAINT FK_ENHESA_RQMT_DOMAIN_RQMT FOREIGN KEY (APP_SID, PROTOCOL, QN_CODE) REFERENCES CSR.ENHESA_RQMT (APP_SID, PROTOCOL, QN_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_RQMT_DOMAIN_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_RQMT_REG_CITATION (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL			VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	QN_CODE				VARCHAR2(255) NOT NULL,
	REG_ID		    	NUMBER(10) NOT NULL,
	CITATION_ID	    	NUMBER(10) NOT NULL,
	FINAL_CITATION_ID   NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_RQMT_REG_CIT PRIMARY KEY (APP_SID, PROTOCOL, QN_CODE, REG_ID),
    CONSTRAINT FK_ENHESA_RQMT_REG_CIT_RQMT FOREIGN KEY (APP_SID, PROTOCOL, QN_CODE) REFERENCES CSR.ENHESA_RQMT (APP_SID, PROTOCOL, QN_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_RQMT_REG_CIT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_RQMT_SUP_DOC (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	QN_CODE			VARCHAR2(255) NOT NULL,
	ITEM_ID		    NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_RQMT_SUP_DOC PRIMARY KEY (APP_SID, PROTOCOL, QN_CODE, ITEM_ID),
    CONSTRAINT FK_ENHESA_RQMT_SUP_DOC_RQMT FOREIGN KEY (APP_SID, PROTOCOL, QN_CODE) REFERENCES CSR.ENHESA_RQMT (APP_SID, PROTOCOL, QN_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_RQMT_SUP_DOC_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

-- Supporting docs

CREATE TABLE CSR.ENHESA_SUP_DOC (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	ITEM_ID		    NUMBER(10) NOT NULL,
	TYPE			VARCHAR2(255) NOT NULL,
	COUNTRY_CODE	VARCHAR2(255) NOT NULL,
	REGION_CODE		VARCHAR2(255) NOT NULL,
	ARCHIVED		NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_ENHESA_SUP_DOC PRIMARY KEY (APP_SID, PROTOCOL, ITEM_ID),
	CONSTRAINT FK_ENHESA_SUP_DOC_COUNTRY FOREIGN KEY (COUNTRY_CODE) REFERENCES CSR.ENHESA_COUNTRY (COUNTRY_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_SUP_DOC_REGION FOREIGN KEY (COUNTRY_CODE, REGION_CODE) REFERENCES CSR.ENHESA_COUNTRY_REGION (COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE,	
	CONSTRAINT CHK_ENHESA_SUP_DOC_ARCHIVED CHECK (ARCHIVED IN (0,1)),
	CONSTRAINT FK_ENHESA_SUP_DOC_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_SUP_DOC_ITEM_TEXT (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL			VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	ITEM_ID		    	NUMBER(10) NOT NULL,
	LANG 				VARCHAR2(255) NOT NULL,
	TITLE				VARCHAR2(4000) NOT NULL,	
	VERSION				NUMBER(10) NOT NULL,	
	VERSION_PUB_DTM		DATE NULL,
	CONSTRAINT PK_ENHESA_SUP_DOC_ITM_TEXT PRIMARY KEY (APP_SID, PROTOCOL, ITEM_ID, LANG),
	CONSTRAINT FK_ENHESA_SUP_DOC_ITM_TXT_DOC FOREIGN KEY (APP_SID, PROTOCOL, ITEM_ID) REFERENCES CSR.ENHESA_SUP_DOC (APP_SID, PROTOCOL, ITEM_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_SUP_DOC_ITM_TXT_LNG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_SUP_DOC_ITM_TXT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_SUP_DOC_ITM_TXT_UC CHECK (LANG = UPPER(LANG))
);

-- Intros

CREATE TABLE CSR.ENHESA_INTRO (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	INTRO_ID		    NUMBER(10) NOT NULL,
	COUNTRY_CODE		VARCHAR2(255) NOT NULL,
	REGION_CODE			VARCHAR2(255) NOT NULL,
	HEADING_CODE		VARCHAR2(255) NOT NULL,	
	VERSION				NUMBER(10) NOT NULL,	
	ARCHIVED			NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_ENHESA_INTRO PRIMARY KEY (APP_SID, PROTOCOL, INTRO_ID),
	CONSTRAINT FK_ENHESA_INTRO_COUNTRY FOREIGN KEY (COUNTRY_CODE) REFERENCES CSR.ENHESA_COUNTRY (COUNTRY_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_INTRO_REGION FOREIGN KEY (COUNTRY_CODE, REGION_CODE) REFERENCES CSR.ENHESA_COUNTRY_REGION (COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_INTRO_HEAD FOREIGN KEY (APP_SID, PROTOCOL, HEADING_CODE) REFERENCES CSR.ENHESA_HEADING (APP_SID, PROTOCOL, HEADING_CODE) ON DELETE CASCADE,	
	CONSTRAINT CHK_ENHESA_INTRO_ARCHIVED CHECK (ARCHIVED IN (0,1)),
	CONSTRAINT FK_ENHESA_INTRO_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_INTRO_TEXT (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL			VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	INTRO_ID	    	NUMBER(10) NOT NULL,
	LANG 				VARCHAR2(255) NOT NULL,
	DESCR				CLOB NOT NULL,	
	VERSION				NUMBER(10) NOT NULL,	
	VERSION_PUB_DTM		DATE NULL,
	CONSTRAINT PK_ENHESA_INTRO_TEXT PRIMARY KEY (APP_SID, PROTOCOL, INTRO_ID, LANG),
	CONSTRAINT FK_ENHESA_INTRO_TEXT_INTRO FOREIGN KEY (APP_SID, PROTOCOL, INTRO_ID) REFERENCES CSR.ENHESA_INTRO (APP_SID, PROTOCOL, INTRO_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_INTRO_TEXT_LANG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_INTRO_TEXT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_INTRO_TEXT_UC CHECK (LANG = UPPER(LANG))
);

-- Screening Questions

CREATE TABLE CSR.ENHESA_SCRNGQN (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL			VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	SCRNGQN_ID		    NUMBER(10) NOT NULL,
	BASE_HEADING_CODE	VARCHAR2(255) NOT NULL,	
	VERSION				NUMBER(10) NOT NULL,	
	ARCHIVED			NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_ENHESA_SCRNGQN PRIMARY KEY (APP_SID, PROTOCOL, SCRNGQN_ID),
	CONSTRAINT FK_ENHESA_SCRNGQN_HEAD FOREIGN KEY (APP_SID, PROTOCOL, BASE_HEADING_CODE) REFERENCES CSR.ENHESA_HEADING (APP_SID, PROTOCOL, HEADING_CODE) ON DELETE CASCADE,	
	CONSTRAINT CHK_ENHESA_SCRNGQN_ARCHIVED CHECK (ARCHIVED IN (0,1)),
	CONSTRAINT FK_ENHESA_SCRNGQN_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_SCRNGQN_HEADING (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL			VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	SCRNGQN_ID		    NUMBER(10) NOT NULL,
	HEADING_CODE		VARCHAR2(255) NOT NULL,	
	CONSTRAINT PK_ENHESA_SCRNGQN_HEAD PRIMARY KEY (APP_SID, PROTOCOL, SCRNGQN_ID, HEADING_CODE),
	CONSTRAINT FK_ENHESA_SCRNGQN_HEAD_SCQN FOREIGN KEY (APP_SID, PROTOCOL, SCRNGQN_ID) REFERENCES CSR.ENHESA_SCRNGQN (APP_SID, PROTOCOL, SCRNGQN_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_SCRNGQN_HEAD_HEAD FOREIGN KEY (APP_SID, PROTOCOL, HEADING_CODE) REFERENCES CSR.ENHESA_HEADING (APP_SID, PROTOCOL, HEADING_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_SCRNGQN_HEAD_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_SCRNGQN_TEXT (
	APP_SID				NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL			VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	SCRNGQN_ID		    NUMBER(10) NOT NULL,
	LANG 				VARCHAR2(255) NOT NULL,
	SCRNGQN_TITLE		VARCHAR2(4000) NOT NULL,
	VERSION				NUMBER(10) NOT NULL,	
	CONSTRAINT PK_ENHESA_SCRNGQN_TEXT PRIMARY KEY (APP_SID, PROTOCOL, SCRNGQN_ID, LANG),
	CONSTRAINT FK_ENHESA_SCRNGQN_TEXT_SCRNGQN FOREIGN KEY (APP_SID, PROTOCOL, SCRNGQN_ID) REFERENCES CSR.ENHESA_SCRNGQN (APP_SID, PROTOCOL, SCRNGQN_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_SCRNGQN_TEXT_LANG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_SCRNGQN_TEXT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_SCRNGQN_TEXT_UC CHECK (LANG = UPPER(LANG))
);

--most of the existing enhesa tables need to have the app_sid and protocol columns added
--all data already contained inside belongs to mattelehs appsid: 16101394




CREATE TABLE CSR.ENHESA_KEYWORD (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	KEYWORD_ID 		NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_KEYWORD PRIMARY KEY (APP_SID, PROTOCOL, KEYWORD_ID),
	CONSTRAINT FK_ENHESA_KEYWORD_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_KEYWORD_TEXT (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,	
	KEYWORD_ID 		NUMBER(10) NOT NULL,
	LANG			VARCHAR2(255) NOT NULL,
	MAIN		    VARCHAR2(255) NOT NULL,
	CATEGORY		VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_KEYWORD_TEXT PRIMARY KEY (APP_SID, PROTOCOL, KEYWORD_ID, LANG),
	CONSTRAINT FK_ENHESA_KEYWD_TEXT_KEYWD FOREIGN KEY (APP_SID, PROTOCOL, KEYWORD_ID) REFERENCES CSR.ENHESA_KEYWORD (APP_SID, PROTOCOL, KEYWORD_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_KEYWORD_TEXT_LANG FOREIGN KEY (LANG) REFERENCES CSR.ENHESA_LANG (LANG) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_KEYWORD_TEXT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_KEYWORD_TEXT_UC CHECK (LANG = UPPER(LANG))
);

CREATE TABLE CSR.ENHESA_REG (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,	
	REG_ID			NUMBER(10) NOT NULL,
	PARENT_REG_ID   NUMBER(10),
	COUNTRY_CODE	VARCHAR2(255) NOT NULL,
	REG_REF			VARCHAR2(255) NOT NULL,
	REF_DTM			DATE,
	LINK 			VARCHAR2(1024),
	ARCHIVED		NUMBER(1) DEFAULT 0 NOT NULL,
	VERSION 		NUMBER(10) NOT NULL,
	REG_LEVEL       NUMBER(10),
	CONSTRAINT PK_ENHESA_REG PRIMARY KEY (APP_SID, PROTOCOL, REG_ID),
	CONSTRAINT FK_ENHESA_REG_COUNTRY FOREIGN KEY (COUNTRY_CODE) REFERENCES CSR.ENHESA_COUNTRY (COUNTRY_CODE) ON DELETE CASCADE,
	CONSTRAINT CHK_ENH_REG_ARCHIVED CHECK (ARCHIVED IN (0,1)),
	CONSTRAINT FK_ENHESA_REG_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);


CREATE TABLE CSR.ENHESA_REG_HEADING (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,	
	REG_ID			NUMBER(10) NOT NULL,
	HEADING_CODE    VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_REG_HEADING PRIMARY KEY (APP_SID, PROTOCOL, REG_ID),
	CONSTRAINT FK_ENH_REG_HEAD_REG FOREIGN KEY (APP_SID, PROTOCOL, REG_ID) REFERENCES CSR.ENHESA_REG (APP_SID, PROTOCOL, REG_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENH_REG_HEAD_HEAD FOREIGN KEY (APP_SID, PROTOCOL, HEADING_CODE) REFERENCES CSR.ENHESA_HEADING (APP_SID, PROTOCOL, HEADING_CODE) ON DELETE CASCADE,	
	CONSTRAINT FK_ENH_REG_HEADING_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);


CREATE TABLE CSR.ENHESA_REG_REGION (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	REG_ID			NUMBER(10) NOT NULL,
	COUNTRY_CODE   VARCHAR2(255) NOT NULL,
	REGION_CODE    VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_REG_REGION PRIMARY KEY (APP_SID, PROTOCOL, REG_ID),
	CONSTRAINT FK_ENH_REG_REGION_REG FOREIGN KEY (APP_SID, PROTOCOL, REG_ID) REFERENCES CSR.ENHESA_REG (APP_SID, PROTOCOL, REG_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENH_REG_REGION_REGION FOREIGN KEY (COUNTRY_CODE, REGION_CODE) REFERENCES CSR.ENHESA_COUNTRY_REGION (COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENH_REG_REGION_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE	
);

CREATE TABLE CSR.ENHESA_REG_TEXT (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,	
	REG_ID			NUMBER(10) NOT NULL,
	LANG 			VARCHAR2(255) NOT NULL,
	VERSION			NUMBER(10) NOT NULL,	
	VERSION_PUB_DTM	DATE NULL,
	TITLE			VARCHAR2(4000) NOT NULL,
	CONSTRAINT PK_ENHESA_REG_TEXT PRIMARY KEY (APP_SID, PROTOCOL, REG_ID, LANG),
	CONSTRAINT FK_ENHESA_REG_TEXT_REG FOREIGN KEY (APP_SID, PROTOCOL, REG_ID) REFERENCES CSR.ENHESA_REG (APP_SID, PROTOCOL, REG_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_REG_TEXT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_REG_TEXT_UC CHECK (LANG = UPPER(LANG))
);


CREATE TABLE CSR.ENHESA_TOPIC (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	REGION_SID		NUMBER(10) DEFAULT NULL,
	TOPIC_ID		NUMBER(10) NOT NULL,
	COUNTRY_CODE	VARCHAR2(255) NOT NULL,
	STATUS_ID		NUMBER(10) NOT NULL,
	REPORT_DTM		DATE,
	ADOPTION_DTM	DATE,
	IMPORTANCE		VARCHAR2(255) NOT NULL,
	ARCHIVED		NUMBER(1) DEFAULT 0 NOT NULL,
	VERSION			NUMBER(10) DEFAULT 1 NOT NULL,
	URL				VARCHAR2(255),
	FLOW_ITEM_ID	NUMBER(10),
	CONSTRAINT PK_ENHESA_TOPIC PRIMARY KEY (APP_SID, PROTOCOL, TOPIC_ID),
	CONSTRAINT UK_ENHESA_TOPIC UNIQUE (APP_SID, PROTOCOL, TOPIC_ID, COUNTRY_CODE),
	CONSTRAINT FK_ENHESA_TOPIC_STATUS FOREIGN KEY (STATUS_ID) REFERENCES CSR.ENHESA_STATUS (STATUS_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOPIC_COUNTRY FOREIGN KEY (COUNTRY_CODE) REFERENCES CSR.ENHESA_COUNTRY (COUNTRY_CODE) ON DELETE CASCADE,
	CONSTRAINT CHK_ENH_TOP_ARCHIVED CHECK (ARCHIVED IN (0,1)),
	CONSTRAINT FK_ENHESA_TOP_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

CREATE TABLE CSR.ENHESA_TOPIC_REGION (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	TOPIC_ID		NUMBER(10) NOT NULL,
	COUNTRY_CODE	VARCHAR2(255) NOT NULL,
	REGION_CODE		VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_TOPIC_REGION PRIMARY KEY (APP_SID, PROTOCOL, TOPIC_ID, COUNTRY_CODE, REGION_CODE),
	CONSTRAINT FK_ENHESA_TOP_RG_TOP FOREIGN KEY (APP_SID, PROTOCOL, TOPIC_ID, COUNTRY_CODE) REFERENCES CSR.ENHESA_TOPIC (APP_SID, PROTOCOL, TOPIC_ID, COUNTRY_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_RG_COU_RG FOREIGN KEY (COUNTRY_CODE, REGION_CODE) REFERENCES CSR.ENHESA_COUNTRY_REGION (COUNTRY_CODE, REGION_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_REGION_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE	
);



CREATE TABLE CSR.ENHESA_TOPIC_HEADING (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	TOPIC_ID		NUMBER(10) NOT NULL,
	HEADING_CODE	VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_TOPIC_HEADING PRIMARY KEY (APP_SID, PROTOCOL, TOPIC_ID, HEADING_CODE),
	CONSTRAINT FK_ENHESA_TOP_HEAD_TOP FOREIGN KEY (APP_SID, PROTOCOL, TOPIC_ID) REFERENCES CSR.ENHESA_TOPIC (APP_SID, PROTOCOL, TOPIC_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_HEAD_HEAD FOREIGN KEY (APP_SID, PROTOCOL, HEADING_CODE) REFERENCES CSR.ENHESA_HEADING (APP_SID, PROTOCOL, HEADING_CODE) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_HEADING_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE	
);



CREATE TABLE CSR.ENHESA_TOPIC_REG (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	TOPIC_ID		NUMBER(10) NOT NULL,
	REG_ID			NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_TOPIC_REG PRIMARY KEY (APP_SID, PROTOCOL, TOPIC_ID, REG_ID),
	CONSTRAINT FK_ENHESA_TOP_REG_TOP FOREIGN KEY (APP_SID, PROTOCOL, TOPIC_ID) REFERENCES CSR.ENHESA_TOPIC (APP_SID, PROTOCOL, TOPIC_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_REG_REG FOREIGN KEY (APP_SID, PROTOCOL, REG_ID) REFERENCES CSR.ENHESA_REG (APP_SID, PROTOCOL, REG_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_REG_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);



CREATE TABLE CSR.ENHESA_TOPIC_KEYWORD (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	TOPIC_ID		NUMBER(10) NOT NULL,
	KEYWORD_ID		NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_TOPIC_KEYWD PRIMARY KEY (APP_SID, PROTOCOL, TOPIC_ID, KEYWORD_ID),
	CONSTRAINT FK_ENHESA_TOP_KEYWD_TOP FOREIGN KEY (APP_SID, PROTOCOL, TOPIC_ID) REFERENCES CSR.ENHESA_TOPIC (APP_SID, PROTOCOL, TOPIC_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_KEYWD_KEYWD FOREIGN KEY (APP_SID, PROTOCOL, KEYWORD_ID) REFERENCES CSR.ENHESA_KEYWORD (APP_SID, PROTOCOL, KEYWORD_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_KEYWD_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);


CREATE TABLE CSR.ENHESA_TOPIC_AUTH (
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL					VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	ENHESA_TOPIC_AUTH_ID   		NUMBER(10) NOT NULL,
	TOPIC_ID					NUMBER(10) NOT NULL,
	AUTHORITY_TYPE				VARCHAR2(255),
	TEL							VARCHAR2(255),
	FAX							VARCHAR2(255),
	STREET						VARCHAR2(255),
	POSTCODE					VARCHAR2(255),
	COUNTRY						VARCHAR2(255),
	EMAIL						VARCHAR2(255),
	WEB_PAGE					VARCHAR2(255),
	CONSTRAINT PK_ENHESA_TOPIC_AUTH PRIMARY KEY (APP_SID, PROTOCOL, ENHESA_TOPIC_AUTH_ID),
	CONSTRAINT UK_ENHESA_TOPIC_AUTH UNIQUE (APP_SID, PROTOCOL, TOPIC_ID),
	CONSTRAINT FK_ENHESA_TOP_AUTH_TOP FOREIGN KEY (APP_SID, PROTOCOL, TOPIC_ID) REFERENCES CSR.ENHESA_TOPIC (APP_SID, PROTOCOL, TOPIC_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_AUTH_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);


CREATE TABLE CSR.ENHESA_TOPIC_AUTH_ORG_TITLE (
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL					VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	ENHESA_TOPIC_AUTH_ID   		NUMBER(10) NOT NULL,
	LANG 						VARCHAR2(255) NOT NULL,
	NAME 						VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ENHESA_TOPIC_AUTH_ORG_TITLE PRIMARY KEY (APP_SID, PROTOCOL, ENHESA_TOPIC_AUTH_ID, LANG),
	CONSTRAINT FK_ENH_TOP_AUTH_ORG_TIT_AUTH FOREIGN KEY (APP_SID, PROTOCOL, ENHESA_TOPIC_AUTH_ID) REFERENCES CSR.ENHESA_TOPIC_AUTH (APP_SID, PROTOCOL, ENHESA_TOPIC_AUTH_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENH_TOP_AUTH_ORG_TIT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_EN_TP_AUTH_ORG_TITLE_UC CHECK (LANG = UPPER(LANG))
);



CREATE TABLE CSR.ENHESA_TOPIC_TEXT (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	TOPIC_ID		NUMBER(10) NOT NULL,
	LANG 			VARCHAR2(255) NOT NULL,
	VERSION			NUMBER(10) NOT NULL,	
	VERSION_PUB_DTM	DATE NULL,
	TITLE			VARCHAR2(4000) NOT NULL,
	ABSTRACT 		CLOB,
	ANALYSIS		CLOB,
	AFFECTED_OPS	VARCHAR2(4000),
	REG_CITATION	VARCHAR2(4000),
	BIZ_IMPACT		CLOB,
	CONSTRAINT PK_ENHESA_TOPIC_TEXT PRIMARY KEY (APP_SID, PROTOCOL, TOPIC_ID, LANG),
	CONSTRAINT FK_ENHESA_TOP_TEXT_TOP FOREIGN KEY (APP_SID, PROTOCOL, TOPIC_ID) REFERENCES CSR.ENHESA_TOPIC (APP_SID, PROTOCOL, TOPIC_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_TEXT_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE,
	CONSTRAINT CHK_ENHESA_TOPIC_TEXT_UC CHECK (LANG = UPPER(LANG))
);


CREATE TABLE CSR.ENHESA_TOPIC_ISSUE (
	APP_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL		VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	TOPIC_ID		NUMBER(10) NOT NULL,
	ISSUE_ID		NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_TOPIC_ISSUE PRIMARY KEY (APP_SID, PROTOCOL, TOPIC_ID, ISSUE_ID),
	CONSTRAINT FK_ENHESA_TOP_ISS_TOP FOREIGN KEY (APP_SID, PROTOCOL, TOPIC_ID) REFERENCES CSR.ENHESA_TOPIC (APP_SID, PROTOCOL, TOPIC_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOP_ISS_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);



CREATE TABLE CSR.ENHESA_TOPIC_SCHED_TASK (
	APP_SID					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROTOCOL				VARCHAR(255) DEFAULT SYS_CONTEXT('SECURITY','ENHESA_PROTOCOL') NOT NULL,
	TOPIC_ID				NUMBER(10) NOT NULL,
	ISSUE_SCHEDULED_TASK_ID	NUMBER(10) NOT NULL,
	CONSTRAINT PK_ENHESA_TOPIC_SCD_TSK PRIMARY KEY (APP_SID, PROTOCOL, TOPIC_ID, ISSUE_SCHEDULED_TASK_ID),
	CONSTRAINT FK_ENHESA_TOPIC_SCD_TSK_T FOREIGN KEY (APP_SID, PROTOCOL, TOPIC_ID) REFERENCES CSR.ENHESA_TOPIC (APP_SID, PROTOCOL, TOPIC_ID) ON DELETE CASCADE,
	CONSTRAINT FK_ENHESA_TOPIC_SCD_TSK_PROT FOREIGN KEY (APP_SID, PROTOCOL) REFERENCES CSR.ENHESA_PROTOCOL (APP_SID, PROTOCOL) ON DELETE CASCADE
);

-- RLS
DECLARE
	FEATURE_NOT_ENABLED EXCEPTION;
	PRAGMA EXCEPTION_INIT(FEATURE_NOT_ENABLED, -439);
	POLICY_ALREADY_EXISTS EXCEPTION;
	PRAGMA EXCEPTION_INIT(POLICY_ALREADY_EXISTS, -28101);
	TYPE T_TABS IS TABLE OF VARCHAR2(30);
	v_list T_TABS;
BEGIN
	v_list := t_tabs(
		'ENHESA_TOPIC',
		'ENHESA_TOPIC_AUTH',
		'ENHESA_TOPIC_AUTH_ORG_TITLE',
		'ENHESA_TOPIC_HEADING',
		'ENHESA_TOPIC_ISSUE',
		'ENHESA_TOPIC_KEYWORD',
		'ENHESA_TOPIC_REG',
		'ENHESA_TOPIC_REGION',
		'ENHESA_TOPIC_TEXT',
		'ENHESA_TOPIC_SCHED_TASK',
		'ENHESA_REG_REGION',
		'ENHESA_REG_HEADING',
		'ENHESA_REG_TEXT',
		'ENHESA_REG',
		'ENHESA_HEADING_TEXT',
		'ENHESA_HEADING',
		'ENHESA_KEYWORD_TEXT',
		'ENHESA_KEYWORD',
		'ENHESA_RQMT_REG_CITATION',
		'ENHESA_RQMT_DOMAIN',
		'ENHESA_RQMT_TEXT',
		'ENHESA_RQMT_SUP_DOC',
		'ENHESA_SUP_DOC_ITEM_TEXT',
		'ENHESA_INTRO_TEXT',
		'ENHESA_SCRNGQN_HEADING',		
		'ENHESA_SCRNGQN_TEXT',
		'ENHESA_RQMT',
		'ENHESA_INTRO',
		'ENHESA_SUP_DOC',
		'ENHESA_SCRNGQN',
		'ENHESA_PROTOCOL'
	);
	FOR I IN 1 .. v_list.count
	LOOP
		BEGIN
			DBMS_RLS.ADD_POLICY(
				object_schema   => 'CSR',
				object_name     => v_list(i),
				policy_name     => SUBSTR(v_list(i), 1, 23)||'_POLICY',
				function_schema => 'CSR',
				policy_function => 'appSidCheck',
				statement_types => 'select, insert, update, delete',
				update_check    => true,
				policy_type     => dbms_rls.context_sensitive );
				DBMS_OUTPUT.PUT_LINE('Policy added to '||v_list(i));
		EXCEPTION
			WHEN POLICY_ALREADY_EXISTS THEN
				DBMS_OUTPUT.PUT_LINE('Policy exists for '||v_list(i));
			WHEN FEATURE_NOT_ENABLED THEN
				DBMS_OUTPUT.PUT_LINE('RLS policies not applied for '||v_list(i)||' as feature not enabled');
		END;
	END LOOP;
END;
/
	  
CREATE OR REPLACE VIEW csr.V$ENHESA_TOPIC AS
    SELECT t.app_sid, t.topic_id, t.country_code, ecn.name country, stn.status_id, stn.name status, 
        t.report_dtm, t.adoption_dtm, t.importance, t.archived, t.version topic_version, t.url, t.region_sid,
        tt.version text_version, tt.version_pub_dtm text_version_pub_dtm, tt.title, tt.abstract, tt.analysis, tt.affected_ops,
        tt.reg_citation, tt.biz_impact, t.flow_item_id, fs.label flow_state_label, fs.state_colour, fs.lookup_key state_lookup_key, t.protocol
      FROM csr.enhesa_topic t
      JOIN csr.enhesa_topic_text tt ON t.topic_id = tt.topic_id AND tt.lang = 'en' AND t.protocol = tt.protocol
      JOIN csr.enhesa_status_name stn ON t.status_id = stn.status_id AND stn.lang = 'en'
      JOIN csr.enhesa_country_name ecn ON t.country_code = ecn.country_code AND ecn.lang = 'en'
      JOIN csr.flow_item fi ON t.flow_item_id = fi.flow_item_id AND t.app_sid = fi.app_sid
      JOIN csr.flow_state fs ON fi.current_state_id = fs.flow_state_id AND fi.app_sid = fs.app_sid
    ;

CREATE OR REPLACE VIEW csr.V$ENHESA_TOPIC_REGION AS  
    SELECT tr.topic_id, tr.country_code, cn.name country, tr.region_code, crn.name region, tr.protocol
      FROM csr.enhesa_topic_region tr 
      JOIN csr.enhesa_country_name cn ON tr.country_code = cn.country_code AND cn.lang = 'en'
      JOIN csr.enhesa_country_region_name crn ON tr.country_code = crn.country_code AND tr.region_code = crn.region_code AND crn.lang = 'en'
    ; 

CREATE OR REPLACE VIEW csr.V$ENHESA_TOPIC_KEYWORD AS
    SELECT tk.topic_id, tk.keyword_id, kt.main, kt.category, tk.protocol
      FROM csr.enhesa_topic_keyword tk 
      JOIN csr.enhesa_keyword_text kt ON tk.keyword_id = kt.keyword_id AND kt.lang = 'en' AND tk.protocol = kt.protocol
    ; 

CREATE OR REPLACE VIEW csr.V$ENHESA_TOPIC_REG AS
    SELECT tr.topic_id, tr.reg_id, r.parent_reg_id, r.reg_ref, rt.title, r.ref_dtm, r.link, r.archived, r.version reg_version,
        r.reg_level, rt.version reg_text_version, rt.version_pub_dtm reg_text_version_pub_dtm, tr.protocol
      FROM csr.enhesa_topic_reg tr
      JOIN csr.enhesa_reg r ON tr.reg_id = r.reg_id AND tr.protocol = r.protocol
      JOIN csr.enhesa_reg_text rt ON r.reg_id = rt.reg_id AND rt.lang = 'en' AND tr.protocol = rt.protocol
    ;

@../quick_survey_pkg
@../quick_survey_body

@../audit_pkg
@../audit_body

@../enhesa_pkg
@../enhesa_body

@update_tail
