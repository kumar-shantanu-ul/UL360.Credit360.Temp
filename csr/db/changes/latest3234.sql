define version=3234
define minor_version=0
define is_combined=1
@update_header

-- clean out junk in csrimp
begin
for r in (select table_name from all_tables where owner='CSRIMP' and table_name!='CSRIMP_SESSION') loop
execute immediate 'truncate table csrimp.'||r.table_name;
end loop;
delete from csrimp.csrimp_session;
commit;
end;
/
CREATE SEQUENCE CSR.COMPLIANCE_LANG_ID_SEQ;
CREATE TABLE CSR.COMPLIANCE_LANGUAGE (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	COMPLIANCE_LANGUAGE_ID		NUMBER(10, 0)	NOT NULL,
	LANG_ID						NUMBER(10, 0)	NOT NULL,
	ADDED_DTM					DATE			DEFAULT SYSDATE NOT NULL,
	ACTIVE						NUMBER(1)		DEFAULT 1 NOT NULL,
	CONSTRAINT PK_COMPLIANCE_LANGUAGE PRIMARY KEY (APP_SID, COMPLIANCE_LANGUAGE_ID),
	CONSTRAINT CK_COMPLIANCE_LANGUAGE_ACTIVE CHECK (ACTIVE IN (0,1))
);
CREATE TABLE csrimp.COMPLIANCE_LANGUAGE (
	csrimp_session_id			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','CSRIMP_SESSION_ID') NOT NULL,
	compliance_language_id		NUMBER(10, 0)	NOT NULL,
	lang_id						NUMBER(10, 0)	NOT NULL,
	added_dtm					DATE			NOT NULL,
	active						NUMBER(1)		NOT NULL,
	CONSTRAINT pk_compliance_language PRIMARY KEY (csrimp_session_id, compliance_language_id),
	CONSTRAINT ck_compliance_language_active CHECK (ACTIVE IN (0,1))
);
CREATE TABLE csrimp.map_compliance_language (
	csrimp_session_id				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','CSRIMP_SESSION_ID') NOT NULL,
	old_compliance_language_id		NUMBER(10) NOT NULL,
	new_compliance_language_id		NUMBER(10) NOT NULL,
	CONSTRAINT pk_map_compliance_language PRIMARY KEY (csrimp_session_id, old_compliance_language_id),
	CONSTRAINT uk_map_compliance_language UNIQUE (csrimp_session_id, new_compliance_language_id)
);
CREATE TABLE csr.compliance_item_description(
	app_sid						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	compliance_item_id			NUMBER(10, 0)	NOT NULL,
	compliance_language_id		NUMBER(10, 0)	NOT NULL,
	title						VARCHAR2(1024)	NOT NULL,
	summary						VARCHAR2(4000),
	details						CLOB,
	citation					VARCHAR2(4000),
	CONSTRAINT pk_compliance_item_description
		PRIMARY KEY (app_sid, compliance_item_id, compliance_language_id),
	CONSTRAINT fk_comp_item_desc_comp_lang
		FOREIGN KEY (app_sid, compliance_language_id)
		REFERENCES csr.compliance_language (app_sid, compliance_language_id)
);
CREATE INDEX csr.ix_compliance_it_compliance_la on csr.compliance_item_description (app_sid, compliance_language_id);
GRANT CREATE TABLE TO csr;
/* COMPLIANCE ITEM TITLE INDEX */
DROP INDEX csr.ix_ci_title_search;
CREATE INDEX csr.ix_ci_title_search on csr.compliance_item_description(title) indextype IS ctxsys.context
PARAMETERS('datastore ctxsys.default_datastore stoplist ctxsys.empty_stoplist');
/* COMPLIANCE ITEM SUMMARY INDEX */
DROP INDEX csr.ix_ci_summary_search;
CREATE INDEX csr.ix_ci_summary_search on csr.compliance_item_description(summary) indextype IS ctxsys.context
PARAMETERS('datastore ctxsys.default_datastore stoplist ctxsys.empty_stoplist');
/* COMPLIANCE ITEM DETAILS INDEX */
DROP INDEX csr.ix_ci_details_search;
CREATE INDEX csr.ix_ci_details_search on csr.compliance_item_description(details) indextype IS ctxsys.context
PARAMETERS('datastore ctxsys.default_datastore stoplist ctxsys.empty_stoplist');
/* COMPLIANCE ITEM CITATION INDEX */
DROP INDEX csr.ix_ci_citation_search;
CREATE INDEX csr.ix_ci_citation_search on csr.compliance_item_description(citation) indextype IS ctxsys.context
PARAMETERS('datastore ctxsys.default_datastore stoplist ctxsys.empty_stoplist');
CREATE TABLE csrimp.compliance_item_description(
	csrimp_session_id			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','CSRIMP_SESSION_ID') NOT NULL,
	compliance_item_id			NUMBER(10, 0)	NOT NULL,
	compliance_language_id		NUMBER(10, 0)	NOT NULL,
	title						VARCHAR2(1024)	NOT NULL,
	summary						VARCHAR2(4000),
	details						CLOB,
	citation					VARCHAR2(4000),
	CONSTRAINT pk_compliance_item_description 
		PRIMARY KEY (csrimp_session_id, compliance_item_id, compliance_language_id),
	CONSTRAINT fk_compliance_item_description
		FOREIGN KEY (csrimp_session_id)
		REFERENCES csrimp.csrimp_session (csrimp_session_id)
		ON DELETE CASCADE
);
CREATE TABLE CSR.COMPLIANCE_AUDIT_LOG (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPLIANCE_AUDIT_LOG_ID			NUMBER(10, 0)	NOT NULL,
	COMPLIANCE_ITEM_ID				NUMBER(10, 0)	NOT NULL,
	DATE_TIME						DATE			NOT NULL,
	RESPONSIBLE_USER				NUMBER(10, 0)	NOT NULL,
	USER_LANG_ID					NUMBER(10, 0),
	SYS_LANG_ID						NUMBER(10, 0)	NOT NULL,
	LANG_ID							NUMBER(10, 0),
	TITLE							VARCHAR2(1024)	NOT NULL, 
	SUMMARY							VARCHAR2(4000),
	DETAILS							CLOB,
	CITATION						VARCHAR2(4000),
	CONSTRAINT PK_COMPLIANCE_AUDIT_LOG PRIMARY KEY (APP_SID, COMPLIANCE_AUDIT_LOG_ID)
);

EXEC security.user_pkg.logonadmin;
BEGIN
	EXECUTE IMMEDIATE 'ALTER TABLE CSR.FLOW_ITEM_GENERATED_ALERT RENAME TO FLOW_ITEM_GEN_ALERT_ARCHIVE';

	EXECUTE IMMEDIATE 
	'CREATE TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP
		 AS (
		SELECT *
		  FROM CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE
		 WHERE processed_dtm IS NULL OR created_dtm > SYSDATE - 15
	)';
EXCEPTION
	WHEN OTHERS THEN
		RAISE;
END;
/
GRANT SELECT, INSERT, DELETE, UPDATE ON CSR.FLOW_ITEM_GEN_ALERT_TEMP TO CAMPAIGNS;
GRANT SELECT, INSERT ON CSR.FLOW_ITEM_GEN_ALERT_TEMP TO CHAIN;
GRANT SELECT, INSERT, DELETE, UPDATE ON CSR.FLOW_ITEM_GEN_ALERT_TEMP TO CMS;
GRANT INSERT ON CSR.FLOW_ITEM_GEN_ALERT_TEMP TO CSRIMP;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE DROP CONSTRAINT FK_FL_ITM_GN_ALRT_FROM_USER;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE DROP CONSTRAINT FK_FL_ITM_GN_ALRT_TO_USER;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE DROP CONSTRAINT FK_FI_GEN_ALERT_FLOW_ST_LOG;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE DROP CONSTRAINT FK_FL_ITM_GN_ALRT_TO_COL_SID;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE DROP CONSTRAINT FK_FL_ITM_GN_ALRT_FL_TR_ALRT;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE DROP CONSTRAINT UK_FLOW_ITEM_GENERATED_ALERT DROP INDEX;
DECLARE
	v_temp_exists	NUMBER;
BEGIN
	SELECT COUNT(*)
	  INTO v_temp_exists
	  FROM all_tables
	 WHERE table_name = 'FLOW_ITEM_GEN_ALERT_TEMP'
	   AND owner = 'CSR';
	
	IF v_temp_exists = 1 THEN -- if it doesn't exist, it implies that the minor has already run therefore we don't want to drop the indexes that are now linked to the real table
		EXECUTE IMMEDIATE 'DROP INDEX CSR.IX_FLOW_ITEM_GEN_TO_USER_SID';
		EXECUTE IMMEDIATE 'DROP INDEX CSR.IX_FLOW_ITEM_GEN_TO_COL_SID';
		EXECUTE IMMEDIATE 'DROP INDEX CSR.IX_FLOW_ITEM_GEN_PROC_DTM_FI';
		EXECUTE IMMEDIATE 'DROP INDEX CSR.IX_FLOW_ITEM_GEN_FROM_USER_SID';
		EXECUTE IMMEDIATE 'DROP INDEX CSR.IX_FLOW_ITEM_GEN_FLOW_TRANSITI';
		EXECUTE IMMEDIATE 'DROP INDEX CSR.IX_FI_GEN_ALERT_FLOW_ST_LOG';
	END IF;
END;
/
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_ARCHIVE 
	RENAME CONSTRAINT PK_FLOW_ITEM_GENERATED_ALERT to PK_FLOW_ITEM_GEN_ALERT_ARCHIVE;
ALTER INDEX CSR.PK_FLOW_ITEM_GENERATED_ALERT RENAME to PK_FLOW_ITEM_GEN_ALERT_ARCHIVE;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP ADD CONSTRAINT PK_FLOW_ITEM_GENERATED_ALERT PRIMARY KEY (APP_SID, FLOW_ITEM_GENERATED_ALERT_ID);
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP ADD CONSTRAINT UK_FLOW_ITEM_GENERATED_ALERT UNIQUE (APP_SID, FLOW_TRANSITION_ALERT_ID, FROM_USER_SID, TO_USER_SID, TO_COLUMN_SID, FLOW_STATE_LOG_ID);
CREATE INDEX CSR.IX_FLOW_ITEM_GEN_PROC_DTM_FI ON CSR.FLOW_ITEM_GEN_ALERT_TEMP(APP_SID, PROCESSED_DTM, FLOW_ITEM_ID)
;
CREATE INDEX CSR.IX_FLOW_ITEM_GEN_TO_COL_SID ON CSR.FLOW_ITEM_GEN_ALERT_TEMP(APP_SID, TO_COLUMN_SID)
;
CREATE INDEX CSR.IX_FI_GEN_ALERT_FLOW_ST_LOG ON CSR.FLOW_ITEM_GEN_ALERT_TEMP(APP_SID, FLOW_STATE_LOG_ID, FLOW_ITEM_ID);
CREATE INDEX CSR.IX_FLOW_ITEM_GEN_TO_USER_SID ON CSR.FLOW_ITEM_GEN_ALERT_TEMP (APP_SID, TO_USER_SID);
CREATE INDEX CSR.IX_FLOW_ITEM_GEN_FLOW_TRANSITI ON CSR.FLOW_ITEM_GEN_ALERT_TEMP (APP_SID, FLOW_TRANSITION_ALERT_ID);
CREATE INDEX CSR.IX_FLOW_ITEM_GEN_FROM_USER_SID ON CSR.FLOW_ITEM_GEN_ALERT_TEMP (APP_SID, FROM_USER_SID);
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP ADD CONSTRAINT FK_FI_GEN_ALERT_FLOW_ST_LOG
    FOREIGN KEY (APP_SID, FLOW_STATE_LOG_ID, FLOW_ITEM_ID)
    REFERENCES CSR.FLOW_STATE_LOG(APP_SID, FLOW_STATE_LOG_ID, FLOW_ITEM_ID)
;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP ADD CONSTRAINT FK_FL_ITM_GN_ALRT_FL_TR_ALRT
    FOREIGN KEY (APP_SID, FLOW_TRANSITION_ALERT_ID)
    REFERENCES CSR.FLOW_TRANSITION_ALERT(APP_SID, FLOW_TRANSITION_ALERT_ID)
;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP ADD CONSTRAINT FK_FL_ITM_GN_ALRT_FROM_USER
    FOREIGN KEY (APP_SID, FROM_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP ADD CONSTRAINT FK_FL_ITM_GN_ALRT_TO_USER
    FOREIGN KEY (APP_SID, TO_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID)
;
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP
	ADD CONSTRAINT FK_FL_ITM_GN_ALRT_TO_COL_SID FOREIGN KEY (app_sid, to_column_sid) 
	REFERENCES cms.tab_column(app_sid, column_sid);
ALTER TABLE CSR.FLOW_ITEM_GEN_ALERT_TEMP RENAME TO FLOW_ITEM_GENERATED_ALERT;

BEGIN
	dbms_scheduler.create_job (
		job_name		=> 'CSR.ARCHIVE_OLD_FL_IT_GEN_ALER',
		job_type		=> 'PLSQL_BLOCK',
		job_action		=> 'csr.flow_pkg.ArchiveOldFlowItemGenEntries;',
		job_class		=> 'low_priority_job',
		start_date		=> to_timestamp_tz('2019/03/01 00:00 +00:00','YYYY/MM/DD HH24:MI TZH:TZM'),
		repeat_interval	=> 'FREQ=DAILY;INTERVAL=1;BYDAY=SAT;', --every Saturday midnight
		enabled			=> TRUE,
		auto_drop		=> FALSE,
		comments		=> 'Archive processed flow item alert entries'
	);
END;
/


ALTER TABLE CSRIMP.SYS_TRANSLATIONS_AUDIT_LOG MODIFY APP_SID null;
ALTER TABLE CSRIMP.TPL_REPORT_TAG DROP CONSTRAINT CT_TPL_REPORT_TAG;
ALTER TABLE CSRIMP.TPL_REPORT_TAG ADD CONSTRAINT CT_TPL_REPORT_TAG CHECK (
        (TAG_TYPE IN (1,4,5,14) AND TPL_REPORT_TAG_IND_ID IS NOT NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 6 AND TPL_REPORT_TAG_EVAL_ID IS NOT NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE IN (2,3,101) AND TPL_REPORT_TAG_DATAVIEW_ID IS NOT NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 7 AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NOT NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 8 AND TPL_REP_CUST_TAG_TYPE_ID IS NOT NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 9 AND TPL_REPORT_TAG_TEXT_ID IS NOT NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = -1 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 10 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NOT NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 11 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NOT NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 102 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NOT NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 103 AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NOT NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
        OR (TAG_TYPE = 12 AND TPL_REPORT_TAG_QC_ID IS NOT NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL AND TPL_REPORT_TAG_SUGGESTION_ID IS NULL)
		OR (TAG_TYPE = 13 AND TPL_REPORT_TAG_SUGGESTION_ID IS NOT NULL AND TPL_REPORT_TAG_DATAVIEW_ID IS NULL AND TPL_REPORT_TAG_IND_ID IS NULL AND TPL_REPORT_TAG_EVAL_ID IS NULL AND TPL_REPORT_TAG_LOGGING_FORM_ID IS NULL AND TPL_REP_CUST_TAG_TYPE_ID IS NULL AND TPL_REPORT_TAG_TEXT_ID IS NULL AND TPL_REPORT_NON_COMPL_ID IS NULL AND TPL_REPORT_TAG_APP_NOTE_ID IS NULL AND TPL_REPORT_TAG_APP_MATRIX_ID IS NULL AND TPL_REPORT_TAG_REG_DATA_ID IS NULL)
    );
CREATE SEQUENCE CSR.COMPLIANCE_AUDIT_LOG_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
ALTER TABLE CSR.COMPLIANCE_AUDIT_LOG ADD CONSTRAINT FK_CAL_CI
	FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
	REFERENCES CSR.COMPLIANCE_ITEM(APP_SID, COMPLIANCE_ITEM_ID)
;
CREATE INDEX csr.ix_compliance_au_compliance_it ON csr.compliance_audit_log (app_sid, compliance_item_id);
CREATE TABLE csrimp.compliance_audit_log (
	csrimp_session_id				NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	compliance_audit_log_id			NUMBER(10, 0)	NOT NULL,
	compliance_item_id				NUMBER(10, 0)	NOT NULL,
	date_time						DATE			NOT NULL,
	responsible_user				NUMBER(10, 0)	NOT NULL,
	user_lang_id					NUMBER(10, 0),
	sys_lang_id						NUMBER(10, 0)	NOT NULL,
	lang_id							NUMBER(10, 0),
	title							VARCHAR2(1024)	NOT NULL, 
	summary							VARCHAR2(4000),
	details							CLOB,
	citation						VARCHAR2(4000),
	CONSTRAINT pk_compliance_audit_log PRIMARY KEY (csrimp_session_id, compliance_audit_log_id),
	CONSTRAINT fk_cal_ci FOREIGN KEY (csrimp_session_id, compliance_item_id)
		REFERENCES csrimp.compliance_item (csrimp_session_id, compliance_item_id)
);
CREATE TABLE csrimp.map_compliance_audit_log (
	csrimp_session_id				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	old_compliance_audit_log_id		NUMBER(10, 0)	NOT NULL,
	new_compliance_audit_log_id		NUMBER(10, 0)	NOT NULL,
	CONSTRAINT pk_compliance_audit_log_id PRIMARY KEY (csrimp_session_id, old_compliance_audit_log_id),
	CONSTRAINT uk_compliance_audit_log_id UNIQUE (csrimp_session_id, new_compliance_audit_log_id),
    CONSTRAINT fk_compliance_audit_log_id FOREIGN KEY (csrimp_session_id) REFERENCES csrimp.csrimp_session (csrimp_session_id) ON DELETE CASCADE
);


GRANT SELECT, INSERT, UPDATE ON csr.compliance_language TO csrimp;
GRANT SELECT ON csr.compliance_lang_id_seq to csrimp;
GRANT SELECT, INSERT, UPDATE, DELETE ON csrimp.compliance_language TO tool_user;
GRANT SELECT, INSERT, UPDATE, DELETE ON csrimp.map_compliance_language TO tool_user;
grant execute on csr.portal_dashboard_pkg to security;
GRANT SELECT, INSERT, UPDATE ON csr.compliance_item_description TO csrimp;
GRANT SELECT, INSERT, UPDATE, DELETE ON csrimp.compliance_item_description TO tool_user;
GRANT SELECT, INSERT, UPDATE ON csr.compliance_audit_log TO csrimp;
GRANT SELECT ON csr.compliance_audit_log_id_seq TO csrimp;
GRANT SELECT, INSERT, UPDATE, DELETE ON csrimp.compliance_audit_log TO tool_user;








EXEC security.user_pkg.logonadmin('');
INSERT INTO csr.compliance_language (app_sid, compliance_language_id , lang_id)
	 SELECT co.app_sid, csr.compliance_lang_id_seq.NEXTVAL, l.lang_id FROM csr.compliance_options co, aspen2.lang l
	  WHERE lang = 'en';
INSERT INTO csr.compliance_item_description (app_sid, compliance_item_id, compliance_language_id, title, summary, details, citation)  
	 SELECT /*+ALL_ROWS CARDINALITY(cl, 1)*/ ci.app_sid, ci.compliance_item_id, cl.compliance_language_id, ci.title, ci.summary, ci.details, ci.citation
	   FROM csr.compliance_item ci, csr.compliance_language cl
	  WHERE ci.app_sid = cl.app_sid
	    AND cl.lang_id = 53;
INSERT INTO csr.batch_job_type (batch_job_type_id, description, plugin_name, in_order, notify_address, max_retries, timeout_mins)
VALUES (89, 'Compliance item variant import', 'batch-importer', 0, 'support@credit360.com', 3, 120);
INSERT INTO csr.batched_import_type (batch_job_type_id, label, assembly)
VALUES (89, 'Compliance variant import', 'Credit360.ExportImport.Batched.Import.Importers.ComplianceVariantImporter');






@..\compliance_pkg
@..\schema_pkg
@..\audit_pkg
@..\campaigns\campaign_pkg
@..\chain\company_dedupe_pkg
@..\csr_user_pkg
@..\flow_pkg


@..\quick_survey_body
@..\quick_survey_report_body
@..\..\..\aspen2\cms\db\filter_body
@..\integration_api_body
@..\compliance_body
@..\csr_app_body
@..\enable_body
@..\schema_body
@..\csrimp\imp_body
@..\compliance_library_report_body
@..\compliance_register_report_body
@..\audit_body
@..\campaigns\campaign_body
@..\chain\card_body
@..\chain\company_dedupe_body
@..\..\..\aspen2\cms\db\tab_body
@..\csr_user_body
@..\flow_body



@update_tail
