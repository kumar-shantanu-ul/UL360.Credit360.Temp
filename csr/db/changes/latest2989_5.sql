-- Please update version.sql too -- this keeps clean builds in sync
define version=2989
define minor_version=5
@update_header

-- *** DDL ***
-- Create tables

-- Data tables
CREATE TABLE CSRIMP.AGGREGATE_IND_VAL_DETAIL (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	AGGREGATE_IND_GROUP_ID NUMBER(10,0) NOT NULL,
	DESCRIPTION VARCHAR2(4000) NOT NULL,
	DTM DATE,
	IND_SID NUMBER(10,0) NOT NULL,
	LINK_URL VARCHAR2(256),
	PERIOD_END_DTM DATE NOT NULL,
	PERIOD_START_DTM DATE NOT NULL,
	REGION_SID NUMBER(10,0) NOT NULL,
	SRC_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT FK_AGGREGATE_IND_VAL_DETAIL_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CHAIN_TPL_DELEGATION (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	TPL_DELEGATION_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_CHAIN_TPL_DELEGATION PRIMARY KEY (CSRIMP_SESSION_ID, TPL_DELEGATION_SID),
	CONSTRAINT FK_CHAIN_TPL_DELEGATION_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CUSTOMER_FLOW_ALERT_CLASS (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	FLOW_ALERT_CLASS VARCHAR2(256) NOT NULL,
	CONSTRAINT PK_CUSTOMER_FLOW_ALERT_CLASS PRIMARY KEY (CSRIMP_SESSION_ID, FLOW_ALERT_CLASS),
	CONSTRAINT FK_CUSTOME_FLOW_ALERT_CLASS_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CUSTOMER_GEO_MAP_TAB_TYPE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	GEO_MAP_TAB_TYPE_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_CUSTOMER_GEO_MAP_TAB_TYPE PRIMARY KEY (CSRIMP_SESSION_ID, GEO_MAP_TAB_TYPE_ID),
	CONSTRAINT FK_CUSTOME_GEO_MAP_TAB_TYPE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CUSTOMER_HELP_LANG (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	HELP_LANG_ID NUMBER(10,0) NOT NULL,
	IS_DEFAULT NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_CUSTOMER_HELP_LANG PRIMARY KEY (CSRIMP_SESSION_ID, HELP_LANG_ID),
	CONSTRAINT FK_CUSTOMER_HELP_LANG_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.IMG_CHART_REGION (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	IMG_CHART_SID NUMBER(10,0) NOT NULL,
	REGION_SID NUMBER(10,0) NOT NULL,
	BACKGROUND_COLOR NUMBER(10,0) NOT NULL,
	BORDER_COLOR NUMBER(10,0) NOT NULL,
	DESCRIPTION VARCHAR2(1023),
	X NUMBER(10,0) NOT NULL,
	Y NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_IMG_CHART_REGION PRIMARY KEY (CSRIMP_SESSION_ID, IMG_CHART_SID, REGION_SID),
	CONSTRAINT FK_IMG_CHART_REGION_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.IND_SET (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	IND_SET_ID NUMBER(10,0) NOT NULL,
	DISPOSAL_DTM DATE,
	NAME VARCHAR2(255) NOT NULL,
	OWNER_SID NUMBER(10,0),
	CONSTRAINT PK_IND_SET PRIMARY KEY (CSRIMP_SESSION_ID, IND_SET_ID),
	CONSTRAINT FK_IND_SET_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.IND_SET_IND (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	IND_SET_ID NUMBER(10,0) NOT NULL,
	IND_SID NUMBER(10,0) NOT NULL,
	POS NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_IND_SET_IND PRIMARY KEY (CSRIMP_SESSION_ID, IND_SET_ID, IND_SID),
	CONSTRAINT FK_IND_SET_IND_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.IND_WINDOW (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	IND_SID NUMBER(10,0) NOT NULL,
	PERIOD CHAR(1) NOT NULL,
	COMPARISON_OFFSET NUMBER(10,0) NOT NULL,
	LOWER_BRACKET NUMBER(10,4) NOT NULL,
	UPPER_BRACKET NUMBER(10,4) NOT NULL,
	CONSTRAINT PK_IND_WINDOW PRIMARY KEY (CSRIMP_SESSION_ID, IND_SID, PERIOD),
	CONSTRAINT FK_IND_WINDOW_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.ISSUE_ALERT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	ISSUE_ID NUMBER(10,0) NOT NULL,
	CSR_USER_SID NUMBER(10,0) NOT NULL,
	OVERDUE_SENT_DTM DATE,
	REMINDER_SENT_DTM DATE,
	CONSTRAINT PK_ISSUE_ALERT PRIMARY KEY (CSRIMP_SESSION_ID, ISSUE_ID, CSR_USER_SID),
	CONSTRAINT FK_ISSUE_ALERT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.ISSUE_METER_MISSING_DATA (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	ISSUE_METER_MISSING_DATA_ID NUMBER(10,0) NOT NULL,
	END_DTM DATE NOT NULL,
	REGION_SID NUMBER(10,0) NOT NULL,
	START_DTM DATE NOT NULL,
	CONSTRAINT PK_ISSUE_METER_MISSING_DATA PRIMARY KEY (CSRIMP_SESSION_ID, ISSUE_METER_MISSING_DATA_ID),
	CONSTRAINT FK_ISSUE_METER_MISSING_DATA_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.ROUTE_LOG (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	ROUTE_LOG_ID NUMBER(10,0) NOT NULL,
	CSR_USER_SID NUMBER(10,0) NOT NULL,
	DESCRIPTION CLOB,
	LOG_DATE DATE NOT NULL,
	PARAM_1 VARCHAR2(2048),
	PARAM_2 VARCHAR2(2048),
	PARAM_3 VARCHAR2(2048),
	ROUTE_ID NUMBER(10,0) NOT NULL,
	ROUTE_STEP_ID NUMBER(10,0) NOT NULL,
	SUMMARY VARCHAR2(1023) NOT NULL,
	CONSTRAINT PK_ROUTE_LOG PRIMARY KEY (CSRIMP_SESSION_ID, ROUTE_LOG_ID),
	CONSTRAINT FK_ROUTE_LOG_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.ROUTE_STEP_VOTE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	ROUTE_STEP_ID NUMBER(10,0) NOT NULL,
	USER_SID NUMBER(10,0) NOT NULL,
	DEST_FLOW_STATE_ID NUMBER(10,0),
	DEST_ROUTE_STEP_ID NUMBER(10,0),
	IS_RETURN NUMBER(1,0) NOT NULL,
	VOTE_DIRECTION NUMBER(10,0) NOT NULL,
	VOTE_DTM DATE NOT NULL,
	CONSTRAINT PK_ROUTE_STEP_VOTE PRIMARY KEY (CSRIMP_SESSION_ID, ROUTE_STEP_ID, USER_SID),
	CONSTRAINT FK_ROUTE_STEP_VOTE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.SHEET_CHANGE_REQ (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	SHEET_CHANGE_REQ_ID NUMBER(10,0) NOT NULL,
	ACTIVE_SHEET_ID NUMBER(10,0) NOT NULL,
	IS_APPROVED NUMBER(1,0),
	PROCESSED_BY_SID NUMBER(10,0),
	PROCESSED_DTM DATE,
	PROCESSED_NOTE CLOB,
	RAISED_BY_SID NUMBER(10,0) NOT NULL,
	RAISED_DTM DATE NOT NULL,
	RAISED_NOTE CLOB,
	REQ_TO_CHANGE_SHEET_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_SHEET_CHANGE_REQ PRIMARY KEY (CSRIMP_SESSION_ID, SHEET_CHANGE_REQ_ID),
	CONSTRAINT FK_SHEET_CHANGE_REQ_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.SHEET_CHANGE_REQ_ALERT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	SHEET_CHANGE_REQ_ALERT_ID NUMBER(10,0) NOT NULL,
	ACTION_TYPE VARCHAR2(1) NOT NULL,
	NOTIFY_USER_SID NUMBER(10,0) NOT NULL,
	RAISED_BY_USER_SID NUMBER(10,0) NOT NULL,
	SHEET_CHANGE_REQ_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_SHEET_CHANGE_REQ_ALERT PRIMARY KEY (CSRIMP_SESSION_ID, SHEET_CHANGE_REQ_ALERT_ID),
	CONSTRAINT FK_SHEET_CHANGE_REQ_ALERT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.SHEET_VALUE_CHANGE_FILE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	SHEET_VALUE_CHANGE_ID NUMBER(10,0) NOT NULL,
	FILE_UPLOAD_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_SHEET_VALUE_CHANGE_FILE PRIMARY KEY (CSRIMP_SESSION_ID, SHEET_VALUE_CHANGE_ID, FILE_UPLOAD_SID),
	CONSTRAINT FK_SHEET_VALUE_CHANGE_FILE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.SUPPLIER_DELEGATION (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	SUPPLIER_SID NUMBER(10,0) NOT NULL,
	TPL_DELEGATION_SID NUMBER(10,0) NOT NULL,
	DELEGATION_SID NUMBER(10,0),
	CONSTRAINT PK_SUPPLIER_DELEGATION PRIMARY KEY (CSRIMP_SESSION_ID, SUPPLIER_SID, TPL_DELEGATION_SID),
	CONSTRAINT FK_SUPPLIER_DELEGATION_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.USER_MSG_FILE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	USER_MSG_FILE_ID NUMBER(10,0) NOT NULL,
	DATA BLOB NOT NULL,
	FILENAME VARCHAR2(2000) NOT NULL,
	MIME_TYPE VARCHAR2(2000) NOT NULL,
	SHA1 RAW(20) NOT NULL,
	USER_MSG_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_USER_MSG_FILE PRIMARY KEY (CSRIMP_SESSION_ID, USER_MSG_FILE_ID),
	CONSTRAINT FK_USER_MSG_FILE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.VAL_FILE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	VAL_ID NUMBER(20,0) NOT NULL,
	FILE_UPLOAD_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_VAL_FILE PRIMARY KEY (CSRIMP_SESSION_ID, VAL_ID, FILE_UPLOAD_SID),
	CONSTRAINT FK_VAL_FILE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.VAL_NOTE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	VAL_NOTE_ID NUMBER(10,0) NOT NULL,
	ENTERED_BY_SID NUMBER(10,0) NOT NULL,
	ENTERED_DTM DATE,
	IND_SID NUMBER(10,0) NOT NULL,
	NOTE CLOB,
	PERIOD_END_DTM DATE,
	PERIOD_START_DTM DATE NOT NULL,
	REGION_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_VAL_NOTE PRIMARY KEY (CSRIMP_SESSION_ID, VAL_NOTE_ID),
	CONSTRAINT FK_VAL_NOTE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

-- Map tables
CREATE TABLE CSRIMP.MAP_IND_SET (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_IND_SET_ID NUMBER(10) NOT NULL,
	NEW_IND_SET_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_IND_SET PRIMARY KEY (CSRIMP_SESSION_ID, OLD_IND_SET_ID) USING INDEX,
	CONSTRAINT UK_MAP_IND_SET UNIQUE (CSRIMP_SESSION_ID, NEW_IND_SET_ID) USING INDEX,
	CONSTRAINT FK_MAP_IND_SET_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.MAP_ISSU_METE_MISSI_DATA (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_ISSUE_METER_MISSIN_DATA_ID NUMBER(10) NOT NULL,
	NEW_ISSUE_METER_MISSIN_DATA_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_ISSU_METE_MISSI_DATA PRIMARY KEY (CSRIMP_SESSION_ID, OLD_ISSUE_METER_MISSIN_DATA_ID) USING INDEX,
	CONSTRAINT UK_MAP_ISSU_METE_MISSI_DATA UNIQUE (CSRIMP_SESSION_ID, NEW_ISSUE_METER_MISSIN_DATA_ID) USING INDEX,
	CONSTRAINT FK_MAP_ISSU_METE_MISSI_DATA_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.MAP_ROUTE_LOG (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_ROUTE_LOG_ID NUMBER(10) NOT NULL,
	NEW_ROUTE_LOG_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_ROUTE_LOG PRIMARY KEY (CSRIMP_SESSION_ID, OLD_ROUTE_LOG_ID) USING INDEX,
	CONSTRAINT UK_MAP_ROUTE_LOG UNIQUE (CSRIMP_SESSION_ID, NEW_ROUTE_LOG_ID) USING INDEX,
	CONSTRAINT FK_MAP_ROUTE_LOG_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.MAP_SHEET_CHANGE_REQ (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_SHEET_CHANGE_REQ_ID NUMBER(10) NOT NULL,
	NEW_SHEET_CHANGE_REQ_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_SHEET_CHANGE_REQ PRIMARY KEY (CSRIMP_SESSION_ID, OLD_SHEET_CHANGE_REQ_ID) USING INDEX,
	CONSTRAINT UK_MAP_SHEET_CHANGE_REQ UNIQUE (CSRIMP_SESSION_ID, NEW_SHEET_CHANGE_REQ_ID) USING INDEX,
	CONSTRAINT FK_MAP_SHEET_CHANGE_REQ_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.MAP_SHEE_CHANG_REQ_ALERT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_SHEET_CHANGE_REQ_ALERT_ID NUMBER(10) NOT NULL,
	NEW_SHEET_CHANGE_REQ_ALERT_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_SHEE_CHANG_REQ_ALERT PRIMARY KEY (CSRIMP_SESSION_ID, OLD_SHEET_CHANGE_REQ_ALERT_ID) USING INDEX,
	CONSTRAINT UK_MAP_SHEE_CHANG_REQ_ALERT UNIQUE (CSRIMP_SESSION_ID, NEW_SHEET_CHANGE_REQ_ALERT_ID) USING INDEX,
	CONSTRAINT FK_MAP_SHEE_CHANG_REQ_ALERT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.MAP_USER_MSG_FILE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_USER_MSG_FILE_ID NUMBER(10) NOT NULL,
	NEW_USER_MSG_FILE_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_USER_MSG_FILE PRIMARY KEY (CSRIMP_SESSION_ID, OLD_USER_MSG_FILE_ID) USING INDEX,
	CONSTRAINT UK_MAP_USER_MSG_FILE UNIQUE (CSRIMP_SESSION_ID, NEW_USER_MSG_FILE_ID) USING INDEX,
	CONSTRAINT FK_MAP_USER_MSG_FILE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.MAP_VAL_NOTE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_VAL_NOTE_ID NUMBER(10) NOT NULL,
	NEW_VAL_NOTE_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_VAL_NOTE PRIMARY KEY (CSRIMP_SESSION_ID, OLD_VAL_NOTE_ID) USING INDEX,
	CONSTRAINT UK_MAP_VAL_NOTE UNIQUE (CSRIMP_SESSION_ID, NEW_VAL_NOTE_ID) USING INDEX,
	CONSTRAINT FK_MAP_VAL_NOTE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

-- Alter tables

-- was created in latest604
BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE csr.broken_pct_ownership_data';
EXCEPTION
	WHEN OTHERS THEN
		-- "table or view does not exist"
		IF SQLCODE != -942 THEN
			RAISE;
		END IF;
END;
/

-- was created in latest1856 because of a lock issue (not in create_schema)
-- data on live refers to a non-existant app sid
-- these columns are now in csr_user and the packages refer to those ones
BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE csr.csr_user_profile';
EXCEPTION
	WHEN OTHERS THEN
		-- "table or view does not exist"
		IF SQLCODE != -942 THEN
			RAISE;
		END IF;
END;
/

-- now called csrimp.customer_flow_alert_class to match csr
DROP TABLE csrimp.flow_customer_alert_class;

ALTER TABLE csr.issue DROP CONSTRAINT CHK_ISSUE_FKS;
ALTER TABLE csr.issue ADD CONSTRAINT CHK_ISSUE_FKS CHECK (
CASE WHEN ISSUE_PENDING_VAL_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_SHEET_VALUE_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_SURVEY_ANSWER_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_NON_COMPLIANCE_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_ACTION_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_ALARM_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_RAW_DATA_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_DATA_SOURCE_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_MISSING_DATA_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_SUPPLIER_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_INITIATIVE_ID IS NOT NULL THEN 1 ELSE 0 END
IN (0, 1));

-- Pending adding ISSUE_METER_MISSING_DATA to csrimp
-- ALTER TABLE csrimp.issue ADD (ISSUE_INITIATIVE_ID NUMBER(10, 0));
-- ALTER TABLE csrimp.issue ADD (ISSUE_METER_MISSING_DATA_ID NUMBER(10, 0));

ALTER TABLE csrimp.issue DROP CONSTRAINT CHK_ISSUE_FKS;
ALTER TABLE csrimp.issue ADD CONSTRAINT CHK_ISSUE_FKS CHECK (
CASE WHEN ISSUE_PENDING_VAL_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_SHEET_VALUE_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_SURVEY_ANSWER_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_NON_COMPLIANCE_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_ACTION_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_ALARM_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_RAW_DATA_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_METER_DATA_SOURCE_ID IS NOT NULL THEN 1 ELSE 0 END +
--CASE WHEN ISSUE_METER_MISSING_DATA_ID IS NOT NULL THEN 1 ELSE 0 END +
CASE WHEN ISSUE_SUPPLIER_ID IS NOT NULL THEN 1 ELSE 0 END
--CASE WHEN ISSUE_INITIATIVE_ID IS NOT NULL THEN 1 ELSE 0 END
IN (0, 1));

-- remove columns from csrimp that are not in csr
ALTER TABLE csrimp.dataview DROP COLUMN interval;
ALTER TABLE csrimp.delegation DROP COLUMN interval;
ALTER TABLE csrimp.deleg_plan DROP COLUMN interval;
ALTER TABLE csrimp.form DROP COLUMN interval;
ALTER TABLE csrimp.ind DROP COLUMN default_interval;
ALTER TABLE csrimp.ind_selection_group_member DROP COLUMN description;
ALTER TABLE csrimp.scenario DROP COLUMN interval;
ALTER TABLE csrimp.target_dashboard DROP COLUMN interval;
ALTER TABLE csrimp.tpl_report DROP COLUMN interval;
ALTER TABLE csrimp.tpl_report_non_compl DROP COLUMN interval;
ALTER TABLE csrimp.tpl_report_tag_dataview DROP COLUMN interval;
ALTER TABLE csrimp.tpl_report_tag_eval DROP COLUMN interval;
ALTER TABLE csrimp.tpl_report_tag_ind DROP COLUMN interval;
ALTER TABLE csrimp.tpl_report_tag_logging_form DROP COLUMN interval;

-- rename csrimp tables to match the csr ones
ALTER TABLE csrimp.defaul_initia_user_state RENAME TO default_initiative_user_state;
ALTER TABLE csrimp.proje_initia_period_stat RENAME TO project_initiative_period_stat;
ALTER TABLE csrimp.proj_init_metr_flow_stat RENAME TO project_init_metric_flow_state;
ALTER TABLE csrimp.workshe_column_value_map RENAME TO worksheet_column_value_map;
ALTER TABLE csrimp.workshee_value_map_value RENAME TO worksheet_value_map_value;

-- catch up missing csrimp columns
ALTER TABLE csrimp.default_initiative_user_state ADD (generate_alerts NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.aggregate_ind_group ADD (source_url VARCHAR2(1027));
ALTER TABLE csrimp.alert_template ADD (from_email VARCHAR2(255));
ALTER TABLE csrimp.alert_template ADD (from_name VARCHAR2(255));
ALTER TABLE csrimp.all_meter ADD (metering_version NUMBER(10, 0));
ALTER TABLE csrimp.all_meter ADD (lower_threshold_percentage NUMBER(10, 2));
ALTER TABLE csrimp.all_meter ADD (upper_threshold_percentage NUMBER(10, 2));
ALTER TABLE csrimp.approval_dashboard ADD (source_scenario_run_sid NUMBER(10, 0));
ALTER TABLE csrimp.attachment_history ADD (attach_name VARCHAR2(255));
ALTER TABLE csrimp.attachment_history ADD (pg_num VARCHAR2(255));
ALTER TABLE csrimp.attachment_history ADD (attach_comment CLOB);
ALTER TABLE csrimp.autocreate_user ADD (require_new_password NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.autocreate_user ADD (redirect_to_url VARCHAR2(255));
ALTER TABLE csrimp.csr_user ADD (avatar BLOB);
ALTER TABLE csrimp.csr_user ADD (last_modified_dtm DATE NOT NULL);
ALTER TABLE csrimp.csr_user ADD (last_logon_type_id NUMBER(10, 0) NOT NULL);
ALTER TABLE csrimp.csr_user ADD (avatar_sha1 RAW(20));
ALTER TABLE csrimp.csr_user ADD (avatar_mime_type VARCHAR2(2000));
ALTER TABLE csrimp.csr_user ADD (avatar_last_modified_dtm DATE);
ALTER TABLE csrimp.csr_user ADD CONSTRAINT CK_USER_AVATAR CHECK ((AVATAR IS NULL AND AVATAR_LAST_MODIFIED_DTM IS NULL AND AVATAR_SHA1 IS NULL AND AVATAR_MIME_TYPE IS NULL)
	OR (AVATAR IS NOT NULL AND AVATAR_LAST_MODIFIED_DTM IS NOT NULL AND AVATAR_SHA1 IS NOT NULL AND AVATAR_MIME_TYPE IS NOT NULL));
ALTER TABLE csrimp.dataview ADD (show_abs_variance NUMBER(1, 0));
ALTER TABLE csrimp.dataview ADD CONSTRAINT CK_DATAVIEW_SHOW_ABS_VARIANCE CHECK (SHOW_ABS_VARIANCE IN (0,1));
ALTER TABLE csrimp.dataview_history ADD (show_abs_variance NUMBER(1, 0));
ALTER TABLE csrimp.dataview_trend ADD (rounding_method NUMBER(5, 0) NOT NULL);
ALTER TABLE csrimp.dataview_trend ADD (rounding_digits NUMBER(5, 0) NOT NULL);
ALTER TABLE csrimp.dataview_trend ADD CONSTRAINT CHK_DATAVIEW_TREND_ROUNDING_ME CHECK ( ROUNDING_METHOD BETWEEN 0 AND 9 );
ALTER TABLE csrimp.dataview_trend ADD CONSTRAINT CHK_DATAVIEW_TREND_ROUNDING_DI CHECK ( ROUNDING_DIGITS BETWEEN 0 AND 99 );
ALTER TABLE csrimp.delegation_grid ADD (variance_validation_sp VARCHAR2(255));
ALTER TABLE csrimp.delegation_ind ADD (meta_role VARCHAR2(32));
ALTER TABLE csrimp.delegation_ind ADD CONSTRAINT CK_META_ROLE CHECK (META_ROLE IN('MERGED','MERGED_ON_TIME', 'DP_COMPLETE', 'TOTAL_DP'));
ALTER TABLE csrimp.delegation_region ADD (allowed_na NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.delegation_region ADD (hide_after_dtm DATE);
ALTER TABLE csrimp.delegation_region ADD (hide_inclusive NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.deleg_ind_group ADD (start_collapsed NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.deleg_plan ADD (last_applied_dtm DATE);
ALTER TABLE csrimp.flow_state ADD (move_to_flow_state_id NUMBER(10, 0));
ALTER TABLE csrimp.flow_state ADD (flow_state_nature_id NUMBER(10, 0));
ALTER TABLE csrimp.img_chart_ind ADD (font_size NUMBER(10, 0) NOT NULL);
ALTER TABLE csrimp.imp_session ADD (unmerged_dtm DATE);
ALTER TABLE csrimp.imp_val ADD (set_region_metric_val_id NUMBER(10, 0));
ALTER TABLE csrimp.measure ADD (lookup_key VARCHAR2(64));
ALTER TABLE csrimp.measure_conversion ADD (lookup_key VARCHAR2(64));
ALTER TABLE csrimp.meter_alarm_statistic ADD (all_meters NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.meter_alarm_statistic ADD (not_before_dtm DATE);
ALTER TABLE csrimp.meter_alarm_statistic ADD CHECK (ALL_METERS IN(0,1));
ALTER TABLE csrimp.meter_input ADD (is_virtual NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.meter_input ADD (value_helper VARCHAR2(256));
ALTER TABLE csrimp.meter_input ADD CONSTRAINT CHK_METER_INPUT_IS_VIRTUAL_1_0 CHECK (IS_VIRTUAL IN(0,1));
ALTER TABLE csrimp.meter_list_cache ADD (demand_number NUMBER(24, 10));
ALTER TABLE csrimp.meter_list_cache ADD (reading_count NUMBER(24, 10));
ALTER TABLE csrimp.meter_list_cache ADD (first_reading_dtm DATE);
ALTER TABLE csrimp.meter_raw_data ADD (file_name VARCHAR2(1024));
ALTER TABLE csrimp.meter_reading ADD (demand NUMBER(24, 10));
ALTER TABLE csrimp.meter_reading ADD (pm_reading_id NUMBER(10, 0));
ALTER TABLE csrimp.meter_reading ADD (is_estimate NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.meter_source_type ADD (show_invoice_reminder NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.meter_source_type ADD (invoice_reminder VARCHAR2(1024));
ALTER TABLE csrimp.region ADD (last_modified_dtm DATE NOT NULL);
ALTER TABLE csrimp.region_set_region ADD (pos NUMBER(10, 0) NOT NULL);
ALTER TABLE csrimp.region_tree ADD (last_recalc_dtm DATE);
ALTER TABLE csrimp.route_step_user ADD (overdue_sent_dtm DATE);
ALTER TABLE csrimp.route_step_user ADD (declined_sent_dtm DATE);
ALTER TABLE csrimp.scenario ADD (scrag_test_scenario NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.scenario ADD CONSTRAINT CK_SCENARIO_SCRAG_TEST CHECK (SCRAG_TEST_SCENARIO IN (0,1));
ALTER TABLE csrimp.scenario_run ADD (version NUMBER(10, 0));
ALTER TABLE csrimp.scheduled_stored_proc ADD (last_run_dtm TIMESTAMP);
ALTER TABLE csrimp.scheduled_stored_proc ADD (last_result NUMBER(10, 0));
ALTER TABLE csrimp.scheduled_stored_proc ADD (last_result_msg VARCHAR2(1024));
ALTER TABLE csrimp.scheduled_stored_proc ADD (last_result_ex CLOB);
ALTER TABLE csrimp.scheduled_stored_proc ADD (next_run_dtm TIMESTAMP NOT NULL);
ALTER TABLE csrimp.section ADD (previous_section_sid NUMBER(10, 0));
ALTER TABLE csrimp.section_flow ADD (split_question_flow_state_id NUMBER(10, 0));
ALTER TABLE csrimp.section_flow ADD (dflt_ret_aft_inc_usr_submit NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.section_module ADD (active NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.section_module ADD (start_dtm DATE);
ALTER TABLE csrimp.section_module ADD (show_flow_summary_tab NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.section_module ADD (reminder_offset NUMBER(10, 0) NOT NULL);
ALTER TABLE csrimp.section_module ADD (previous_module_sid NUMBER(10, 0));
ALTER TABLE csrimp.section_module ADD (library_sid NUMBER(10, 0));
ALTER TABLE csrimp.section_module ADD (end_dtm DATE);
ALTER TABLE csrimp.sheet ADD (automatic_approval_dtm DATE);
ALTER TABLE csrimp.sheet ADD (percent_complete NUMBER(10, 0));
ALTER TABLE csrimp.sheet ADD (is_read_only NUMBER(1, 0));
ALTER TABLE csrimp.sheet ADD (is_copied_forward NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.sheet ADD (automatic_approval_status CHAR);
ALTER TABLE csrimp.sheet ADD CONSTRAINT CK_AASTATUS CHECK (AUTOMATIC_APPROVAL_STATUS IN ('P', 'Q', 'A', 'R'));
ALTER TABLE csrimp.sheet_value ADD (is_na NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.tab ADD (is_hideable NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.tab_portlet ADD (added_by_user_sid NUMBER(10, 0));
ALTER TABLE csrimp.tab_portlet ADD (added_dtm DATE NOT NULL);
ALTER TABLE csrimp.tag ADD (exclude_from_dataview_grouping NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.tag_group ADD (applies_to_initiatives NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.tag_group_member ADD (active NUMBER(1, 0) NOT NULL);
ALTER TABLE csrimp.tag_group_member ADD CONSTRAINT CHK_TAG_GRP_MEM_ACTIVE CHECK (ACTIVE IN (0,1));

-- was in latest2013 but not in create_schema, so make sure it's there for us unlucky few
BEGIN
	EXECUTE IMMEDIATE 'ALTER TABLE CSR.DEFAULT_INITIATIVE_USER_STATE ADD (GENERATE_ALERTS NUMBER(1, 0) DEFAULT 0 NOT NULL, CHECK (GENERATE_ALERTS IN (0, 1)))';
EXCEPTION
	WHEN OTHERS THEN
		-- column being added already exists in table
		IF SQLCODE != -1430 THEN
			RAISE;
		END IF;
END;
/

-- *** Grants ***
grant execute on aspen2.tr_pkg to tool_user;

grant select, insert, update, delete on csrimp.aggregate_ind_val_detail to tool_user;
grant select, insert, update, delete on csrimp.chain_tpl_delegation to tool_user;
grant select, insert, update, delete on csrimp.customer_flow_alert_class to tool_user;
grant select, insert, update, delete on csrimp.customer_geo_map_tab_type to tool_user;
grant select, insert, update, delete on csrimp.customer_help_lang to tool_user;
grant select, insert, update, delete on csrimp.img_chart_region to tool_user;
grant select, insert, update, delete on csrimp.ind_set to tool_user;
grant select, insert, update, delete on csrimp.ind_set_ind to tool_user;
grant select, insert, update, delete on csrimp.ind_window to tool_user;
grant select, insert, update, delete on csrimp.issue_alert to tool_user;
grant select, insert, update, delete on csrimp.issue_meter_missing_data to tool_user;
grant select, insert, update, delete on csrimp.route_log to tool_user;
grant select, insert, update, delete on csrimp.route_step_vote to tool_user;
grant select, insert, update, delete on csrimp.sheet_change_req to tool_user;
grant select, insert, update, delete on csrimp.sheet_change_req_alert to tool_user;
grant select, insert, update, delete on csrimp.sheet_value_change_file to tool_user;
grant select, insert, update, delete on csrimp.supplier_delegation to tool_user;
grant select, insert, update, delete on csrimp.user_msg_file to tool_user;
grant select, insert, update, delete on csrimp.val_file to tool_user;
grant select, insert, update, delete on csrimp.val_note to tool_user;

grant select, insert, update on csr.aggregate_ind_val_detail to csrimp;
grant select, insert, update on csr.chain_tpl_delegation to csrimp;
grant select, insert, update on csr.customer_flow_alert_class to csrimp;
grant select, insert, update on csr.customer_geo_map_tab_type to csrimp;
grant select, insert, update on csr.customer_help_lang to csrimp;
grant select, insert, update on csr.img_chart_region to csrimp;
grant select, insert, update on csr.ind_set to csrimp;
grant select, insert, update on csr.ind_set_ind to csrimp;
grant select, insert, update on csr.ind_window to csrimp;
grant select, insert, update on csr.issue_alert to csrimp;
grant select, insert, update on csr.issue_meter_missing_data to csrimp;
grant select, insert, update on csr.route_log to csrimp;
grant select, insert, update on csr.route_step_vote to csrimp;
grant select, insert, update on csr.sheet_change_req to csrimp;
grant select, insert, update on csr.sheet_change_req_alert to csrimp;
grant select, insert, update on csr.sheet_value_change_file to csrimp;
grant select, insert, update on csr.supplier_delegation to csrimp;
grant select, insert, update on csr.user_msg_file to csrimp;
grant select, insert, update on csr.val_file to csrimp;
grant select, insert, update on csr.val_note to csrimp;

grant select on csr.ind_set_id_seq to csrimp;
grant select on csr.issue_meter_missing_data_seq to csrimp;
grant select on csr.route_log_id_seq to csrimp;
grant select on csr.sheet_change_req_id_seq to csrimp;
grant select on csr.sheet_change_req_alert_id_seq to csrimp;
grant select on csr.user_msg_file_id_seq to csrimp;
grant select on csr.val_note_id_seq to csrimp;

-- previously granted to web_user
grant select, insert, update, delete on csrimp.init_tab_element_layout to tool_user;
grant select, insert, update, delete on csrimp.init_create_page_el_layout to tool_user;
grant select, insert, update, delete on csrimp.initiative_header_element to tool_user;
GRANT SELECT, INSERT, UPDATE ON csrimp.custom_factor_set TO tool_user;
GRANT SELECT, INSERT, UPDATE ON csrimp.custom_factor TO tool_user;
GRANT SELECT, INSERT, UPDATE ON csrimp.emission_factor_profile TO tool_user;
GRANT SELECT, INSERT, UPDATE ON csrimp.emission_factor_profile_factor TO tool_user;

-- ** Cross schema constraints ***

-- *** Views ***
-- Please paste the content of the view and add a comment referencing the path of the create_views file which will contain your view changes.

-- *** Data changes ***
-- RLS

-- if testing csrimp changes locally, run this:
-- @..\csrimp\addSessionIdRLS
-- update_tail will run it anyway

-- Data

-- ** New package grants **

-- *** Conditional Packages ***

-- *** Packages ***

@..\csrimp\imp_pkg
@..\csrimp\imp_body
@..\schema_pkg
@..\schema_body

@update_tail
