-- Please update version.sql too -- this keeps clean builds in sync
define version=130
@update_header

VARIABLE version NUMBER
BEGIN :version := 130; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/

ALTER TABLE sheet ADD last_overdue_dtm DATE;

CREATE OR REPLACE FORCE VIEW "CSR"."SHEET_WITH_LAST_ACTION" ("SHEET_ID", "DELEGATION_SID", "START_DTM", "END_DTM", "REMINDER_DTM", "SUBMISSION_DTM", "LAST_ACTION_ID", "LAST_ACTION_FROM_USER_SID", "LAST_ACTION_DTM", "LAST_ACTION_NOTE", "LAST_ACTION_TO_DELEGATION_SID", "STATUS", "LAST_REMINDED_DTM", "LAST_OVERDUE_DTM", "IS_VISIBLE", "LAST_SHEET_HISTORY_ID", "LAST_ACTION_COLOUR") AS 
  SELECT SH.SHEET_ID, SH.DELEGATION_SID, SH.START_DTM, SH.END_DTM, SH.REMINDER_DTM, SH.SUBMISSION_DTM, SHE.SHEET_ACTION_ID LAST_ACTION_ID, SHE.FROM_USER_SID LAST_ACTION_FROM_USER_SID, SHE.ACTION_DTM LAST_ACTION_DTM, SHE.NOTE LAST_ACTION_NOTE, SHE.TO_DELEGATION_SID LAST_ACTION_TO_DELEGATION_SID, CASE WHEN SYSDATE >= submission_dtm AND SHE.SHEET_ACTION_ID IN (0,2) THEN 1 --csr_data_pkg.ACTION_WAITING, csr_data_pkg.ACTION_RETURNED
             	 WHEN SYSDATE >= reminder_dtm AND SHE.SHEET_ACTION_ID IN (0,2) THEN 2 --csr_data_pkg.ACTION_WAITING, csr_data_pkg.ACTION_RETURNED
                 ELSE 3
            END STATUS, SH.LAST_REMINDED_DTM, SH.LAST_OVERDUE_DTM, SH.IS_VISIBLE, SH.LAST_SHEET_HISTORY_ID, SHA.COLOUR LAST_ACTION_COLOUR
FROM SHEET_HISTORY SHE, SHEET SH, SHEET_ACTION SHA
WHERE SH.LAST_SHEET_HISTORY_ID = SHE.SHEET_HISTORY_ID AND SHE.SHEET_ID = SH.SHEET_ID AND SHE.SHEET_ACTION_ID = SHA.SHEET_ACTION_ID;
 
UPDATE sheet
   SET last_overdue_dtm = SYSDATE
 WHERE SYSDATE >= submission_dtm;

@..\sheet_pkg
@..\sheet_body
@..\delegation_body
@..\..\..\aspen2\tools\recompile_packages

UPDATE version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
EXIT
 

@update_tail
