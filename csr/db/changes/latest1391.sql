-- Please update version.sql too -- this keeps clean builds in sync
define version=1391
@update_header

--Create new consumption source and breakdown tables

CREATE TABLE CT.HT_CONS_SOURCE (
	HT_CONS_SOURCE_ID NUMBER(10) NOT NULL,
	HT_CONSUMPTION_TYPE_ID NUMBER(10) NOT NULL,
	HT_CONSUMPTION_CATEGORY_ID NUMBER(10) NOT NULL,
	DESCRIPTION VARCHAR2(100) NOT NULL,
	IS_REMAINDER NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_HT_CONS_SOURCE PRIMARY KEY (HT_CONS_SOURCE_ID)
);

ALTER TABLE CT.HT_CONS_SOURCE ADD CONSTRAINT CC_HT_CONS_SOURCE_IS_REMAINDER CHECK (IS_REMAINDER IN (1,0));
	
CREATE TABLE CT.HT_CONS_SOURCE_BREAKDOWN (
	APP_SID NUMBER(10) NOT NULL,
	COMPANY_SID NUMBER(10) NOT NULL,
	HT_CONSUMPTION_TYPE_ID NUMBER(10) NOT NULL,
	HT_CONSUMPTION_CATEGORY_ID NUMBER(10) NOT NULL,
	HT_CONS_SOURCE_ID NUMBER(10) NOT NULL,
	AMOUNT NUMBER(20,10) NOT NULL,
	CONSTRAINT PK_HT_CONS_SRC_BD PRIMARY KEY (APP_SID, COMPANY_SID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, HT_CONS_SOURCE_ID)
);

ALTER TABLE CT.HT_CONS_SOURCE_BREAKDOWN ADD CONSTRAINT CC_CONS_SOURCE_BREAKDOWN_AMNT CHECK (AMOUNT >= 0);

--Add FK constraints
ALTER TABLE CT.HT_CONS_SOURCE ADD CONSTRAINT HT_CONS_TYPE_HT_CONS_SOURCE 
	FOREIGN KEY (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID) REFERENCES CT.HT_CONSUMPTION_TYPE (HT_CONSUMPTION_TYPE_ID,HT_CONSUMPTION_CATEGORY_ID);

ALTER TABLE CT.HT_CONS_SOURCE_BREAKDOWN ADD CONSTRAINT HT_CONS_HT_CONS_SRC_BD 
	FOREIGN KEY (APP_SID, COMPANY_SID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID) REFERENCES CT.HT_CONSUMPTION (APP_SID,COMPANY_SID,HT_CONSUMPTION_TYPE_ID,HT_CONSUMPTION_CATEGORY_ID);

ALTER TABLE CT.HT_CONS_SOURCE_BREAKDOWN ADD CONSTRAINT HT_CONS_SOURCE_HT_CONS_SRC_BD 
	FOREIGN KEY (HT_CONS_SOURCE_ID) REFERENCES CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID);



--Add is_default to unit tables
ALTER TABLE CT.HT_CONSUMPTION_TYPE_VOL_UNIT ADD IS_DEFAULT NUMBER(1) DEFAULT 0 NOT NULL;
ALTER TABLE CT.HT_CONSUMPTION_TYPE_VOL_UNIT ADD CONSTRAINT CC_HT_CONS_TYPE_VOL_IS_DEFAULT CHECK (IS_DEFAULT IN (1,0));

ALTER TABLE CT.HT_CONSUMPTION_TYPE_MASS_UNIT ADD IS_DEFAULT NUMBER(1) DEFAULT 0 NOT NULL;
ALTER TABLE CT.HT_CONSUMPTION_TYPE_MASS_UNIT ADD CONSTRAINT CC_HT_CONS_TYP_MASS_IS_DEFAULT CHECK (IS_DEFAULT IN (1,0));

ALTER TABLE CT.HT_CONSUMPTION_TYPE_POWER_UNIT ADD IS_DEFAULT NUMBER(1) DEFAULT 0 NOT NULL;
ALTER TABLE CT.HT_CONSUMPTION_TYPE_POWER_UNIT ADD CONSTRAINT CC_HT_CONS_TYPE_PWR_IS_DEFAULT CHECK (IS_DEFAULT IN (1,0));

BEGIN
	--Add new volume units
	INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (4, 'Cubic meter', 'm3' , 1000);
	INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (5, 'Million litres', 'ML' , 1000000);
	INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (6, 'Cubic feet', 'cubic feet' , 28.3168466);

	--Insert Default Consumption Categories
	INSERT INTO CT.HT_CONSUMPTION_CATEGORY(HT_CONSUMPTION_CATEGORY_ID,DESCRIPTION)VALUES(4, 'WATER');
	INSERT INTO CT.HT_CONSUMPTION_CATEGORY(HT_CONSUMPTION_CATEGORY_ID,DESCRIPTION)VALUES(5, 'WASTE');

	--Water
	INSERT INTO CT.HT_CONSUMPTION_TYPE (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,DESCRIPTION)VALUES(1,4, 'Water consumption');
	INSERT INTO CT.HT_CONSUMPTION_TYPE (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,DESCRIPTION)VALUES(2,4, 'Wastewater production');

	--Waste
	INSERT INTO CT.HT_CONSUMPTION_TYPE (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,DESCRIPTION)VALUES(1,5, 'Non-hazardous waste ');
	INSERT INTO CT.HT_CONSUMPTION_TYPE (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,DESCRIPTION)VALUES(2,5, 'Hazardous waste ');

	-- masses -- COMMON 
	BEGIN
		INSERT INTO ct.mass_unit (mass_unit_id, description, symbol, conversion_to_kg) VALUES (1, 'Kilogram', 'kg' ,1);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.mass_unit (mass_unit_id, description, symbol, conversion_to_kg) VALUES (2, 'Pound', 'lb', 1/0.45359237);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.mass_unit (mass_unit_id, description, symbol, conversion_to_kg) VALUES (3, 'Metric tonne', 'tonne', 1000);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.mass_unit (mass_unit_id, description, symbol, conversion_to_kg) VALUES (4, 'UK ton', 'long ton', 1016.047 );
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.mass_unit (mass_unit_id, description, symbol, conversion_to_kg) VALUES (5, 'US ton', 'short ton', 907.18474 );
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;

	-- distances -- COMMON 
	BEGIN
		INSERT INTO ct.distance_unit (distance_unit_id, description, symbol, conversion_to_km) VALUES (1, 'Kilometre', 'km', 1);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.distance_unit (distance_unit_id, description, symbol, conversion_to_km) VALUES (2, 'Miles', 'Mi', 1/0.621371192);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;

	-- volumes -- COMMON 
	BEGIN
		INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (1, 'Litre', 'litre' ,1);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (2, 'US Gallon', 'gallon (US)', 1/0.264172053);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (3, 'Imperial gallon', 'gallon (imp)', 1/0.219969157);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (4, 'Cubic meter', 'm3' , 1000);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (5, 'Million litres', 'ML' , 1000000);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO ct.volume_unit (volume_unit_id, description, symbol, conversion_to_litres) VALUES (6, 'Cubic feet', 'cubic feet' , 28.3168466);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;

	--Add metric tonnes (mass_unit_id=3) for water and waste with co2_factor=0
	INSERT INTO CT.HT_CONSUMPTION_TYPE_MASS_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,MASS_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(1, 4, 3, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_MASS_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,MASS_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(2, 4, 3, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_MASS_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,MASS_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(1, 5, 3, 0, 1);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_MASS_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,MASS_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(2, 5, 3, 0, 1);

	--Add volume units for Water
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(1, 4, 1, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(1, 4, 2, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(1, 4, 4, 0, 1);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(1, 4, 5, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(1, 4, 6, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(2, 4, 1, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(2, 4, 2, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(2, 4, 4, 0, 1);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(2, 4, 5, 0, 0);
	INSERT INTO CT.HT_CONSUMPTION_TYPE_VOL_UNIT (HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID,VOLUME_UNIT_ID,CO2_FACTOR, IS_DEFAULT) VALUES(2, 4, 6, 0, 0);

	--Add ht_cons_source
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (1, 1, 4, 'Mains Water', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (2, 1, 4, 'Surface Water', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (3, 1, 4, 'Groundwater', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (4, 1, 4, 'Rainwater', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (5, 1, 4, 'Other', 1);
																													   
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (6, 2,  4, 'Domestic wastewater', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (7, 2,  4, 'Trade effluent', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (8, 2,  4, 'Surface drainage', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (9, 2,  4, 'Discharge to surface water', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (10, 2, 4, 'Evaporation', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (11, 2, 4, 'Water in product', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (12, 2, 4, 'Water in waste', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (13, 2, 4, 'Other water losses', 1);
																													   
																													   
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (14, 1, 5, 'Recycling', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (15, 1, 5, 'Incineration, including energy recovery', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (16, 1, 5, 'Incineration, excluding energy recovery', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (17, 1, 5, 'Landfill', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (18, 1, 5, 'Other', 1);
																													   
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (19, 2, 5, 'Recycling', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (20, 2, 5, 'Incineration, including energy recovery', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (21, 2, 5, 'Incineration, excluding energy recovery', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (22, 2, 5, 'Landfill', 0);
	INSERT INTO CT.HT_CONS_SOURCE (HT_CONS_SOURCE_ID, HT_CONSUMPTION_TYPE_ID, HT_CONSUMPTION_CATEGORY_ID, DESCRIPTION, IS_REMAINDER) VALUES (23, 2, 5, 'Other', 1);

	UPDATE ct.mass_unit SET symbol = 'tonne' WHERE mass_unit_id = 3;
	UPDATE ct.volume_unit SET symbol = 'gallon (US)' WHERE volume_unit_id = 2;
	UPDATE ct.volume_unit SET symbol = 'gallon (imp)' WHERE volume_unit_id = 3;
END;
/

--Snapshot of chain.card_pkg for RegisterCard and SetGroupsCards
@@latest1391_packages
	
BEGIN
	--logon as builtin admin, no app
	security.user_pkg.logonadmin;
	--Water
	chain.temp_card_pkg.RegisterCard(
		'Water - used by CarbonTrust hotspotter tool',
		'Credit360.CarbonTrust.Cards.CountryWizard',
		'/csr/site/ct/cards/water.js',
		'CarbonTrust.Cards.Water'
	);
	
	--Waste
	chain.temp_card_pkg.RegisterCard(
		'Waste - used by CarbonTrust hotspotter tool',
		'Credit360.CarbonTrust.Cards.CountryWizard',
		'/csr/site/ct/cards/waste.js',
		'CarbonTrust.Cards.Waste'
	);

	FOR r IN (	--only for hosts that support hotspotter
		SELECT DISTINCT h.host
		  FROM chain.card_group_card c
		  JOIN chain.v$chain_host h ON (c.app_sid = h.app_sid)
		 WHERE c.card_group_id = 27 
	) 
	LOOP 
		security.user_pkg.LogonAdmin(r.host);
				
		chain.temp_card_pkg.SetGroupCards('Hotspotter Country Wizard', chain.T_STRING_LIST(
			'CarbonTrust.Cards.CompanyDetails',
			'CarbonTrust.Cards.CountriesOfOperation',
			'CarbonTrust.Cards.BusinessTravel',
			'CarbonTrust.Cards.Industries',
			'CarbonTrust.Cards.Emissions', 
			'CarbonTrust.Cards.Water',
			'CarbonTrust.Cards.Waste'
		));		
	END LOOP;
	security.user_pkg.logonadmin;
END;
/

@..\ct\consumption_pkg
@..\ct\consumption_body

@update_tail
