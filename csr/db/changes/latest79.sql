-- Please update version.sql too -- this keeps clean builds in sync
define version=79
@update_header

VARIABLE version NUMBER
BEGIN :version := 79; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
	IF v_version + 1 <> :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' CANNOT BE APPLIED TO A DATABASE OF VERSION '||v_version||' =======');
	END IF;
END;
/

DELETE FROM SURVEY_RESPONSE;
DELETE FROM SURVEY;

ALTER TABLE SURVEY_RESPONSE ADD (REGION_SID NUMBER(10));


ALTER TABLE SURVEY_RESPONSE RENAME COLUMN USER_SID TO LAST_SAVED_BY_SID;

-- 
-- TABLE: SURVEY_ALLOCATION 
--

CREATE TABLE SURVEY_ALLOCATION(
    CSR_USER_SID          NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK313 PRIMARY KEY (CSR_USER_SID, SURVEY_RESPONSE_ID)
)
;


-- 
-- TABLE: SURVEY_ALLOCATION 
--

ALTER TABLE SURVEY_ALLOCATION ADD CONSTRAINT RefSURVEY_RESPONSE560 
    FOREIGN KEY (SURVEY_RESPONSE_ID)
    REFERENCES SURVEY_RESPONSE(SURVEY_RESPONSE_ID)
;

ALTER TABLE SURVEY_ALLOCATION ADD CONSTRAINT RefCSR_USER561 
    FOREIGN KEY (CSR_USER_SID)
    REFERENCES CSR_USER(CSR_USER_SID)
;



UPDATE csr.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
PROMPT
EXIT



@update_tail
