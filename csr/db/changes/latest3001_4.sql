-- Please update version.sql too -- this keeps clean builds in sync
define version=3001
define minor_version=4
@update_header

-- *** DDL ***
-- Create tables

CREATE TABLE CSRIMP.CALENDAR (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CALENDAR_SID NUMBER(10,0) NOT NULL,
	APPLIES_TO_INITIATIVES NUMBER(1,0) NOT NULL,
	APPLIES_TO_TEAMROOMS NUMBER(1,0) NOT NULL,
	DESCRIPTION VARCHAR2(255) NOT NULL,
	IS_GLOBAL NUMBER(10,0) NOT NULL,
	JS_CLASS_TYPE VARCHAR2(255) NOT NULL,
	JS_INCLUDE VARCHAR2(255) NOT NULL,
	PLUGIN_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_CALENDAR PRIMARY KEY (CSRIMP_SESSION_ID, CALENDAR_SID),
	CONSTRAINT FK_CALENDAR_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CALENDAR_EVENT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CALENDAR_EVENT_ID NUMBER(10,0) NOT NULL,
	CREATED_BY_SID NUMBER(10,0) NOT NULL,
	CREATED_DTM DATE NOT NULL,
	DESCRIPTION VARCHAR2(4000),
	END_DTM DATE,
	LOCATION VARCHAR2(1000),
	REGION_SID NUMBER(10,0),
	START_DTM DATE NOT NULL,
	CONSTRAINT PK_CALENDAR_EVENT PRIMARY KEY (CSRIMP_SESSION_ID, CALENDAR_EVENT_ID),
	CONSTRAINT FK_CALENDAR_EVENT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CALENDAR_EVENT_INVITE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CALENDAR_EVENT_ID NUMBER(10,0) NOT NULL,
	USER_SID NUMBER(10,0) NOT NULL,
	ACCEPTED_DTM DATE,
	ATTENDED NUMBER(1,0),
	DECLINED_DTM DATE,
	INVITED_BY_SID NUMBER(10,0) NOT NULL,
	INVITED_DTM DATE NOT NULL,
	CONSTRAINT PK_CALENDAR_EVENT_INVITE PRIMARY KEY (CSRIMP_SESSION_ID, CALENDAR_EVENT_ID, USER_SID),
	CONSTRAINT FK_CALENDAR_EVENT_INVITE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CALENDAR_EVENT_OWNER (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CALENDAR_EVENT_ID NUMBER(10,0) NOT NULL,
	USER_SID NUMBER(10,0) NOT NULL,
	ADDED_BY_SID NUMBER(10,0) NOT NULL,
	ADDED_DTM DATE NOT NULL,
	CONSTRAINT PK_CALENDAR_EVENT_OWNER PRIMARY KEY (CSRIMP_SESSION_ID, CALENDAR_EVENT_ID, USER_SID),
	CONSTRAINT FK_CALENDAR_EVENT_OWNER_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CLIENT_UTIL_SCRIPT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CLIENT_UTIL_SCRIPT_ID NUMBER(10,0) NOT NULL,
	DESCRIPTION VARCHAR2(2047),
	UTIL_SCRIPT_NAME VARCHAR2(255),
	UTIL_SCRIPT_SP VARCHAR2(255),
	WIKI_ARTICLE VARCHAR2(10),
	CONSTRAINT PK_CLIENT_UTIL_SCRIPT PRIMARY KEY (CSRIMP_SESSION_ID, CLIENT_UTIL_SCRIPT_ID),
	CONSTRAINT FK_CLIENT_UTIL_SCRIPT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.CLIENT_UTIL_SCRIPT_PARAM (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CLIENT_UTIL_SCRIPT_ID NUMBER(10,0) NOT NULL,
	POS NUMBER(2,0) NOT NULL,
	PARAM_HIDDEN NUMBER(1,0),
	PARAM_HINT VARCHAR2(1023),
	PARAM_NAME VARCHAR2(1023) NOT NULL,
	PARAM_VALUE VARCHAR2(1024),
	CONSTRAINT PK_CLIENT_UTIL_SCRIPT_PARAM PRIMARY KEY (CSRIMP_SESSION_ID, CLIENT_UTIL_SCRIPT_ID, POS),
	CONSTRAINT FK_CLIENT_UTIL_SCRIPT_PARAM_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.UTIL_SCRIPT_RUN_LOG (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CLIENT_UTIL_SCRIPT_ID NUMBER(10,0),
	CSR_USER_SID NUMBER(10,0) NOT NULL,
	PARAMS VARCHAR2(2048),
	RUN_DTM DATE NOT NULL,
	UTIL_SCRIPT_ID NUMBER(10,0),
	CONSTRAINT FK_UTIL_SCRIPT_RUN_LOG_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

-- Map tables
CREATE TABLE CSRIMP.MAP_CALENDAR_EVENT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_CALENDAR_EVENT_ID NUMBER(10) NOT NULL,
	NEW_CALENDAR_EVENT_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_CALENDAR_EVENT PRIMARY KEY (CSRIMP_SESSION_ID, OLD_CALENDAR_EVENT_ID) USING INDEX,
	CONSTRAINT UK_MAP_CALENDAR_EVENT UNIQUE (CSRIMP_SESSION_ID, NEW_CALENDAR_EVENT_ID) USING INDEX,
	CONSTRAINT FK_MAP_CALENDAR_EVENT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

CREATE TABLE CSRIMP.MAP_CLIENT_UTIL_SCRIPT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_CLIENT_UTIL_SCRIPT_ID NUMBER(10) NOT NULL,
	NEW_CLIENT_UTIL_SCRIPT_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_CLIENT_UTIL_SCRIPT PRIMARY KEY (CSRIMP_SESSION_ID, OLD_CLIENT_UTIL_SCRIPT_ID) USING INDEX,
	CONSTRAINT UK_MAP_CLIENT_UTIL_SCRIPT UNIQUE (CSRIMP_SESSION_ID, NEW_CLIENT_UTIL_SCRIPT_ID) USING INDEX,
	CONSTRAINT FK_MAP_CLIENT_UTIL_SCRIPT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);

-- Alter tables
BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE csr.calendar_event_type';
EXCEPTION
	WHEN OTHERS THEN
		-- 942 = table or view does not exist
		IF SQLCODE <> -942 THEN
			RAISE;
		END IF;
END;
/

BEGIN
	EXECUTE IMMEDIATE 'ALTER TABLE csrimp.ia_type_survey RENAME TO internal_audit_type_survey';
EXCEPTION
	WHEN OTHERS THEN
		-- 942 = table or view does not exist
		IF SQLCODE <> -942 THEN
			RAISE;
		END IF;
END;
/

BEGIN
	EXECUTE IMMEDIATE 'ALTER TABLE csrimp.non_com_typ_rpt_audi_typ RENAME TO non_comp_type_rpt_audit_type';
EXCEPTION
	WHEN OTHERS THEN
		-- 942 = table or view does not exist
		IF SQLCODE <> -942 THEN
			RAISE;
		END IF;
END;
/

-- *** Grants ***

grant select, insert, update, delete on csrimp.calendar to tool_user;
grant select, insert, update, delete on csrimp.calendar_event to tool_user;
grant select, insert, update, delete on csrimp.calendar_event_invite to tool_user;
grant select, insert, update, delete on csrimp.calendar_event_owner to tool_user;
grant select, insert, update, delete on csrimp.client_util_script to tool_user;
grant select, insert, update, delete on csrimp.client_util_script_param to tool_user;
grant select, insert, update, delete on csrimp.util_script_run_log to tool_user;

grant select, insert, update on csr.calendar to csrimp;
grant select, insert, update on csr.calendar_event to csrimp;
grant select, insert, update on csr.calendar_event_invite to csrimp;
grant select, insert, update on csr.calendar_event_owner to csrimp;
grant select, insert, update on csr.client_util_script to csrimp;
grant select, insert, update on csr.client_util_script_param to csrimp;
grant select, insert, update on csr.util_script_run_log to csrimp;

grant select on csr.calendar_event_id_seq to csrimp;
grant select on csr.client_util_script_id_seq to csrimp;


-- ** Cross schema constraints ***

-- *** Views ***
-- Please paste the content of the view and add a comment referencing the path of the create_views file which will contain your view changes.

-- *** Data changes ***
-- RLS

-- Data

-- ** New package grants **

-- *** Conditional Packages ***

-- *** Packages ***
@..\csrimp\imp_pkg
@..\csrimp\imp_body
@..\schema_pkg
@..\schema_body

@update_tail
