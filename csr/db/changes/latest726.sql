-- Please update version.sql too -- this keeps clean builds in sync
define version=726
@update_header

CREATE SEQUENCE csr.FLOW_STATE_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 5
    NOORDER;
    
CREATE SEQUENCE csr.FLOW_ITEM_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 5
    NOORDER;
    
CREATE SEQUENCE csr.FLOW_STATE_TRANSITION_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 5
    NOORDER;
    
CREATE SEQUENCE csr.FLOW_STATE_LOG_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 5
    NOORDER;

CREATE TABLE csr.FLOW(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_SID            NUMBER(10, 0)    NOT NULL,
    LABEL               VARCHAR2(255)    NOT NULL,
    DESCRIPTION         CLOB,
    DEFAULT_STATE_ID    NUMBER(10, 0),
    CONSTRAINT PK_FLOW PRIMARY KEY (APP_SID, FLOW_SID)
);

ALTER TABLE csr.FLOW ADD CHECK 
	(DEFAULT_STATE_ID IS NOT NULL) 
	DEFERRABLE INITIALLY DEFERRED;


CREATE TABLE csr.FLOW_ITEM(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_ITEM_ID          NUMBER(10, 0)    NOT NULL,
    FLOW_SID              NUMBER(10, 0)    NOT NULL,
    CURRENT_STATE_ID      NUMBER(10, 0)    NOT NULL,
    SURVEY_RESPONSE_ID    NUMBER(10, 0),
    CONSTRAINT PK_FLOW_ITEM PRIMARY KEY (APP_SID, FLOW_ITEM_ID)
);

CREATE TABLE csr.FLOW_STATE(
    APP_SID          NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_SID         NUMBER(10, 0)    NOT NULL,
    LABEL            VARCHAR2(255)    NOT NULL,
    LOOKUP_KEY		 VARCHAR2(255),
    ATTRIBUTES_XML	 XMLTYPE,
    IS_DELETED		 NUMBER(1)			DEFAULT 0 NOT NULL,
    CONSTRAINT CHK_FLOW_STATE_DELETED CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT PK_FLOW_STATE PRIMARY KEY (APP_SID, FLOW_STATE_ID),
    CONSTRAINT CONS_FLOW_STATE UNIQUE (APP_SID, FLOW_STATE_ID, FLOW_SID)
);

CREATE UNIQUE INDEX csr.UK_FLOW_STATE_LOOKUP ON csr.FLOW_STATE(APP_SID, FLOW_SID, NVL(UPPER(LOOKUP_KEY),'FLST'||TO_CHAR(FLOW_STATE_ID)));


CREATE TABLE csr.FLOW_STATE_LOG(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_LOG_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_ITEM_ID         NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID        NUMBER(10, 0)    NOT NULL,
    SET_BY_USER_SID      NUMBER(10, 0)    NOT NULL,
    SET_DTM              DATE             DEFAULT SYSDATE NOT NULL,
    COMMENT_TEXT         CLOB,
    CONSTRAINT PK_FLOW_STATE_LOG PRIMARY KEY (APP_SID, FLOW_STATE_LOG_ID)
);

CREATE TABLE csr.FLOW_STATE_TRANSITION(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_TRANSITION_ID    NUMBER(10, 0)    NOT NULL,
    FROM_STATE_ID               NUMBER(10, 0)    NOT NULL,
    TO_STATE_ID                 NUMBER(10, 0)    NOT NULL,
    FLOW_SID                    NUMBER(10, 0)    NOT NULL,
    VERB                        VARCHAR2(255)    NOT NULL,
    ASK_FOR_COMMENT             VARCHAR2(16)     NOT NULL,
    POS                         NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    ATTRIBUTES_XML	 			XMLTYPE,
    CHECK (ASK_FOR_COMMENT IN ('none','required','optional')),
    CONSTRAINT PK_FLOW_STATE_TRANSITION PRIMARY KEY (APP_SID, FLOW_STATE_TRANSITION_ID)
);


CREATE TABLE csr.FLOW_STATE_TRANSITION_ROLE(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    FLOW_STATE_TRANSITION_ID    NUMBER(10, 0)    NOT NULL,
    ROLE_SID                    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_FLOW_STATE_TRANS_ROLE PRIMARY KEY (APP_SID, FLOW_STATE_TRANSITION_ID, ROLE_SID)
);

CREATE UNIQUE INDEX csr.UK_FLOW_STATE_TRANSITION ON csr.FLOW_STATE_TRANSITION(APP_SID, FROM_STATE_ID, TO_STATE_ID);

ALTER TABLE csr.FLOW ADD CONSTRAINT FK_CUSTOMER_FLOW 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID);

ALTER TABLE csr.FLOW ADD CONSTRAINT FK_FLOW_STATE_FLOW 
    FOREIGN KEY (APP_SID, DEFAULT_STATE_ID)
    REFERENCES csr.FLOW_STATE(APP_SID, FLOW_STATE_ID)  DEFERRABLE INITIALLY DEFERRED;


ALTER TABLE csr.FLOW_ITEM ADD CONSTRAINT FK_CUST_FLOW_ITEM 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID);

ALTER TABLE csr.FLOW_ITEM ADD CONSTRAINT FK_FLOW_STATE_FLOW_ITEM 
    FOREIGN KEY (APP_SID, FLOW_SID, CURRENT_STATE_ID)
    REFERENCES csr.FLOW_STATE(APP_SID, FLOW_SID, FLOW_STATE_ID);

ALTER TABLE csr.FLOW_ITEM ADD CONSTRAINT FK_QS_RESPONSE_FLOW_ITEM 
    FOREIGN KEY (APP_SID, SURVEY_RESPONSE_ID)
    REFERENCES csr.QUICK_SURVEY_RESPONSE(APP_SID, SURVEY_RESPONSE_ID);


ALTER TABLE csr.FLOW_STATE ADD CONSTRAINT FK_CUSTOMER_FLOW_STATE 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID);

ALTER TABLE csr.FLOW_STATE ADD CONSTRAINT FK_FLOW_FLOW_STATE 
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES csr.FLOW(APP_SID, FLOW_SID);

ALTER TABLE csr.FLOW_STATE_LOG ADD CONSTRAINT FK_CUST_FLOW_STATE_LOG 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID);

ALTER TABLE csr.FLOW_STATE_LOG ADD CONSTRAINT FK_FLOW_ITEM_FL_STATE_LOG 
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID)
    REFERENCES csr.FLOW_ITEM(APP_SID, FLOW_ITEM_ID);

ALTER TABLE csr.FLOW_STATE_LOG ADD CONSTRAINT FK_FLOW_STATE_FL_ST_LOG 
    FOREIGN KEY (APP_SID, FLOW_STATE_ID)
    REFERENCES csr.FLOW_STATE(APP_SID, FLOW_STATE_ID);

ALTER TABLE csr.FLOW_STATE_LOG ADD CONSTRAINT FK_USER_FLOW_STATE_LOG 
    FOREIGN KEY (APP_SID, SET_BY_USER_SID)
    REFERENCES csr.CSR_USER(APP_SID, CSR_USER_SID);

ALTER TABLE csr.FLOW_STATE_TRANSITION ADD CONSTRAINT FK_CUST_FLOW_STATE_TRANS 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID);
    
ALTER TABLE csr.FLOW_STATE_TRANSITION ADD CONSTRAINT FK_FLOW_STATE_TR_FROM 
    FOREIGN KEY (APP_SID, FROM_STATE_ID, FLOW_SID)
    REFERENCES csr.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID);

ALTER TABLE csr.FLOW_STATE_TRANSITION ADD CONSTRAINT FK_FLOW_STATE_TR_TO 
    FOREIGN KEY (APP_SID, TO_STATE_ID, FLOW_SID)
    REFERENCES csr.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID);

ALTER TABLE csr.FLOW_STATE_TRANSITION_ROLE ADD CONSTRAINT FK_FL_ST_TR_FL_ST_TR_ROLE 
    FOREIGN KEY (APP_SID, FLOW_STATE_TRANSITION_ID)
    REFERENCES csr.FLOW_STATE_TRANSITION(APP_SID, FLOW_STATE_TRANSITION_ID);

ALTER TABLE csr.FLOW_STATE_TRANSITION_ROLE ADD CONSTRAINT FK_ROLE_FLOW_ST_TR_ROLE 
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES csr.ROLE(APP_SID, ROLE_SID);

DECLARE
	new_class_id 	security_pkg.T_SID_ID;
	v_act 			security_pkg.T_ACT_ID;
BEGIN
	user_pkg.LogonAuthenticated(security_pkg.SID_BUILTIN_ADMINISTRATOR, NULL, v_act);	
	BEGIN	
		class_pkg.CreateClass(v_act, NULL, 'CSRFlow', 'csr.flow_pkg', NULL, new_class_id);
	EXCEPTION
		WHEN security_pkg.DUPLICATE_OBJECT_NAME THEN
			NULL;
	END;
	user_pkg.LOGOFF(v_ACT);
end;
/


CREATE OR REPLACE TYPE csr.T_FLOW_STATE_ROW AS
	OBJECT (	
		POS					NUMBER(10), 
		ID					NUMBER(10), 
		LABEL				VARCHAR2(255),  
		LOOKUP_KEY			VARCHAR2(255),
		ATTRIBUTES_XML		XMLType
	);
/

CREATE OR REPLACE TYPE csr.T_FLOW_STATE_TABLE AS
  TABLE OF csr.T_FLOW_STATE_ROW;
/

CREATE OR REPLACE TYPE csr.T_FLOW_STATE_TRANS_ROW AS
	OBJECT (
		POS					NUMBER(10),
		ID					NUMBER(10),	
		FROM_STATE_ID		NUMBER(10),
		TO_STATE_ID			NUMBER(10),
		ASK_FOR_COMMENT		VARCHAR2(16),
		VERB				VARCHAR2(255),
		ROLE_SIDS			VARCHAR2(2000),
		ATTRIBUTES_XML		XMLType
	);
/

CREATE OR REPLACE TYPE csr.T_FLOW_STATE_TRANS_TABLE AS
  TABLE OF csr.T_FLOW_STATE_TRANS_ROW;
/



@..\flow_pkg
@..\flow_body

grant execute on csr.flow_pkg to web_user;
grant execute on csr.flow_pkg to security;

@update_tail