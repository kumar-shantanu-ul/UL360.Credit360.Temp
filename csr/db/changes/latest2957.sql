define version=2957
define minor_version=0
define is_combined=1
@update_header

-- clean out junk in csrimp
begin
for r in (select table_name from all_tables where owner='CSRIMP' and table_name!='CSRIMP_SESSION') loop
execute immediate 'truncate table csrimp.'||r.table_name;
end loop;
delete from csrimp.csrimp_session;
commit;
end;
/
CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_PROJECT_INITIATIVE_METRIC(
    INITIATIVE_METRIC_ID    NUMBER(10) NOT NULL,
    POS                     NUMBER(10),
    INPUT_DP                NUMBER(10),
    INFO_TEXT               VARCHAR2(4000)
) ON COMMIT DELETE ROWS;
CREATE GLOBAL TEMPORARY TABLE CSR.TEMP_INIT_METRIC_FLOW_STATE(
    INITIATIVE_METRIC_ID    NUMBER(10) NOT NULL,
    FLOW_STATE_ID           NUMBER(10) NOT NULL,
    MANDATORY               NUMBER(1),
    VISIBLE                 NUMBER(1)
) ON COMMIT DELETE ROWS;
CREATE TABLE CSRIMP.FLOW_STATE_GROUP(
	CSRIMP_SESSION_ID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','CSRIMP_SESSION_ID') NOT NULL,
	FLOW_STATE_GROUP_ID		NUMBER(10, 0)	NOT NULL,
	LOOKUP_KEY				VARCHAR2(256)	NOT NULL,
	LABEL					VARCHAR2(1024)	NOT NULL,
	COUNT_IND_SID			NUMBER(10, 0),
	CONSTRAINT PK_FLOW_STATE_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, FLOW_STATE_GROUP_ID),
	CONSTRAINT FK_FLOW_STATE_GROUP_IS FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE CSRIMP.FLOW_STATE_GROUP_MEMBER(
	CSRIMP_SESSION_ID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','CSRIMP_SESSION_ID') NOT NULL,
	FLOW_STATE_GROUP_ID		NUMBER(10, 0)	NOT NULL,
	FLOW_STATE_ID			NUMBER(10, 0)	NOT NULL,
	BEFORE_REPORT_DATE		NUMBER(1, 0)	NOT NULL,
	AFTER_REPORT_DATE		NUMBER(1, 0)	NOT NULL,
	CONSTRAINT CK_BEFORE_REPORT_DATE CHECK (BEFORE_REPORT_DATE IN(0,1)),
	CONSTRAINT CK_AFTER_REPORT_DATE CHECK (AFTER_REPORT_DATE IN(0,1)),
	CONSTRAINT PK_FLOW_STATE_GROUP_MEMBER PRIMARY KEY (CSRIMP_SESSION_ID, FLOW_STATE_GROUP_ID, FLOW_STATE_ID),
	CONSTRAINT FK_FLOW_STATE_GROUP_MEM_IS FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_FLOW_STATE_GROUP (
	CSRIMP_SESSION_ID					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_FLOW_STATE_GROUP_ID	NUMBER(10)	NOT NULL,
	NEW_FLOW_STATE_GROUP_ID	NUMBER(10)	NOT NULL,
	CONSTRAINT PK_MAP_FLOW_STATE_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, OLD_FLOW_STATE_GROUP_ID) USING INDEX,
	CONSTRAINT UK_MAP_FLOW_STATE_GROUP UNIQUE (CSRIMP_SESSION_ID, NEW_FLOW_STATE_GROUP_ID) USING INDEX,
    CONSTRAINT FK_MAP_FLOW_STATE_GROUP_IS FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE CHAIN.HIGG_QUESTION_OPT_CONVERSION (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_QUESTION_ID				NUMBER(10) NOT NULL,
	HIGG_QUESTION_OPTION_ID			NUMBER(10) NOT NULL,
	MEASURE_CONVERSION_ID			NUMBER(10) NOT NULL,
	CONSTRAINT PK_HIGG_Q_OPT_CONV PRIMARY KEY (APP_SID, HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID),
	CONSTRAINT FK_HIGG_Q_O_CONV_QO FOREIGN KEY (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID)
	REFERENCES CHAIN.HIGG_QUESTION_OPTION (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID)
);
CREATE TABLE CSRIMP.HIGG_QUESTION_OPT_CONVERSION (
	CSRIMP_SESSION_ID				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','CSRIMP_SESSION_ID') NOT NULL,
	HIGG_QUESTION_ID				NUMBER(10) NOT NULL,
	HIGG_QUESTION_OPTION_ID			NUMBER(10) NOT NULL,
	MEASURE_CONVERSION_ID			NUMBER(10) NOT NULL,
	CONSTRAINT PK_HIGG_Q_OPT_CONV PRIMARY KEY (CSRIMP_SESSION_ID, HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID),
    CONSTRAINT FK_HIGG_Q_OPT_CONV_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE csr.compliance_options (
    app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	quick_survey_type_id			NUMBER(10, 0) NOT NULL
);
CREATE TABLE csrimp.compliance_options (
	csrimp_session_id				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	quick_survey_type_id			NUMBER(10, 0) NOT NULL,
    CONSTRAINT compliance_options	PRIMARY KEY (csrimp_session_id),
    CONSTRAINT fk_compliance_options_is 
		FOREIGN KEY (csrimp_session_id) 
		REFERENCES csrimp.csrimp_session (csrimp_session_id) 
		ON DELETE CASCADE
);
CREATE SEQUENCE CSR.FACTOR_SET_GRP_ID_SEQ;
CREATE TABLE CSR.FACTOR_SET_GROUP(
	FACTOR_SET_GROUP_ID		NUMBER(10, 0)	 	NOT NULL,
	NAME					VARCHAR2(1000)		NOT NULL,
	CUSTOM					NUMBER(1,0)			DEFAULT 0 NOT NULL,
	CONSTRAINT PK_FACTOR_SET_GRP_ID PRIMARY KEY (FACTOR_SET_GROUP_ID),
	CONSTRAINT CK_FCTR_SET_GRP_CUSTOM CHECK (CUSTOM IN (1, 0))
);
CREATE UNIQUE INDEX CSR.UK_FACTOR_SET_GROUP_NAME ON CSR.FACTOR_SET_GROUP(LOWER(NAME));    
CREATE SEQUENCE CSR.CUSTOM_FACTOR_SET_ID_SEQ;
CREATE TABLE CSR.CUSTOM_FACTOR_SET(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CUSTOM_FACTOR_SET_ID		NUMBER(10, 0)	NOT NULL,
	NAME						VARCHAR2(1000)	NOT NULL,
	FACTOR_SET_GROUP_ID			NUMBER(10, 0),
	CONSTRAINT PK_CUSTOM_FACTOR_SET PRIMARY KEY (APP_SID, CUSTOM_FACTOR_SET_ID),
	CONSTRAINT FK_CSTM_FCTR_SET_FCTR_SET_GRP FOREIGN KEY (FACTOR_SET_GROUP_ID)
		REFERENCES CSR.FACTOR_SET_GROUP(FACTOR_SET_GROUP_ID)
);
CREATE SEQUENCE CSR.CUSTOM_FACTOR_ID_SEQ;
CREATE TABLE CSR.CUSTOM_FACTOR(
    APP_SID                      NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CUSTOM_FACTOR_ID             NUMBER(10, 0)     NOT NULL,
    CUSTOM_FACTOR_SET_ID         NUMBER(10, 0)     NOT NULL,
    FACTOR_TYPE_ID               NUMBER(10, 0)     NOT NULL,
    GAS_TYPE_ID                  NUMBER(10, 0)     NOT NULL,
    GEO_COUNTRY                  VARCHAR2(2),
    GEO_REGION                   VARCHAR2(2),
    EGRID_REF                    VARCHAR2(4),
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0)     NOT NULL,
    START_DTM                    DATE              NOT NULL,
    END_DTM                      DATE,
    VALUE                        NUMBER(24, 10)    NOT NULL,
    NOTE                         CLOB,
	CONSTRAINT FK_CUSTOM_FCTR_SET FOREIGN KEY (APP_SID, CUSTOM_FACTOR_SET_ID) REFERENCES CSR.CUSTOM_FACTOR_SET(APP_SID, CUSTOM_FACTOR_SET_ID),
	CONSTRAINT FK_CUSTOM_FCTR_GAS_TYPE FOREIGN KEY (GAS_TYPE_ID) REFERENCES CSR.GAS_TYPE(GAS_TYPE_ID),
	CONSTRAINT FK_CUSTOM_FCTR_FACTOR_TYPE FOREIGN KEY (FACTOR_TYPE_ID) REFERENCES CSR.FACTOR_TYPE(FACTOR_TYPE_ID),
	CONSTRAINT FK_CUSTOM_FCTR_MEASURE_CONV FOREIGN KEY (STD_MEASURE_CONVERSION_ID) REFERENCES CSR.STD_MEASURE_CONVERSION(STD_MEASURE_CONVERSION_ID),
	CONSTRAINT FK_CUSTOM_FCTR_EGRID FOREIGN KEY (EGRID_REF) REFERENCES CSR.EGRID(EGRID_REF),
	CONSTRAINT CK_CUSTOM_FCTR_DATES CHECK ((START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM)),
    CONSTRAINT PK_CUSTOM_FACTOR PRIMARY KEY (APP_SID, CUSTOM_FACTOR_ID)
);
CREATE SEQUENCE CSR.EMISSION_FACTOR_PROFILE_ID_SEQ;
CREATE TABLE CSR.EMISSION_FACTOR_PROFILE(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROFILE_ID 				NUMBER(10, 0)     NOT NULL,
	NAME 					VARCHAR2(1000)    NOT NULL,
	START_DTM 				DATE              NOT NULL,
	END_DTM 				DATE,
	APPLIED		 			NUMBER(1, 0)      NOT NULL,
	ACTIVE		 			NUMBER(1, 0)      NOT NULL,
	CONSTRAINT CK_EMISSION_FCTR_DATES CHECK ((START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM)),
	CONSTRAINT CK_EMISSION_FCTR_PROF_APPLIED CHECK (APPLIED IN (1, 0)),
	CONSTRAINT CK_EMISSION_FCTR_PROF_ACTIVE CHECK (ACTIVE IN (1, 0)),
    CONSTRAINT PK_EMISSION_FACTOR_PROFILE PRIMARY KEY (APP_SID, PROFILE_ID)
);
CREATE TABLE CSR.EMISSION_FACTOR_PROFILE_FACTOR( 
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROFILE_ID 				NUMBER(10, 0)     NOT NULL,
	FACTOR_TYPE_ID 			NUMBER(10, 0)     NOT NULL,
	STD_FACTOR_SET_ID		NUMBER(10, 0),
	CUSTOM_FACTOR_SET_ID	NUMBER(10, 0),
	REGION_SID 				NUMBER(10, 0),
    GEO_COUNTRY             VARCHAR2(2),
    GEO_REGION              VARCHAR2(2),
    EGRID_REF               VARCHAR2(4),
	CONSTRAINT FK_EMISSION_FCTR_FCTR_TYP_ID FOREIGN KEY (FACTOR_TYPE_ID) REFERENCES CSR.FACTOR_TYPE(FACTOR_TYPE_ID),
	CONSTRAINT FK_EMISSION_FCTR_FACTOR_SET_ID FOREIGN KEY (STD_FACTOR_SET_ID) REFERENCES CSR.STD_FACTOR_SET(STD_FACTOR_SET_ID),
	CONSTRAINT FK_EM_FCTR_CUST_FCTR_SET_ID FOREIGN KEY (APP_SID, CUSTOM_FACTOR_SET_ID) REFERENCES CSR.CUSTOM_FACTOR_SET(APP_SID, CUSTOM_FACTOR_SET_ID),
	CONSTRAINT FK_EMISSION_FCTR_EGRID FOREIGN KEY (EGRID_REF) REFERENCES CSR.EGRID(EGRID_REF),
	CONSTRAINT CK_EMISSION_FCTR_PROF_FACTOR CHECK 
		(NOT (STD_FACTOR_SET_ID IS NULL AND CUSTOM_FACTOR_SET_ID IS NULL) AND 
		 NOT (STD_FACTOR_SET_ID IS NOT NULL AND CUSTOM_FACTOR_SET_ID IS NOT NULL)),
    CONSTRAINT PK_EMISSION_FCTR_PROFILE_FCTR PRIMARY KEY (APP_SID, PROFILE_ID, FACTOR_TYPE_ID)
);
CREATE TABLE CSR.STD_FACTOR_SET_ACTIVE( 
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    STD_FACTOR_SET_ID       NUMBER(10, 0)     NOT NULL,
	CONSTRAINT FK_STD_FCTR_SET_ACTIVE_SET_ID FOREIGN KEY (STD_FACTOR_SET_ID) REFERENCES CSR.STD_FACTOR_SET(STD_FACTOR_SET_ID),
	CONSTRAINT PK_STD_FACTOR_SET_ACTIVE PRIMARY KEY (APP_SID, STD_FACTOR_SET_ID)
);
CREATE TABLE CSRIMP.CUSTOM_FACTOR_SET(
    CSRIMP_SESSION_ID       NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
    CUSTOM_FACTOR_SET_ID    NUMBER(10, 0)     NOT NULL,
    NAME                    VARCHAR2(1000)    NOT NULL,
	FACTOR_SET_GROUP_ID		NUMBER(10, 0),
    CONSTRAINT PK_CUSTOM_FACTOR_SET PRIMARY KEY (CSRIMP_SESSION_ID, CUSTOM_FACTOR_SET_ID),
    CONSTRAINT FK_CUSTOM_FACTOR_SET_IS FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE CSRIMP.CUSTOM_FACTOR(
    CSRIMP_SESSION_ID            NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
    CUSTOM_FACTOR_ID             NUMBER(10, 0)     NOT NULL,
    CUSTOM_FACTOR_SET_ID         NUMBER(10, 0)     NOT NULL,
    FACTOR_TYPE_ID               NUMBER(10, 0)     NOT NULL,
    GAS_TYPE_ID                  NUMBER(10, 0)     NOT NULL,
    GEO_COUNTRY                  VARCHAR2(2),
    GEO_REGION                   VARCHAR2(2),
    EGRID_REF                    VARCHAR2(4),
    STD_MEASURE_CONVERSION_ID    NUMBER(10, 0)     NOT NULL,
    START_DTM                    DATE              NOT NULL,
    END_DTM                      DATE,
    VALUE                        NUMBER(24, 10)    NOT NULL,
    NOTE                         CLOB,
	CONSTRAINT CK_CUSTOM_FCTR_DATES CHECK ((START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM)),
    CONSTRAINT PK_CUSTOM_FACTOR PRIMARY KEY (CSRIMP_SESSION_ID, CUSTOM_FACTOR_ID),
    CONSTRAINT FK_CUSTOM_FACTOR_IS FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE CSRIMP.EMISSION_FACTOR_PROFILE(
    CSRIMP_SESSION_ID       NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROFILE_ID 				NUMBER(10, 0)     NOT NULL,
	NAME 					VARCHAR2(1000)    NOT NULL,
	START_DTM 				DATE              NOT NULL,
	END_DTM 				DATE,
	APPLIED		 			NUMBER(1, 0)      NOT NULL,
	ACTIVE		 			NUMBER(1, 0)      NOT NULL,
	CONSTRAINT CK_EMISSION_FCTR_DATES CHECK ((START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM)),
	CONSTRAINT CK_EMISSION_FCTR_PROF_APPLIED CHECK (APPLIED IN (1, 0)),
	CONSTRAINT CK_EMISSION_FCTR_PROF_ACTIVE CHECK (ACTIVE IN (1, 0)),
    CONSTRAINT PK_EMISSION_FACTOR_PROFILE PRIMARY KEY (CSRIMP_SESSION_ID, PROFILE_ID),
    CONSTRAINT FK_EMISSION_FACTOR_PROFILE_IS FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE CSRIMP.EMISSION_FACTOR_PROFILE_FACTOR( 
    CSRIMP_SESSION_ID       NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROFILE_ID 				NUMBER(10, 0)     NOT NULL,
	FACTOR_TYPE_ID 			NUMBER(10, 0)     NOT NULL,
	STD_FACTOR_SET_ID		NUMBER(10, 0),
	CUSTOM_FACTOR_SET_ID	NUMBER(10, 0),
	REGION_SID 				NUMBER(10, 0),
    GEO_COUNTRY             VARCHAR2(2),
    GEO_REGION              VARCHAR2(2),
    EGRID_REF               VARCHAR2(4),
	CONSTRAINT CK_EMISSION_FCTR_PROF_FACTOR CHECK 
		(NOT (STD_FACTOR_SET_ID IS NULL AND CUSTOM_FACTOR_SET_ID IS NULL) AND 
		 NOT (STD_FACTOR_SET_ID IS NOT NULL AND CUSTOM_FACTOR_SET_ID IS NOT NULL)),
    CONSTRAINT PK_EMISSION_FCTR_PROFILE_FCTR PRIMARY KEY (CSRIMP_SESSION_ID, PROFILE_ID, FACTOR_TYPE_ID),
    CONSTRAINT FK_EMSSN_FCTR_PRFLE_FCTR_IS FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE csr.init_tab_element_layout (
	app_sid				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	element_id			NUMBER(10) NOT NULL,
	plugin_id			NUMBER(10) NOT NULL,
	tag_group_id		NUMBER(10),
	xml_field_id		VARCHAR2(255),
	pos					NUMBER(10) NOT NULL,
	CONSTRAINT pk_initiative_tab_el_layout PRIMARY KEY (app_sid, element_id),
	CONSTRAINT chk_init_tab_layt_types CHECK ((xml_field_id IS NULL AND tag_group_id IS NULL) OR (xml_field_id IS NOT NULL AND tag_group_id IS NULL) OR (xml_field_id IS NULL AND tag_group_id IS NOT NULL)),
	CONSTRAINT fk_initiative_tab_layout_cust FOREIGN KEY (app_sid) REFERENCES csr.customer (app_sid),
	CONSTRAINT fk_init_tab_layt_tag_grp FOREIGN KEY (app_sid, tag_group_id) REFERENCES csr.tag_group (app_sid, tag_group_id),
	CONSTRAINT fk_init_tab_layt_plugin FOREIGN KEY (plugin_id) REFERENCES csr.plugin (plugin_id)
);
CREATE UNIQUE INDEX csr.idx_init_tab_layout_tag_grp_id ON csr.init_tab_element_layout (
	app_sid, NVL(TO_CHAR(tag_group_id), element_id)
);
CREATE UNIQUE INDEX csr.idx_init_tab_layout_xml_fld_id ON csr.init_tab_element_layout (
	app_sid, NVL(TO_CHAR(xml_field_id), element_id)
);
CREATE SEQUENCE csr.initiative_tab_element_id_seq 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 5
    NOORDER
;
CREATE TABLE csr.init_create_page_el_layout (
	app_sid				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	element_id			VARCHAR2(255) NOT NULL,
	tag_group_id		NUMBER(10),
	xml_field_id		VARCHAR2(255),
	section_id			VARCHAR2(255) NOT NULL,
	pos					NUMBER(10) NOT NULL,
	CONSTRAINT pk_initiative_el_layout PRIMARY KEY (app_sid, element_id),
	CONSTRAINT chk_init_el_layt_types CHECK ((xml_field_id IS NULL AND tag_group_id IS NULL) OR (xml_field_id IS NOT NULL AND tag_group_id IS NULL) OR (xml_field_id IS NULL AND tag_group_id IS NOT NULL)),
	CONSTRAINT fk_initiative_el_layout_cust FOREIGN KEY (app_sid) REFERENCES csr.customer (app_sid),
	CONSTRAINT fk_init_el_layt_tag_grp FOREIGN KEY (app_sid, tag_group_id) REFERENCES csr.tag_group (app_sid, tag_group_id)
);
CREATE UNIQUE INDEX csr.idx_init_el_layout_tag_grp_id ON csr.init_create_page_el_layout (
	app_sid, NVL(TO_CHAR(tag_group_id), element_id)
);
CREATE SEQUENCE csr.init_create_page_el_id_seq
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 5
    NOORDER
;
CREATE SEQUENCE csr.init_header_element_id_seq
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    NOCACHE
    NOORDER
;
CREATE TABLE csr.initiative_header_element (
	app_sid							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	initiative_header_element_id	NUMBER(10) NOT NULL,
	pos								NUMBER(10) NOT NULL,
	col								NUMBER(10) NOT NULL,
	initiative_metric_id			NUMBER(10),
	tag_group_id					NUMBER(10),
	init_header_core_element_id		NUMBER(10),
	CONSTRAINT pk_initiative_header_element PRIMARY KEY (app_sid, initiative_header_element_id),
	CONSTRAINT fk_init_header_el_init_metric FOREIGN KEY (app_sid, initiative_metric_id)
		REFERENCES csr.initiative_metric (app_sid, initiative_metric_id),
	CONSTRAINT fk_init_header_el_tag_grp FOREIGN KEY (app_sid, tag_group_id)
		REFERENCES csr.tag_group (app_sid, tag_group_id),
	CONSTRAINT chk_initiative_header_element
		CHECK ((initiative_metric_id IS NOT NULL AND tag_group_id IS NULL AND init_header_core_element_id IS NULL) OR 
				(initiative_metric_id IS NULL AND tag_group_id IS NOT NULL AND init_header_core_element_id IS NULL) OR
				(initiative_metric_id IS NULL AND tag_group_id IS NULL AND init_header_core_element_id IS NOT NULL))
);
CREATE TABLE csrimp.initiative_header_element (
    csrimp_session_id				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	initiative_header_element_id	NUMBER(10) NOT NULL,
	pos								NUMBER(10) NOT NULL,
	col								NUMBER(10) NOT NULL,
	initiative_metric_id			NUMBER(10),
	tag_group_id					NUMBER(10),
	init_header_core_element_id		NUMBER(10),
	CONSTRAINT pk_initiative_header_element PRIMARY KEY (csrimp_session_id, initiative_header_element_id),
	CONSTRAINT chk_initiative_header_element
		CHECK ((initiative_metric_id IS NOT NULL AND tag_group_id IS NULL AND init_header_core_element_id IS NULL) OR 
				(initiative_metric_id IS NULL AND tag_group_id IS NOT NULL AND init_header_core_element_id IS NULL) OR
				(initiative_metric_id IS NULL AND tag_group_id IS NULL AND init_header_core_element_id IS NOT NULL)),
	CONSTRAINT fk_initiative_header_el_is FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE csrimp.map_initiative_header_element (
	csrimp_session_id				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	old_init_header_element_id		NUMBER(10)	NOT NULL,
	new_init_header_element_id		NUMBER(10)	NOT NULL,
	CONSTRAINT pk_map_init_header_element primary key (csrimp_session_id, old_init_header_element_id) USING INDEX,
	CONSTRAINT uk_map_init_header_element unique (csrimp_session_id, new_init_header_element_id) USING INDEX,
    CONSTRAINT fk_map_init_header_element_is FOREIGN KEY
    	(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
    	ON DELETE CASCADE
);
CREATE TABLE csrimp.init_tab_element_layout (
	csrimp_session_id	NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','CSRIMP_SESSION_ID') NOT NULL,
	element_id			NUMBER(10) NOT NULL,
	plugin_id			NUMBER(10) NOT NULL,
	tag_group_id		NUMBER(10),
	xml_field_id		VARCHAR2(255),
	pos					NUMBER(10) NOT NULL,
	CONSTRAINT pk_initiative_tab_el_layout PRIMARY KEY (csrimp_session_id, element_id),
	CONSTRAINT chk_init_tab_layt_types CHECK ((xml_field_id IS NULL AND tag_group_id IS NULL) OR (xml_field_id IS NOT NULL AND tag_group_id IS NULL) OR (xml_field_id IS NULL AND tag_group_id IS NOT NULL)),
	CONSTRAINT fk_init_tab_element_is FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE UNIQUE INDEX csrimp.idx_init_tab_layout_tag_grp_id ON csrimp.init_tab_element_layout (
	csrimp_session_id, NVL(TO_CHAR(tag_group_id), element_id)
);
CREATE UNIQUE INDEX csrimp.idx_init_tab_layout_xml_fld_id ON csrimp.init_tab_element_layout (
	csrimp_session_id, NVL(TO_CHAR(xml_field_id), element_id)
);
CREATE TABLE csrimp.init_create_page_el_layout (
	csrimp_session_id	NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','CSRIMP_SESSION_ID') NOT NULL,
	element_id			VARCHAR2(255) NOT NULL,
	tag_group_id		NUMBER(10),
	xml_field_id		VARCHAR2(255),
	section_id			VARCHAR2(255) NOT NULL,
	pos					NUMBER(10) NOT NULL,
	CONSTRAINT pk_initiative_el_layout PRIMARY KEY (csrimp_session_id, element_id),
	CONSTRAINT chk_init_el_layt_types CHECK ((xml_field_id IS NULL AND tag_group_id IS NULL) OR (xml_field_id IS NOT NULL AND tag_group_id IS NULL) OR (xml_field_id IS NULL AND tag_group_id IS NOT NULL)),
	CONSTRAINT fk_init_create_element_is FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE UNIQUE INDEX csrimp.idx_init_el_layout_tag_grp_id ON csrimp.init_create_page_el_layout (
	csrimp_session_id, NVL(TO_CHAR(tag_group_id), element_id)
);
CREATE TABLE csrimp.map_init_tab_element_layout (
	csrimp_session_id				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	old_element_id					NUMBER(10)	NOT NULL,
	new_element_id					NUMBER(10)	NOT NULL,
	CONSTRAINT pk_map_init_tab_element primary key (csrimp_session_id, old_element_id) USING INDEX,
	CONSTRAINT uk_map_init_tab_element unique (csrimp_session_id, new_element_id) USING INDEX,
    CONSTRAINT fk_map_init_tab_element_is FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE csrimp.map_init_create_page_el_layout (
	csrimp_session_id				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	old_element_id					NUMBER(10)	NOT NULL,
	new_element_id					NUMBER(10)	NOT NULL,
	CONSTRAINT pk_map_init_cr_pag_element primary key (csrimp_session_id, old_element_id) USING INDEX,
	CONSTRAINT uk_map_init_cr_pag_element unique (csrimp_session_id, new_element_id) USING INDEX,
    CONSTRAINT fk_map_init_cr_pag_element_is FOREIGN KEY(CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
create index csr.ix_initiative_he_initiative_me on csr.initiative_header_element (app_sid, initiative_metric_id);
create index csr.ix_initiative_he_tag_group_id on csr.initiative_header_element (app_sid, tag_group_id);
create index csr.ix_init_create_p_tag_group_id on csr.init_create_page_el_layout (app_sid, tag_group_id);
create index csr.ix_init_tab_elem_plugin_id on csr.init_tab_element_layout (plugin_id);
create index csr.ix_init_tab_elem_tag_group_id on csr.init_tab_element_layout (app_sid, tag_group_id);
CREATE TABLE CHAIN.BSCI_AUDIT (
	APP_SID 					NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID 				NUMBER(10,0) NOT NULL,
	INTERNAL_AUDIT_SID 			NUMBER(10,0) NULL,
	AUDIT_REF 					NUMBER(10,0) NOT NULL,
	AUDIT_TYPE_ID				NUMBER(10,0) NOT NULL,
	AUDIT_DTM					DATE NOT NULL,
	AUDIT_EXPIRY_DTM 			DATE NOT NULL,
	AUDIT_SCORE 				NUMBER(10,0) NOT NULL,
	AUDIT_ANNOUNCED 			NUMBER(1) NOT NULL,
	AUDIT_STAGE 				VARCHAR2(255) NOT NULL,
	AUDIT_SUCCESS 				NUMBER(1) NOT NULL,
	AUDIT_ENVIRONMENT 			VARCHAR2(255) NULL,
	LEAD_AUDITOR_NAME			VARCHAR2(255) NULL,
	AUDITING_COMPANY			VARCHAR2(255) NULL,
	AUDITING_COMPANY_BRANCH		VARCHAR2(255) NULL,
	MAN_DAYS					NUMBER(10,0) NULL,
	AUDITOR_COMMENTS 			VARCHAR2(4000) NULL,
	NEED_FOLLOW_UP				VARCHAR2(255) NULL,
	CYCLE 						VARCHAR2(255) NULL,
	TOTAL_TURNOVER 				NUMBER(10,0),
	INTERVIEW_ESSENTIALS 		VARCHAR2(4000) NULL,
	CONSTRAINT PK_BSCI_AUDIT PRIMARY KEY (APP_SID, AUDIT_REF),
	CONSTRAINT CHK_AUDIT_ANNOUNCED CHECK (AUDIT_ANNOUNCED IN (0,1)),
	CONSTRAINT FK_BSCI_AUDIT_COMPANY_SID FOREIGN KEY (APP_SID, COMPANY_SID) REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
);
BEGIN
	-- Copy any existing data into the new table
	INSERT INTO chain.bsci_audit (app_sid, company_sid, internal_audit_sid, audit_ref, audit_type_id, audit_dtm, audit_expiry_dtm, audit_score,
				audit_announced, audit_stage, audit_success, audit_environment, lead_auditor_name, auditing_company,
				auditing_company_branch, man_days, auditor_comments, need_follow_up, cycle, total_turnover, interview_essentials)
		 SELECT ba.app_sid, ba.company_sid, ia.internal_audit_sid, ba.audit_ref, bo.audit_type_2014_id, ba.audit_date, ba.audit_expiry_date, ba.audit_score,
				ba.audit_announced, ba.audit_stage, ba.audit_success, ba.audit_environment, ba.lead_auditor_name, ba.auditing_company,
				ba.auditing_company_branch, ba.man_days, NULL, ba.need_follow_up, NULL, NULL, ba.interview_essentials
		   FROM chain.bsci_audit_2014 ba
		   JOIN chain.bsci_options bo ON ba.app_sid = bo.app_sid
		   JOIN csr.internal_audit ia ON ia.internal_audit_ref = ba.audit_ref AND ia.internal_audit_type_id = bo.audit_type_2009_id AND ia.app_sid = ba.app_sid;
	INSERT INTO chain.bsci_audit (app_sid, company_sid, internal_audit_sid, audit_ref, audit_type_id, audit_dtm, audit_expiry_dtm, audit_score,
				audit_announced, audit_stage, audit_success, audit_environment, lead_auditor_name, auditing_company,
				auditing_company_branch, man_days, auditor_comments, need_follow_up, cycle, total_turnover, interview_essentials)
		 SELECT ba.app_sid, ba.company_sid, ia.internal_audit_sid, ba.audit_ref, bo.audit_type_2009_id, ba.audit_date, ba.audit_expiry_date, ba.audit_score,
			   	ba.audit_announced, ba.audit_stage, ba.audit_success, ba.audit_environment, ba.lead_auditor_name, NULL,
			   	NULL, ba.man_days, ba.auditor_comments, NULL, ba.cycle, ba.total_turnover, ba.interview_essentials
		   FROM chain.bsci_audit_2009 ba
		   JOIN chain.bsci_options bo ON ba.app_sid = bo.app_sid
		   JOIN csr.internal_audit ia ON ia.internal_audit_ref = ba.audit_ref AND ia.internal_audit_type_id = bo.audit_type_2009_id AND ia.app_sid = ba.app_sid;
END;
/
CREATE TABLE CSRIMP.CHAIN_BSCI_AUDIT (
	CSRIMP_SESSION_ID			NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	COMPANY_SID 				NUMBER(10,0) NOT NULL,
	INTERNAL_AUDIT_SID 			NUMBER(10,0) NULL,
	AUDIT_REF 					NUMBER(10,0) NOT NULL,
	AUDIT_TYPE_ID				NUMBER(10,0) NOT NULL,
	AUDIT_DTM					DATE NOT NULL,
	AUDIT_EXPIRY_DTM 			DATE NOT NULL,
	AUDIT_SCORE 				NUMBER(10,0) NOT NULL,
	AUDIT_ANNOUNCED 			NUMBER(1) NOT NULL,
	AUDIT_STAGE 				VARCHAR2(255) NOT NULL,
	AUDIT_SUCCESS 				NUMBER(1) NOT NULL,
	AUDIT_ENVIRONMENT 			VARCHAR2(255) NULL,
	LEAD_AUDITOR_NAME			VARCHAR2(255) NULL,
	AUDITING_COMPANY			VARCHAR2(255) NULL,
	AUDITING_COMPANY_BRANCH		VARCHAR2(255) NULL,
	MAN_DAYS					NUMBER(10,0) NULL,
	AUDITOR_COMMENTS 			VARCHAR2(4000) NULL,
	NEED_FOLLOW_UP				VARCHAR2(255) NULL,
	CYCLE 						VARCHAR2(255) NULL,
	TOTAL_TURNOVER 				NUMBER(10,0),
	INTERVIEW_ESSENTIALS 		VARCHAR2(4000) NULL,
	CONSTRAINT PK_BSCI_AUDIT PRIMARY KEY (CSRIMP_SESSION_ID, AUDIT_REF),
	CONSTRAINT CHK_AUDIT_ANNOUNCED CHECK (AUDIT_ANNOUNCED IN (0,1)),
	CONSTRAINT FK_BSCI_AUDIT_SESSION FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
create user tool_user identified by tool_user;
grant create session to tool_user;
--Failed to locate all sections of latest2954_6.sql
CREATE SEQUENCE CSR.INITIATIV_PERIOD_STATUS_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE CSR.INITIATIVE_GROUP_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE TABLE CSRIMP.INITIATIVE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	CREATED_BY_SID NUMBER(10,0) NOT NULL,
	CREATED_DTM DATE NOT NULL,
	DOC_LIBRARY_SID NUMBER(10,0),
	FIELDS_XML CLOB,
	FLOW_ITEM_ID NUMBER(10,0) NOT NULL,
	FLOW_SID NUMBER(10,0) NOT NULL,
	INTERNAL_REF VARCHAR2(255),
	IS_RAMPED NUMBER(1,0) NOT NULL,
	NAME VARCHAR2(1024) NOT NULL,
	PARENT_SID NUMBER(10,0),
	PERIOD_DURATION NUMBER(10,0) NOT NULL,
	PROJECT_END_DTM DATE,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	PROJECT_START_DTM DATE,
	RAG_STATUS_ID NUMBER(10,0),
	RUNNING_END_DTM DATE,
	RUNNING_START_DTM DATE,
	SAVING_TYPE_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_SID),
	CONSTRAINT FK_INITIATIVE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_METRIC (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_METRIC_ID NUMBER(10,0) NOT NULL,
	DIVISIBILITY NUMBER(10,0) NOT NULL,
	IS_DURING NUMBER(1,0) NOT NULL,
	IS_EXTERNAL NUMBER(1,0) NOT NULL,
	IS_RAMPABLE NUMBER(1,0) NOT NULL,
	IS_RUNNING NUMBER(1,0) NOT NULL,
	IS_SAVING NUMBER(10,0) NOT NULL,
	LABEL VARCHAR2(1024) NOT NULL,
	LOOKUP_KEY VARCHAR2(255),
	MEASURE_SID NUMBER(10,0) NOT NULL,
	ONE_OFF_PERIOD NUMBER(10,0),
	PER_PERIOD_DURATION NUMBER(10,0),
	CONSTRAINT PK_INITIATIVE_METRIC PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_METRIC_ID),
	CONSTRAINT FK_INITIATIVE_METRIC_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_PROJECT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	ABBREVIATION VARCHAR2(16),
	CATEGORY_LEVEL NUMBER(10,0),
	END_DTM DATE,
	FIELDS_XML XMLTYPE NOT NULL,
	FLOW_SID NUMBER(10,0) NOT NULL,
	HELPER_PKG VARCHAR2(255),
	ICON VARCHAR2(256),
	LIVE_FLOW_STATE_ID NUMBER(10,0) NOT NULL,
	NAME VARCHAR2(1024) NOT NULL,
	PERIOD_FIELDS_XML XMLTYPE NOT NULL,
	POS NUMBER(10,0),
	POS_GROUP NUMBER(10,0),
	START_DTM DATE,
	TAB_SID NUMBER(10,0),
	CONSTRAINT PK_INITIATIVE_PROJECT PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID),
	CONSTRAINT FK_INITIATIVE_PROJECT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIA_PROJEC_RAG_STATUS (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	RAG_STATUS_ID NUMBER(10,0) NOT NULL,
	POS NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIA_PROJEC_RAG_STATUS PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, RAG_STATUS_ID),
	CONSTRAINT FK_INITIA_PROJEC_RAG_STATUS_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.CUSTOMER_INIT_SAVING_TYPE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	SAVING_TYPE_ID NUMBER(10,0) NOT NULL,
	IS_DURING NUMBER(1,0),
	IS_RUNNING NUMBER(1,0),
	CONSTRAINT PK_CUSTOME_INIT_SAVING_TYPE PRIMARY KEY (CSRIMP_SESSION_ID, SAVING_TYPE_ID),
	CONSTRAINT FK_CUSTOME_INIT_SAVING_TYPE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_METRIC_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	POS_GROUP NUMBER(10,0) NOT NULL,
	INFO_TEXT VARCHAR2(4000),
	IS_GROUP_MANDATORY NUMBER(1,0) NOT NULL,
	LABEL VARCHAR2(1024),
	CONSTRAINT PK_INITIATIVE_METRIC_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, POS_GROUP),
	CONSTRAINT FK_INITIATIVE_METRIC_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.PROJECT_INITIATIVE_METRIC (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	INITIATIVE_METRIC_ID NUMBER(10,0) NOT NULL,
	DEFAULT_VALUE NUMBER(24,10),
	DISPLAY_CONTEXT VARCHAR2(255),
	FLOW_SID NUMBER(10,0) NOT NULL,
	INFO_TEXT VARCHAR2(4000),
	INPUT_DP NUMBER(10,0) NOT NULL,
	POS NUMBER(10,0) NOT NULL,
	POS_GROUP NUMBER(10,0) NOT NULL,
	UPDATE_PER_PERIOD NUMBER(1,0) NOT NULL,
	CONSTRAINT PK_PROJECT_INITIATIV_METRIC PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, INITIATIVE_METRIC_ID),
	CONSTRAINT FK_PROJECT_INITIATIV_METRIC_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_METRIC_ASSOC (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	PROPOSED_METRIC_ID NUMBER(10,0) NOT NULL,
	MEASURED_METRIC_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE_METRIC_ASSOC PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, PROPOSED_METRIC_ID, MEASURED_METRIC_ID),
	CONSTRAINT FK_INITIATIVE_METRIC_ASSOC_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.PROJ_INIT_METR_FLOW_STAT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_METRIC_ID NUMBER(10,0) NOT NULL,
	FLOW_STATE_ID NUMBER(10,0) NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	FLOW_SID NUMBER(10,0) NOT NULL,
	MANDATORY NUMBER(1,0) NOT NULL,
	VISIBLE NUMBER(1,0) NOT NULL,
	CONSTRAINT PK_PROJ_INIT_METR_FLOW_STAT PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_METRIC_ID, FLOW_STATE_ID, PROJECT_SID),
	CONSTRAINT FK_PROJ_INIT_METR_FLOW_STAT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIAT_METRIC_STATE_IND (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_METRIC_ID NUMBER(10,0) NOT NULL,
	FLOW_STATE_GROUP_ID NUMBER(10,0) NOT NULL,
	IND_SID NUMBER(10,0) NOT NULL,
	MEASURE_SID NUMBER(10,0) NOT NULL,
	NET_PERIOD NUMBER(10,0),
	CONSTRAINT PK_INITIAT_METRIC_STATE_IND PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_METRIC_ID, FLOW_STATE_GROUP_ID, IND_SID),
	CONSTRAINT FK_INITIAT_METRIC_STATE_IND_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.AGGR_TAG_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	AGGR_TAG_GROUP_ID NUMBER(10,0) NOT NULL,
	COUNT_IND_SID NUMBER(10,0),
	LABEL VARCHAR2(1024) NOT NULL,
	LOOKUP_KEY VARCHAR2(256) NOT NULL,
	CONSTRAINT PK_AGGR_TAG_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, AGGR_TAG_GROUP_ID),
	CONSTRAINT FK_AGGR_TAG_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIV_METRIC_TAG_IND (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_METRIC_ID NUMBER(10,0) NOT NULL,
	AGGR_TAG_GROUP_ID NUMBER(10,0) NOT NULL,
	IND_SID NUMBER(10,0) NOT NULL,
	MEASURE_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIV_METRIC_TAG_IND PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_METRIC_ID, AGGR_TAG_GROUP_ID, IND_SID),
	CONSTRAINT FK_INITIATIV_METRIC_TAG_IND_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.AGGR_TAG_GROUP_MEMBER (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	AGGR_TAG_GROUP_ID NUMBER(10,0) NOT NULL,
	TAG_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_AGGR_TAG_GROUP_MEMBER PRIMARY KEY (CSRIMP_SESSION_ID, AGGR_TAG_GROUP_ID, TAG_ID),
	CONSTRAINT FK_AGGR_TAG_GROUP_MEMBER_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_COMMENT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_COMMENT_ID NUMBER(10,0) NOT NULL,
	COMMENT_TEXT CLOB,
	INITIATIVE_SID NUMBER(10,0),
	POSTED_DTM DATE NOT NULL,
	USER_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE_COMMENT PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_COMMENT_ID),
	CONSTRAINT FK_INITIATIVE_COMMENT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_EVENT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_EVENT_ID NUMBER(10,0) NOT NULL,
	CREATED_BY_SID NUMBER(10,0) NOT NULL,
	CREATED_DTM DATE NOT NULL,
	DESCRIPTION VARCHAR2(4000),
	END_DTM DATE,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	LOCATION VARCHAR2(1000),
	START_DTM DATE NOT NULL,
	CONSTRAINT PK_INITIATIVE_EVENT PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_EVENT_ID),
	CONSTRAINT FK_INITIATIVE_EVENT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_GROUP_ID NUMBER(10,0) NOT NULL,
	IS_PUBLIC NUMBER(1,0) NOT NULL,
	NAME VARCHAR2(256) NOT NULL,
	CONSTRAINT PK_INITIATIVE_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_GROUP_ID),
	CONSTRAINT FK_INITIATIVE_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIAT_GROUP_FLOW_STATE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_USER_GROUP_ID NUMBER(10,0) NOT NULL,
	FLOW_STATE_ID NUMBER(10,0) NOT NULL,
	FLOW_SID NUMBER(10,0) NOT NULL,
	GENERATE_ALERTS NUMBER(1,0) NOT NULL,
	IS_EDITABLE NUMBER(1,0) NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIAT_GROUP_FLOW_STATE PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_USER_GROUP_ID, FLOW_STATE_ID, PROJECT_SID),
	CONSTRAINT FK_INITIAT_GROUP_FLOW_STATE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_GROUP_MEMBER (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_GROUP_ID NUMBER(10,0) NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE_GROUP_MEMBER PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_GROUP_ID, INITIATIVE_SID),
	CONSTRAINT FK_INITIATIVE_GROUP_MEMBER_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_GROUP_USER (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_GROUP_ID NUMBER(10,0) NOT NULL,
	USER_SID NUMBER(10,0) NOT NULL,
	CAN_EDIT NUMBER(1,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE_GROUP_USER PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_GROUP_ID, USER_SID),
	CONSTRAINT FK_INITIATIVE_GROUP_USER_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_IMPORT_MAP_MRU (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CSR_USER_SID NUMBER(10,0) NOT NULL,
	FROM_NAME VARCHAR2(1024) NOT NULL,
	TO_NAME VARCHAR2(1024) NOT NULL,
	POS NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIV_IMPORT_MAP_MRU PRIMARY KEY (CSRIMP_SESSION_ID, CSR_USER_SID, FROM_NAME, TO_NAME),
	CONSTRAINT FK_INITIATIV_IMPORT_MAP_MRU_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATI_IMPORT_TEMPLATE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	IMPORT_TEMPLATE_ID NUMBER(10,0) NOT NULL,
	HEADING_ROW_IDX NUMBER(10,0) NOT NULL,
	IS_DEFAULT NUMBER(1,0) NOT NULL,
	NAME VARCHAR2(1024) NOT NULL,
	PROJECT_SID NUMBER(10,0),
	WORKBOOK BLOB,
	WORKSHEET_NAME VARCHAR2(1024) NOT NULL,
	CONSTRAINT PK_INITIATI_IMPORT_TEMPLATE PRIMARY KEY (CSRIMP_SESSION_ID, IMPORT_TEMPLATE_ID),
	CONSTRAINT FK_INITIATI_IMPORT_TEMPLATE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIA_IMPORT_TEMPLA_MAP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	IMPORT_TEMPLATE_ID NUMBER(10,0) NOT NULL,
	TO_NAME VARCHAR2(1024) NOT NULL,
	FROM_IDX NUMBER(10,0) NOT NULL,
	FROM_NAME VARCHAR2(1024) NOT NULL,
	CONSTRAINT PK_INITIA_IMPORT_TEMPLA_MAP PRIMARY KEY (CSRIMP_SESSION_ID, IMPORT_TEMPLATE_ID, TO_NAME),
	CONSTRAINT FK_INITIA_IMPORT_TEMPLA_MAP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_METRIC_VAL (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_METRIC_ID NUMBER(10,0) NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	ENTRY_MEASURE_CONVERSION_ID NUMBER(10,0),
	ENTRY_VAL NUMBER(24,10),
	MEASURE_SID NUMBER(10,0),
	PROJECT_SID NUMBER(10,0) NOT NULL,
	VAL NUMBER(24,10),
	CONSTRAINT PK_INITIATIVE_METRIC_VAL PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_METRIC_ID, INITIATIVE_SID),
	CONSTRAINT FK_INITIATIVE_METRIC_VAL_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_PERIOD_STATUS (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_PERIOD_STATUS_ID NUMBER(10,0) NOT NULL,
	COLOUR NUMBER(10,0),
	LABEL VARCHAR2(255) NOT NULL,
	MEANS_PCT_COMPLETE NUMBER(3,2),
	CONSTRAINT PK_INITIATIVE_PERIOD_STATUS PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_PERIOD_STATUS_ID),
	CONSTRAINT FK_INITIATIVE_PERIOD_STATUS_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_PERIOD (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	REGION_SID NUMBER(10,0) NOT NULL,
	START_DTM DATE NOT NULL,
	APPROVED_BY_SID NUMBER(10,0),
	APPROVED_DTM DATE,
	END_DTM DATE NOT NULL,
	ENTERED_BY_SID NUMBER(10,0) NOT NULL,
	ENTERED_DTM DATE NOT NULL,
	FIELDS_XML CLOB,
	INITIATIVE_PERIOD_STATUS_ID NUMBER(10,0) NOT NULL,
	NEEDS_AGGREGATION NUMBER(1,0) NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	PUBLIC_COMMENT_APPROVED_BY_SID NUMBER(10,0),
	PUBLIC_COMMENT_APPROVED_DTM DATE,
	SET_FLOW_STATE_ID NUMBER(10,0),
	CONSTRAINT PK_INITIATIVE_PERIOD PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_SID, REGION_SID, START_DTM),
	CONSTRAINT FK_INITIATIVE_PERIOD_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_PROJECT_TAB (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	PLUGIN_ID NUMBER(10,0) NOT NULL,
	PLUGIN_TYPE_ID NUMBER(10,0) NOT NULL,
	POS NUMBER(10,0) NOT NULL,
	TAB_LABEL VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_INITIATIVE_PROJECT_TAB PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, PLUGIN_ID),
	CONSTRAINT FK_INITIATIVE_PROJECT_TAB_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIA_PROJECT_TAB_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	PLUGIN_ID NUMBER(10,0) NOT NULL,
	GROUP_SID NUMBER(10,0) NOT NULL,
	IS_READ_ONLY NUMBER(1,0) NOT NULL,
	CONSTRAINT PK_INITIA_PROJECT_TAB_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, PLUGIN_ID, GROUP_SID),
	CONSTRAINT FK_INITIA_PROJECT_TAB_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_PROJECT_TEAM (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	EMAIL VARCHAR2(512),
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	NAME VARCHAR2(512) NOT NULL,
	CONSTRAINT FK_INITIATIVE_PROJECT_TEAM_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_REGION (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	REGION_SID NUMBER(10,0) NOT NULL,
	USE_FOR_CALC NUMBER(1,0),
	CONSTRAINT PK_INITIATIVE_REGION PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_SID, REGION_SID),
	CONSTRAINT FK_INITIATIVE_REGION_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_SPONSOR (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	EMAIL VARCHAR2(512),
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	NAME VARCHAR2(512) NOT NULL,
	CONSTRAINT FK_INITIATIVE_SPONSOR_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_TAG (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	TAG_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE_TAG PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_SID, TAG_ID),
	CONSTRAINT FK_INITIATIVE_TAG_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_USER_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_USER_GROUP_ID NUMBER(10,0) NOT NULL,
	LABEL VARCHAR2(255) NOT NULL,
	LOOKUP_KEY VARCHAR2(255),
	SYNCH_ISSUES NUMBER(1,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE_USER_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_USER_GROUP_ID),
	CONSTRAINT FK_INITIATIVE_USER_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIA_PROJEC_USER_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_USER_GROUP_ID NUMBER(10,0) NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIA_PROJEC_USER_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_USER_GROUP_ID, PROJECT_SID),
	CONSTRAINT FK_INITIA_PROJEC_USER_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_USER (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	INITIATIVE_USER_GROUP_ID NUMBER(10,0) NOT NULL,
	USER_SID NUMBER(10,0) NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE_USER PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_SID, INITIATIVE_USER_GROUP_ID, USER_SID),
	CONSTRAINT FK_INITIATIVE_USER_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVE_USER_MSG (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	USER_MSG_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_INITIATIVE_USER_MSG PRIMARY KEY (CSRIMP_SESSION_ID, INITIATIVE_SID, USER_MSG_ID),
	CONSTRAINT FK_INITIATIVE_USER_MSG_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.INITIATIVES_OPTIONS (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	AUTO_COMPLETE_DATE NUMBER(1,0) NOT NULL,
	CURRENT_REPORT_DATE DATE,
	GANTT_PERIOD_COLOUR NUMBER(1,0) NOT NULL,
	INITIATIVES_HOST VARCHAR2(256),
	INITIATIVE_NAME_GEN_PROC VARCHAR2(256),
	INITIATIVE_NEW_DAYS NUMBER(10,0) NOT NULL,
	INITIATIVE_REMINDER_ALERTS NUMBER(1,0) NOT NULL,
	METRICS_END_YEAR NUMBER(10,0) NOT NULL,
	METRICS_START_YEAR NUMBER(10,0) NOT NULL,
	MY_INITIATIVES_OPTIONS VARCHAR2(1024),
	UPDATE_REF_ON_AMEND NUMBER(1,0) NOT NULL,
	CONSTRAINT FK_INITIATIVES_OPTIONS_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.USER_MSG (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	USER_MSG_ID NUMBER(10,0) NOT NULL,
	MSG_DTM DATE NOT NULL,
	MSG_TEXT CLOB NOT NULL,
	REPLY_TO_MSG_ID NUMBER(10,0),
	USER_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_USER_MSG PRIMARY KEY (CSRIMP_SESSION_ID, USER_MSG_ID),
	CONSTRAINT FK_USER_MSG_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.PROJE_INITIA_PERIOD_STAT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	INITIATIVE_PERIOD_STATUS_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_PROJE_INITIA_PERIOD_STAT PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, INITIATIVE_PERIOD_STATUS_ID),
	CONSTRAINT FK_PROJE_INITIA_PERIOD_STAT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.DEFAUL_INITIA_USER_STATE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	FLOW_STATE_ID NUMBER(10,0) NOT NULL,
	FLOW_SID NUMBER(10,0),
	IS_EDITABLE NUMBER(1,0) NOT NULL,
	CONSTRAINT PK_DEFAUL_INITIA_USER_STATE PRIMARY KEY (CSRIMP_SESSION_ID, FLOW_STATE_ID),
	CONSTRAINT FK_DEFAUL_INITIA_USER_STATE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.ISSUE_INITIATIVE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	ISSUE_INITIATIVE_ID NUMBER(10,0) NOT NULL,
	INITIATIVE_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_ISSUE_INITIATIVE PRIMARY KEY (CSRIMP_SESSION_ID, ISSUE_INITIATIVE_ID),
	CONSTRAINT FK_ISSUE_INITIATIVE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.AGGR_REGION (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	REGION_SID NUMBER(10,0) NOT NULL,
	AGGR_REGION_SID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_AGGR_REGION PRIMARY KEY (CSRIMP_SESSION_ID, REGION_SID),
	CONSTRAINT FK_AGGR_REGION_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.ALERT_BATCH_RUN (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	CUSTOMER_ALERT_TYPE_ID NUMBER(10,0) NOT NULL,
	CSR_USER_SID NUMBER(10,0) NOT NULL,
	NEXT_FIRE_TIME TIMESTAMP(6) NOT NULL,
	PREV_FIRE_TIME TIMESTAMP(6),
	CONSTRAINT PK_ALERT_BATCH_RUN PRIMARY KEY (CSRIMP_SESSION_ID, CUSTOMER_ALERT_TYPE_ID, CSR_USER_SID),
	CONSTRAINT FK_ALERT_BATCH_RUN_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.PROJECT_DOC_FOLDER (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	NAME VARCHAR2(256) NOT NULL,
	INFO_TEXT VARCHAR2(4000),
	LABEL VARCHAR2(1024) NOT NULL,
	CONSTRAINT PK_PROJECT_DOC_FOLDER PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, NAME),
	CONSTRAINT FK_PROJECT_DOC_FOLDER_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.PROJECT_TAG_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	TAG_GROUP_ID NUMBER(10,0) NOT NULL,
	DEFAULT_TAG_ID NUMBER(10,0),
	POS NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_PROJECT_TAG_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, TAG_GROUP_ID),
	CONSTRAINT FK_PROJECT_TAG_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.PROJECT_TAG_FILTER (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	PROJECT_SID NUMBER(10,0) NOT NULL,
	TAG_GROUP_ID NUMBER(10,0) NOT NULL,
	TAG_ID NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_PROJECT_TAG_FILTER PRIMARY KEY (CSRIMP_SESSION_ID, PROJECT_SID, TAG_GROUP_ID, TAG_ID),
	CONSTRAINT FK_PROJECT_TAG_FILTER_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_INITIATIVE_METRIC (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_INITIATIVE_METRIC_ID NUMBER(10) NOT NULL,
	NEW_INITIATIVE_METRIC_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_INITIATIVE_METRIC PRIMARY KEY (CSRIMP_SESSION_ID, OLD_INITIATIVE_METRIC_ID) USING INDEX,
	CONSTRAINT UK_MAP_INITIATIVE_METRIC UNIQUE (CSRIMP_SESSION_ID, NEW_INITIATIVE_METRIC_ID) USING INDEX,
	CONSTRAINT FK_MAP_INITIATIVE_METRIC_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_AGGR_TAG_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_AGGR_TAG_GROUP_ID NUMBER(10) NOT NULL,
	NEW_AGGR_TAG_GROUP_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_AGGR_TAG_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, OLD_AGGR_TAG_GROUP_ID) USING INDEX,
	CONSTRAINT UK_MAP_AGGR_TAG_GROUP UNIQUE (CSRIMP_SESSION_ID, NEW_AGGR_TAG_GROUP_ID) USING INDEX,
	CONSTRAINT FK_MAP_AGGR_TAG_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_INITIATIVE_COMMENT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_INITIATIVE_COMMENT_ID NUMBER(10) NOT NULL,
	NEW_INITIATIVE_COMMENT_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_INITIATIVE_COMMENT PRIMARY KEY (CSRIMP_SESSION_ID, OLD_INITIATIVE_COMMENT_ID) USING INDEX,
	CONSTRAINT UK_MAP_INITIATIVE_COMMENT UNIQUE (CSRIMP_SESSION_ID, NEW_INITIATIVE_COMMENT_ID) USING INDEX,
	CONSTRAINT FK_MAP_INITIATIVE_COMMENT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_INITIATIVE_EVENT (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_INITIATIVE_EVENT_ID NUMBER(10) NOT NULL,
	NEW_INITIATIVE_EVENT_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_INITIATIVE_EVENT PRIMARY KEY (CSRIMP_SESSION_ID, OLD_INITIATIVE_EVENT_ID) USING INDEX,
	CONSTRAINT UK_MAP_INITIATIVE_EVENT UNIQUE (CSRIMP_SESSION_ID, NEW_INITIATIVE_EVENT_ID) USING INDEX,
	CONSTRAINT FK_MAP_INITIATIVE_EVENT_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_INITIATIVE_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_INITIATIVE_GROUP_ID NUMBER(10) NOT NULL,
	NEW_INITIATIVE_GROUP_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_INITIATIVE_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, OLD_INITIATIVE_GROUP_ID) USING INDEX,
	CONSTRAINT UK_MAP_INITIATIVE_GROUP UNIQUE (CSRIMP_SESSION_ID, NEW_INITIATIVE_GROUP_ID) USING INDEX,
	CONSTRAINT FK_MAP_INITIATIVE_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_INITIATIV_USER_GROUP (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_INITIATIVE_USER_GROUP_ID NUMBER(10) NOT NULL,
	NEW_INITIATIVE_USER_GROUP_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_INITIATIV_USER_GROUP PRIMARY KEY (CSRIMP_SESSION_ID, OLD_INITIATIVE_USER_GROUP_ID) USING INDEX,
	CONSTRAINT UK_MAP_INITIATIV_USER_GROUP UNIQUE (CSRIMP_SESSION_ID, NEW_INITIATIVE_USER_GROUP_ID) USING INDEX,
	CONSTRAINT FK_MAP_INITIATIV_USER_GROUP_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_IMPORT_TEMPLATE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_IMPORT_TEMPLATE_ID NUMBER(10) NOT NULL,
	NEW_IMPORT_TEMPLATE_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_IMPORT_TEMPLATE PRIMARY KEY (CSRIMP_SESSION_ID, OLD_IMPORT_TEMPLATE_ID) USING INDEX,
	CONSTRAINT UK_MAP_IMPORT_TEMPLATE UNIQUE (CSRIMP_SESSION_ID, NEW_IMPORT_TEMPLATE_ID) USING INDEX,
	CONSTRAINT FK_MAP_IMPORT_TEMPLATE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_INITIA_PERIOD_STATUS (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_INITIATIV_PERIOD_STATUS_ID NUMBER(10) NOT NULL,
	NEW_INITIATIV_PERIOD_STATUS_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_INITIA_PERIOD_STATUS PRIMARY KEY (CSRIMP_SESSION_ID, OLD_INITIATIV_PERIOD_STATUS_ID) USING INDEX,
	CONSTRAINT UK_MAP_INITIA_PERIOD_STATUS UNIQUE (CSRIMP_SESSION_ID, NEW_INITIATIV_PERIOD_STATUS_ID) USING INDEX,
	CONSTRAINT FK_MAP_INITIA_PERIOD_STATUS_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_USER_MSG (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_USER_MSG_ID NUMBER(10) NOT NULL,
	NEW_USER_MSG_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_USER_MSG PRIMARY KEY (CSRIMP_SESSION_ID, OLD_USER_MSG_ID) USING INDEX,
	CONSTRAINT UK_MAP_USER_MSG UNIQUE (CSRIMP_SESSION_ID, NEW_USER_MSG_ID) USING INDEX,
	CONSTRAINT FK_MAP_USER_MSG_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);
CREATE TABLE CSRIMP.MAP_ISSUE_INITIATIVE (
	CSRIMP_SESSION_ID NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_ISSUE_INITIATIVE_ID NUMBER(10) NOT NULL,
	NEW_ISSUE_INITIATIVE_ID NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_ISSUE_INITIATIVE PRIMARY KEY (CSRIMP_SESSION_ID, OLD_ISSUE_INITIATIVE_ID) USING INDEX,
	CONSTRAINT UK_MAP_ISSUE_INITIATIVE UNIQUE (CSRIMP_SESSION_ID, NEW_ISSUE_INITIATIVE_ID) USING INDEX,
	CONSTRAINT FK_MAP_ISSUE_INITIATIVE_IS FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);


ALTER TABLE CHAIN.CUSTOMER_OPTIONS ADD (
	SHOW_MAP_ON_SUPPLIER_LIST NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_SHOW_MAP_ON_SUP_LIST CHECK (SHOW_MAP_ON_SUPPLIER_LIST IN (0, 1))
);
ALTER TABLE CSRIMP.CHAIN_CUSTOMER_OPTIONS ADD (
	SHOW_MAP_ON_SUPPLIER_LIST NUMBER(1) NOT NULL,
	CONSTRAINT CHK_SHOW_MAP_ON_SUP_LIST CHECK (SHOW_MAP_ON_SUPPLIER_LIST IN (0, 1))
);
ALTER TABLE CSR.CUSTOMER ADD (
	SHOW_MAP_ON_AUDIT_LIST NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_SHOW_MAP_ON_AUDIT_LIST CHECK (SHOW_MAP_ON_AUDIT_LIST IN (0, 1))
);
ALTER TABLE CSRIMP.CUSTOMER ADD (
	SHOW_MAP_ON_AUDIT_LIST NUMBER(1) NOT NULL,
	CONSTRAINT CHK_SHOW_MAP_ON_AUDIT_LIST CHECK (SHOW_MAP_ON_AUDIT_LIST IN (0, 1))
);
DECLARE
	v_col_check NUMBER(1);
BEGIN	
	SELECT COUNT(*) INTO v_col_check
	  FROM dba_tab_columns
	 WHERE owner = 'CSR'
	   AND table_name = 'T_FLOW_STATE'
	   AND column_name = 'FLOW_STATE_GROUP_IDS';
	
	IF v_col_check = 0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE CSR.T_FLOW_STATE ADD FLOW_STATE_GROUP_IDS VARCHAR2(2000)';
	END IF;
END;
/
ALTER TABLE cms.form ADD (lookup_key VARCHAR2(255));
ALTER TABLE csrimp.cms_form ADD (lookup_key VARCHAR2(255));
CREATE UNIQUE INDEX cms.ix_form_lkup_key ON cms.form (app_sid, NVL(UPPER(lookup_key), TO_CHAR(form_sid)));
ALTER TABLE CHAIN.HIGG_QUESTION
ADD (
	UNITS_QUESTION_ID 			NUMBER(10) NULL,
	INDICATOR_NAME 				VARCHAR2(255) NULL,
	INDICATOR_LOOKUP 			VARCHAR2(255) NULL,
	MEASURE_NAME 				VARCHAR2(255) NULL,
	MEASURE_LOOKUP 				VARCHAR2(255) NULL,
	MEASURE_DIVISIBILITY		NUMBER(10) NULL,
	STD_MEASURE_CONVERSION_ID	NUMBER(10) NULL
);
ALTER TABLE CHAIN.HIGG_QUESTION_OPTION
ADD (
	MEASURE_CONVERSION 				VARCHAR2(255) NULL,
	STD_MEASURE_CONVERSION_ID 		NUMBER(10) NULL
);
ALTER TABLE CHAIN.HIGG_CONFIG 
ADD (
	AGGREGATE_IND_GROUP_ID NUMBER(10) NULL,
	CONSTRAINT UK_HIGG_CONFIG_SURVEY UNIQUE (APP_SID, SURVEY_SID)
);
ALTER TABLE CHAIN.HIGG_CONFIG
MODIFY COMPANY_TYPE_ID NULL;
ALTER TABLE CSRIMP.HIGG_CONFIG 
ADD (
	AGGREGATE_IND_GROUP_ID NUMBER(10) NULL
);
CREATE INDEX CHAIN.IX_HIGG_CONFIG_COMPANY_TYPE ON CHAIN.HIGG_CONFIG (APP_SID, COMPANY_TYPE_ID);
CREATE INDEX CHAIN.IX_HIGG_CONFIG_AUDIT_TYPE ON CHAIN.HIGG_CONFIG (APP_SID, AUDIT_TYPE_ID);
CREATE INDEX CHAIN.IX_HIGG_CONFIG_CLOSURE_TYPE ON CHAIN.HIGG_CONFIG (APP_SID, AUDIT_TYPE_ID, CLOSURE_TYPE_ID);
CREATE INDEX CHAIN.IX_HIGG_CONFIG_AUDIT_COORD ON CHAIN.HIGG_CONFIG (APP_SID, AUDIT_COORDINATOR_SID);
CREATE INDEX CHAIN.IX_HIGG_CONFIG_AGG_IND ON CHAIN.HIGG_CONFIG (APP_SID, AGGREGATE_IND_GROUP_ID);
CREATE INDEX CHAIN.IX_HIGG_MOD_T_G_TAG_GROUP ON CHAIN.HIGG_MODULE_TAG_GROUP (APP_SID, TAG_GROUP_ID);
CREATE INDEX CHAIN.IX_HIGG_CON_MOD_HIGG_CONFIG ON CHAIN.HIGG_CONFIG_MODULE (APP_SID, HIGG_CONFIG_ID);
CREATE INDEX CHAIN.IX_HIGG_CON_MOD_HIGG_MODULE ON CHAIN.HIGG_CONFIG_MODULE (HIGG_MODULE_ID);
CREATE INDEX CHAIN.IX_HIGG_MOD_SEC_HIGG_MODULE ON CHAIN.HIGG_MODULE_SECTION (HIGG_MODULE_ID);
CREATE INDEX CHAIN.IX_HIGG_MOD_SUB_SEC_HIGG_MOD ON CHAIN.HIGG_MODULE_SUB_SECTION (HIGG_MODULE_ID);
CREATE INDEX CHAIN.IX_HIGG_MOD_SUB_SEC_HIGG_SEC ON CHAIN.HIGG_MODULE_SUB_SECTION (HIGG_SECTION_ID);
CREATE INDEX CHAIN.IX_HIGG_QUESTION_PARENT ON CHAIN.HIGG_QUESTION (PARENT_QUESTION_ID);
CREATE INDEX CHAIN.IX_HIGG_QUESTION_MODULE ON CHAIN.HIGG_QUESTION (HIGG_MODULE_ID);
CREATE INDEX CHAIN.IX_HIGG_QUESTION_SUB_SEC ON CHAIN.HIGG_QUESTION (HIGG_SUB_SECTION_ID);
CREATE INDEX CHAIN.IX_HIGG_QUESTION_SUR_QS ON CHAIN.HIGG_QUESTION_SURVEY (APP_SID, SURVEY_SID);
CREATE INDEX CHAIN.IX_HIGG_QUESTION_SUR_QSQ ON CHAIN.HIGG_QUESTION_SURVEY (APP_SID, QS_QUESTION_ID, SURVEY_VERSION);
CREATE INDEX CHAIN.IX_HIGG_QUESTION_SUR_QUESTION ON CHAIN.HIGG_QUESTION_SURVEY (HIGG_QUESTION_ID);
CREATE INDEX CHAIN.IX_HIGG_QU_OPT_QUESTION ON CHAIN.HIGG_QUESTION_OPTION (HIGG_MODULE_ID, HIGG_QUESTION_ID);
CREATE INDEX CHAIN.IX_HIGG_QU_OPT_MODULE ON CHAIN.HIGG_QUESTION_OPTION (HIGG_MODULE_ID);
CREATE INDEX CHAIN.IX_HIGG_QU_OPT_SUR_QO ON CHAIN.HIGG_QUESTION_OPTION_SURVEY (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID);
CREATE INDEX CHAIN.IX_HIGG_QU_OPT_SUR_QSQ ON CHAIN.HIGG_QUESTION_OPTION_SURVEY (APP_SID, SURVEY_SID);
CREATE INDEX CHAIN.IX_HIGG_QU_OPT_SUR_QSQO ON CHAIN.HIGG_QUESTION_OPTION_SURVEY (APP_SID, QS_QUESTION_ID, QS_QUESTION_OPTION_ID, SURVEY_VERSION);
CREATE INDEX CHAIN.IX_HIGG_RESPONSE_MODULE ON CHAIN.HIGG_RESPONSE (HIGG_MODULE_ID);
CREATE INDEX CHAIN.IX_HIGG_RESPONSE_PROFILE ON CHAIN.HIGG_RESPONSE (APP_SID, HIGG_PROFILE_ID, RESPONSE_YEAR);
CREATE INDEX CHAIN.IX_HIGG_SECTION_SCORE_SECTION ON CHAIN.HIGG_SECTION_SCORE (HIGG_SECTION_ID);
CREATE INDEX CHAIN.IX_HIGG_SECTION_SCORE_RES ON CHAIN.HIGG_SECTION_SCORE (APP_SID, HIGG_RESPONSE_ID);
CREATE INDEX CHAIN.IX_HIGG_SUB_SEC_SCORE_SUB_SEC ON CHAIN.HIGG_SUB_SECTION_SCORE (HIGG_SUB_SECTION_ID);
CREATE INDEX CHAIN.IX_HIGG_SUB_SEC_SCORE_SEC ON CHAIN.HIGG_SUB_SECTION_SCORE (APP_SID, HIGG_RESPONSE_ID, HIGG_SECTION_ID);
CREATE INDEX CHAIN.IX_HIGG_Q_RES_RESPONSE ON CHAIN.HIGG_QUESTION_RESPONSE (APP_SID, HIGG_RESPONSE_ID);
CREATE INDEX CHAIN.IX_HIGG_Q_RES_QUESTION ON CHAIN.HIGG_QUESTION_RESPONSE (HIGG_QUESTION_ID);
CREATE INDEX CHAIN.IX_HIGG_Q_RES_OPTION ON CHAIN.HIGG_QUESTION_RESPONSE (HIGG_QUESTION_ID, OPTION_ID);
CREATE INDEX CHAIN.IX_HIGG_CONF_PROF_CONFIG ON CHAIN.HIGG_CONFIG_PROFILE (APP_SID, HIGG_CONFIG_ID);
CREATE INDEX CHAIN.IX_HIGG_CONF_PROF_PROFILE ON CHAIN.HIGG_CONFIG_PROFILE (APP_SID, HIGG_PROFILE_ID, RESPONSE_YEAR);
CREATE INDEX CHAIN.IX_HIGG_CONF_PROF_AUDIT ON CHAIN.HIGG_CONFIG_PROFILE (APP_SID, INTERNAL_AUDIT_SID);
CREATE INDEX CHAIN.IX_HIGG_Q_OPT_CONV_MC ON CHAIN.HIGG_QUESTION_OPT_CONVERSION (APP_SID, MEASURE_CONVERSION_ID);
CREATE INDEX CHAIN.IX_HIGG_Q_OPT_CONV_QO ON CHAIN.HIGG_QUESTION_OPT_CONVERSION (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID);
ALTER TABLE CSR.CUSTOMER ADD (
    TEAR_OFF_DELEG_HEADER           NUMBER(1)         DEFAULT 0 NOT NULL,
	CONSTRAINT CK_CUST_TEAR_OFF_DELEG CHECK (TEAR_OFF_DELEG_HEADER IN (0,1))
);
ALTER TABLE csr.compliance_options ADD CONSTRAINT fk_compliance_options_st
    FOREIGN KEY (app_sid, quick_survey_type_id)
    REFERENCES csr.quick_survey_type (app_sid, quick_survey_type_id);
CREATE INDEX CHAIN.IX_COMPANY_REFERENCE_VAL ON CHAIN.COMPANY_REFERENCE(APP_SID, REFERENCE_ID, VALUE);
DELETE FROM security.user_certificates 
 WHERE rowid IN (
		SELECT MAX(ROWID) FROM security.user_certificates GROUP BY sid_id, cert_hash HAVING COUNT(*) > 1
	   );
	   
DECLARE
	v_check NUMBER(1);
BEGIN
	SELECT COUNT(constraint_name)
	  INTO v_check
	  FROM all_constraints
	 WHERE owner = 'SECURITY'
	   AND table_name = 'USER_CERTIFICATES'
	   AND constraint_name = 'PK_USER_CERTIFICATES';
	IF v_check = 0 THEN
		EXECUTE IMMEDIATE 'ALTER TABLE security.USER_CERTIFICATES ADD CONSTRAINT PK_USER_CERTIFICATES PRIMARY KEY (SID_ID, CERT_HASH)';
	END IF;
END;
/

DECLARE
	v_count		NUMBER;
BEGIN
	SELECT COUNT(*)
	  INTO v_count
	  FROM all_tables
	 WHERE owner = 'CSR'
	   AND table_name = 'FTP_DEFAULT_PROFILE';
	
	IF v_count = 0 THEN
		-- Doesn't exist - create.
		EXECUTE IMMEDIATE 'CREATE TABLE CSR.FTP_DEFAULT_PROFILE(
								DEFAULT_PROFILE_ID    NUMBER(10, 0),
								DISPLAY_NAME          VARCHAR2(255),
								LABEL                 VARCHAR2(255),
								HOST_NAME             VARCHAR2(1024),
								SECURE_CREDENTIALS    CLOB,
								FINGERPRINT           VARCHAR2(1024),
								USERNAME              VARCHAR2(255),
								PASSWORD              VARCHAR2(255),
								PORT_NUMBER           NUMBER(10, 0),
								FTP_PROTOCOL_ID       NUMBER(10, 0),
								CONSTRAINT PK_DEFAULT_PROFILE_ID PRIMARY KEY (DEFAULT_PROFILE_ID)
							)';
	ELSE
		-- Exists - try to update.
		EXECUTE IMMEDIATE 'ALTER TABLE csr.ftp_default_profile DROP PRIMARY KEY';
		EXECUTE IMMEDIATE 'ALTER TABLE csr.ftp_default_profile RENAME COLUMN id TO default_profile_id';
		EXECUTE IMMEDIATE 'ALTER TABLE csr.ftp_default_profile ADD CONSTRAINT pk_default_profile_id PRIMARY KEY (default_profile_id)';
	END IF;
END;
/

ALTER TABLE CSR.STD_FACTOR_SET ADD (
    CREATED_BY_SID          NUMBER(10, 0),
    CREATED_DTM		        DATE,
    PUBLISHED		        NUMBER(1,0) DEFAULT 0 NOT NULL,
    PUBLISHED_BY_SID        NUMBER(10, 0),
    PUBLISHED_DTM	        DATE,
	FACTOR_SET_GROUP_ID     NUMBER(10, 0),
	CONSTRAINT CK_STD_FACTOR_SET_PUBLISHED CHECK (PUBLISHED IN (1, 0)),
	CONSTRAINT FK_STD_FCTR_SET_FCTR_SET_GRP FOREIGN KEY (FACTOR_SET_GROUP_ID)
		REFERENCES CSR.FACTOR_SET_GROUP(FACTOR_SET_GROUP_ID)
);
ALTER TABLE CSR.STD_FACTOR ADD (
    SOURCE          VARCHAR(1000)
);
create index csr.ix_model_instance_map_to_ind on csr.model_instance_map (app_sid, map_to_indicator_sid);
update csr.model_instance_map set map_to_indicator_sid = null where map_to_indicator_sid = -1;
begin
	for r in (select * from all_constraints where owner='CSR' and constraint_name='REFIND1573') loop
		execute immediate 'alter table csr.model_instance_map drop constraint REFIND1573';
	end loop;
end;
/
alter table csr.model_instance_map add constraint fk_model_instance_map_to_ind 
foreign key (app_sid, map_to_indicator_sid) references csr.ind (app_sid, ind_sid);
ALTER TABLE CSR.DATAVIEW ADD TREAT_NULL_AS_ZERO NUMBER(1) DEFAULT 0 NOT NULL;
ALTER TABLE CSR.DATAVIEW ADD CONSTRAINT CK_DATAVIEW_TREAT_NULL_AS_ZRO CHECK (TREAT_NULL_AS_ZERO IN (0,1));
ALTER TABLE CSR.DATAVIEW_HISTORY ADD TREAT_NULL_AS_ZERO NUMBER(1) DEFAULT 0 NOT NULL;
ALTER TABLE CSR.DATAVIEW_HISTORY ADD CONSTRAINT CK_DV_HIST_TREAT_NULL_AS_ZERO CHECK (TREAT_NULL_AS_ZERO IN (0,1));
ALTER TABLE CSR.DATAVIEW DROP COLUMN USE_BACKFILL;
ALTER TABLE CSR.DATAVIEW_HISTORY DROP COLUMN USE_BACKFILL;
ALTER TABLE CSRIMP.DATAVIEW ADD TREAT_NULL_AS_ZERO NUMBER(1) DEFAULT 0 NOT NULL;
ALTER TABLE CSRIMP.DATAVIEW ADD CONSTRAINT CK_DATAVIEW_TREAT_NULL_AS_ZRO CHECK (TREAT_NULL_AS_ZERO IN (0,1));
ALTER TABLE CSRIMP.DATAVIEW_HISTORY ADD TREAT_NULL_AS_ZERO NUMBER(1) DEFAULT 0 NOT NULL;
ALTER TABLE CSRIMP.DATAVIEW_HISTORY ADD CONSTRAINT CK_DV_HIST_TREAT_NULL_AS_ZERO CHECK (TREAT_NULL_AS_ZERO IN (0,1));
ALTER TABLE CSRIMP.DATAVIEW DROP COLUMN USE_BACKFILL;
ALTER TABLE CSRIMP.DATAVIEW_HISTORY DROP COLUMN USE_BACKFILL;
DELETE FROM csr.flow_state_role_capability fsrc
 WHERE NOT EXISTS (
  SELECT *
    FROM csr.flow_state_role fsr
   WHERE fsr.flow_state_id = fsrc.flow_state_id AND fsr.role_sid = fsrc.role_sid
) AND fsrc.role_sid IS NOT NULL;
ALTER TABLE csr.flow_state_role_capability ADD CONSTRAINT FK_FLOW_STATE_ROLE_CAP_ROLE FOREIGN KEY (app_sid, role_sid) REFERENCES csr.role (app_sid, role_sid);
ALTER TABLE CHAIN.BSCI_FINDING DROP CONSTRAINT FK_BSCI_AUDIT_2009_REF;
ALTER TABLE CHAIN.BSCI_FINDING DROP CONSTRAINT FK_BSCI_AUDIT_2014_REF;
ALTER TABLE CHAIN.BSCI_FINDING DROP CONSTRAINT CHK_BSCI_AUDIT_TYPE;
ALTER TABLE CHAIN.BSCI_ASSOCIATE DROP CONSTRAINT FK_BSCI_AUDIT_REF_ASS_2009;
ALTER TABLE CHAIN.BSCI_ASSOCIATE DROP CONSTRAINT FK_BSCI_AUDIT_REF_ASS_2014;
ALTER TABLE CSRIMP.CHAIN_BSCI_FINDING DROP CONSTRAINT CHK_BSCI_AUDIT_TYPE;
DROP TABLE CHAIN.BSCI_AUDIT_2009;
DROP TABLE CHAIN.BSCI_AUDIT_2014;
DROP TABLE CSRIMP.CHAIN_BSCI_AUDIT_2009;
DROP TABLE CSRIMP.CHAIN_BSCI_AUDIT_2014;
ALTER TABLE CHAIN.BSCI_FINDING ADD AUDIT_REF NUMBER(10) NULL;
ALTER TABLE CHAIN.BSCI_ASSOCIATE ADD AUDIT_REF NUMBER(10) NULL;
BEGIN
	UPDATE chain.bsci_finding
	   SET audit_ref = audit_ref_2014
	 WHERE audit_ref_2014 IS NOT NULL;
	UPDATE chain.bsci_finding
	   SET audit_ref = audit_ref_2009
	 WHERE audit_ref_2009 IS NOT NULL;
	UPDATE chain.bsci_associate
	   SET audit_ref = audit_ref_2009
	 WHERE audit_ref_2009 IS NOT NULL;
	UPDATE chain.bsci_associate
	   SET audit_ref = audit_ref_2014
	 WHERE audit_ref_2014 IS NOT NULL;
END;
/
ALTER TABLE CHAIN.BSCI_FINDING MODIFY AUDIT_REF NUMBER(10) NOT NULL;
ALTER TABLE CHAIN.BSCI_ASSOCIATE MODIFY AUDIT_REF NUMBER(10) NOT NULL;
ALTER TABLE CSRIMP.CHAIN_BSCI_FINDING ADD AUDIT_REF NUMBER(10) NOT NULL;
ALTER TABLE CSRIMP.CHAIN_BSCI_ASSOCIATE ADD AUDIT_REF NUMBER(10) NOT NULL;
ALTER TABLE CHAIN.BSCI_FINDING ADD CONSTRAINT FK_BSCI_AUDIT_REF_FIND FOREIGN KEY (APP_SID, AUDIT_REF) REFERENCES CHAIN.BSCI_AUDIT (APP_SID, AUDIT_REF);
ALTER TABLE CHAIN.BSCI_ASSOCIATE ADD CONSTRAINT FK_BSCI_AUDIT_REF_ASS FOREIGN KEY (APP_SID, AUDIT_REF) REFERENCES CHAIN.BSCI_AUDIT (APP_SID, AUDIT_REF);
ALTER TABLE CHAIN.BSCI_FINDING DROP COLUMN AUDIT_REF_2009;
ALTER TABLE CHAIN.BSCI_FINDING DROP COLUMN AUDIT_REF_2014;
ALTER TABLE CSRIMP.CHAIN_BSCI_FINDING DROP COLUMN AUDIT_REF_2009;
ALTER TABLE CSRIMP.CHAIN_BSCI_FINDING DROP COLUMN AUDIT_REF_2014;
ALTER TABLE CHAIN.BSCI_ASSOCIATE DROP COLUMN AUDIT_REF_2009;
ALTER TABLE CHAIN.BSCI_ASSOCIATE DROP COLUMN AUDIT_REF_2014;
ALTER TABLE CSRIMP.CHAIN_BSCI_ASSOCIATE DROP COLUMN AUDIT_REF_2009;
ALTER TABLE CSRIMP.CHAIN_BSCI_ASSOCIATE DROP COLUMN AUDIT_REF_2014;
ALTER TABLE CHAIN.BSCI_SUPPLIER RENAME COLUMN AUDIT_EXPIRATION_DATE TO AUDIT_EXPIRATION_DTM;
ALTER TABLE CHAIN.BSCI_SUPPLIER RENAME COLUMN AUDIT_DATE TO AUDIT_DTM;
ALTER TABLE CHAIN.BSCI_SUPPLIER RENAME COLUMN LAST_UPDATED_DATE TO LAST_UPDATED_DTM;
ALTER TABLE CSRIMP.CHAIN_BSCI_SUPPLIER RENAME COLUMN AUDIT_EXPIRATION_DATE TO AUDIT_EXPIRATION_DTM;
ALTER TABLE CSRIMP.CHAIN_BSCI_SUPPLIER RENAME COLUMN AUDIT_DATE TO AUDIT_DTM;
ALTER TABLE CSRIMP.CHAIN_BSCI_SUPPLIER RENAME COLUMN LAST_UPDATED_DATE TO LAST_UPDATED_DTM;


GRANT SELECT ON chain.company_reference_id_seq TO csr;
grant select on csr.audit_non_compliance to chain;
grant select on csr.non_compliance to chain;
grant insert on csr.flow_state_group to csrimp;
grant insert on csr.flow_state_group_member to csrimp;
grant select,insert,update,delete on csrimp.flow_state_group to web_user;
grant select,insert,update,delete on csrimp.flow_state_group_member to web_user;
grant select on csr.flow_state_group_id_seq to csrimp;
GRANT SELECT ON CSR.QUICK_SURVEY_TYPE TO CHAIN;
GRANT REFERENCES, SELECT ON CSR.MEASURE_CONVERSION TO CHAIN;
GRANT UPDATE ON CSR.MEASURE TO CHAIN;
GRANT SELECT, UPDATE, INSERT, DELETE ON CSR.TEMP_RESPONSE_REGION TO CHAIN;
GRANT UPDATE ON CSR.QUICK_SURVEY_QUESTION TO CHAIN;
GRANT SELECT ON CSR.QUICK_SURVEY_VERSION TO CHAIN;
GRANT SELECT, REFERENCES ON CSR.AGGREGATE_IND_GROUP TO CHAIN;
GRANT EXECUTE ON CSR.INDICATOR_PKG TO CHAIN;
GRANT EXECUTE ON CSR.AGGREGATE_IND_PKG TO CHAIN;
GRANT EXECUTE ON CSR.MEASURE_PKG TO CHAIN;
GRANT EXECUTE ON CHAIN.HIGG_PKG TO WEB_USER;
GRANT SELECT, INSERT, UPDATE ON CHAIN.HIGG_QUESTION_OPT_CONVERSION TO CSRIMP;
GRANT SELECT, INSERT, UPDATE, DELETE ON CSRIMP.HIGG_QUESTION_OPT_CONVERSION TO TOOL_USER;
GRANT SELECT ON CHAIN.HIGG_QUESTION_OPT_CONVERSION TO CSR;
GRANT SELECT, INSERT, UPDATE, DELETE ON csrimp.compliance_options TO tool_user;
GRANT SELECT, INSERT, UPDATE ON csr.compliance_options TO csrimp;
GRANT SELECT, INSERT, UPDATE ON csr.custom_factor_set TO csrimp;
GRANT SELECT, INSERT, UPDATE ON csr.custom_factor TO csrimp;
GRANT SELECT, INSERT, UPDATE ON csr.emission_factor_profile TO csrimp;
GRANT SELECT, INSERT, UPDATE ON csr.emission_factor_profile_factor TO csrimp;
GRANT SELECT, INSERT, UPDATE ON csrimp.custom_factor_set TO web_user;
GRANT SELECT, INSERT, UPDATE ON csrimp.custom_factor TO web_user;
GRANT SELECT, INSERT, UPDATE ON csrimp.emission_factor_profile TO web_user;
GRANT SELECT, INSERT, UPDATE ON csrimp.emission_factor_profile_factor TO web_user;
CREATE OR REPLACE PACKAGE csr.factor_set_group_pkg
IS
END factor_set_group_pkg;
/
CREATE OR REPLACE PACKAGE BODY csr.factor_set_group_pkg
IS
END factor_set_group_pkg;
/
GRANT EXECUTE ON CSR.factor_set_group_pkg TO web_user;
grant select, insert, update on csr.init_tab_element_layout to csrimp;
grant select, insert, update on csr.init_create_page_el_layout to csrimp;
grant select, insert, update on csr.initiative_header_element to csrimp;
grant select on csr.initiative_tab_element_id_seq to csrimp;
grant select on csr.init_create_page_el_id_seq to csrimp;
grant select on csr.init_header_element_id_seq to csrimp;
grant select, insert, update, delete on csrimp.init_tab_element_layout to web_user;
grant select, insert, update, delete on csrimp.init_create_page_el_layout to web_user;
grant select, insert, update, delete on csrimp.initiative_header_element to web_user;
grant execute on csr.enable_pkg to tool_user;
grant execute on aspen2.timezone_pkg to tool_user;
grant execute on cms.tab_pkg to tool_user;
grant execute on csr.csr_app_pkg to tool_user;
grant execute on csr.csr_user_pkg to tool_user;
grant execute on csr.customer_pkg to tool_user;
grant execute on csr.role_pkg to tool_user;
grant execute on csr.schema_pkg to tool_user;
grant execute on csrimp.imp_pkg to tool_user;
grant execute on donations.sys_pkg to tool_user;
grant execute on security.accountpolicy_pkg to tool_user;
grant execute on security.acl_pkg to tool_user;
grant execute on security.attribute_pkg to tool_user;
grant execute on security.bitwise_pkg to tool_user;
grant execute on security.class_pkg to tool_user;
grant execute on security.conn_pkg to tool_user;
grant execute on security.group_pkg to tool_user;
grant execute on security.menu_pkg to tool_user;
grant execute on security.permission_pkg to tool_user;
grant execute on security.securableobject_pkg to tool_user;
grant execute on security.security_pkg to tool_user;
grant execute on security.session_pkg to tool_user;
grant execute on security.softlink_pkg to tool_user;
grant execute on security.tools_pkg to tool_user;
grant execute on security.user_pkg to tool_user;
grant execute on security.web_pkg to tool_user;
revoke select,insert,update,delete on cms.imp_col_comments from web_user;
revoke select,insert,update,delete on cms.imp_constraints from web_user;
revoke select,insert,update,delete on cms.imp_cons_columns from web_user;
revoke select,insert,update,delete on cms.imp_tables from web_user;
revoke select,insert,update,delete on cms.imp_tab_columns from web_user;
revoke select,insert,update,delete on cms.imp_indexes from web_user;
revoke select,insert,update,delete on cms.imp_ind_columns from web_user;
grant select,insert,update,delete on cms.imp_col_comments to tool_user;
grant select,insert,update,delete on cms.imp_constraints to tool_user;
grant select,insert,update,delete on cms.imp_cons_columns to tool_user;
grant select,insert,update,delete on cms.imp_tables to tool_user;
grant select,insert,update,delete on cms.imp_tab_columns to tool_user;
grant select,insert,update,delete on cms.imp_indexes to tool_user;
grant select,insert,update,delete on cms.imp_ind_columns to tool_user;
grant insert,select,update,delete on cms.imp_ind_expressions to tool_user;
grant select,insert,update,delete on cms.imp_tab_comments to tool_user;
grant select,insert,update,delete on cms.imp_tab_privs to tool_user;
revoke execute on csrimp.imp_pkg from web_user;
begin
	for r in (
		select 'revoke '||p.privilege||' on csrimp.'||at.table_name||' from web_user' s
		  from dba_tab_privs p, all_tables at where p.grantee='WEB_USER' and p.owner='CSRIMP'
		   and p.owner = at.owner and p.table_name = at.table_name and at.dropped = 'NO') loop
		execute immediate r.s;
	end loop;
end;
/
grant execute on csrimp.imp_pkg to tool_user;
grant insert,select,update,delete on csrimp.account_policy to tool_user;
grant insert,select,update,delete on csrimp.acc_policy_pwd_regexp to tool_user;
grant insert,select,update,delete on csrimp.accuracy_type to tool_user;
grant insert,select,update,delete on csrimp.accuracy_type_option to tool_user;
grant insert,select,update,delete on csrimp.acl to tool_user;
grant select,insert,update,delete on csrimp.aggregate_ind_group to tool_user;
grant select,insert,update,delete on csrimp.aggregate_ind_group_member to tool_user;
grant select,insert,update,delete on csrimp.aggregation_period TO tool_user;
grant insert,select,update,delete on csrimp.application to tool_user;
grant insert,select,update,delete on csrimp.alert to tool_user;
grant insert,select,update,delete on csrimp.alert_bounce to tool_user;
grant insert,select,update,delete on csrimp.alert_frame to tool_user;
grant insert,select,update,delete on csrimp.alert_frame_body to tool_user;
grant insert,select,update,delete on csrimp.alert_template to tool_user;
grant insert,select,update,delete on csrimp.alert_template_body to tool_user;
grant select,insert,update,delete on csrimp.all_meter to tool_user;
grant select,insert,update,delete on csrimp.approval_dashboard to tool_user;
grant select,insert,update,delete on csrimp.approval_dashboard_alert_type to tool_user;
grant select,insert,update,delete on csrimp.approval_dashboard_ind to tool_user;
grant select,insert,update,delete on csrimp.approval_dashboard_instance to tool_user;
grant select,insert,update,delete on csrimp.approval_dashboard_region to tool_user;
grant select,insert,update,delete on csrimp.approval_dashboard_tab to tool_user;
grant select,insert,update,delete on csrimp.approval_dashboard_tpl_tag to tool_user;
grant select,insert,update,delete on csrimp.approval_dashboard_val to tool_user;
grant select,insert,update,delete on csrimp.approval_note_portlet_note to tool_user;
grant insert,select,update,delete on csrimp.approval_step to tool_user;
grant insert,select,update,delete on csrimp.approval_step_ind to tool_user;
grant insert,select,update,delete on csrimp.approval_step_region to tool_user;
grant insert,select,update,delete on csrimp.approval_step_role to tool_user;
grant insert,select,update,delete on csrimp.approval_step_sheet to tool_user;
grant insert,select,update,delete on csrimp.approval_step_sheet_log to tool_user;
grant insert,select,update,delete on csrimp.approval_step_user to tool_user;
grant insert,select,update,delete on csrimp.aspen2_application to tool_user;
grant insert,select,update,delete on csrimp.aspen2_translated to tool_user;
grant insert,select,update,delete on csrimp.aspen2_translation to tool_user;
grant insert,select,update,delete on csrimp.aspen2_translation_app to tool_user;
grant insert,select,update,delete on csrimp.aspen2_translation_set to tool_user;
grant insert,select,update,delete on csrimp.aspen2_translation_set_incl to tool_user;
grant insert,select,update,delete on csrimp.attachment to tool_user;
grant insert,select,update,delete on csrimp.attachment_history to tool_user;
grant insert,select,update,delete on csrimp.attributes to tool_user;
grant select,insert,update,delete on csrimp.autocreate_user to tool_user;
grant select,insert,update,delete on csrimp.audit_alert to tool_user;
grant select,insert,update,delete on csrimp.audit_closure_type to tool_user;
grant select,insert,update,delete on csrimp.audit_type_closure_type to tool_user;
grant select,insert,update,delete on csrimp.audit_log to tool_user;
grant select,insert,update,delete on csrimp.audit_non_compliance to tool_user;
grant select,insert,update,delete on csrimp.audit_type_non_comp_default to tool_user;
grant select,insert,update,delete on csrimp.audit_user_cover to tool_user;
grant select,insert,update,delete on csrimp.audit_type_expiry_alert_role to tool_user;
grant select,insert,update,delete on csrimp.audit_type_tab to tool_user;
grant select,insert,update,delete on csrimp.audit_type_header to tool_user;
grant select,insert,update,delete on csrimp.audit_type_flow_inv_type to tool_user;
grant select,insert,update,delete on csrimp.batch_job_approval_dash_vals to tool_user;
grant insert,select,update,delete on csrimp.calc_dependency to tool_user;
grant select,insert,update,delete on csrimp.calc_tag_dependency to tool_user;
grant select,insert,update,delete on csrimp.correspondent to tool_user;
grant select,insert,update,delete on csrimp.cms_aggregate_type to tool_user;
grant select,insert,update,delete on csrimp.cms_alert_helper to tool_user;
grant select,insert,update,delete on csrimp.cms_alert_type to tool_user;
grant select,insert,update,delete on csrimp.cms_app_schema to tool_user;
grant select,insert,update,delete on csrimp.cms_app_schema_table to tool_user;
grant select,insert,update,delete on csrimp.cms_image  to tool_user;
grant select,insert,update,delete on csrimp.cms_ck_cons  to tool_user;
grant select,insert,update,delete on csrimp.cms_ck_cons_col  to tool_user;
grant select,insert,update,delete on csrimp.cms_display_template  to tool_user;
grant select,insert,update,delete on csrimp.cms_filter to tool_user;
grant select,insert,update,delete on csrimp.cms_fk_cons to tool_user;
grant select,insert,update,delete on csrimp.cms_fk_cons_col to tool_user;
grant select,insert,update,delete on csrimp.cms_flow_tab_column_cons  to tool_user;
grant select,insert,update,delete on csrimp.cms_form to tool_user;
grant select,insert,update,delete on csrimp.cms_image_tag  to tool_user;
grant select,insert,update,delete on csrimp.cms_link_track  to tool_user;
grant select,insert,update,delete on csrimp.cms_tab  to tool_user;
grant select,insert,update,delete on csrimp.cms_tab_column  to tool_user;
grant select,insert,update,delete on csrimp.cms_tab_column_link to tool_user;
grant select,insert,update,delete on csrimp.cms_tab_column_link_type to tool_user;
grant select,insert,update,delete on csrimp.cms_tab_column_measure to tool_user;
grant select,insert,update,delete on csrimp.cms_tab_aggregate_ind to tool_user;
grant select,insert,update,delete on csrimp.cms_tab_issue_aggregate_ind to tool_user;
grant select,insert,update,delete on csrimp.cms_tag  to tool_user;
grant select,insert,update,delete on csrimp.cms_uk_cons  to tool_user;
grant select,insert,update,delete on csrimp.cms_uk_cons_col  to tool_user;
grant select,insert,update,delete on csrimp.cms_web_publication  to tool_user;
grant select,insert,update,delete on csrimp.cms_tab_column_role_permission  to tool_user;
grant select,insert,update,delete on csrimp.cms_tab_alert_type to tool_user;
grant insert,select,update,delete on csrimp.csr_user to tool_user;
grant select,insert,update,delete on csrimp.current_supplier_score to tool_user;
grant select,insert,update,delete on csrimp.supplier_score_log to tool_user;
grant insert,select,update,delete on csrimp.customer to tool_user;
grant insert,select,update,delete on csrimp.customer_alert_type to tool_user;
grant select,insert,update,delete on csrimp.customer_alert_type_param to tool_user;
grant select,insert,update,delete on csrimp.customer_portlet to tool_user;
grant insert,select,update,delete on csrimp.customer_region_type to tool_user;
grant select,insert,update,delete on csrimp.dashboard to tool_user;
grant select,insert,update,delete on csrimp.dashboard_item to tool_user;
grant insert,select,update,delete on csrimp.dataview to tool_user;
grant insert,select,update,delete on csrimp.dataview_arbitrary_period to tool_user;
grant insert,select,update,delete on csrimp.dataview_arbitrary_period_hist to tool_user;
grant insert,select,update,delete on csrimp.dataview_ind_description to tool_user;
grant insert,select,update,delete on csrimp.dataview_ind_member to tool_user;
grant insert,select,update,delete on csrimp.dataview_region_member to tool_user;
grant insert,select,update,delete on csrimp.dataview_region_description to tool_user;
grant select,insert,update,delete on csrimp.dataview_scenario_run to tool_user;
grant insert,select,update,delete on csrimp.dataview_trend to tool_user;
grant select,insert,update,delete on csrimp.dataview_zone to tool_user;
grant select,insert,update,delete on csrimp.dataview_history to tool_user;
grant select,insert,update,delete on csrimp.deleg_grid_variance to tool_user;
grant insert,select,update,delete on csrimp.deleg_ind_group_member to tool_user;
grant insert,select,update,delete on csrimp.deleg_ind_form_expr to tool_user;
grant insert,select,update,delete on csrimp.deleg_ind_group to tool_user;
grant select,insert,update,delete on csrimp.deleg_meta_role_ind_selection to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan_applied to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan_col to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan_col_deleg to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan_col_survey to tool_user;
grant select,insert,update,delete on csrimp.deleg_plan_date_schedule to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan_deleg_region to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan_deleg_region_deleg to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan_region to tool_user;
grant insert,select,update,delete on csrimp.deleg_plan_role to tool_user;
grant select,insert,update,delete on csrimp.deleg_plan_survey_region to tool_user;
grant insert,select,update,delete on csrimp.delegation to tool_user;
grant select,insert,update,delete on csrimp.delegation_comment to tool_user;
grant insert,select,update,delete on csrimp.delegation_description to tool_user;
grant select,insert,update,delete on csrimp.delegation_date_schedule to tool_user;
grant insert,select,update,delete on csrimp.delegation_grid to tool_user;
grant insert,select,update,delete on csrimp.delegation_grid_aggregate_ind to tool_user;
grant insert,select,update,delete on csrimp.delegation_ind to tool_user;
grant insert,select,update,delete on csrimp.delegation_ind_cond to tool_user;
grant insert,select,update,delete on csrimp.delegation_ind_cond_action to tool_user;
grant insert,select,update,delete on csrimp.delegation_ind_description to tool_user;
grant insert,select,update,delete on csrimp.delegation_ind_tag to tool_user;
grant insert,select,update,delete on csrimp.delegation_ind_tag_list to tool_user;
grant insert,select,update,delete on csrimp.delegation_region to tool_user;
grant insert,select,update,delete on csrimp.delegation_region_description to tool_user;
grant insert,select,update,delete on csrimp.delegation_role to tool_user;
grant insert,select,update,delete on csrimp.delegation_user to tool_user;
grant select,insert,update,delete on csrimp.delegation_plugin to tool_user;
grant select,insert,update,delete on csrimp.delegation_tag to tool_user;
grant select,insert,update,delete on csrimp.delegation_user_cover to tool_user;
grant select,insert,update,delete on csrimp.delegation_policy to tool_user;
grant select,insert,update,delete on csrimp.diary_event to tool_user;
grant select,insert,update,delete on csrimp.diary_event_group to tool_user;
grant select,insert,update,delete on csrimp.doc to tool_user;
grant select,insert,update,delete on csrimp.doc_current to tool_user;
grant select,insert,update,delete on csrimp.doc_data to tool_user;
grant select,insert,update,delete on csrimp.doc_download to tool_user;
grant select,insert,update,delete on csrimp.doc_folder to tool_user;
grant select,insert,update,delete on csrimp.doc_folder_subscription to tool_user;
grant select,insert,update,delete on csrimp.doc_library to tool_user;
grant select,insert,update,delete on csrimp.doc_notification to tool_user;
grant select,insert,update,delete on csrimp.doc_subscription to tool_user;
grant select,insert,update,delete on csrimp.doc_version to tool_user;
grant select,insert,update,delete on csrimp.event to tool_user;
grant select,insert,update,delete on csrimp.excel_export_options to tool_user;
grant insert,select,update,delete on csrimp.factor to tool_user;
grant select,insert,update,delete on csrimp.factor_history to tool_user;
grant insert,select,update,delete on csrimp.file_upload to tool_user;
grant select,insert,update,delete on csrimp.flow to tool_user;
grant select,insert,update,delete on csrimp.flow_alert_type to tool_user;
grant select,insert,update,delete on csrimp.flow_alert_helper to tool_user;
grant select,insert,update,delete on csrimp.flow_item to tool_user;
grant select,insert,update,delete on csrimp.flow_item_involvement to tool_user;
grant select,insert,update,delete on csrimp.flow_item_generated_alert to tool_user;
grant select,insert,update,delete on csrimp.flow_involvement_cover to tool_user;
grant select,insert,update,delete on csrimp.flow_involvement_type to tool_user;
grant select,insert,update,delete on csrimp.flow_state to tool_user;
grant select,insert,update,delete on csrimp.flow_state_log to tool_user;
grant select,insert,update,delete on csrimp.flow_state_log_file to tool_user;
grant select,insert,update,delete on csrimp.flow_state_role to tool_user;
grant select,insert,update,delete on csrimp.flow_state_cms_col to tool_user;
grant select,insert,update,delete on csrimp.flow_state_involvement to tool_user;
grant select,insert,update,delete on csrimp.flow_state_role_capability to tool_user;
grant select,insert,update,delete on csrimp.flow_state_trans_helper to tool_user;
grant select,insert,update,delete on csrimp.flow_state_transition to tool_user;
grant select,insert,update,delete on csrimp.flow_state_transition_role to tool_user;
grant select,insert,update,delete on csrimp.flow_state_transition_cms_col to tool_user;
grant select,insert,update,delete on csrimp.flow_state_transition_inv to tool_user;
grant select,insert,update,delete on csrimp.flow_transition_alert to tool_user;
grant select,insert,update,delete on csrimp.flow_transition_alert_cms_col to tool_user;
grant select,insert,update,delete on csrimp.flow_transition_alert_role to tool_user;
grant select,insert,update,delete on csrimp.flow_transition_alert_inv to tool_user;
grant select,insert,update,delete on csrimp.flow_transition_alert_user to tool_user;
grant select,insert,update,delete on csrimp.flow_customer_alert_class to tool_user;
grant insert,select,update,delete on csrimp.form to tool_user;
grant insert,select,update,delete on csrimp.form_allocation to tool_user;
grant insert,select,update,delete on csrimp.form_allocation_item to tool_user;
grant insert,select,update,delete on csrimp.form_allocation_user to tool_user;
grant insert,select,update,delete on csrimp.form_comment to tool_user;
grant insert,select,update,delete on csrimp.form_expr to tool_user;
grant insert,select,update,delete on csrimp.form_ind_member to tool_user;
grant insert,select,update,delete on csrimp.form_region_member to tool_user;
grant insert,select,update,delete on csrimp.group_members to tool_user;
grant insert,select,update,delete on csrimp.group_table to tool_user;
grant select,insert,update,delete on csrimp.group_user_cover to tool_user;
grant insert,select,update,delete on csrimp.home_page to tool_user;
grant insert,select,update,delete on csrimp.img_chart to tool_user;
grant insert,select,update,delete on csrimp.img_chart_ind to tool_user;
grant insert,select,update,delete on csrimp.imp_conflict to tool_user;
grant insert,select,update,delete on csrimp.imp_conflict_val to tool_user;
grant insert,select,update,delete on csrimp.imp_ind to tool_user;
grant insert,select,update,delete on csrimp.imp_measure to tool_user;
grant insert,select,update,delete on csrimp.imp_region to tool_user;
grant insert,select,update,delete on csrimp.imp_session to tool_user;
grant insert,select,update,delete on csrimp.imp_val to tool_user;
grant select,insert,update,delete on csrimp.imp_vocab to tool_user;
grant insert,select,update,delete on csrimp.ind to tool_user;
grant insert,select,update,delete on csrimp.ind_description to tool_user;
grant insert,select,update,delete on csrimp.ind_accuracy_type to tool_user;
grant insert,select,update,delete on csrimp.ind_flag to tool_user;
grant insert,select,update,delete on csrimp.ind_start_point to tool_user;
grant select,insert,update,delete on csrimp.ind_sel_group_member_desc to tool_user;
grant select,insert,update,delete on csrimp.ind_selection_group to tool_user;
grant select,insert,update,delete on csrimp.ind_selection_group_member to tool_user;
grant insert,select,update,delete on csrimp.ind_tag to tool_user;
grant insert,select,update,delete on csrimp.ind_validation_rule to tool_user;
grant select,insert,update,delete on csrimp.internal_audit to tool_user;
grant select,insert,update,delete on csrimp.internal_audit_file to tool_user;
grant select,insert,update,delete on csrimp.internal_audit_file_data to tool_user;
grant select,insert,update,delete on csrimp.internal_audit_postit to tool_user;
grant select,insert,update,delete on csrimp.internal_audit_type to tool_user;
grant select,insert,update,delete on csrimp.flow_state_audit_ind to tool_user;
grant select,insert,update,delete on csrimp.internal_audit_type_group to tool_user;
grant select,insert,update,delete on csrimp.internal_audit_type_carry_fwd to tool_user;
grant insert,select,update,delete on csrimp.ip_rule to tool_user;
grant insert,select,update,delete on csrimp.ip_rule_entry to tool_user;
grant select,insert,update,delete on csrimp.issue to tool_user;
grant select,insert,update,delete on csrimp.issue_action to tool_user;
grant select,insert,update,delete on csrimp.issue_action_log to tool_user;
grant select,insert,update,delete on csrimp.issue_custom_field to tool_user;
grant select,insert,update,delete on csrimp.issue_custom_field_opt_sel to tool_user;
grant select,insert,update,delete on csrimp.issue_custom_field_option to tool_user;
grant select,insert,update,delete on csrimp.issue_custom_field_str_val to tool_user;
grant select,insert,update,delete on csrimp.issue_log to tool_user;
grant select,insert,update,delete on csrimp.issue_log_file to tool_user;
grant select,insert,update,delete on csrimp.issue_log_read to tool_user;
grant select,insert,update,delete on csrimp.issue_meter to tool_user;
grant select,insert,update,delete on csrimp.issue_meter_alarm to tool_user;
grant select,insert,update,delete on csrimp.issue_meter_data_source to tool_user;
grant select,insert,update,delete on csrimp.issue_meter_raw_data to tool_user;
grant select,insert,update,delete on csrimp.issue_non_compliance to tool_user;
grant select,insert,update,delete on csrimp.issue_pending_val to tool_user;
grant select,insert,update,delete on csrimp.issue_priority to tool_user;
grant select,insert,update,delete on csrimp.issue_scheduled_task to tool_user;
grant select,insert,update,delete on csrimp.issue_sheet_value to tool_user;
grant select,insert,update,delete on csrimp.issue_supplier to tool_user;
grant select,insert,update,delete on csrimp.issue_survey_answer to tool_user;
grant select,insert,update,delete on csrimp.issue_type to tool_user;
grant select,insert,update,delete on csrimp.issue_type_aggregate_ind_grp to tool_user;
grant select,insert,update,delete on csrimp.issue_involvement to tool_user;
grant select,insert,update,delete on csrimp.issue_user_cover to tool_user;
grant insert,select,update,delete on csrimp.known_so to tool_user;
grant select,insert,update,delete on csrimp.last_used_measure_conversion to tool_user;
grant select,insert,update,delete on csrimp.lookup_table to tool_user;
grant select,insert,update,delete on csrimp.lookup_table_entry to tool_user;
grant select,insert,update,delete on csrimp.meter_bucket to tool_user;
grant insert,select,update,delete on csrimp.mail_account to tool_user;
grant insert,select,update,delete on csrimp.mail_mailbox to tool_user;
grant insert,select,update,delete on csrimp.mail_mailbox_message to tool_user;
grant insert,select,update,delete on csrimp.mail_message to tool_user;
grant insert,select,update,delete on csrimp.mail_message_address_field to tool_user;
grant insert,select,update,delete on csrimp.mail_message_header to tool_user;
grant insert,select,update,delete on csrimp.master_deleg to tool_user;
grant insert,select,update,delete on csrimp.measure to tool_user;
grant insert,select,update,delete on csrimp.measure_conversion to tool_user;
grant insert,select,update,delete on csrimp.measure_conversion_period to tool_user;
grant insert,select,update,delete on csrimp.menu to tool_user;
grant select,insert,update,delete on csrimp.meter_aggregate_type to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm_comparison to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm_event to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm_issue_period to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm_stat_run to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm_statistic to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm_statistic_job to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm_statistic_period to tool_user;
grant select,insert,update,delete on csrimp.meter_alarm_test_time to tool_user;
grant select,insert,update,delete on csrimp.meter_data_id to tool_user;
grant select,insert,update,delete on csrimp.meter_document to tool_user;
grant select,insert,update,delete on csrimp.meter_element_layout to tool_user;
grant select,insert,update,delete on csrimp.meter_excel_mapping to tool_user;
grant select,insert,update,delete on csrimp.meter_excel_option to tool_user;
grant select,insert,update,delete on csrimp.meter_header_element to tool_user;
grant select,insert,update,delete on csrimp.meter_list_cache to tool_user;
grant select,insert,update,delete on csrimp.meter_live_data to tool_user;
grant select,insert,update,delete on csrimp.meter_meter_alarm_statistic to tool_user;
grant select,insert,update,delete on csrimp.meter_orphan_data to tool_user;
grant select,insert,update,delete on csrimp.meter_photo to tool_user;
grant select,insert,update,delete on csrimp.meter_raw_data to tool_user;
grant select,insert,update,delete on csrimp.meter_raw_data_error to tool_user;
grant select,insert,update,delete on csrimp.meter_raw_data_source to tool_user;
grant select,insert,update,delete on csrimp.meter_raw_data_status to tool_user;
grant select,insert,update,delete on csrimp.meter_reading to tool_user;
grant select,insert,update,delete on csrimp.meter_source_data to tool_user;
grant select,insert,update,delete on csrimp.meter_reading_data to tool_user;
grant select,insert,update,delete on csrimp.meter_source_type to tool_user;
grant select,insert,update,delete on csrimp.meter_tab to tool_user;
grant select,insert,update,delete on csrimp.meter_tab_group to tool_user;
grant select,insert,update,delete on csrimp.meter_utility_contract to tool_user;
grant select,insert,update,delete on csrimp.metering_options to tool_user;
grant select,insert,update,delete on csrimp.meter_xml_option to tool_user;
grant select,insert,update,delete on csrimp.model to tool_user;
grant select,insert,update,delete on csrimp.model_instance to tool_user;
grant select,insert,update,delete on csrimp.model_instance_chart to tool_user;
grant select,insert,update,delete on csrimp.model_instance_map to tool_user;
grant select,insert,update,delete on csrimp.model_instance_region to tool_user;
grant select,insert,update,delete on csrimp.model_instance_sheet to tool_user;
grant select,insert,update,delete on csrimp.model_map to tool_user;
grant select,insert,update,delete on csrimp.model_range to tool_user;
grant select,insert,update,delete on csrimp.model_range_cell to tool_user;
grant select,insert,update,delete on csrimp.model_region_range to tool_user;
grant select,insert,update,delete on csrimp.model_sheet to tool_user;
grant select,insert,update,delete on csrimp.model_validation to tool_user;
grant select,insert,update,delete on csrimp.non_comp_default to tool_user;
grant select,insert,update,delete on csrimp.non_comp_default_issue to tool_user;
grant select,insert,update,delete on csrimp.non_comp_default_tag to tool_user;
grant select,insert,update,delete on csrimp.non_comp_default_folder to tool_user;
grant select,insert,update,delete on csrimp.non_compliance to tool_user;
grant select,insert,update,delete on csrimp.non_compliance_expr_action to tool_user;
grant select,insert,update,delete on csrimp.non_compliance_file_upload to tool_user;
grant select,insert,update,delete on csrimp.non_compliance_tag to tool_user;
grant select,insert,update,delete on csrimp.non_compliance_type to tool_user;
grant select,insert,update,delete on csrimp.non_comp_type_audit_type to tool_user;
grant select,insert,update,delete on csrimp.postit to tool_user;
grant select,insert,update,delete on csrimp.postit_file to tool_user;
grant insert,select,update,delete on csrimp.pct_ownership to tool_user;
grant insert,select,update,delete on csrimp.pending_dataset to tool_user;
grant insert,select,update,delete on csrimp.pending_ind to tool_user;
grant insert,select,update,delete on csrimp.pending_ind_accuracy_type to tool_user;
grant insert,select,update,delete on csrimp.pending_period to tool_user;
grant insert,select,update,delete on csrimp.pending_region to tool_user;
grant insert,select,update,delete on csrimp.pending_val to tool_user;
grant insert,select,update,delete on csrimp.pending_val_accuracy_type_opt to tool_user;
grant insert,select,update,delete on csrimp.pending_val_log to tool_user;
grant insert,select,update,delete on csrimp.pending_val_variance to tool_user;
grant insert,select,update,delete on csrimp.permission_mapping to tool_user;
grant insert,select,update,delete on csrimp.permission_name to tool_user;
grant insert,select,update,delete on csrimp.period to tool_user;
grant insert,select,update,delete on csrimp.period_set to tool_user;
grant insert,select,update,delete on csrimp.period_interval to tool_user;
grant insert,select,update,delete on csrimp.period_interval_member to tool_user;
grant insert,select,update,delete on csrimp.period_dates to tool_user;
grant insert,select,update,delete on csrimp.portal_dashboard to tool_user;
grant select,insert,update,delete on csrimp.qs_response_file to tool_user;
grant select,insert,update,delete on csrimp.qs_answer_file to tool_user;
grant select,insert,update,delete on csrimp.qs_answer_log to tool_user;
grant select,insert,update,delete on csrimp.qs_campaign to tool_user;
grant select,insert,update,delete on csrimp.qs_custom_question_type to tool_user;
grant select,insert,update,delete on csrimp.qs_expr_msg_action to tool_user;
grant select,insert,update,delete on csrimp.qs_expr_nc_action_involve_role to tool_user;
grant select,insert,update,delete on csrimp.qs_expr_non_compl_action to tool_user;
grant select,insert,update,delete on csrimp.qs_filter_condition to tool_user;
grant select,insert,update,delete on csrimp.qs_filter_cond_gen_type to tool_user;
grant select,insert,update,delete on csrimp.qs_filter_condition_general to tool_user;
grant select,insert,update,delete on csrimp.qs_question_option to tool_user;
grant select,insert,update,delete on csrimp.qs_question_option_nc_tag to tool_user;
grant select,insert,update,delete on csrimp.qs_response_postit to tool_user;
grant select,insert,update,delete on csrimp.qs_submission_file to tool_user;
grant select,insert,update,delete on csrimp.quick_survey to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_answer to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_expr to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_expr_action to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_lang to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_question to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_question_tag to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_response to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_submission to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_type to tool_user;
grant select,insert,update,delete on csrimp.quick_survey_version to tool_user;
grant select,insert,update,delete on csrimp.r_report_type to tool_user;
grant select,insert,update,delete on csrimp.r_report to tool_user;
grant select,insert,update,delete on csrimp.r_report_file to tool_user;
grant select,insert,update,delete on csrimp.rag_status to tool_user;
grant insert,select,update,delete on csrimp.region to tool_user;
grant insert,select,update,delete on csrimp.region_description to tool_user;
grant select,insert,update,delete on csrimp.region_event to tool_user;
grant select,insert,update,delete on csrimp.region_internal_audit to tool_user;
grant select,insert,update,delete on csrimp.region_meter_alarm to tool_user;
grant select,insert,update,delete on csrimp.region_proc_doc to tool_user;
grant select,insert,update,delete on csrimp.region_proc_file to tool_user;
grant insert,select,update,delete on csrimp.region_role_member to tool_user;
grant select,insert,update,delete on csrimp.region_owner to tool_user;
grant select,insert,update,delete on csrimp.region_set to tool_user;
grant select,insert,update,delete on csrimp.region_set_region to tool_user;
grant insert,select,update,delete on csrimp.region_start_point to tool_user;
grant select,insert,update,delete on csrimp.region_survey_response to tool_user;
grant select,insert,update,delete on csrimp.region_score to tool_user;
grant select,insert,update,delete on csrimp.region_score_log to tool_user;
grant insert,select,update,delete on csrimp.region_tag to tool_user;
grant insert,select,update,delete on csrimp.region_tree to tool_user;
grant insert,select,update,delete on csrimp.reporting_period to tool_user;
grant insert,select,update,delete on csrimp.role to tool_user;
grant insert,select,update,delete on csrimp.role_grant to tool_user;
grant select,insert,update,delete on csrimp.role_user_cover to tool_user;
grant insert,select,update,delete on csrimp.route to tool_user;
grant insert,select,update,delete on csrimp.route_step to tool_user;
grant insert,select,update,delete on csrimp.route_step_user to tool_user;
grant insert,select,update,delete on csrimp.rss_cache to tool_user;
grant select,insert,update,delete on csrimp.scenario to tool_user;
grant select,insert,update,delete on csrimp.scenario_ind to tool_user;
grant select,insert,update,delete on csrimp.scenario_options to tool_user;
grant select,insert,update,delete on csrimp.scenario_region to tool_user;
grant select,insert,update,delete on csrimp.scenario_rule to tool_user;
grant select,insert,update,delete on csrimp.scenario_rule_ind to tool_user;
grant select,insert,update,delete on csrimp.scenario_rule_like_contig_ind to tool_user;
grant select,insert,update,delete on csrimp.scenario_rule_region to tool_user;
grant select,insert,update,delete on csrimp.scenario_run to tool_user;
grant select,insert,update,delete on csrimp.scenario_run_val to tool_user;
grant select,insert,update,delete on csrimp.score_threshold to tool_user;
grant select,insert,update,delete on csrimp.score_type to tool_user;
grant select,insert,update,delete on csrimp.score_type_agg_type to tool_user;
grant insert,select,update,delete on csrimp.section to tool_user;
grant insert,select,update,delete on csrimp.section_alert to tool_user;
grant insert,select,update,delete on csrimp.section_cart_folder to tool_user;
grant insert,select,update,delete on csrimp.section_cart to tool_user;
grant insert,select,update,delete on csrimp.section_cart_member to tool_user;
grant insert,select,update,delete on csrimp.section_comment to tool_user;
grant insert,select,update,delete on csrimp.section_trans_comment to tool_user;
grant insert,select,update,delete on csrimp.section_flow to tool_user;
grant insert,select,update,delete on csrimp.section_module to tool_user;
grant insert,select,update,delete on csrimp.section_routed_flow_state to tool_user;
grant insert,select,update,delete on csrimp.section_tag to tool_user;
grant insert,select,update,delete on csrimp.section_tag_member to tool_user;
grant insert,select,update,delete on csrimp.section_status to tool_user;
grant insert,select,update,delete on csrimp.section_transition to tool_user;
grant insert,select,update,delete on csrimp.section_version to tool_user;
grant insert,select,update,delete on csrimp.securable_object to tool_user;
grant insert,select,update,delete on csrimp.securable_object_attributes to tool_user;
grant insert,select,update,delete on csrimp.securable_object_class to tool_user;
grant insert,select,update,delete on csrimp.securable_object_keyed_acl to tool_user;
grant insert,select,update,delete on csrimp.sheet to tool_user;
grant insert,select,update,delete on csrimp.sheet_alert to tool_user;
grant select,insert,update,delete on csrimp.sheet_date_schedule to tool_user;
grant insert,select,update,delete on csrimp.sheet_history to tool_user;
grant insert,select,update,delete on csrimp.sheet_inherited_value to tool_user;
grant insert,select,update,delete on csrimp.sheet_value to tool_user;
grant insert,select,update,delete on csrimp.sheet_value_accuracy to tool_user;
grant insert,select,update,delete on csrimp.sheet_value_change to tool_user;
grant insert,select,update,delete on csrimp.sheet_value_file to tool_user;
grant insert,select,update,delete on csrimp.sheet_value_var_expl to tool_user;
grant insert,select,update,delete on csrimp.sheet_value_hidden_cache to tool_user;
grant insert,select,update,delete on csrimp.superadmin to tool_user;
grant insert,select,update,delete on csrimp.superadmin_folder to tool_user;
grant select,insert,update,delete on csrimp.tab to tool_user;
grant select,insert,update,delete on csrimp.tab_group to tool_user;
grant select,insert,update,delete on csrimp.tab_portlet to tool_user;
grant select,insert,update,delete on csrimp.tab_portlet_rss_feed to tool_user;
grant select,insert,update,delete on csrimp.tab_portlet_user_region to tool_user;
grant select,insert,update,delete on csrimp.tab_user to tool_user;
grant insert,select,update,delete on csrimp.tag to tool_user;
grant insert,select,update,delete on csrimp.tag_group to tool_user;
grant insert,select,update,delete on csrimp.tag_group_member to tool_user;
grant select,insert,update,delete on csrimp.target_dashboard to tool_user;
grant select,insert,update,delete on csrimp.target_dashboard_ind_member to tool_user;
grant select,insert,update,delete on csrimp.target_dashboard_reg_member to tool_user;
grant select,insert,update,delete on csrimp.target_dashboard_value to tool_user;
grant select,insert,update,delete on csrimp.template to tool_user;
grant select,insert,update,delete on csrimp.term_cond_doc to tool_user;
grant select,insert,update,delete on csrimp.term_cond_doc_log to tool_user;
grant select,insert,update,delete on csrimp.tpl_img to tool_user;
grant select,insert,update,delete on csrimp.tpl_rep_cust_tag_type to tool_user;
grant select,insert,update,delete on csrimp.tpl_report to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_non_compl to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_approval_note to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_approval_matrix to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_dataview to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_dv_region to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_eval to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_eval_cond to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_ind to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_logging_form to tool_user;
grant select,insert,update,delete on csrimp.tpl_report_tag_text to tool_user;
grant select,insert,update,delete on csrimp.trash to tool_user;
grant insert,select,update,delete on csrimp.user_certificates to tool_user;
grant insert,select,update,delete on csrimp.user_password_history to tool_user;
grant insert,select,update,delete on csrimp.user_table to tool_user;
grant select,insert,update,delete on csrimp.utility_contract to tool_user;
grant select,insert,update,delete on csrimp.utility_invoice to tool_user;
grant select,insert,update,delete on csrimp.utility_supplier to tool_user;
grant select,insert,update,delete on csrimp.user_cover to tool_user;
grant select,insert,update,delete on csrimp.user_setting_entry to tool_user;
grant select,insert,update,delete on csrimp.user_setting to tool_user;
grant insert,select,update,delete on csrimp.var_expl to tool_user;
grant insert,select,update,delete on csrimp.var_expl_group to tool_user;
grant insert,select,update,delete on csrimp.val to tool_user;
grant insert,select,update,delete on csrimp.val_change to tool_user;
grant insert,select,update,delete on csrimp.web_resource to tool_user;
grant insert,select,update,delete on csrimp.website to tool_user;
grant insert,select,update,delete on csrimp.non_compliance_file to tool_user;
grant select,insert,update,delete on csrimp.currency to tool_user;
grant select,insert,update,delete on csrimp.fund to tool_user;
grant select,insert,update,delete on csrimp.fund_form_plugin to tool_user;
grant select,insert,update,delete on csrimp.fund_type to tool_user;
grant select,insert,update,delete on csrimp.lease to tool_user;
grant select,insert,update,delete on csrimp.lease_postit to tool_user;
grant select,insert,update,delete on csrimp.lease_property to tool_user;
grant select,insert,update,delete on csrimp.lease_space to tool_user;
grant select,insert,update,delete on csrimp.lease_type to tool_user;
grant select,insert,update,delete on csrimp.meter_type to tool_user;
grant select,insert,update,delete on csrimp.mgmt_company to tool_user;
grant select,insert,update,delete on csrimp.mgmt_company_contact to tool_user;
grant select,insert,update,delete on csrimp.mgmt_company_fund_contact to tool_user;
grant select,insert,update,delete on csrimp.plugin to tool_user;
grant select,insert,update,delete on csrimp.plugin_indicator to tool_user;
grant select,insert,update,delete on csrimp.property to tool_user;
grant select,insert,update,delete on csrimp.property_address_options to tool_user;
grant select,insert,update,delete on csrimp.property_element_layout to tool_user;
grant select,insert,update,delete on csrimp.property_character_layout to tool_user;
grant select,insert,update,delete on csrimp.property_options to tool_user;
grant select,insert,update,delete on csrimp.property_photo to tool_user;
grant select,insert,update,delete on csrimp.property_sub_type to tool_user;
grant select,insert,update,delete on csrimp.property_tab to tool_user;
grant select,insert,update,delete on csrimp.property_tab_group to tool_user;
grant select,insert,update,delete on csrimp.property_type to tool_user;
grant select,insert,update,delete on csrimp.benchmark_dashboard to tool_user;
grant select,insert,update,delete on csrimp.benchmark_dashboard_char to tool_user;
grant select,insert,update,delete on csrimp.benchmark_dashboard_ind to tool_user;
grant select,insert,update,delete on csrimp.benchmark_dashboard_plugin to tool_user;
grant select,insert,update,delete on csrimp.metric_dashboard to tool_user;
grant select,insert,update,delete on csrimp.metric_dashboard_ind to tool_user;
grant select,insert,update,delete on csrimp.metric_dashboard_plugin to tool_user;
grant select,insert,update,delete on csrimp.region_metric to tool_user;
grant select,insert,update,delete on csrimp.region_metric_val to tool_user;
grant select,insert,update,delete on csrimp.region_type_metric to tool_user;
grant select,insert,update,delete on csrimp.region_type_tag_group to tool_user;
grant select,insert,update,delete on csrimp.space to tool_user;
grant select,insert,update,delete on csrimp.space_type to tool_user;
grant select,insert,update,delete on csrimp.space_type_region_metric to tool_user;
grant select,insert,update,delete on csrimp.tenant to tool_user;
grant select,insert,update,delete on csrimp.plugin_type to tool_user;
grant select,insert,update,delete on csrimp.plugin to tool_user;
grant select,insert,update,delete on csrimp.property_type_space_type to tool_user;
grant select,insert,update,delete on csrimp.chain_capability to tool_user;
grant select,insert,update,delete on csrimp.chain_capability_flow_cap to tool_user;
grant select,insert,update,delete on csrimp.chain_customer_options to tool_user;
grant select,insert,update,delete on csrimp.chain_company_type to tool_user;
grant select,insert,update,delete on csrimp.chain_company to tool_user;
grant select,insert,update,delete on csrimp.supplier to tool_user;
grant select,insert,update,delete on csrimp.chain_appli_compa_capabi to tool_user;
grant select,insert,update,delete on csrimp.chain_chain_user to tool_user;
grant select,insert,update,delete on csrimp.chain_company_group to tool_user;
grant select,insert,update,delete on csrimp.chain_compan_type_relati to tool_user;
grant select,insert,update,delete on csrimp.chain_compan_type_capabi to tool_user;
grant select,insert,update,delete on csrimp.chain_group_capab_overri to tool_user;
grant select,insert,update,delete on csrimp.chain_implementation to tool_user;
grant select,insert,update,delete on csrimp.chain_sector to tool_user;
grant select,insert,update,delete on csrimp.chain_tertiary_relations to tool_user;
grant select,insert,update,delete on csrimp.chain_company_type_role to tool_user;
grant select,insert,update,delete on csrimp.chain_supplier_relationship to tool_user;
grant select,insert,update,delete on csrimp.chain_supplier_follower to tool_user;
grant select,insert,update,delete on csrimp.chain_card to tool_user;
grant select,insert,update,delete on csrimp.chain_card_group_card to tool_user;
grant select,insert,update,delete on csrimp.chain_card_group_progression to tool_user;
grant select,insert,update,delete on csrimp.chain_card_init_param to tool_user;
grant select,insert,update,delete on csrimp.cms_tab to cms;
grant select,insert,update,delete on csrimp.cms_tab_column to cms;
grant select, insert, update, delete on csrimp.chain_activity_type to tool_user;
grant select, insert, update, delete on csrimp.chain_outcome_type to tool_user;
grant select, insert, update, delete on csrimp.chain_activi_outcom_type to tool_user;
grant select, insert, update, delete on csrimp.chain_activity to tool_user;
grant select, insert, update, delete on csrimp.chain_activity_log to tool_user;
grant select, insert, update, delete on csrimp.chain_activity_log_file to tool_user;
grant select, insert, update, delete on csrimp.chain_acti_type_tag_grou to tool_user;
grant select, insert, update, delete on csrimp.chain_activity_involvement to tool_user;
grant select, insert, update, delete on csrimp.chain_activity_tag to tool_user;
grant select, insert, update, delete on csrimp.chain_activi_type_action to tool_user;
grant select, insert, update, delete on csrimp.chain_act_outc_type_act to tool_user;
grant select, insert, update, delete on csrimp.chain_activit_type_alert to tool_user;
grant select, insert, update, delete on csrimp.chain_act_type_aler_role to tool_user;
grant select, insert, update, delete on csrimp.chain_act_type_defa_user to tool_user;
grant select, insert, update, delete on csrimp.chain_alert_parti_templa to tool_user;
grant select, insert, update, delete on csrimp.chain_ale_part_temp_para to tool_user;
grant select, insert, update, delete on csrimp.chain_amount_unit to tool_user;
grant select, insert, update, delete on csrimp.chain_audit_request to tool_user;
grant select, insert, update, delete on csrimp.chain_audit_reques_alert to tool_user;
grant select, insert, update, delete on csrimp.chain_business_unit to tool_user;
grant select, insert, update, delete on csrimp.chain_busine_unit_member to tool_user;
grant select, insert, update, delete on csrimp.chain_busine_unit_suppli to tool_user;
grant select, insert, update, delete on csrimp.chain_ch_use_ema_add_log to tool_user;
grant select, insert, update, delete on csrimp.chain_company_cc_email to tool_user;
grant select, insert, update, delete on csrimp.chain_company_header to tool_user;
grant select, insert, update, delete on csrimp.chain_compan_metric_type to tool_user;
grant select, insert, update, delete on csrimp.chain_company_metric to tool_user;
grant select, insert, update, delete on csrimp.chain_company_reference to tool_user;
grant select, insert, update, delete on csrimp.chain_company_tab to tool_user;
grant select, insert, update, delete on csrimp.chain_company_tag_group to tool_user;
grant select, insert, update, delete on csrimp.chain_component_type to tool_user;
grant select, insert, update, delete on csrimp.chain_compon_type_contai to tool_user;
grant select, insert, update, delete on csrimp.chain_component to tool_user;
grant select, insert, update, delete on csrimp.chain_file_upload to tool_user;
grant select, insert, update, delete on csrimp.chain_component_document to tool_user;
grant select, insert, update, delete on csrimp.chain_component_source to tool_user;
grant select, insert, update, delete on csrimp.chain_component_tag to tool_user;
grant select, insert, update, delete on csrimp.chain_compound_filter to tool_user;
grant select, insert, update, delete on csrimp.chain_cus_aler_entr_temp to tool_user;
grant select, insert, update, delete on csrimp.chain_cus_aler_entr_type to tool_user;
grant select, insert, update, delete on csrimp.chain_customer_aggregate_type to tool_user;
grant select, insert, update, delete on csrimp.chain_def_prod_code_type to tool_user;
grant select, insert, update, delete on csrimp.chain_de_sup_rel_cod_lab to tool_user;
grant select, insert, update, delete on csrimp.chain_email_stub to tool_user;
grant select, insert, update, delete on csrimp.chain_file_group to tool_user;
grant select, insert, update, delete on csrimp.chain_file_group_file to tool_user;
grant select, insert, update, delete on csrimp.chain_filter to tool_user;
grant select, insert, update, delete on csrimp.chain_filter_field to tool_user;
grant select, insert, update, delete on csrimp.chain_filter_value to tool_user;
grant select, insert, update, delete on csrimp.chain_filter_page_column to tool_user;
grant select, insert, update, delete on csrimp.chain_filter_item_config to tool_user;
grant select, insert, update, delete on csrimp.chain_filter_page_cms_table to tool_user;
grant select, insert, update, delete on csrimp.chain_filter_page_ind to tool_user;
grant select, insert, update, delete on csrimp.chain_filter_page_ind_interval to tool_user;
grant select, insert, update, delete on csrimp.chain_filtersupplierrepo to tool_user;
grant select, insert, update, delete on csrimp.chain_flow_filter to tool_user;
grant select, insert, update, delete on csrimp.chain_invitation to tool_user;
grant select, insert, update, delete on csrimp.chain_invitatio_user_tpl to tool_user;
grant select, insert, update, delete on csrimp.chain_message_definition to tool_user;
grant select, insert, update, delete on csrimp.chain_message_param to tool_user;
grant select, insert, update, delete on csrimp.chain_questionnair_group to tool_user;
grant select, insert, update, delete on csrimp.chain_questionnaire_type to tool_user;
grant select, insert, update, delete on csrimp.chain_flow_question_type to tool_user;
grant select, insert, update, delete on csrimp.chain_invi_qnr_type_comp to tool_user;
grant select, insert, update, delete on csrimp.chain_message to tool_user;
grant select, insert, update, delete on csrimp.chain_alert_entry to tool_user;
grant select, insert, update, delete on csrimp.chain_alert_entry_param to tool_user;
grant select, insert, update, delete on csrimp.chain_invitatio_qnr_type to tool_user;
grant select, insert, update, delete on csrimp.chain_message_recipient to tool_user;
grant select, insert, update, delete on csrimp.chain_messag_refresh_log to tool_user;
grant select, insert, update, delete on csrimp.chain_newsflash to tool_user;
grant select, insert, update, delete on csrimp.chain_newsflash_company to tool_user;
grant select, insert, update, delete on csrimp.chain_newsfl_user_settin to tool_user;
grant select, insert, update, delete on csrimp.chain_product to tool_user;
grant select, insert, update, delete on csrimp.chain_product_code_type to tool_user;
grant select, insert, update, delete on csrimp.chain_produc_metric_type to tool_user;
grant select, insert, update, delete on csrimp.chain_product_revision to tool_user;
grant select, insert, update, delete on csrimp.chain_purchase_channel to tool_user;
grant select, insert, update, delete on csrimp.chain_purchase_component to tool_user;
grant select, insert, update, delete on csrimp.chain_purchase to tool_user;
grant select, insert, update, delete on csrimp.chain_purchase_tag to tool_user;
grant select, insert, update, delete on csrimp.chain_purchaser_follower to tool_user;
grant select, insert, update, delete on csrimp.chain_qnna_shar_aler_log to tool_user;
grant select, insert, update, delete on csrimp.chain_qnr_acti_secu_mask to tool_user;
grant select, insert, update, delete on csrimp.chain_questionnaire to tool_user;
grant select, insert, update, delete on csrimp.chain_qnr_shar_log_entry to tool_user;
grant select, insert, update, delete on csrimp.chain_qnr_stat_log_entry to tool_user;
grant select, insert, update, delete on csrimp.chain_quest_expiry_alert to tool_user;
grant select, insert, update, delete on csrimp.chain_question_invitatio to tool_user;
grant select, insert, update, delete on csrimp.chain_questi_metric_type to tool_user;
grant select, insert, update, delete on csrimp.chain_questionnai_metric to tool_user;
grant select, insert, update, delete on csrimp.chain_questionnair_share to tool_user;
grant select, insert, update, delete on csrimp.chain_questionnaire_user to tool_user;
grant select, insert, update, delete on csrimp.chain_questi_user_action to tool_user;
grant select, insert, update, delete on csrimp.chain_recipient to tool_user;
grant select, insert, update, delete on csrimp.chain_reference to tool_user;
grant select, insert, update, delete on csrimp.chain_review_alert to tool_user;
grant select, insert, update, delete on csrimp.chain_saved_filter to tool_user;
grant select, insert, update, delete on csrimp.chain_saved_filter_agg_type to tool_user;
GRANT SELECT, INSERT, UPDATE, DELETE ON csrimp.chain_saved_filter_region TO tool_user;
grant select, insert, update, delete on csrimp.chain_saved_filter_alert to tool_user;
grant select, insert, update, delete on csrimp.chain_saved_fltr_alrt_sbscrptn to tool_user;
grant select, insert, update, delete on csrimp.chain_supplier_audit to tool_user;
grant select, insert, update, delete on csrimp.chain_task to tool_user;
grant select, insert, update, delete on csrimp.chain_task_action_trigge to tool_user;
grant select, insert, update, delete on csrimp.chain_task_entry to tool_user;
grant select, insert, update, delete on csrimp.chain_task_entry_date to tool_user;
grant select, insert, update, delete on csrimp.chain_task_entry_file to tool_user;
grant select, insert, update, delete on csrimp.chain_task_entry_note to tool_user;
grant select, insert, update, delete on csrimp.chain_task_scheme to tool_user;
grant select, insert, update, delete on csrimp.chain_task_type to tool_user;
grant select, insert, update, delete on csrimp.chain_task_invi_qnr_type to tool_user;
grant select, insert, update, delete on csrimp.chain_ucd_logon to tool_user;
grant select, insert, update, delete on csrimp.chain_uninvited_supplier to tool_user;
grant select, insert, update, delete on csrimp.chain_url_overrides to tool_user;
grant select, insert, update, delete on csrimp.chain_use_aler_entr_type to tool_user;
grant select, insert, update, delete on csrimp.chain_user_message_log to tool_user;
grant select, insert, update, delete on csrimp.chain_valid_purch_compon to tool_user;
grant select, insert, update, delete on csrimp.chain_worksh_file_upload to tool_user;
grant select, insert, update, delete on csrimp.chain_defau_messa_defini to tool_user;
grant select, insert, update, delete on csrimp.chain_messa_defin_lookup to tool_user;
grant select, insert, update, delete on csrimp.chain_filter_type to tool_user;
grant select, insert, update, delete on csrimp.chain_group_capability to tool_user;
grant select, insert, update, delete on csrimp.chain_card_progre_action to tool_user;
grant select, insert, update, delete on csrimp.chain_product_type to tool_user;
grant select, insert, update, delete on csrimp.chain_company_product_type to tool_user;
grant select, insert, update, delete on csrimp.chain_product_type_tag to tool_user;
grant select, insert, update, delete on csrimp.chain_busine_relati_type to tool_user;
grant select, insert, update, delete on csrimp.chain_busine_relati_tier to tool_user;
grant select, insert, update, delete on csrimp.chain_bu_rel_tie_com_typ to tool_user;
grant select, insert, update, delete on csrimp.chain_business_relations to tool_user;
grant select, insert, update, delete on csrimp.chain_busin_relat_compan to tool_user;
grant select, insert, update, delete on csrimp.chain_risk_level to tool_user;
grant select, insert, update, delete on csrimp.chain_country_risk_level to tool_user;
grant select, insert, update, delete on csrimp.chain_import_source to tool_user;
grant select, insert, update, delete on csrimp.chain_dedupe_mapping to tool_user;
grant select, insert, update, delete on csrimp.chain_dedupe_rule to tool_user;
grant select, insert, update, delete on csrimp.chain_dedupe_rule_mappin to tool_user;
grant select, insert, update, delete on csrimp.chain_aggregate_type_config to tool_user;
grant select, insert, update, delete on csrimp.higg_module_tag_group to tool_user;
grant select, insert, update, delete on csrimp.higg_config to tool_user;
grant select, insert, update, delete on csrimp.higg_config_module to tool_user;
grant select, insert, update, delete on csrimp.higg_response to tool_user;
grant select, insert, update, delete on csrimp.higg_section_score to tool_user;
grant select, insert, update, delete on csrimp.higg_sub_section_score to tool_user;
grant select, insert, update, delete on csrimp.higg_question_response to tool_user;
grant select, insert, update, delete on csrimp.higg_profile to tool_user;
grant select, insert, update, delete on csrimp.higg_question_survey to tool_user;
grant select, insert, update, delete on csrimp.higg_question_option_survey to tool_user;
grant select, insert, update, delete on csrimp.higg_config_profile to tool_user;
grant select, insert, update, delete on csrimp.worksheet to tool_user;
grant select, insert, update, delete on csrimp.worksheet_column to tool_user;
grant select, insert, update, delete on csrimp.workshe_column_value_map to tool_user;
grant select, insert, update, delete on csrimp.worksheet_row to tool_user;
grant select, insert, update, delete on csrimp.worksheet_value_map to tool_user;
grant select, insert, update, delete on csrimp.workshee_value_map_value to tool_user;
grant select, insert, update, delete on csrimp.chem_chem_options to tool_user;
grant select, insert, update, delete on csrimp.chem_cas to tool_user;
grant select, insert, update, delete on csrimp.chem_cas_group to tool_user;
grant select, insert, update, delete on csrimp.chem_cas_group_member to tool_user;
grant select, insert, update, delete on csrimp.chem_cas_restricted to tool_user;
grant select, insert, update, delete on csrimp.chem_classification to tool_user;
grant select, insert, update, delete on csrimp.chem_manufacturer to tool_user;
grant select, insert, update, delete on csrimp.chem_substance to tool_user;
grant select, insert, update, delete on csrimp.chem_substance_cas to tool_user;
grant select, insert, update, delete on csrimp.chem_usage to tool_user;
grant select, insert, update, delete on csrimp.chem_substance_region to tool_user;
grant select, insert, update, delete on csrimp.chem_subst_region_proces to tool_user;
grant select, insert, update, delete on csrimp.chem_process_cas_default to tool_user;
grant select, insert, update, delete on csrimp.chem_subs_proc_use_chang to tool_user;
grant select, insert, update, delete on csrimp.chem_sub_pro_cas_des_cha to tool_user;
grant select, insert, update, delete on csrimp.chem_substance_audit_log to tool_user;
grant select, insert, update, delete on csrimp.chem_substance_file to tool_user;
grant select, insert, update, delete on csrimp.chem_substan_process_use to tool_user;
grant select, insert, update, delete on csrimp.chem_subs_proce_cas_dest to tool_user;
grant select, insert, update, delete on csrimp.chem_subs_proce_use_file to tool_user;
grant select, insert, update, delete on csrimp.chem_usage_audit_log to tool_user;
grant select, insert, update, delete on csrimp.ct_customer_options to tool_user;
grant select, insert, update, delete on csrimp.ct_company to tool_user;
grant select, insert, update, delete on csrimp.ct_breakdown_type to tool_user;
grant select, insert, update, delete on csrimp.ct_breakdown to tool_user;
grant select, insert, update, delete on csrimp.ct_breakdown_group to tool_user;
grant select, insert, update, delete on csrimp.ct_breakdown_region to tool_user;
grant select, insert, update, delete on csrimp.ct_breakdown_region_eio to tool_user;
grant select, insert, update, delete on csrimp.ct_breakdow_region_group to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_air_trip to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_bus_trip to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_cab_trip to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_car_trip to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_emissions to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_motorbike_trip to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_options to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_profile to tool_user;
grant select, insert, update, delete on csrimp.ct_bt_train_trip to tool_user;
grant select, insert, update, delete on csrimp.ct_company_consumpt_type to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_bus_entry to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_car_entry to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_emissions_all to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_motorbike_entry to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_options to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_profile to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_questionnaire to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_questionna_answers to tool_user;
grant select, insert, update, delete on csrimp.ct_ec_train_entry to tool_user;
grant select, insert, update, delete on csrimp.ct_hotspot_result to tool_user;
grant select, insert, update, delete on csrimp.ct_ht_consumption to tool_user;
grant select, insert, update, delete on csrimp.ct_ht_consumption_region to tool_user;
grant select, insert, update, delete on csrimp.ct_ht_cons_source_breakd to tool_user;
grant select, insert, update, delete on csrimp.ct_ps_emissions_all to tool_user;
grant select, insert, update, delete on csrimp.ct_supplier to tool_user;
grant select, insert, update, delete on csrimp.ct_ps_item to tool_user;
grant select, insert, update, delete on csrimp.ct_ps_item_eio to tool_user;
grant select, insert, update, delete on csrimp.ct_ps_options to tool_user;
grant select, insert, update, delete on csrimp.ct_ps_spend_breakdown to tool_user;
grant select, insert, update, delete on csrimp.ct_ps_supplier_eio_freq to tool_user;
grant select, insert, update, delete on csrimp.ct_supplier_contact to tool_user;
grant select, insert, update, delete on csrimp.ct_up_options to tool_user;
grant select, insert, update, delete on csrimp.ct_works_value_map_break to tool_user;
grant select, insert, update, delete on csrimp.ct_works_value_map_curre to tool_user;
grant select, insert, update, delete on csrimp.ct_works_value_map_dista to tool_user;
grant select, insert, update, delete on csrimp.ct_works_value_map_regio to tool_user;
grant select, insert, update, delete on csrimp.ct_works_value_map_suppl to tool_user;
grant select, insert, update, delete on csrimp.customer_flow_capability to tool_user;
grant select, insert, update, delete on csrimp.ia_type_survey_group to tool_user;
grant select, insert, update, delete on csrimp.ia_type_survey to tool_user;
grant select, insert, update, delete on csrimp.internal_audit_survey to tool_user;
grant select, insert, update, delete on csrimp.meter_data_priority to tool_user;
grant select, insert, update, delete on csrimp.meter_patch_data to tool_user;
grant select, insert, update, delete on csrimp.meter_input to tool_user;
grant select, insert, update, delete on csrimp.meter_input_aggr_ind to tool_user;
grant select, insert, update, delete on csrimp.meter_input_aggregator to tool_user;
grant select, insert, update, delete on csrimp.meter_patch_job to tool_user;
grant select, insert, update, delete on csrimp.meter_patch_batch_job to tool_user;
grant select, insert, update, delete on csrimp.meter_data_coverage_ind to tool_user;
grant select, insert, update, delete on csrimp.meter_type_input to tool_user;
grant select, insert, update, delete on csrimp.customer_file_upload_type_opt to tool_user;
grant select, insert, update, delete on csrimp.customer_file_upload_mime_opt to tool_user;
grant select, insert, update, delete on csrimp.image_upload_portlet to tool_user;
	
grant select, insert, update, delete on csrimp.quick_survey_score_threshold to tool_user;
grant select, insert, update, delete on csrimp.supplier_survey_response to tool_user;
grant select, insert, update, delete on csrimp.non_compliance_type_tag_group to tool_user;
grant select, insert, update, delete on csrimp.internal_audit_type_tag_group to tool_user;
grant select, insert, update, delete on csrimp.internal_audit_tag to tool_user;
grant select, insert, update, delete on csrimp.chain_company_type_tag_group to tool_user;
grant select, insert, update, delete on csrimp.gresb_indicator_mapping to tool_user;
grant select, insert, update, delete on csrimp.gresb_submission_log to tool_user;
grant select, insert, update, delete on csrimp.property_fund to tool_user;
grant select, insert, update, delete on csrimp.mgt_company_tree_sync_job to tool_user;
grant select, insert, update, delete on csrimp.issue_custom_field_date_val to tool_user;
grant select, insert, update, delete on csrimp.quick_survey_css to tool_user;
grant select, insert, update, delete on csrimp.chain_dedup_proce_record to tool_user;
grant select, insert, update, delete on csrimp.chain_dedupe_match to tool_user;
grant select, insert, update, delete on csrimp.geo_map to tool_user;
grant select, insert, update, delete on csrimp.geo_map_region to tool_user;
grant select, insert, update, delete on csrimp.degreeday_settings to tool_user;
grant select, insert, update, delete on csrimp.degreeday_region to tool_user;
grant select, insert, update, delete on csrimp.initiative to tool_user;
grant select, insert, update, delete on csrimp.initiative_metric to tool_user;
grant select, insert, update, delete on csrimp.initiative_project to tool_user;
grant select, insert, update, delete on csrimp.initia_projec_rag_status to tool_user;
grant select, insert, update, delete on csrimp.customer_init_saving_type to tool_user;
grant select, insert, update, delete on csrimp.initiative_metric_group to tool_user;
grant select, insert, update, delete on csrimp.project_initiative_metric to tool_user;
grant select, insert, update, delete on csrimp.initiative_metric_assoc to tool_user;
grant select, insert, update, delete on csrimp.proj_init_metr_flow_stat to tool_user;
grant select, insert, update, delete on csrimp.initiat_metric_state_ind to tool_user;
grant select, insert, update, delete on csrimp.aggr_tag_group to tool_user;
grant select, insert, update, delete on csrimp.initiativ_metric_tag_ind to tool_user;
grant select, insert, update, delete on csrimp.aggr_tag_group_member to tool_user;
grant select, insert, update, delete on csrimp.flow_state_group to tool_user;
grant select, insert, update, delete on csrimp.flow_state_group_member to tool_user;
grant select, insert, update, delete on csrimp.initiative_comment to tool_user;
grant select, insert, update, delete on csrimp.initiative_event to tool_user;
grant select, insert, update, delete on csrimp.initiative_group to tool_user;
grant select, insert, update, delete on csrimp.initiat_group_flow_state to tool_user;
grant select, insert, update, delete on csrimp.initiative_group_member to tool_user;
grant select, insert, update, delete on csrimp.initiative_group_user to tool_user;
grant select, insert, update, delete on csrimp.initiative_import_map_mru to tool_user;
grant select, insert, update, delete on csrimp.initiati_import_template to tool_user;
grant select, insert, update, delete on csrimp.initia_import_templa_map to tool_user;
grant select, insert, update, delete on csrimp.initiative_metric_val to tool_user;
grant select, insert, update, delete on csrimp.initiative_period_status to tool_user;
grant select, insert, update, delete on csrimp.initiative_period to tool_user;
grant select, insert, update, delete on csrimp.initiative_project_tab to tool_user;
grant select, insert, update, delete on csrimp.initia_project_tab_group to tool_user;
grant select, insert, update, delete on csrimp.initiative_project_team to tool_user;
grant select, insert, update, delete on csrimp.initiative_region to tool_user;
grant select, insert, update, delete on csrimp.initiative_sponsor to tool_user;
grant select, insert, update, delete on csrimp.initiative_tag to tool_user;
grant select, insert, update, delete on csrimp.initiative_user_group to tool_user;
grant select, insert, update, delete on csrimp.initia_projec_user_group to tool_user;
grant select, insert, update, delete on csrimp.initiative_user to tool_user;
grant select, insert, update, delete on csrimp.initiative_user_msg to tool_user;
grant select, insert, update, delete on csrimp.initiatives_options to tool_user;
grant select, insert, update, delete on csrimp.user_msg to tool_user;
grant select, insert, update, delete on csrimp.proje_initia_period_stat to tool_user;
grant select, insert, update, delete on csrimp.defaul_initia_user_state to tool_user;
grant select, insert, update, delete on csrimp.issue_initiative to tool_user;
grant select, insert, update, delete on csrimp.aggr_region to tool_user;
grant select, insert, update, delete on csrimp.alert_batch_run to tool_user;
grant select, insert, update, delete on csrimp.project_doc_folder to tool_user;
grant select, insert, update, delete on csrimp.project_tag_group to tool_user;
grant select, insert, update, delete on csrimp.project_tag_filter to tool_user;
grant update on security.sessionstate to tool_user, web_user;
grant select, insert, update, delete on csrimp.initiative to web_user;
grant select, insert, update, delete on csrimp.initiative_metric to web_user;
grant select, insert, update, delete on csrimp.initiative_project to web_user;
grant select, insert, update, delete on csrimp.initia_projec_rag_status to web_user;
grant select, insert, update, delete on csrimp.customer_init_saving_type to web_user;
grant select, insert, update, delete on csrimp.initiative_metric_group to web_user;
grant select, insert, update, delete on csrimp.project_initiative_metric to web_user;
grant select, insert, update, delete on csrimp.initiative_metric_assoc to web_user;
grant select, insert, update, delete on csrimp.proj_init_metr_flow_stat to web_user;
grant select, insert, update, delete on csrimp.initiat_metric_state_ind to web_user;
grant select, insert, update, delete on csrimp.aggr_tag_group to web_user;
grant select, insert, update, delete on csrimp.initiativ_metric_tag_ind to web_user;
grant select, insert, update, delete on csrimp.aggr_tag_group_member to web_user;
grant select, insert, update, delete on csrimp.flow_state_group to web_user;
grant select, insert, update, delete on csrimp.flow_state_group_member to web_user;
grant select, insert, update, delete on csrimp.initiative_comment to web_user;
grant select, insert, update, delete on csrimp.initiative_event to web_user;
grant select, insert, update, delete on csrimp.initiative_group to web_user;
grant select, insert, update, delete on csrimp.initiat_group_flow_state to web_user;
grant select, insert, update, delete on csrimp.initiative_group_member to web_user;
grant select, insert, update, delete on csrimp.initiative_group_user to web_user;
grant select, insert, update, delete on csrimp.initiative_import_map_mru to web_user;
grant select, insert, update, delete on csrimp.initiati_import_template to web_user;
grant select, insert, update, delete on csrimp.initia_import_templa_map to web_user;
grant select, insert, update, delete on csrimp.initiative_metric_val to web_user;
grant select, insert, update, delete on csrimp.initiative_period_status to web_user;
grant select, insert, update, delete on csrimp.initiative_period to web_user;
grant select, insert, update, delete on csrimp.initiative_project_tab to web_user;
grant select, insert, update, delete on csrimp.initia_project_tab_group to web_user;
grant select, insert, update, delete on csrimp.initiative_project_team to web_user;
grant select, insert, update, delete on csrimp.initiative_region to web_user;
grant select, insert, update, delete on csrimp.initiative_sponsor to web_user;
grant select, insert, update, delete on csrimp.initiative_tag to web_user;
grant select, insert, update, delete on csrimp.initiative_user_group to web_user;
grant select, insert, update, delete on csrimp.initia_projec_user_group to web_user;
grant select, insert, update, delete on csrimp.initiative_user to web_user;
grant select, insert, update, delete on csrimp.initiative_user_msg to web_user;
grant select, insert, update, delete on csrimp.initiatives_options to web_user;
grant select, insert, update, delete on csrimp.user_msg to web_user;
grant select, insert, update, delete on csrimp.proje_initia_period_stat to web_user;
grant select, insert, update, delete on csrimp.defaul_initia_user_state to web_user;
grant select, insert, update, delete on csrimp.issue_initiative to web_user;
grant select, insert, update, delete on csrimp.aggr_region to web_user;
grant select, insert, update, delete on csrimp.alert_batch_run to web_user;
grant select, insert, update, delete on csrimp.project_doc_folder to web_user;
grant select, insert, update, delete on csrimp.project_tag_group to web_user;
grant select, insert, update, delete on csrimp.project_tag_filter to web_user;
grant select, insert, update on csr.initiative to csrimp;
grant select, insert, update on csr.initiative_metric to csrimp;
grant select, insert, update on csr.initiative_project to csrimp;
grant select, insert, update on csr.initiative_project_rag_status to csrimp;
grant select, insert, update on csr.customer_init_saving_type to csrimp;
grant select, insert, update on csr.initiative_metric_group to csrimp;
grant select, insert, update on csr.project_initiative_metric to csrimp;
grant select, insert, update on csr.initiative_metric_assoc to csrimp;
grant select, insert, update on csr.project_init_metric_flow_state to csrimp;
grant select, insert, update on csr.initiative_metric_state_ind to csrimp;
grant select, insert, update on csr.aggr_tag_group to csrimp;
grant select, insert, update on csr.initiative_metric_tag_ind to csrimp;
grant select, insert, update on csr.aggr_tag_group_member to csrimp;
grant select, insert, update on csr.flow_state_group to csrimp;
grant select, insert, update on csr.flow_state_group_member to csrimp;
grant select, insert, update on csr.initiative_comment to csrimp;
grant select, insert, update on csr.initiative_event to csrimp;
grant select, insert, update on csr.initiative_group to csrimp;
grant select, insert, update on csr.initiative_group_flow_state to csrimp;
grant select, insert, update on csr.initiative_group_member to csrimp;
grant select, insert, update on csr.initiative_group_user to csrimp;
grant select, insert, update on csr.initiative_import_map_mru to csrimp;
grant select, insert, update on csr.initiative_import_template to csrimp;
grant select, insert, update on csr.initiative_import_template_map to csrimp;
grant select, insert, update on csr.initiative_metric_val to csrimp;
grant select, insert, update on csr.initiative_period_status to csrimp;
grant select, insert, update on csr.initiative_period to csrimp;
grant select, insert, update on csr.initiative_project_tab to csrimp;
grant select, insert, update on csr.initiative_project_tab_group to csrimp;
grant select, insert, update on csr.initiative_project_team to csrimp;
grant select, insert, update on csr.initiative_region to csrimp;
grant select, insert, update on csr.initiative_sponsor to csrimp;
grant select, insert, update on csr.initiative_tag to csrimp;
grant select, insert, update on csr.initiative_user_group to csrimp;
grant select, insert, update on csr.initiative_project_user_group to csrimp;
grant select, insert, update on csr.initiative_user to csrimp;
grant select, insert, update on csr.initiative_user_msg to csrimp;
grant select, insert, update on csr.initiatives_options to csrimp;
grant select, insert, update on csr.user_msg to csrimp;
grant select, insert, update on csr.project_initiative_period_stat to csrimp;
grant select, insert, update on csr.default_initiative_user_state to csrimp;
grant select, insert, update on csr.issue_initiative to csrimp;
grant select, insert, update on csr.aggr_region to csrimp;
grant select, insert, update on csr.alert_batch_run to csrimp;
grant select, insert, update on csr.customer_flow_alert_class to csrimp;
grant select, insert, update on csr.project_doc_folder to csrimp;
grant select, insert, update on csr.project_tag_group to csrimp;
grant select, insert, update on csr.project_tag_filter to csrimp;
grant select on csr.initiative_metric_id_seq to csrimp;
grant select on csr.aggr_tag_group_id_seq to csrimp;
grant select on csr.flow_state_group_id_seq to csrimp;
grant select on csr.initiative_group_id_seq to csrimp;
grant select on csr.initiative_user_group_id_seq to csrimp;
grant select on csr.init_import_template_id_seq to csrimp;
grant select on csr.initiativ_period_status_id_seq to csrimp;
grant select on csr.initiative_comment_id_seq to csrimp;
grant select on csr.user_msg_id_seq to csrimp;
grant select on csr.issue_initiative_id_seq to csrimp;
grant select on csr.initiative_event_id_seq to csrimp;


ALTER TABLE CHAIN.HIGG_QUESTION_OPT_CONVERSION ADD CONSTRAINT FK_HIGG_Q_O_CONV_CONVERSION
	FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID)
	REFERENCES CSR.MEASURE_CONVERSION (APP_SID, MEASURE_CONVERSION_ID);
	
ALTER TABLE CHAIN.HIGG_CONFIG ADD CONSTRAINT FK_HIGG_CONF_AGG_IND_GROUP
	FOREIGN KEY (APP_SID, AGGREGATE_IND_GROUP_ID)
	REFERENCES CSR.AGGREGATE_IND_GROUP (APP_SID, AGGREGATE_IND_GROUP_ID);
ALTER TABLE CHAIN.BSCI_AUDIT ADD CONSTRAINT FK_BSCI_INTERNAL_AUDIT_TYPE_ID
	FOREIGN KEY (APP_SID, AUDIT_TYPE_ID)
	REFERENCES CSR.INTERNAL_AUDIT_TYPE(APP_SID, INTERNAL_AUDIT_TYPE_ID);
ALTER TABLE CHAIN.BSCI_AUDIT ADD CONSTRAINT FK_BSCI_INTERNAL_AUDIT_SID
	FOREIGN KEY (APP_SID, INTERNAL_AUDIT_SID)
	REFERENCES CSR.INTERNAL_AUDIT (APP_SID, INTERNAL_AUDIT_SID);
CREATE INDEX CHAIN.IX_BSCI_AUDIT_COMPANY_AUDIT ON CHAIN.BSCI_AUDIT (APP_SID, COMPANY_SID, INTERNAL_AUDIT_SID, AUDIT_TYPE_ID);


CREATE OR REPLACE VIEW csr.v$audit AS
	SELECT ia.internal_audit_sid, ia.region_sid, r.description region_description, ia.audit_dtm, ia.label,
		   NVL2(ia.internal_audit_ref, atg.internal_audit_ref_prefix || ia.internal_audit_ref, null) custom_audit_id,
		   atg.internal_audit_ref_prefix, ia.internal_audit_ref, ia.ovw_validity_dtm,
		   ia.auditor_user_sid, NVL(cu.full_name, au.full_name) auditor_full_name, sr.submitted_dtm survey_completed,
		   NVL(nc.cnt, 0) open_non_compliances, ia.survey_sid, ia.auditor_name, ia.auditor_organisation,
		   r.region_type, r.geo_longitude longitude, r.geo_latitude latitude, rt.class_name region_type_class_name,
		   ia.auditee_user_sid, u.full_name auditee_full_name, u.email auditee_email,
		   SUBSTR(ia.notes, 1, 50) short_notes, ia.notes full_notes,
		   iat.internal_audit_type_id audit_type_id, iat.label audit_type_label, iat.interactive audit_type_interactive,
		   qs.label survey_label, ia.app_sid, ia.internal_audit_type_id, iat.auditor_role_sid,
		   iat.audit_contact_role_sid, ia.audit_closure_type_id, act.label closure_label, act.icon_image_filename,
		   ia.created_by_user_sid, ia.survey_response_id, ia.created_dtm, NVL(cu.email, au.email) auditor_email,
		   iat.filename template_filename, iat.assign_issues_to_role, iat.add_nc_per_question, cvru.user_giving_cover_sid cover_auditor_sid,
		   fi.flow_sid, f.label flow_label, ia.flow_item_id, fi.current_state_id, fs.label flow_state_label, fs.is_final flow_state_is_final, 
		   fs.state_colour flow_state_colour, iat.summary_survey_sid, sqs.label summary_survey_label, ia.summary_response_id, act.is_failure,
		   ia.auditor_company_sid, ac.name auditor_company_name, iat.tab_sid, iat.form_path, ia.comparison_response_id, iat.nc_audit_child_region,
		   atg.label ia_type_group_label, atg.lookup_key ia_type_group_lookup_key, atg.internal_audit_type_group_id,
		   atg.audit_singular_label, atg.audit_plural_label, atg.auditee_user_label, atg.auditor_user_label, atg.auditor_name_label,
		   sr.overall_score survey_overall_score, sr.overall_max_score survey_overall_max_score, sr.survey_version,
		   sst.score_type_id survey_score_type_id, sr.score_threshold_id survey_score_thrsh_id, sst.label survey_score_label, sst.format_mask survey_score_format_mask,
		   ia.nc_score, iat.nc_score_type_id, NVL(ia.ovw_nc_score_thrsh_id, ia.nc_score_thrsh_id) nc_score_thrsh_id, ncst.max_score nc_max_score, ncst.label nc_score_label,
		   ncst.format_mask nc_score_format_mask,
		   CASE (atct.re_audit_due_after_type)
				WHEN 'd' THEN nvl(ia.ovw_validity_dtm, ia.audit_dtm + atct.re_audit_due_after)
				WHEN 'w' THEN nvl(ia.ovw_validity_dtm, ia.audit_dtm + (atct.re_audit_due_after*7))
				WHEN 'm' THEN nvl(ia.ovw_validity_dtm, ADD_MONTHS(ia.audit_dtm, atct.re_audit_due_after))
				WHEN 'y' THEN nvl(ia.ovw_validity_dtm, ADD_MONTHS(ia.audit_dtm, atct.re_audit_due_after*12))
				ELSE ia.ovw_validity_dtm END next_audit_due_dtm
	  FROM csr.internal_audit ia
	  LEFT JOIN (
			SELECT auc.app_sid, auc.internal_audit_sid, auc.user_giving_cover_sid,
				   ROW_NUMBER() OVER (PARTITION BY auc.internal_audit_sid ORDER BY LEVEL DESC, uc.start_dtm DESC,  uc.user_cover_id DESC) rn,
				   CONNECT_BY_ROOT auc.user_being_covered_sid user_being_covered_sid
			  FROM csr.audit_user_cover auc
			  JOIN csr.user_cover uc ON auc.app_sid = uc.app_sid AND auc.user_cover_id = uc.user_cover_id
			 CONNECT BY NOCYCLE PRIOR auc.app_sid = auc.app_sid AND PRIOR auc.user_being_covered_sid = auc.user_giving_cover_sid
		) cvru
	    ON ia.internal_audit_sid = cvru.internal_audit_sid
	   AND ia.app_sid = cvru.app_sid AND ia.auditor_user_sid = cvru.user_being_covered_sid
	   AND cvru.rn = 1
	  LEFT JOIN csr.csr_user u ON ia.auditee_user_sid = u.csr_user_sid AND ia.app_sid = u.app_sid
	  JOIN csr.csr_user au ON ia.auditor_user_sid = au.csr_user_sid AND ia.app_sid = au.app_sid
	  LEFT JOIN csr.csr_user cu ON cvru.user_giving_cover_sid = cu.csr_user_sid AND cvru.app_sid = cu.app_sid
	  LEFT JOIN csr.internal_audit_type iat ON ia.app_sid = iat.app_sid AND ia.internal_audit_type_id = iat.internal_audit_type_id
	  LEFT JOIN csr.internal_audit_type_group atg ON atg.app_sid = iat.app_sid AND atg.internal_audit_type_group_id = iat.internal_audit_type_group_id
	  LEFT JOIN csr.v$quick_survey qs ON ia.survey_sid = qs.survey_sid AND ia.app_sid = qs.app_sid
	  LEFT JOIN csr.v$quick_survey sqs ON iat.summary_survey_sid = sqs.survey_sid AND iat.app_sid = sqs.app_sid
	  LEFT JOIN (
			SELECT anc.app_sid, anc.internal_audit_sid, COUNT(DISTINCT anc.non_compliance_id) cnt
			  FROM csr.audit_non_compliance anc
			  JOIN csr.non_compliance nnc ON anc.non_compliance_id = nnc.non_compliance_id AND anc.app_sid = nnc.app_sid
			  LEFT JOIN csr.issue_non_compliance inc ON nnc.non_compliance_id = inc.non_compliance_id AND nnc.app_sid = inc.app_sid
			  LEFT JOIN csr.issue i ON inc.issue_non_compliance_id = i.issue_non_compliance_id AND inc.app_sid = i.app_sid
			 WHERE ((nnc.is_closed IS NULL
			   AND i.resolved_dtm IS NULL
			   AND i.rejected_dtm IS NULL
			   AND i.deleted = 0)
			    OR nnc.is_closed = 0)
			 GROUP BY anc.app_sid, anc.internal_audit_sid
			) nc ON ia.internal_audit_sid = nc.internal_audit_sid AND ia.app_sid = nc.app_sid
	  LEFT JOIN csr.v$quick_survey_response sr ON ia.survey_response_id = sr.survey_response_id AND ia.app_sid = sr.app_sid
	  LEFT JOIN csr.v$region r ON ia.app_sid = r.app_sid AND ia.region_sid = r.region_sid
	  LEFT JOIN csr.region_type rt ON r.region_type = rt.region_type
	  LEFT JOIN csr.audit_closure_type act ON ia.audit_closure_type_id = act.audit_closure_type_id AND ia.app_sid = act.app_sid
	  LEFT JOIN csr.audit_type_closure_type atct ON ia.audit_closure_type_id = atct.audit_closure_type_id AND ia.internal_audit_type_id = atct.internal_audit_type_id AND ia.app_sid = atct.app_sid
	  LEFT JOIN csr.flow_item fi
	    ON ia.app_sid = fi.app_sid AND ia.flow_item_id = fi.flow_item_id
	  LEFT JOIN csr.flow_state fs
	    ON fs.app_sid = fi.app_sid AND fs.flow_state_id = fi.current_state_id
	  LEFT JOIN csr.flow f
	    ON f.app_sid = fi.app_sid AND f.flow_sid = fi.flow_sid
	  LEFT JOIN chain.company ac
	    ON ia.auditor_company_sid = ac.company_sid AND ia.app_sid = ac.app_sid
	  LEFT JOIN score_type ncst ON ncst.app_sid = iat.app_sid AND ncst.score_type_id = iat.nc_score_type_id
	  LEFT JOIN score_type sst ON sst.app_sid = qs.app_sid AND sst.score_type_id = qs.score_type_id
	 WHERE ia.deleted = 0;
CREATE OR REPLACE VIEW csr.v$quick_survey_response AS
	SELECT qsr.app_sid, qsr.survey_response_id, qsr.survey_sid, qsr.user_sid, qsr.user_name,
		   qsr.created_dtm, qsr.guid, qss.submitted_dtm, qsr.qs_campaign_sid, qss.overall_score,
		   qss.overall_max_score, qss.score_threshold_id, qss.submission_id, qss.survey_version, qss.submitted_by_user_sid
	  FROM quick_survey_response qsr
	  JOIN quick_survey_submission qss ON qsr.app_sid = qss.app_sid
	   AND qsr.survey_response_id = qss.survey_response_id
	   AND NVL(qsr.last_submission_id, 0) = qss.submission_id
	   AND qsr.survey_version > 0 -- filter out draft submissions
	   AND qsr.hidden = 0 -- filter out hidden responses
;
CREATE OR REPLACE VIEW csr.V$DELEG_PLAN_COL AS
	SELECT deleg_plan_col_id, deleg_plan_sid, d.description label, dpc.is_hidden, 'Delegation' type, dpcd.delegation_sid object_sid
	  FROM deleg_plan_col dpc
		JOIN deleg_plan_col_deleg dpcd ON dpc.deleg_plan_col_deleg_id = dpcd.deleg_plan_col_deleg_id
		JOIN v$delegation d ON dpcd.delegation_sid = d.delegation_sid
	 UNION
	SELECT deleg_plan_col_id, deleg_plan_sid, qs.label, dpc.is_hidden, 'Survey' type, dpcs.survey_sid object_sid
	  FROM deleg_plan_col dpc
		JOIN deleg_plan_col_survey dpcs ON dpc.deleg_plan_col_survey_id = dpcs.deleg_plan_col_survey_id
		JOIN v$quick_survey qs ON dpcs.survey_sid = qs.survey_sid;
begin
	update security.menu
	   set action = '/csr/site/reports/excel2/values.acds'
	 where action = '/csr/site/reports/excel/values.acds';
end;
/




INSERT INTO csr.module_param (module_id, param_name, pos, param_hint)
	 VALUES (75, 'in_bsci_id', 6, 'The BSCI ID for the client');
	
INSERT INTO CHAIN.GRID_EXTENSION (GRID_EXTENSION_ID, BASE_CARD_GROUP_ID, EXTENSION_CARD_GROUP_ID, RECORD_NAME) 
VALUES (2, 42 /*chain.filter_pkg.FILTER_TYPE_NON_COMPLIANCES*/, 41 /*chain.filter_pkg.FILTER_TYPE_AUDITS*/, 'audit');
INSERT INTO CHAIN.GRID_EXTENSION (GRID_EXTENSION_ID, BASE_CARD_GROUP_ID, EXTENSION_CARD_GROUP_ID, RECORD_NAME) 
VALUES (3, 42 /*chain.filter_pkg.FILTER_TYPE_NON_COMPLIANCES*/, 23 /*chain.filter_pkg.FILTER_TYPE_COMPANIES*/, 'company');
INSERT INTO csr.module (module_id, module_name, enable_sp, description)
VALUES (81, 'Maps in Audit List', 'EnableAuditMaps', 'Enables maps in Audit List.');
INSERT INTO csr.module (module_id, module_name, enable_sp, description)
VALUES (82, 'Maps in Supplier List', 'EnableSupplierMaps', 'Enables maps in Supplier List.');

BEGIN
	security.user_pkg.LogonAdmin;
	
  FOR r IN (
    SELECT app_sid, flow_sid
		  FROM csr.initiative_project
  ) LOOP
    BEGIN
      INSERT INTO csr.customer_flow_alert_class (app_sid, flow_alert_class)
           VALUES (r.app_sid, 'initiatives');
    EXCEPTION
      WHEN OTHERS THEN
        NULL;
    END;
    
    UPDATE csr.flow
       SET flow_alert_class = 'initiatives'
     WHERE flow_alert_class IS NULL
       AND app_sid = r.app_sid
       AND flow_sid = r.flow_sid;
  END LOOP;
END;
/

BEGIN
	--Create the menu item for all sites
	security.user_pkg.logonadmin;
	
	FOR r IN (
		SELECT app_sid, host
		  FROM csr.customer c, security.website w
		 WHERE c.host = w.website_name
	) LOOP
	
		security.user_pkg.logonadmin(r.host);
	
		DECLARE
			v_act_id 					security.security_pkg.T_ACT_ID DEFAULT security.security_pkg.GetAct;
			v_app_sid 					security.security_pkg.T_SID_ID DEFAULT security.security_pkg.GetApp;
			v_menu						security.security_pkg.T_SID_ID DEFAULT security.securableobject_pkg.GetSidFromPath(v_act_id, v_app_sid, 'menu');
			v_sa_sid					security.security_pkg.T_SID_ID DEFAULT security.securableobject_pkg.GetSIDFromPath(v_act_id, security.security_pkg.SID_ROOT, 'csr/SuperAdmins');
			v_setup_menu				security.security_pkg.T_SID_ID;
			v_forms_admin_menu			security.security_pkg.T_SID_ID;
			
		BEGIN
			BEGIN
				v_setup_menu := security.securableobject_pkg.GetSidFromPath(v_act_id, v_menu, 'Setup');
			EXCEPTION
				WHEN security.security_pkg.OBJECT_NOT_FOUND THEN
					security.menu_pkg.CreateMenu(v_act_id, v_menu, 'setup',  'Setup',  '/csr/site/admin/config/global.acds',  0, null, v_setup_menu);
			END;
		
			BEGIN
				v_forms_admin_menu := security.securableobject_pkg.GetSidFromPath(v_act_id, v_setup_menu, 'cms_admin_forms');
			EXCEPTION
				WHEN security.security_pkg.OBJECT_NOT_FOUND THEN
					security.menu_pkg.CreateMenu(v_act_id, v_setup_menu, 'cms_admin_forms',  'CMS form XML manager',  '/fp/cms/admin/forms/list.acds',  0, null, v_forms_admin_menu);
			END;
			
			-- don't inherit dacls
			security.securableobject_pkg.SetFlags(v_act_id, v_forms_admin_menu, 0);
			--Remove inherited ones
			security.acl_pkg.DeleteAllACEs(v_act_id, security.acl_pkg.GetDACLIDForSID(v_forms_admin_menu));
			-- Add SA permission
			security.acl_pkg.AddACE(v_act_id, security.acl_pkg.GetDACLIDForSID(v_forms_admin_menu), -1, security.security_pkg.ACE_TYPE_ALLOW, 
				security.security_pkg.ACE_FLAG_DEFAULT, v_sa_sid, security.security_pkg.PERMISSION_STANDARD_READ);
			
		END;
	END LOOP;
	
	security.user_pkg.logonadmin;
	
	UPDATE cms.form 
	   SET form_xml = XMLTYPE(REPLACE(REPLACE(XMLTYPE.getclobval(form_xml), '<select xmlns="http://www.credit360.com/XMLSchemas/cms">', '<select>'),'<form>','<form xmlns="http://www.credit360.com/XMLSchemas/cms">'));
	commit;
	
END;
/
BEGIN
	-- Insert new std measures
	INSERT INTO csr.std_measure_conversion (
		std_measure_conversion_id, std_measure_id, description, a, b, c, divisible
	) VALUES (
		28188, 5, '10 CF', 3.53146667, 1, 0, 1
	);
	INSERT INTO csr.std_measure_conversion (
		std_measure_conversion_id, std_measure_id, description, a, b, c, divisible
	) VALUES (
		28189, 5, '10 gallon', 26.4172052, 1, 0, 1
	);
	INSERT INTO csr.std_measure_conversion (
		std_measure_conversion_id, std_measure_id, description, a, b, c, divisible
	) VALUES (
		28190, 5, '10 m^3', 0.1, 1, 0, 1
	);
	INSERT INTO csr.std_measure_conversion (
		std_measure_conversion_id, std_measure_id, description, a, b, c, divisible
	) VALUES (
		28191, 5, 'acre-foot', 0.000810714, 1, 0, 1
	);
	INSERT INTO csr.std_measure_conversion (
		std_measure_conversion_id, std_measure_id, description, a, b, c, divisible
	) VALUES (
		28192, 5, 'DIGL', 21.9969157, 1, 0, 1
	);
	
	INSERT INTO csr.std_measure_conversion (
		std_measure_conversion_id, std_measure_id, description, a, b, c, divisible
	) VALUES (
		28193, 5, 'hgal', 2.64172052, 1, 0, 1
	);
	INSERT INTO csr.std_measure_conversion (
		std_measure_conversion_id, std_measure_id, description, a, b, c, divisible
	) VALUES (
		28194, 5, 'kilolitres', 1, 1, 0, 1
	);
	UPDATE chain.higg_question
	   SET indicator_name = 'Annual production (units)',
		indicator_lookup = 'PROD_UNITS',
		measure_name = 'Units',
		measure_lookup = 'UNITS',
		measure_divisibility = 2 /* csr.csr_data_pkg.DIVISIBILITY_LAST_PERIOD */
	 WHERE higg_question_id = 1136;
	UPDATE chain.higg_question
	   SET units_question_id = 1139,
		indicator_name = 'Annual production (weight)',
		indicator_lookup = 'PROD_WEIGHT',
		measure_name = 'lbs',
		measure_lookup = 'LBS',
		std_measure_conversion_id = 22,
		measure_divisibility = 2 /* csr.csr_data_pkg.DIVISIBILITY_LAST_PERIOD */
	 WHERE higg_question_id = 1138;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'oz (avoirdupois)',
		std_measure_conversion_id = 77
	 WHERE higg_question_id = 1139
	   AND higg_question_option_id = 2492;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'tons (short)',
		std_measure_conversion_id = 40
	 WHERE higg_question_id = 1139
	   AND higg_question_option_id = 2494;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'tonnes (metric)',
		std_measure_conversion_id = 39
	 WHERE higg_question_id = 1139
	   AND higg_question_option_id = 2495;
	
	UPDATE chain.higg_question
	   SET units_question_id = 1225,
		indicator_name = 'Annual electricity use',
		indicator_lookup = 'ANNUAL_ELECTRICITY',
		measure_name = 'kwh',
		measure_lookup = 'KWH',
		std_measure_conversion_id = 8,
		measure_divisibility = 2 /* csr.csr_data_pkg.DIVISIBILITY_LAST_PERIOD */
	 WHERE higg_question_id = 1224;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'kwh',
		std_measure_conversion_id = 8
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2850;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'Btu (UK)',
		std_measure_conversion_id = 31
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2847;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'GJ',
		std_measure_conversion_id = 30
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2848;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'gwh',
		std_measure_conversion_id = 15797
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2849;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'MJ',
		std_measure_conversion_id = 5717
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2851;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'MMBtu (UK)',
		std_measure_conversion_id = 32
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2852;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'MWh',
		std_measure_conversion_id = 29
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2853;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'Therm (UK)',
		std_measure_conversion_id = 11
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2854;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'TJ',
		std_measure_conversion_id = 50
	 WHERE higg_question_id = 1225
	   AND higg_question_option_id = 2852;
	
	UPDATE chain.higg_question
	   SET units_question_id = 1446,
		indicator_name = 'Annual water use',
		indicator_lookup = 'ANNUAL_WATER',
		measure_name = 'm^3',
		measure_lookup = 'METRES_CUBED',
		std_measure_conversion_id = 9,
		measure_divisibility = 2 /* csr.csr_data_pkg.DIVISIBILITY_LAST_PERIOD */
	 WHERE higg_question_id = 1445;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'm^3',
		std_measure_conversion_id = 9
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3322;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = '10 CF',
		std_measure_conversion_id = 28188
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3308;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = '10 gallon',
		std_measure_conversion_id = 28189
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3309;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = '10m^3',
		std_measure_conversion_id = 28190
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3310;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'acre-foot',
		std_measure_conversion_id = 28191
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3311;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'Ccf',
		std_measure_conversion_id = 26
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3312;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'cf',
		std_measure_conversion_id = 25
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3313;
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'DIGL',
		std_measure_conversion_id = 28192
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3314;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'gallons',
		std_measure_conversion_id = 24
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3315;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'hcf',
		std_measure_conversion_id = 26
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3316;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'hgal',
		std_measure_conversion_id = 28193
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3317;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'IGL',
		std_measure_conversion_id = 23
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3318;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'kgal',
		std_measure_conversion_id = 26158
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3319;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'kilolitres',
		std_measure_conversion_id = 28194
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3320;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'litres',
		std_measure_conversion_id = 10
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3321;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'Mcf',
		std_measure_conversion_id = 61
	 WHERE higg_question_id = 1446
	   AND higg_question_option_id = 3323;
	UPDATE chain.higg_question
	   SET units_question_id = 1542,
		indicator_name = 'Daily wastewater volume',
		indicator_lookup = 'DAILY_WASTEWATER',
		measure_name = 'm^3',
		measure_lookup = 'METRES_CUBED',
		std_measure_conversion_id = 9,
		measure_divisibility = 2 /* csr.csr_data_pkg.DIVISIBILITY_LAST_PERIOD */
	 WHERE higg_question_id = 1541;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'm^3',
		std_measure_conversion_id = 9
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3400;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = '10 CF',
		std_measure_conversion_id = 28188
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3387;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = '10 gallon',
		std_measure_conversion_id = 28189
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3388;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = '10m^3',
		std_measure_conversion_id = 28190
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3389;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'acre-foot',
		std_measure_conversion_id = 28191
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3390;
	
	-- eh? are these both cubic feet?
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'Ccf',
		std_measure_conversion_id = 26
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3391;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'cf',
		std_measure_conversion_id = 25
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3392;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'DIGL',
		std_measure_conversion_id = 28192
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3393;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'gallons',
		std_measure_conversion_id = 24
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3394;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'hcf',
		std_measure_conversion_id = 26
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3395;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'hgal',
		std_measure_conversion_id = 28193
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3396;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'IGL',
		std_measure_conversion_id = 23
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3397;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'kgal',
		std_measure_conversion_id = 26158
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3398;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'kilolitres',
		std_measure_conversion_id = 28194
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3399;
	
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'Mcf',
		std_measure_conversion_id = 61
	 WHERE higg_question_id = 1542
	   AND higg_question_option_id = 3401;
	
	UPDATE chain.higg_question
	   SET units_question_id = 1727,
		indicator_name = 'Annual amount of solid waste',
		indicator_lookup = 'ANNUAL_SOLID_WASTE',
		measure_name = 'lbs',
		measure_lookup = 'LBS',
		std_measure_conversion_id = 22,
		measure_divisibility = 2 /* csr.csr_data_pkg.DIVISIBILITY_LAST_PERIOD */
	 WHERE higg_question_id = 1726;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'lbs',
		std_measure_conversion_id = 22
	 WHERE higg_question_id = 1727
	   AND higg_question_option_id = 3754;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'kg',
		std_measure_conversion_id = 3
	 WHERE higg_question_id = 1727
	   AND higg_question_option_id = 3753;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'tonnes (metric)',
		std_measure_conversion_id = 39
	 WHERE higg_question_id = 1727
	   AND higg_question_option_id = 3755;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'tons (short)',
		std_measure_conversion_id = 40
	 WHERE higg_question_id = 1727
	   AND higg_question_option_id = 3756;
	UPDATE chain.higg_question
	   SET units_question_id = 1730,
		indicator_name = 'Annual amount of hazardous waste',
		indicator_lookup = 'ANNUAL_HAZARDOUS_WASTE',
		measure_name = 'lbs',
		measure_lookup = 'LBS',
		std_measure_conversion_id = 22,
		measure_divisibility = 2 /* csr.csr_data_pkg.DIVISIBILITY_LAST_PERIOD */
	 WHERE higg_question_id = 1729;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'lbs',
		std_measure_conversion_id = 22
	 WHERE higg_question_id = 1730
	   AND higg_question_option_id = 3759;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'kg',
		std_measure_conversion_id = 3
	 WHERE higg_question_id = 1730
	   AND higg_question_option_id = 3758;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'tonnes (metric)',
		std_measure_conversion_id = 39
	 WHERE higg_question_id = 1730
	   AND higg_question_option_id = 3760;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'tons (short)',
		std_measure_conversion_id = 40
	 WHERE higg_question_id = 1730
	   AND higg_question_option_id = 3761;
	UPDATE chain.higg_question
	   SET units_question_id = 1733,
		indicator_name = 'Annual amount of waste that is recycled',
		indicator_lookup = 'ANNUAL_RECYCLED_WASTE',
		measure_name = 'lbs',
		measure_lookup = 'LBS',
		std_measure_conversion_id = 22,
		measure_divisibility = 2 /* csr.csr_data_pkg.DIVISIBILITY_LAST_PERIOD */
	 WHERE higg_question_id = 1732;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'lbs',
		std_measure_conversion_id = 22
	 WHERE higg_question_id = 1733
	   AND higg_question_option_id = 3764;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'kg',
		std_measure_conversion_id = 3
	 WHERE higg_question_id = 1733
	   AND higg_question_option_id = 3763;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'tonnes (metric)',
		std_measure_conversion_id = 39
	 WHERE higg_question_id = 1733
	   AND higg_question_option_id = 3765;
	 
	UPDATE chain.higg_question_option
	   SET measure_conversion = 'tons (short)',
		std_measure_conversion_id = 40
	 WHERE higg_question_id = 1733
	   AND higg_question_option_id = 3766;
	
	-- Fix typo from SAC
	UPDATE chain.higg_question_option 
	   SET option_value = 'cf' 
	 WHERE higg_question_option_id = 3313
	   AND higg_question_id = 1446
	   AND higg_module_id = 6;
END;
/
INSERT INTO csr.module (module_id, module_name, enable_sp, description, license_warning)
VALUES (79, 'Compliance', 'EnableCompliance', 'Enables the Compliance module. Requires Surveys and Workflow to be enabled.', 1);
INSERT INTO csr.module (module_id, module_name, enable_sp, description, license_warning)
VALUES (80, 'Compliance - ENHESA integration', 'EnableEnhesa', 'Enables the ENHESA integration for the compliance module. Requires Compliance to be enabled.', 1);
INSERT INTO csr.plugin_type
	(plugin_type_id, description)
VALUES
	(17, 'Emission factor tab');
INSERT INTO csr.plugin
	(plugin_id, plugin_type_id, description, js_include, js_class, cs_class, details)
VALUES
	(csr.plugin_id_seq.nextval, 17, 'Emissions profiles', '/csr/site/admin/emissionFactors/controls/EmissionProfilesTab.js',
		'Controls.EmissionProfilesTab', 'Credit360.Plugins.PluginDto', 'This tab will hold the options to manage emission factor profiles.');
INSERT INTO csr.plugin
	(plugin_id, plugin_type_id, description, js_include, js_class, cs_class, details)
VALUES
	(csr.plugin_id_seq.nextval, 17, 'Map indicators', '/csr/site/admin/emissionFactors/controls/MapIndicatorsTab.js',
		'Controls.MapIndicatorsTab', 'Credit360.Plugins.PluginDto', 'This tab will hold the options to manage the emission factor indicator mappings.');
BEGIN
	UPDATE csr.std_factor_set
	   SET published = 1;
	   
	--Sequences start at 1 so safe to use 0 I think
	INSERT INTO CSR.factor_set_group (FACTOR_SET_GROUP_ID, NAME, CUSTOM)
	VALUES (0, 'Custom factor set(s)', 1);
	
	FOR r IN (
		SELECT app_sid, host
		  FROM csr.customer c, security.website w
		 WHERE c.host = w.website_name
	) LOOP
	
		security.user_pkg.logonadmin(r.host);
	
		DECLARE
			v_act_id 					security.security_pkg.T_ACT_ID DEFAULT security.security_pkg.GetAct;
			v_app_sid 					security.security_pkg.T_SID_ID DEFAULT security.security_pkg.GetApp;
			v_menu						security.security_pkg.T_SID_ID DEFAULT security.securableobject_pkg.GetSidFromPath(v_act_id, v_app_sid, 'menu');
			v_sa_sid					security.security_pkg.T_SID_ID DEFAULT security.securableobject_pkg.GetSIDFromPath(v_act_id, security.security_pkg.SID_ROOT, 'csr/SuperAdmins');
			v_setup_menu				security.security_pkg.T_SID_ID;
			v_factorset_menu			security.security_pkg.T_SID_ID;
			
		BEGIN
			BEGIN
				v_setup_menu := security.securableobject_pkg.GetSidFromPath(v_act_id, v_menu, 'Setup');
			EXCEPTION
				WHEN security.security_pkg.OBJECT_NOT_FOUND THEN
					security.menu_pkg.CreateMenu(v_act_id, v_menu, 'setup', 'Setup', '/csr/site/admin/config/global.acds', 0, null, v_setup_menu);
			END;
		
			BEGIN
				v_factorset_menu := security.securableobject_pkg.GetSidFromPath(v_act_id, v_setup_menu, 'csr_admin_factor_sets');
			EXCEPTION
				WHEN security.security_pkg.OBJECT_NOT_FOUND THEN
					security.menu_pkg.CreateMenu(v_act_id, v_setup_menu, 'csr_admin_factor_sets', 'Factor sets',
						'/csr/site/admin/emissionFactors/new/factorsetgroups.acds', 0, null, v_factorset_menu);
			END;
			
			-- don't inherit dacls
			security.securableobject_pkg.SetFlags(v_act_id, v_factorset_menu, 0);
			--Remove inherited ones
			security.acl_pkg.DeleteAllACEs(v_act_id, security.acl_pkg.GetDACLIDForSID(v_factorset_menu));
			-- Add SA permission
			security.acl_pkg.AddACE(v_act_id, security.acl_pkg.GetDACLIDForSID(v_factorset_menu), -1, security.security_pkg.ACE_TYPE_ALLOW, 
				security.security_pkg.ACE_FLAG_DEFAULT, v_sa_sid, security.security_pkg.PERMISSION_STANDARD_READ);
			
		END;
		
		security.user_pkg.logoff(sys_context('security','act'));
	END LOOP;
END;
/
INSERT INTO csr.capability (name,allow_by_default) VALUES ('Can manage group membership list page', 1);
INSERT INTO csr.capability (name,allow_by_default) VALUES ('Can deactivate users list page', 1);
INSERT INTO csr.module (module_id, module_name, enable_sp, description, license_warning)
VALUES (78, 'Enable capabilities user list page', 'EnableCapabilitiesUserListPage', 'Allow user to perform bulk actions via the new user list page.', 0);
	INSERT INTO csr.module(module_id, module_name, enable_sp, description, license_warning)
	VALUES (77, 'SSO', 'EnableSSO', 'Enables SSO', 0);
BEGIN
	DBMS_SCHEDULER.DROP_JOB (job_name => 'sys.AUTOMATEDEXPORT');
EXCEPTION
	WHEN OTHERS THEN
    NULL;
END;
/
BEGIN
	INSERT INTO CSR.AUDIT_TYPE ( AUDIT_TYPE_GROUP_ID, AUDIT_TYPE_ID, LABEL ) VALUES (1, 23, 'Initiatives');
EXCEPTION
	WHEN DUP_VAL_ON_INDEX THEN
		NULL;
END;
/
BEGIN
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Audit Log',  '/csr/site/initiatives/detail/controls/AuditLogPanel.js', 'Credit360.Initiatives.AuditLogPanel', 
			         'Credit360.Plugins.PluginDto', NULL, NULL, NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Summary',  '/csr/site/initiatives/detail/controls/SummaryPanel.js', 'Credit360.Initiatives.SummaryPanel', 
			         'Credit360.Plugins.PluginDto', NULL, NULL, NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Documents',  '/csr/site/initiatives/detail/controls/DocumentsPanel.js', 'Credit360.Initiatives.DocumentsPanel', 
			         'Credit360.Plugins.PluginDto', NULL, NULL, NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Calendar',  '/csr/site/initiatives/detail/controls/CalendarPanel.js', 'Credit360.Initiatives.CalendarPanel', 
			         'Credit360.Plugins.PluginDto', NULL, NULL, NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Actions',  '/csr/site/initiatives/detail/controls/IssuesPanel.js', 'Credit360.Initiatives.IssuesPanel', 
			         'Credit360.Plugins.PluginDto', NULL, NULL, NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Initiative details - What',  
					 '/csr/site/initiatives/detail/controls/WhatPanel.js', 'Credit360.Initiatives.Plugins.WhatPanel', 
			         'Credit360.Plugins.PluginDto', 'Contains core details about the initiative, including the name, reference, project type and description.', 
					 '/csr/shared/plugins/screenshots/initiative_tab_what.png', NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Initiative details - Where',  
					 '/csr/site/initiatives/detail/controls/WherePanel.js', 'Credit360.Initiatives.Plugins.WherePanel', 
			         'Credit360.Plugins.PluginDto', 'Contains location information about the initiative, i.e. the regions the initiative will apply to.', 
					 '/csr/shared/plugins/screenshots/initiative_tab_where.png', NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Initiative details - When',  
					 '/csr/site/initiatives/detail/controls/WhenPanel.js', 'Credit360.Initiatives.Plugins.WhenPanel', 
			         'Credit360.Plugins.PluginDto', 'Contains timing information about when the initiative will run.', 
					 '/csr/shared/plugins/screenshots/initiative_tab_when.png', NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Initiative details - Why',  
					 '/csr/site/initiatives/detail/controls/WhyPanel.js', 'Credit360.Initiatives.Plugins.WhyPanel', 
			         'Credit360.Plugins.PluginDto', 'Contains metrics about the initiative.', 
					 '/csr/shared/plugins/screenshots/initiative_tab_why.png', NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Initiative details - Who',  
					 '/csr/site/initiatives/detail/controls/WhoPanel.js', 'Credit360.Initiatives.Plugins.WhoPanel', 
			         'Credit360.Plugins.PluginDto', 'Contains details of who is involved with the initiative.', 
					 '/csr/shared/plugins/screenshots/initiative_tab_who.png', NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	BEGIN
		INSERT INTO csr.plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, csr.plugin_id_seq.nextval, 8, 'Initiative details',  
					 '/csr/site/initiatives/detail/controls/InitiativeDetailsPanel.js', 'Credit360.Initiatives.Plugins.InitiativeDetailsPanel', 
			         'Credit360.Plugins.PluginDto', 'Contains all the details of the initiative in one tab (use this instead of the individual what, where, when, why, who tabs).', 
					 '/csr/shared/plugins/screenshots/initiative_tab_initiative_details.png', NULL, NULL);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
END;
/
DECLARE
	v_details_plugin_id				NUMBER;
	v_docs_plugin_id				NUMBER;
	v_actions_plugin_id				NUMBER;
	v_audit_plugin_id				NUMBER;
	v_registered_users_sid			NUMBER;
	v_count							NUMBER;
	v_act_id						VARCHAR2(36);
	v_admins_sid					NUMBER(10);
	v_menu_sid						NUMBER(10);
	v_www_csr_site					NUMBER(10);
	v_www_sid						NUMBER(10);
	v_wwwroot_sid					NUMBER(10);
BEGIN	
	security.user_pkg.LogonAdmin;
	
	-- Move people on old standard create page to the new one
	UPDATE csr.initiatives_options
	   SET my_initiatives_options = REPLACE(my_initiatives_options, '/csr/site/initiatives/createFull.acds', '/csr/site/initiatives/create.acds')
	 WHERE my_initiatives_options LIKE '%/csr/site/initiatives/createFull.acds%';
	 
	UPDATE security.menu
	   SET action = '/csr/site/initiatives/create.acds'
	 WHERE action = '/csr/site/initiatives/createFull.acds';
	 
	--  Setup default plugins on sites that aren't using initiatives tabs yet (or just have one plugin if they've enabled the audit log)
	SELECT plugin_id
	  INTO v_details_plugin_id
	  FROM csr.plugin
	 WHERE js_class = 'Credit360.Initiatives.Plugins.InitiativeDetailsPanel';
	 
	SELECT plugin_id
	  INTO v_docs_plugin_id
	  FROM csr.plugin
	 WHERE js_class = 'Credit360.Initiatives.DocumentsPanel';
	 
	SELECT plugin_id
	  INTO v_actions_plugin_id
	  FROM csr.plugin
	 WHERE js_class = 'Credit360.Initiatives.IssuesPanel';
	 
	SELECT plugin_id
	  INTO v_audit_plugin_id
	  FROM csr.plugin
	 WHERE js_class = 'Credit360.Initiatives.AuditLogPanel';
	
	FOR r IN (
		SELECT c.host, c.app_sid
		  FROM csr.customer c
		  JOIN csr.initiatives_options io ON c.app_sid = io.app_sid
	) LOOP
		security.user_pkg.LogonAdmin(r.host);
		
		v_registered_users_sid := security.securableobject_pkg.GetSidFromPath(security.security_pkg.GetAct, r.app_sid, 'Groups/RegisteredUsers');
		
		FOR p IN (
			SELECT ip.project_sid 
			  FROM csr.initiative_project ip 
			  LEFT JOIN csr.initiative_project_tab ipt on ip.project_sid = ipt.project_sid 
			 WHERE ip.app_sid = r.app_sid
			 GROUP BY ip.project_sid 
			HAVING COUNT(*) <= 1
		) LOOP
			UPDATE csr.initiative_project_tab
			   SET pos = 5
			 WHERE project_sid = p.project_sid;
			 
			BEGIN
				INSERT INTO csr.initiative_project_tab (app_sid, project_sid, plugin_id, plugin_type_id, pos, tab_label)
				     VALUES (r.app_sid, p.project_sid, v_details_plugin_id, 8, 1, 'Details');
					 
				INSERT INTO csr.initiative_project_tab_group (app_sid, project_sid, plugin_id, group_sid, is_read_only)
				     VALUES (r.app_sid, p.project_sid, v_details_plugin_id, v_registered_users_sid, 0);
			EXCEPTION
				WHEN dup_val_on_index THEN
					NULL;
			END;
			BEGIN
				INSERT INTO csr.initiative_project_tab (app_sid, project_sid, plugin_id, plugin_type_id, pos, tab_label)
				     VALUES (r.app_sid, p.project_sid, v_docs_plugin_id, 8, 2, 'Documents');
					 
				INSERT INTO csr.initiative_project_tab_group (app_sid, project_sid, plugin_id, group_sid, is_read_only)
				     VALUES (r.app_sid, p.project_sid, v_docs_plugin_id, v_registered_users_sid, 0);
			EXCEPTION
				WHEN dup_val_on_index THEN
					NULL;
			END;
			BEGIN
				INSERT INTO csr.initiative_project_tab (app_sid, project_sid, plugin_id, plugin_type_id, pos, tab_label)
				     VALUES (r.app_sid, p.project_sid, v_actions_plugin_id, 8, 3, 'Actions');
					 
				INSERT INTO csr.initiative_project_tab_group (app_sid, project_sid, plugin_id, group_sid, is_read_only)
				     VALUES (r.app_sid, p.project_sid, v_actions_plugin_id, v_registered_users_sid, 0);
			EXCEPTION
				WHEN dup_val_on_index THEN
					NULL;
			END;
			BEGIN
				INSERT INTO csr.initiative_project_tab (app_sid, project_sid, plugin_id, plugin_type_id, pos, tab_label)
				     VALUES (r.app_sid, p.project_sid, v_audit_plugin_id, 8, 4, 'Audit log');
					 
				INSERT INTO csr.initiative_project_tab_group (app_sid, project_sid, plugin_id, group_sid, is_read_only)
				     VALUES (r.app_sid, p.project_sid, v_audit_plugin_id, v_registered_users_sid, 0);
			EXCEPTION
				WHEN dup_val_on_index THEN
					NULL;
			END;
		END LOOP;
		
		-- Setup default header
		SELECT COUNT(*)
		  INTO v_count
		  FROM csr.initiative_header_element
		 WHERE app_sid = r.app_sid;
		 
		IF v_count = 0 THEN
			-- timeline
			INSERT INTO csr.initiative_header_element (app_sid, initiative_header_element_id, pos, col, init_header_core_element_id)
			    VALUES (r.app_sid, csr.init_header_element_id_seq.nextval, 0, 0, 9);
				
			-- project. If they only have one project type, don't add to header
			SELECT COUNT(*)
			  INTO v_count
			  FROM csr.initiative_project
			 WHERE app_sid = r.app_sid;
			
			IF v_count > 1 THEN
				INSERT INTO csr.initiative_header_element (app_sid, initiative_header_element_id, pos, col, init_header_core_element_id)
					 VALUES (r.app_sid, csr.init_header_element_id_seq.nextval, 1, 1, 3);
			END IF;
				
			-- flow status
			INSERT INTO csr.initiative_header_element (app_sid, initiative_header_element_id, pos, col, init_header_core_element_id)
			    VALUES (r.app_sid, csr.init_header_element_id_seq.nextval, 1, 2, 11);
		
		END IF;			
				
		v_act_id := security.security_pkg.GetAct;
		
		BEGIN
			v_admins_sid := security.securableobject_pkg.GetSidFromPath(v_act_id, r.app_sid, 'Groups/Administrators');
			BEGIN
				security.menu_pkg.CreateMenu(v_act_id, security.securableobject_pkg.GetSidFromPath(v_act_id, r.app_sid, 'menu/admin'),
					'csr_site_initiatives_admin_menu', 'Initiatives admin', '/csr/site/initiatives/admin/menu.acds', 20, null, v_menu_sid);
			EXCEPTION
				WHEN security.security_pkg.DUPLICATE_OBJECT_NAME THEN
					v_menu_sid := security.securableobject_pkg.GetSidFromPath(
						v_act_id, 
						security.securableobject_pkg.GetSidFromPath(v_act_id, r.app_sid, 'menu/admin'), 
						'csr_site_initiatives_admin_menu'
					);
			END;
			security.acl_pkg.AddACE(v_act_id, security.acl_pkg.GetDACLIDForSID(v_menu_sid), -1,
					security.security_pkg.ACE_TYPE_ALLOW,
					security.security_pkg.ACE_FLAG_DEFAULT,
					v_admins_sid,
					security.security_pkg.PERMISSION_STANDARD_ALL);
			security.acl_pkg.PropogateACEs(v_act_id, v_menu_sid);
			/*** ADD WEB RESOURCE ***/
			v_wwwroot_sid := security.securableobject_pkg.GetSidFromPath(v_act_id, r.app_sid, 'wwwroot');
			v_www_csr_site := security.securableobject_pkg.GetSidFromPath(v_act_id, v_wwwroot_sid, 'csr/site/initiatives');
			BEGIN
				security.web_pkg.CreateResource(v_act_id, v_wwwroot_sid, v_www_csr_site, 'admin', v_www_sid);
			EXCEPTION
				WHEN security.security_pkg.DUPLICATE_OBJECT_NAME THEN
					v_www_sid := security.securableobject_pkg.GetSidFromPath(v_act_id, v_www_csr_site, 'admin');
			END;
			
			security.acl_pkg.AddACE(v_act_id, security.acl_pkg.GetDACLIDForSID(v_www_sid), -1,
					security.security_pkg.ACE_TYPE_ALLOW,
					security.security_pkg.ACE_FLAG_DEFAULT,
					v_admins_sid,
					security.security_pkg.PERMISSION_STANDARD_ALL);
		EXCEPTION
			WHEN others THEN
				NULL; -- don't mind if they don't have the normal menu structures/group etc.
		END;	
	END LOOP;
		  
	security.user_pkg.LogonAdmin;
END;
/
BEGIN
	security.user_pkg.LogonAdmin;
	
	UPDATE aspen2.application
	   SET default_url = '/csr/site/property/properties/list.acds'
	 WHERE default_url = '/csr/site/property/properties/MyProperties.acds';
END;
/
INSERT INTO csr.std_measure_conversion (
	std_measure_conversion_id, std_measure_id, description, a, b, c, divisible
) VALUES (
	28187, 29, 'litre/kg', 1000, 1, 0, 1
);
BEGIN
  --dbms_output.put_line('start');
  security.user_pkg.logonadmin;
  FOR r IN (
    SELECT dv.dataview_sid sid_id, dv.name dv_name, so.name so_name, dv.app_sid 
        FROM csr.dataview dv
        JOIN SECURITY.SECURABLE_OBJECT so ON so.SID_ID = dv.DATAVIEW_SID
      WHERE REPLACE(dv.name, '/', '\') != so.name  --'
  )
  LOOP
    --dbms_output.put_line('Updating SO ' || r.sid_id || ' to name '||r.dv_name);
    BEGIN
    UPDATE security.securable_object so
      SET NAME = r.dv_name
    WHERE sid_id = r.sid_id;
    EXCEPTION
    WHEN dup_val_on_index THEN 
      BEGIN
        UPDATE security.securable_object so
          SET NAME = r.dv_name || ' (copy)'
        WHERE sid_id = r.sid_id;
        EXCEPTION
        WHEN dup_val_on_index THEN 
          BEGIN
            UPDATE security.securable_object so
              SET NAME = r.dv_name || ' (copy) - ' || r.app_sid
            WHERE sid_id = r.sid_id;
            EXCEPTION
            WHEN dup_val_on_index THEN 
              dbms_output.put_line('App ' || r.app_sid || ' - Duplicate name on SO ' || r.sid_id || ' - ' || r.dv_name);
          END;
      END;
    END;
  END LOOP;
  --dbms_output.put_line('done');
END;
/
CREATE OR REPLACE FUNCTION csr.Temp_SetCorePlugin(
	in_plugin_type_id				IN 	plugin.plugin_type_id%TYPE,
	in_js_class						IN  plugin.js_class%TYPE,
	in_description					IN  plugin.description%TYPE,
	in_js_include					IN  plugin.js_include%TYPE,
	in_cs_class						IN  plugin.cs_class%TYPE DEFAULT 'Credit360.Plugins.PluginDto',
	in_details						IN  plugin.details%TYPE DEFAULT NULL,
	in_preview_image_path			IN  plugin.preview_image_path%TYPE DEFAULT NULL,
	in_tab_sid						IN  plugin.tab_sid%TYPE DEFAULT NULL,
	in_form_path					IN  plugin.form_path%TYPE DEFAULT NULL
) RETURN plugin.plugin_id%TYPE
AS
	v_plugin_id		plugin.plugin_id%TYPE;
BEGIN
	BEGIN
		INSERT INTO plugin (app_sid, plugin_id, plugin_type_id, description, js_include, js_class, cs_class, 
		                    details, preview_image_path, tab_sid, form_path)
			 VALUES (NULL, plugin_id_seq.nextval, in_plugin_type_id, in_description,  in_js_include, in_js_class, 
			         in_cs_class, in_details, in_preview_image_path, in_tab_sid, in_form_path)
		  RETURNING plugin_id INTO v_plugin_id;
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			UPDATE plugin 
			   SET description = in_description,
			   	   js_include = in_js_include,
			   	   cs_class = in_cs_class,
			   	   details = in_details,
			   	   preview_image_path = in_preview_image_path,
			   	   form_path = in_form_path
			 WHERE plugin_type_id = in_plugin_type_id
			   AND js_class = in_js_class
			   AND app_sid IS NULL
			   AND ((tab_sid IS NULL AND in_tab_sid IS NULL) OR (tab_sid = in_tab_sid))
		 	RETURNING plugin_id INTO v_plugin_id;
	END;
	RETURN v_plugin_id;
END;
/
DECLARE
	v_plugin_id     csr.plugin.plugin_id%TYPE;
BEGIN
	v_plugin_id := csr.Temp_SetCorePlugin(
		in_plugin_type_id		=> 12, --csr.csr_data_pkg.PLUGIN_TYPE_CALENDAR,
		in_js_class				=> 'Credit360.Calendars.Audits',
		in_description			=> 'Audits',
		in_js_include			=> '/csr/shared/calendar/includes/audits.js',
		in_cs_class				=> 'Credit360.Audit.AuditCalendarDto'
	);
	v_plugin_id := csr.Temp_SetCorePlugin(
		in_plugin_type_id		=> 12, --csr.csr_data_pkg.PLUGIN_TYPE_CALENDAR,
		in_js_class				=> 'Credit360.Calendars.Initiatives',
		in_description			=> 'Events',
		in_js_include			=> '/csr/shared/calendar/includes/initiatives.js'
	);
	v_plugin_id := csr.Temp_SetCorePlugin(
		in_plugin_type_id		=> 12, --csr.csr_data_pkg.PLUGIN_TYPE_CALENDAR,
		in_js_class				=> 'Credit360.Calendars.Issues',
		in_description			=> 'Issues coming due',
		in_js_include			=> '/csr/shared/calendar/includes/issues.js',
		in_cs_class				=> 'Credit360.Issues.IssueCalendarDto'
	);
	v_plugin_id := csr.Temp_SetCorePlugin(
		in_plugin_type_id		=> 12, --csr.csr_data_pkg.PLUGIN_TYPE_CALENDAR,
		in_js_class				=> 'Credit360.Calendars.Teamrooms',
		in_description			=> 'Teamroom events',
		in_js_include			=> '/csr/shared/calendar/includes/teamrooms.js'
	);
	v_plugin_id := csr.Temp_SetCorePlugin(
		in_plugin_type_id		=> 12, --csr.csr_data_pkg.PLUGIN_TYPE_CALENDAR,
		in_js_class				=> 'Credit360.Calendars.Activities',
		in_description			=> 'Activities',
		in_js_include			=> '/csr/shared/calendar/includes/activities.js',
		in_cs_class				=> 'Credit360.Chain.Activities.ActivityCalendarDto'
	);
	v_plugin_id := csr.Temp_SetCorePlugin(
		in_plugin_type_id		=> 12, --csr.csr_data_pkg.PLUGIN_TYPE_CALENDAR,
		in_js_class				=> 'Teamroom.Calendars.Issues',
		in_description			=> 'Teamroom actions',
		in_js_include			=> '/csr/site/teamroom/controls/calendar/issues.js'
	);
	v_plugin_id := csr.Temp_SetCorePlugin(
		in_plugin_type_id		=> 12, --csr.csr_data_pkg.PLUGIN_TYPE_CALENDAR,
		in_js_class				=> 'Credit360.Initiatives.Calendars.Issues',
		in_description			=> 'Actions',
		in_js_include			=> '/csr/site/initiatives/calendar/issues.js'
	);
END;
/
DROP FUNCTION csr.Temp_SetCorePlugin;
BEGIN
	FOR r IN (SELECT table_name, constraint_name
			    FROM all_constraints
			   WHERE owner='CSRIMP'
			     AND constraint_name IN ('FK_BSCI_AUDIT_2009_COMPANY_SID', 'FK_BSCI_AUDIT_2014_COMPANY_SID', 'FK_BSCI_AUDIT_2009_REF', 'FK_BSCI_AUDIT_2014_REF', 'FK_BSCI_AUDIT_TYPE_ID', 'FK_BSCI_AUDIT_REF_ASS_2014', 'FK_BSCI_AUDIT_REF_ASS_2009', 'FK_BSCI_SUPPLIER_COMP')
    ) LOOP
		EXECUTE IMMEDIATE 'ALTER TABLE CSRIMP.'||r.table_name||' DROP CONSTRAINT '||r.constraint_name;
	END LOOP;
END;
/




CREATE OR REPLACE PACKAGE csr.compliance_pkg
AS
END;
/
GRANT EXECUTE ON csr.compliance_pkg TO web_user;
grant execute on csr.teamroom_initiative_pkg to web_user;
grant execute on csr.teamroom_initiative_pkg to security;


@..\enable_pkg
@..\audit_report_pkg
@..\issue_report_pkg
@..\chain\company_filter_pkg
@..\chain\helper_pkg
@..\chain\supplier_flow_pkg
@..\initiative_project_pkg
@..\flow_pkg
@..\schema_pkg
@..\csrimp\imp_pkg
@..\..\..\aspen2\cms\db\form_pkg
@..\chain\higg_pkg
@..\chain\higg_setup_pkg
@..\quick_survey_pkg
@..\audit_pkg
@..\csr_data_pkg
@..\compliance_pkg
@..\chain\chain_link_pkg
@..\factor_pkg
@..\logistics_pkg
@..\saml_pkg
@..\batch_job_pkg
@..\automated_import_pkg
@..\automated_export_pkg
@..\automated_export_import_pkg
@..\factor_set_group_pkg
@..\dataview_pkg
@..\initiative_pkg
@..\chain\bsci_pkg
@..\csr_user_pkg
@..\role_pkg


@..\enable_body
@..\customer_body
@..\schema_body
@..\audit_report_body
@..\non_compliance_report_body
@..\issue_report_body
@..\chain\company_filter_body
@..\chain\filter_body
@..\chain\helper_body
@..\chain\supplier_flow_body
@..\csrimp\imp_body
@..\initiative_project_body
@..\initiative_metric_body
@..\csr_app_body
@..\flow_body
@..\audit_body
@..\..\..\aspen2\cms\db\form_body
@..\..\..\aspen2\cms\db\tab_body
@..\chain\chain_body
@..\chain\higg_body
@..\chain\higg_setup_body
@..\quick_survey_body
@..\csr_data_body
@..\donations\funding_commitment_body
@..\compliance_body
@..\approval_dashboard_body
@..\chain\chain_link_body
@..\chain\company_body
@..\chain\message_body
@..\factor_body
@..\region_body
@..\..\..\aspen2\cms\db\filter_body
@..\logistics_body
@..\saml_body
@..\batch_job_body
@..\automated_import_body
@..\automated_export_body
@..\automated_export_import_body
@..\factor_set_group_body
@..\dataview_body
@..\initiative_body
@..\role_body
@..\chain\bsci_body
@..\enable_body;
@..\csr_user_body
@..\..\..\aspen2\db\aspenapp_body
@..\..\..\aspen2\db\aspenredirect_body
@..\sheet_body



@update_tail
