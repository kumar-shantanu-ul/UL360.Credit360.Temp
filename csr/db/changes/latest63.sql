-- Please update version.sql too -- this keeps clean builds in sync
define version=63
@update_header

VARIABLE version NUMBER
BEGIN :version := 63; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
END;
/	


WHENEVER SQLERROR CONTINUE

    


-- 
-- SEQUENCE: APPROVAL_STEP_ID_SEQ 
--

CREATE SEQUENCE APPROVAL_STEP_ID_SEQ 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: PENDING_DATASET_ID_SEQ 
--

CREATE SEQUENCE PENDING_DATASET_ID_SEQ 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: PENDING_IND_ID_SEQ 
--

CREATE SEQUENCE PENDING_IND_ID_SEQ 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: PENDING_PERIOD_ID_SEQ 
--

CREATE SEQUENCE PENDING_PERIOD_ID_SEQ 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: PENDING_REGION_ID_SEQ 
--

CREATE SEQUENCE PENDING_REGION_ID_SEQ 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: PENDING_VAL_ID_SEQ 
--

CREATE SEQUENCE PENDING_VAL_ID_SEQ 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: PENDING_VAL_LOG_ID_SEQ 
--

CREATE SEQUENCE PENDING_VAL_LOG_ID_SEQ 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: VALIDATION_RULE_ID_SEQ 
--

CREATE SEQUENCE VALIDATION_RULE_ID_SEQ 
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- TABLE: APPROVAL_STEP 
--

CREATE TABLE APPROVAL_STEP(
    APPROVAL_STEP_ID      NUMBER(10, 0)    NOT NULL,
    PARENT_STEP_ID        NUMBER(10, 0),
    PENDING_DATASET_ID    NUMBER(10, 0)    NOT NULL,
    BASED_ON_STEP_ID      NUMBER(10, 0),
    LABEL                 VARCHAR2(255)    NOT NULL,
    DUE_DTM               DATE             NOT NULL,
    CONSTRAINT PK220 PRIMARY KEY (APPROVAL_STEP_ID)
)
;



-- 
-- TABLE: APPROVAL_STEP_IND 
--

CREATE TABLE APPROVAL_STEP_IND(
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    PENDING_IND_ID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK232 PRIMARY KEY (APPROVAL_STEP_ID, PENDING_IND_ID)
)
;



-- 
-- TABLE: APPROVAL_STEP_REGION 
--

CREATE TABLE APPROVAL_STEP_REGION(
    APPROVAL_STEP_ID         NUMBER(10, 0)    NOT NULL,
    PENDING_REGION_ID        NUMBER(10, 0)    NOT NULL,
    ROLLS_UP_TO_REGION_ID    NUMBER(10, 0),
    CONSTRAINT PK231 PRIMARY KEY (APPROVAL_STEP_ID, PENDING_REGION_ID)
)
;



-- 
-- TABLE: APPROVAL_STEP_TEMPLATE 
--

CREATE TABLE APPROVAL_STEP_TEMPLATE(
    APPROVAL_STEP_ID           NUMBER(10, 0)    NOT NULL,
    LABEL                      VARCHAR2(255)    NOT NULL,
    PARENT_STEP_ID             NUMBER(10, 0),
    CSR_ROOT_SID               NUMBER(10, 0)    NOT NULL,
    PENDING_REGION_ID          NUMBER(10, 0),
    DUE_WORKING_DAYS_OFFSET    NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK220_1 PRIMARY KEY (APPROVAL_STEP_ID)
)
;



-- 
-- TABLE: APPROVAL_STEP_USER 
--

CREATE TABLE APPROVAL_STEP_USER(
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID            NUMBER(10, 0)    NOT NULL,
    FALLBACK_USER_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK227 PRIMARY KEY (APPROVAL_STEP_ID, USER_SID)
)
;



-- 
-- TABLE: APPROVAL_STEP_USER_TEMPLATE 
--

CREATE TABLE APPROVAL_STEP_USER_TEMPLATE(
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK227_1 PRIMARY KEY (APPROVAL_STEP_ID, USER_SID)
)
;



-- 
-- TABLE: PENDING_DATASET 
--

CREATE TABLE PENDING_DATASET(
    PENDING_DATASET_ID      NUMBER(10, 0)    NOT NULL,
    CSR_ROOT_SID            NUMBER(10, 0)    NOT NULL,
    LABEL                   VARCHAR2(255)    NOT NULL,
    REPORTING_PERIOD_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK4_1 PRIMARY KEY (PENDING_DATASET_ID)
)
;



-- 
-- TABLE: PENDING_IND 
--

CREATE TABLE PENDING_IND(
    PENDING_IND_ID         NUMBER(10, 0)    NOT NULL,
    PENDING_DATASET_ID     NUMBER(10, 0),
    PARENT_IND_ID          NUMBER(10, 0),
    MAPS_TO_IND_SID        NUMBER(10, 0),
    DESCRIPTION            VARCHAR2(255)    NOT NULL,
    TOLERANCE_TYPE         NUMBER(2, 0)      DEFAULT 0 NOT NULL,
    PCT_UPPER_TOLERANCE    NUMBER(10, 4),
    PCT_LOWER_TOLERANCE    NUMBER(10, 4)    NOT NULL,
    VAL_MANDATORY          NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    NOTE_MANDATORY         NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    MEASURE_SID            NUMBER(10, 0),
    POS                    NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    FORMAT_XML             CLOB,
    ELEMENT_TYPE	   NUMBER(10, 0)   NOT NULL,
    CONSTRAINT PENDING_IND_TOLERANCE CHECK (tolerance_type = 0 OR (pct_upper_tolerance IS NOT NULL AND pct_lower_tolerance IS NOT NULL)),
    CONSTRAINT PK215 PRIMARY KEY (PENDING_IND_ID)
)
;



-- 
-- TABLE: PENDING_IND_ACCURACY_TYPE 
--

CREATE TABLE PENDING_IND_ACCURACY_TYPE(
    PENDING_IND_ID      NUMBER(10, 0)    NOT NULL,
    ACCURACY_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK293 PRIMARY KEY (PENDING_IND_ID, ACCURACY_TYPE_ID)
)
;



-- 
-- TABLE: PENDING_IND_RULE 
--

CREATE TABLE PENDING_IND_RULE(
    PENDING_IND_ID        NUMBER(10, 0)    NOT NULL,
    TRUE_MESSAGE          CLOB,
    FALSE_MESSAGE         VARCHAR2(255),
    VALIDATION_RULE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK239 PRIMARY KEY (PENDING_IND_ID, VALIDATION_RULE_ID)
)
;



-- 
-- TABLE: PENDING_PERIOD 
--

CREATE TABLE PENDING_PERIOD(
    PENDING_PERIOD_ID     NUMBER(10, 0)    NOT NULL,
    PENDING_DATASET_ID    NUMBER(10, 0)    NOT NULL,
    START_DTM             DATE             NOT NULL,
    END_DTM               DATE             NOT NULL,
    LABEL                 VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK217 PRIMARY KEY (PENDING_PERIOD_ID)
)
;



-- 
-- TABLE: PENDING_REGION 
--

CREATE TABLE PENDING_REGION(
    PENDING_REGION_ID     NUMBER(10, 0)    NOT NULL,
    PARENT_REGION_ID      NUMBER(10, 0),
    PENDING_DATASET_ID    NUMBER(10, 0)    NOT NULL,
    MAPS_TO_REGION_SID    NUMBER(10, 0),
    DESCRIPTION           VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK216 PRIMARY KEY (PENDING_REGION_ID)
)
;



-- 
-- TABLE: PENDING_VAL 
--

CREATE TABLE PENDING_VAL(
    PENDING_VAL_ID                NUMBER(10, 0)     NOT NULL,
    PENDING_IND_ID                NUMBER(10, 0)     NOT NULL,
    PENDING_REGION_ID             NUMBER(10, 0)     NOT NULL,
    PENDING_PERIOD_ID             NUMBER(10, 0)     NOT NULL,
    APPROVAL_STEP_ID              NUMBER(10, 0)     NOT NULL,
    VAL_NUMBER                    NUMBER(24, 10),
    VAL_STRING                    VARCHAR2(2000),
    FROM_VAL_NUMBER               NUMBER(24, 10),
    FROM_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    CONSTRAINT PK214 PRIMARY KEY (PENDING_VAL_ID)
)
;



-- 
-- TABLE: PENDING_VAL_ACCURACY_TYPE_OPT 
--

CREATE TABLE PENDING_VAL_ACCURACY_TYPE_OPT(
    PENDING_VAL_ID             NUMBER(10, 0)    NOT NULL,
    ACCURACY_TYPE_OPTION_ID    NUMBER(10, 0)    NOT NULL,
    PCT                        NUMBER(10, 4)     DEFAULT 1 NOT NULL,
    CONSTRAINT PK167_2 PRIMARY KEY (PENDING_VAL_ID, ACCURACY_TYPE_OPTION_ID)
)
;



-- 
-- TABLE: PENDING_VAL_FILE_UPLOAD 
--

CREATE TABLE PENDING_VAL_FILE_UPLOAD(
    PENDING_VAL_ID     NUMBER(10, 0)    NOT NULL,
    FILE_UPLOAD_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK295 PRIMARY KEY (PENDING_VAL_ID, FILE_UPLOAD_SID)
)
;



-- 
-- TABLE: PENDING_VAL_LOG 
--

CREATE TABLE PENDING_VAL_LOG(
    PENDING_VAL_LOG_ID    NUMBER(10, 0)    NOT NULL,
    PENDING_VAL_ID        NUMBER(10, 0)    NOT NULL,
    SET_DTM               DATE              DEFAULT SYSDATE NOT NULL,
    SET_BY_USER_SID       NUMBER(10, 0)    NOT NULL,
    DESCRIPTION           VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK221 PRIMARY KEY (PENDING_VAL_LOG_ID)
)
;



-- 
-- TABLE: PENDING_VAL_VARIANCE 
--

CREATE TABLE PENDING_VAL_VARIANCE(
    PENDING_VAL_ID             NUMBER(10, 0)    NOT NULL,
    COMPARED_WITH_START_DTM    DATE             NOT NULL,
    COMPARED_WITH_END_DTM      NUMBER(10, 0)    NOT NULL,
    VARIANCE                   NUMBER(14, 4)    NOT NULL,
    EXPLANATION                CLOB,
    CONSTRAINT PK294 PRIMARY KEY (PENDING_VAL_ID)
)
;



-- 
-- TABLE: REPORTING_PERIOD 
--

CREATE TABLE REPORTING_PERIOD(
    REPORTING_PERIOD_SID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK223 PRIMARY KEY (REPORTING_PERIOD_SID)
)
;




-- 
-- TABLE: VALIDATION_RULE 
--

CREATE TABLE VALIDATION_RULE(
    VALIDATION_RULE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                 VARCHAR2(255)    NOT NULL,
    EVAL_XML              CLOB             NOT NULL,
    CONSTRAINT PK234 PRIMARY KEY (VALIDATION_RULE_ID)
)
;



-- 
-- INDEX: IDX_APPROVAL_STEP_1 
--

CREATE INDEX IDX_APPROVAL_STEP_1 ON APPROVAL_STEP(PENDING_DATASET_ID)
;

-- 
-- INDEX: K2_PENDING_VAL 
--

CREATE UNIQUE INDEX K2_PENDING_VAL ON PENDING_VAL(PENDING_IND_ID, PENDING_REGION_ID, PENDING_PERIOD_ID)
;

-- 
-- TABLE: APPROVAL_STEP 
--

ALTER TABLE APPROVAL_STEP ADD CONSTRAINT RefAPPROVAL_STEP_TEMPLATE459 
    FOREIGN KEY (BASED_ON_STEP_ID)
    REFERENCES APPROVAL_STEP_TEMPLATE(APPROVAL_STEP_ID)
;

ALTER TABLE APPROVAL_STEP ADD CONSTRAINT RefAPPROVAL_STEP460 
    FOREIGN KEY (PARENT_STEP_ID)
    REFERENCES APPROVAL_STEP(APPROVAL_STEP_ID)
;

ALTER TABLE APPROVAL_STEP ADD CONSTRAINT RefAPPROVAL_STEP461 
    FOREIGN KEY (APPROVAL_STEP_ID)
    REFERENCES APPROVAL_STEP(APPROVAL_STEP_ID)
;

ALTER TABLE APPROVAL_STEP ADD CONSTRAINT RefPENDING_DATASET497 
    FOREIGN KEY (PENDING_DATASET_ID)
    REFERENCES PENDING_DATASET(PENDING_DATASET_ID)
;


-- 
-- TABLE: APPROVAL_STEP_IND 
--

ALTER TABLE APPROVAL_STEP_IND ADD CONSTRAINT RefAPPROVAL_STEP462 
    FOREIGN KEY (APPROVAL_STEP_ID)
    REFERENCES APPROVAL_STEP(APPROVAL_STEP_ID)
;

ALTER TABLE APPROVAL_STEP_IND ADD CONSTRAINT RefPENDING_IND463 
    FOREIGN KEY (PENDING_IND_ID)
    REFERENCES PENDING_IND(PENDING_IND_ID)
;


-- 
-- TABLE: APPROVAL_STEP_REGION 
--

ALTER TABLE APPROVAL_STEP_REGION ADD CONSTRAINT RefPENDING_REGION464 
    FOREIGN KEY (PENDING_REGION_ID)
    REFERENCES PENDING_REGION(PENDING_REGION_ID)
;

ALTER TABLE APPROVAL_STEP_REGION ADD CONSTRAINT RefPENDING_REGION465 
    FOREIGN KEY (ROLLS_UP_TO_REGION_ID)
    REFERENCES PENDING_REGION(PENDING_REGION_ID)
;

ALTER TABLE APPROVAL_STEP_REGION ADD CONSTRAINT RefAPPROVAL_STEP466 
    FOREIGN KEY (APPROVAL_STEP_ID)
    REFERENCES APPROVAL_STEP(APPROVAL_STEP_ID)
;


-- 
-- TABLE: APPROVAL_STEP_TEMPLATE 
--

ALTER TABLE APPROVAL_STEP_TEMPLATE ADD CONSTRAINT RefAPPROVAL_STEP_TEMPLATE467 
    FOREIGN KEY (PARENT_STEP_ID)
    REFERENCES APPROVAL_STEP_TEMPLATE(APPROVAL_STEP_ID)
;

ALTER TABLE APPROVAL_STEP_TEMPLATE ADD CONSTRAINT RefCUSTOMER498 
    FOREIGN KEY (CSR_ROOT_SID)
    REFERENCES CUSTOMER(CSR_ROOT_SID)
;

ALTER TABLE APPROVAL_STEP_TEMPLATE ADD CONSTRAINT RefPENDING_REGION499 
    FOREIGN KEY (PENDING_REGION_ID)
    REFERENCES PENDING_REGION(PENDING_REGION_ID)
;


-- 
-- TABLE: APPROVAL_STEP_USER 
--

ALTER TABLE APPROVAL_STEP_USER ADD CONSTRAINT RefAPPROVAL_STEP468 
    FOREIGN KEY (APPROVAL_STEP_ID)
    REFERENCES APPROVAL_STEP(APPROVAL_STEP_ID)
;


-- 
-- TABLE: APPROVAL_STEP_USER_TEMPLATE 
--

ALTER TABLE APPROVAL_STEP_USER_TEMPLATE ADD CONSTRAINT RefAPPROVAL_STEP_TEMPLATE469 
    FOREIGN KEY (APPROVAL_STEP_ID)
    REFERENCES APPROVAL_STEP_TEMPLATE(APPROVAL_STEP_ID)
;


-- 
-- TABLE: PENDING_DATASET 
--

ALTER TABLE PENDING_DATASET ADD CONSTRAINT RefREPORTING_PERIOD473 
    FOREIGN KEY (REPORTING_PERIOD_SID)
    REFERENCES REPORTING_PERIOD(REPORTING_PERIOD_SID)
;

ALTER TABLE PENDING_DATASET ADD CONSTRAINT RefCUSTOMER501 
    FOREIGN KEY (CSR_ROOT_SID)
    REFERENCES CUSTOMER(CSR_ROOT_SID)
;


-- 
-- TABLE: PENDING_IND 
--

ALTER TABLE PENDING_IND ADD CONSTRAINT RefIND474 
    FOREIGN KEY (MAPS_TO_IND_SID)
    REFERENCES IND(IND_SID)
;

ALTER TABLE PENDING_IND ADD CONSTRAINT RefMEASURE475 
    FOREIGN KEY (MEASURE_SID)
    REFERENCES MEASURE(MEASURE_SID)
;

ALTER TABLE PENDING_IND ADD CONSTRAINT RefPENDING_DATASET476 
    FOREIGN KEY (PENDING_DATASET_ID)
    REFERENCES PENDING_DATASET(PENDING_DATASET_ID)
;

ALTER TABLE PENDING_IND ADD CONSTRAINT RefPENDING_IND502 
    FOREIGN KEY (PARENT_IND_ID)
    REFERENCES PENDING_IND(PENDING_IND_ID)
;


-- 
-- TABLE: PENDING_IND_ACCURACY_TYPE 
--

ALTER TABLE PENDING_IND_ACCURACY_TYPE ADD CONSTRAINT RefACCURACY_TYPE510 
    FOREIGN KEY (ACCURACY_TYPE_ID)
    REFERENCES ACCURACY_TYPE(ACCURACY_TYPE_ID)
;

ALTER TABLE PENDING_IND_ACCURACY_TYPE ADD CONSTRAINT RefPENDING_IND511 
    FOREIGN KEY (PENDING_IND_ID)
    REFERENCES PENDING_IND(PENDING_IND_ID)
;


-- 
-- TABLE: PENDING_IND_RULE 
--

ALTER TABLE PENDING_IND_RULE ADD CONSTRAINT RefVALIDATION_RULE477 
    FOREIGN KEY (VALIDATION_RULE_ID)
    REFERENCES VALIDATION_RULE(VALIDATION_RULE_ID)
;

ALTER TABLE PENDING_IND_RULE ADD CONSTRAINT RefPENDING_IND478 
    FOREIGN KEY (PENDING_IND_ID)
    REFERENCES PENDING_IND(PENDING_IND_ID)
;


-- 
-- TABLE: PENDING_PERIOD 
--

ALTER TABLE PENDING_PERIOD ADD CONSTRAINT RefPENDING_DATASET479 
    FOREIGN KEY (PENDING_DATASET_ID)
    REFERENCES PENDING_DATASET(PENDING_DATASET_ID)
;


-- 
-- TABLE: PENDING_REGION 
--

ALTER TABLE PENDING_REGION ADD CONSTRAINT RefREGION480 
    FOREIGN KEY (MAPS_TO_REGION_SID)
    REFERENCES REGION(REGION_SID)
;

ALTER TABLE PENDING_REGION ADD CONSTRAINT RefPENDING_DATASET481 
    FOREIGN KEY (PENDING_DATASET_ID)
    REFERENCES PENDING_DATASET(PENDING_DATASET_ID)
;

ALTER TABLE PENDING_REGION ADD CONSTRAINT RefPENDING_REGION503 
    FOREIGN KEY (PARENT_REGION_ID)
    REFERENCES PENDING_REGION(PENDING_REGION_ID)
;


-- 
-- TABLE: PENDING_VAL 
--

ALTER TABLE PENDING_VAL ADD CONSTRAINT RefPENDING_REGION482 
    FOREIGN KEY (PENDING_REGION_ID)
    REFERENCES PENDING_REGION(PENDING_REGION_ID)
;

ALTER TABLE PENDING_VAL ADD CONSTRAINT RefPENDING_IND483 
    FOREIGN KEY (PENDING_IND_ID)
    REFERENCES PENDING_IND(PENDING_IND_ID)
;

ALTER TABLE PENDING_VAL ADD CONSTRAINT RefAPPROVAL_STEP484 
    FOREIGN KEY (APPROVAL_STEP_ID)
    REFERENCES APPROVAL_STEP(APPROVAL_STEP_ID)
;

ALTER TABLE PENDING_VAL ADD CONSTRAINT RefPENDING_PERIOD485 
    FOREIGN KEY (PENDING_PERIOD_ID)
    REFERENCES PENDING_PERIOD(PENDING_PERIOD_ID)
;

ALTER TABLE PENDING_VAL ADD CONSTRAINT RefMEASURE_CONVERSION518 
    FOREIGN KEY (FROM_MEASURE_CONVERSION_ID)
    REFERENCES MEASURE_CONVERSION(MEASURE_CONVERSION_ID)
;


-- 
-- TABLE: PENDING_VAL_ACCURACY_TYPE_OPT 
--

ALTER TABLE PENDING_VAL_ACCURACY_TYPE_OPT ADD CONSTRAINT RefPENDING_VAL512 
    FOREIGN KEY (PENDING_VAL_ID)
    REFERENCES PENDING_VAL(PENDING_VAL_ID)
;

ALTER TABLE PENDING_VAL_ACCURACY_TYPE_OPT ADD CONSTRAINT RefACCURACY_TYPE_OPTION513 
    FOREIGN KEY (ACCURACY_TYPE_OPTION_ID)
    REFERENCES ACCURACY_TYPE_OPTION(ACCURACY_TYPE_OPTION_ID)
;


-- 
-- TABLE: PENDING_VAL_FILE_UPLOAD 
--

ALTER TABLE PENDING_VAL_FILE_UPLOAD ADD CONSTRAINT RefFILE_UPLOAD514 
    FOREIGN KEY (FILE_UPLOAD_SID)
    REFERENCES FILE_UPLOAD(FILE_UPLOAD_SID)
;

ALTER TABLE PENDING_VAL_FILE_UPLOAD ADD CONSTRAINT RefPENDING_VAL515 
    FOREIGN KEY (PENDING_VAL_ID)
    REFERENCES PENDING_VAL(PENDING_VAL_ID)
;


-- 
-- TABLE: PENDING_VAL_LOG 
--

ALTER TABLE PENDING_VAL_LOG ADD CONSTRAINT RefPENDING_VAL488 
    FOREIGN KEY (PENDING_VAL_ID)
    REFERENCES PENDING_VAL(PENDING_VAL_ID)
;


-- 
-- TABLE: PENDING_VAL_VARIANCE 
--

ALTER TABLE PENDING_VAL_VARIANCE ADD CONSTRAINT RefPENDING_VAL516 
    FOREIGN KEY (PENDING_VAL_ID)
    REFERENCES PENDING_VAL(PENDING_VAL_ID)
;








UPDATE version SET db_version = :version;
COMMIT;
PROMPT
PROMPT ================== UPDATED OK ========================
PROMPT
EXIT

@update_tail
