-- Please update version.sql too -- this keeps clean builds in sync
define version=670
@update_header

DROP TYPE csr.T_CONSUMPTION_TABLE;

CREATE OR REPLACE TYPE csr.T_CONSUMPTION_ROW AS
	OBJECT (
		POS				NUMBER(10, 0),
		START_DTM		TIMESTAMP WITH TIME ZONE,
		END_DTM			TIMESTAMP WITH TIME ZONE,
		CONSUMPTION		NUMBER(24, 10)
	);
/
GRANT EXECUTE ON csr.T_CONSUMPTION_ROW TO PUBLIC;

CREATE OR REPLACE TYPE csr.T_CONSUMPTION_TABLE AS
	TABLE OF T_CONSUMPTION_ROW;
/


CREATE GLOBAL TEMPORARY TABLE csr.METER_INSERT_DATA (
  START_DTM   TIMESTAMP WITH TIME ZONE  NOT NULL,
  END_DTM     TIMESTAMP WITH TIME ZONE  NOT NULL,
  CONSUMPTION NUMBER(24,10) NOT NULL
)
ON COMMIT DELETE ROWS;

ALTER TABLE csr.METER_LIVE_DATA DROP COLUMN TZ_OFFSET;

ALTER TABLE csr.METER_ORPHAN_DATA DROP COLUMN TZ_OFFSET;

ALTER TABLE csr.METER_ORPHAN_DATA DROP CONSTRAINT PK930;

-- We're going to force this data to be re-built
TRUNCATE TABLE csr.METER_ORPHAN_DATA;
ALTER TABLE csr.METER_ORPHAN_DATA MODIFY (
	START_DTM		TIMESTAMP WITH TIME ZONE,
	END_DTM			TIMESTAMP WITH TIME ZONE
);

CREATE UNIQUE INDEX csr.UK_METER_ORPHAN_DATA ON csr.METER_ORPHAN_DATA(APP_SID, SERIAL_ID, START_DTM);


CREATE TABLE csr.METER_SOURCE_DATA (
    APP_SID              NUMBER(10, 0)     			DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID           NUMBER(10, 0)     			NOT NULL,
    START_DTM            TIMESTAMP WITH TIME ZONE   NOT NULL,
    METER_RAW_DATA_ID    NUMBER(10, 0),
    END_DTM              TIMESTAMP WITH TIME ZONE	NOT NULL,
    CONSUMPTION          NUMBER(24, 10)    			NOT NULL
)
;

ALTER TABLE csr.METER_SOURCE_DATA ADD CONSTRAINT RefMETER_RAW_DATA2071 
    FOREIGN KEY (APP_SID, METER_RAW_DATA_ID)
    REFERENCES csr.METER_RAW_DATA(APP_SID, METER_RAW_DATA_ID)
;

ALTER TABLE csr.METER_SOURCE_DATA ADD CONSTRAINT RefALL_METER2072 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES csr.ALL_METER(APP_SID, REGION_SID)
;

ALTER TABLE csr.METER_SOURCE_DATA ADD CONSTRAINT RefCUSTOMER2073 
    FOREIGN KEY (APP_SID)
    REFERENCES csr.CUSTOMER(APP_SID)
;

CREATE UNIQUE INDEX csr.UK_METER_SOURCE_DATA ON csr.METER_SOURCE_DATA(APP_SID, REGION_SID, START_DTM);

CREATE INDEX csr.IDX_METER_SOURCE_DATA_REGION ON csr.METER_SOURCE_DATA(APP_SID, REGION_SID);


-- Force the data processor to recreate the data from raw
UPDATE csr.meter_raw_data SET status_id = 2 /* retry */;

@../meter_monitor_pkg
@../meter_monitor_body

@update_tail
