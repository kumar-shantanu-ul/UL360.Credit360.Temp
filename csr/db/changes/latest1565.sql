-- Please update version.sql too -- this keeps clean builds in sync
define version=1565
@update_header

ALTER TABLE CSR.EST_CUSTOMER ADD (
	ESP_ID		NUMBER(10, 0)
);

ALTER TABLE CSR.EST_BUILDING ADD (
	ESP_ID		NUMBER(10, 0)
);

ALTER TABLE CSR.EST_SPACE ADD (
	ESP_ID		NUMBER(10, 0)
);

ALTER TABLE CSR.EST_ENERGY_METER ADD (
	ESP_ID		NUMBER(10, 0)
);

ALTER TABLE CSR.EST_WATER_METER ADD (
	ESP_ID		NUMBER(10, 0)
);

ALTER TABLE CSR.EST_BUILDING_METRIC_MAPPING ADD (
	DIVISOR		NUMBER(24, 10)    DEFAULT 1 NOT NULL,
    CHECK (DIVISOR <> 0)
);

ALTER TABLE CSR.EST_SPACE_ATTR_MAPPING ADD (
	DIVISOR		NUMBER(24, 10)    DEFAULT 1 NOT NULL,
    CHECK (DIVISOR <> 0)
);

BEGIN
	UPDATE csr.est_customer
	   SET esp_id = est_customer_sid
	 WHERE est_customer_sid IS NOT NULL
	   AND esp_id IS NULL;
	
	UPDATE csr.est_building
	   SET esp_id = region_sid
	 WHERE region_sid IS NOT NULL
	   AND esp_id IS NULL;
	
	UPDATE csr.est_space
	   SET esp_id = region_sid
	 WHERE region_sid IS NOT NULL
	   AND esp_id IS NULL;
	
	UPDATE csr.est_energy_meter
	   SET esp_id = region_sid
	 WHERE region_sid IS NOT NULL
	   AND esp_id IS NULL;
	
	UPDATE csr.est_water_meter
	   SET esp_id = region_sid
	 WHERE region_sid IS NOT NULL
	   AND esp_id IS NULL;
END;
/

BEGIN
	-- Update building metrics
	UPDATE csr.est_building_metric_mapping
	   SET divisor = 100
	 WHERE metric_name = 'rating';
	
	-- Update space attributes
	UPDATE csr.est_space_attr_mapping
	   SET divisor = 100
	 WHERE LOWER(description) LIKE '%percent%';
END;
/

CREATE TABLE CSR.EST_OLD_BLD_METRIC_MAPPING AS
	SELECT * FROM CSR.EST_BUILDING_METRIC_MAPPING;
	
CREATE TABLE CSR.EST_OLD_WATER_USE_MAPPING AS
	SELECT * FROM CSR.EST_WATER_USE_MAPPING;

DROP INDEX CSR.IX_EST_ENTYP_IND;
DROP INDEX CSR.IX_WUMAP_IND;
DROP INDEX CSR.IX_EST_ENTYP_DESCIND;
DROP INDEX CSR.IX_WUMAP_DESCIND;

DROP TABLE CSR.EST_ENERGY_TYPE_MAPPING CASCADE CONSTRAINTS;
DROP TABLE CSR.EST_WATER_USE_MAPPING CASCADE CONSTRAINTS;

CREATE TABLE CSR.EST_ENERGY_TYPE_MAPPING(
    APP_SID              NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID      NUMBER(10, 0)    NOT NULL,
    ENERGY_TYPE          VARCHAR2(256)    NOT NULL,
    GENERATION_METHOD    VARCHAR2(256)    NOT NULL,
    METER_IND_ID         NUMBER(10, 0),
    CONSTRAINT PK_EST_ENERGY_TYPE_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, ENERGY_TYPE, GENERATION_METHOD)
);

ALTER TABLE CSR.EST_ENERGY_TYPE_MAPPING ADD CONSTRAINT EST_ENERGYTYP_METER_IND 
    FOREIGN KEY (APP_SID, METER_IND_ID)
    REFERENCES CSR.METER_IND(APP_SID, METER_IND_ID)
;

CREATE TABLE CSR.EST_WATER_USE_MAPPING(
    APP_SID            NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID    NUMBER(10, 0)    NOT NULL,
    USE_TYPE           VARCHAR2(256)    NOT NULL,
    METER_IND_ID       NUMBER(10, 0),
    CONSTRAINT PK_EST_WATER_USE_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, USE_TYPE)
);

ALTER TABLE CSR.EST_WATER_USE_MAPPING ADD CONSTRAINT EST_WATERUSE_METER_IND 
    FOREIGN KEY (APP_SID, METER_IND_ID)
    REFERENCES CSR.METER_IND(APP_SID, METER_IND_ID)
;

CREATE INDEX CSR.IX_EST_ENERGYTYP_METER_IND ON CSR.EST_ENERGY_TYPE_MAPPING(APP_SID, METER_IND_ID);
CREATE INDEX CSR.IX_EST_WATERUSE_METER_IND ON CSR.EST_WATER_USE_MAPPING(APP_SID, METER_IND_ID);

DROP INDEX CSR.IX_TAG_METMAPTAG;
DROP INDEX CSR.IX_IND_METMAPTAG;
DROP INDEX CSR.IX_MCONV_METMAPTAG;
DROP INDEX CSR.IX_BLDMETMAP_MATMAPTAG;
DROP TABLE CSR.EST_METRIC_MAPPING_TAG CASCADE CONSTRAINTS;

DROP INDEX CSR.IX_TAG_ATTMAPTAG;
DROP INDEX CSR.IX_IND_ATTMAPTAG;
DROP INDEX CSR.IX_MCONV_ATTMAPTAG;
DROP INDEX CSR.IX_ATTMAP_ATTMAPTAG;
DROP TABLE CSR.EST_ATTR_MAPPING_TAG CASCADE CONSTRAINTS;

DROP INDEX CSR.IX_TAG_OTHMAPTAG;
DROP INDEX CSR.IX_IND_OTHMAPTAG;
DROP INDEX CSR.IX_MCONV_OTHMAPTAG;
DROP INDEX CSR.IX_OTHMAP_OTHMAPTAG;
DROP TABLE CSR.EST_OTHER_MAPPING_TAG CASCADE CONSTRAINTS;


CREATE TABLE CSR.EST_ENERGY_CONV_MAPPING(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)    NOT NULL,
    ENERGY_TYPE              VARCHAR2(256)    NOT NULL,
    GENERATION_METHOD        VARCHAR2(256)    NOT NULL,
    UOM                      VARCHAR2(256)    NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    MEASURE_SID              NUMBER(10, 0),
    CONSTRAINT PK_EST_ENERGY_CONV_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, ENERGY_TYPE, GENERATION_METHOD, UOM)
);

ALTER TABLE CSR.EST_ENERGY_CONV_MAPPING ADD CONSTRAINT FK_EST_ENERGYTYP_CONV_MAP 
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, ENERGY_TYPE, GENERATION_METHOD)
    REFERENCES CSR.EST_ENERGY_TYPE_MAPPING(APP_SID, EST_ACCOUNT_SID, ENERGY_TYPE, GENERATION_METHOD)
;

ALTER TABLE CSR.EST_ENERGY_CONV_MAPPING ADD CONSTRAINT FK_ENERGY_CONV_MAPPING 
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
;

CREATE TABLE CSR.EST_WATER_CONV_MAPPING(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    EST_ACCOUNT_SID          NUMBER(10, 0)    NOT NULL,
    USE_TYPE                 VARCHAR2(256)    NOT NULL,
    UOM                      VARCHAR2(256)    NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    MEASURE_SID              NUMBER(10, 0),
    CONSTRAINT PK_EST_WATER_CONV_MAPPING PRIMARY KEY (APP_SID, EST_ACCOUNT_SID, USE_TYPE, UOM)
);

ALTER TABLE CSR.EST_WATER_CONV_MAPPING ADD CONSTRAINT FK_EST_WATERUSE_CONV_MAP 
    FOREIGN KEY (APP_SID, EST_ACCOUNT_SID, USE_TYPE)
    REFERENCES CSR.EST_WATER_USE_MAPPING(APP_SID, EST_ACCOUNT_SID, USE_TYPE)
;

ALTER TABLE CSR.EST_WATER_CONV_MAPPING ADD CONSTRAINT FK_WATER_CONV_MAPPING 
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
;

CREATE INDEX CSR.IX_EST_ENERGYTYP_CONV_MAP ON CSR.EST_ENERGY_CONV_MAPPING(APP_SID, EST_ACCOUNT_SID, ENERGY_TYPE, GENERATION_METHOD);
CREATE INDEX CSR.IX_ENERGY_CONV_MAPPING ON CSR.EST_ENERGY_CONV_MAPPING(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID);
CREATE INDEX CSR.IX_EST_WATERUSE_CONV_MAP ON CSR.EST_WATER_CONV_MAPPING(APP_SID, EST_ACCOUNT_SID, USE_TYPE);
CREATE INDEX CSR.IX_WATER_CONV_MAPPING ON CSR.EST_WATER_CONV_MAPPING(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID);

DECLARE
	POLICY_ALREADY_EXISTS EXCEPTION;
	PRAGMA EXCEPTION_INIT(POLICY_ALREADY_EXISTS, -28101);
BEGIN
	BEGIN
		dbms_rls.add_policy(
		    object_schema   => 'CSR',
		    object_name     => 'EST_ENERGY_CONV_MAPPING',
		    policy_name     => 'EST_ENERGY_CONV_MAPPING_POLICY',
		    function_schema => 'CSR',
		    policy_function => 'appSidCheck',
		    statement_types => 'select, insert, update, delete',
		    update_check	=> true,
		    policy_type     => dbms_rls.context_sensitive
		);
	EXCEPTION
		WHEN POLICY_ALREADY_EXISTS THEN
			NULL;
	END;
	
	BEGIN
		dbms_rls.add_policy(
		    object_schema   => 'CSR',
		    object_name     => 'EST_ENERGY_TYPE_MAPPING',
		    policy_name     => 'EST_ENERGY_TYPE_MAPPING_POLICY',
		    function_schema => 'CSR',
		    policy_function => 'appSidCheck',
		    statement_types => 'select, insert, update, delete',
		    update_check	=> true,
		    policy_type     => dbms_rls.context_sensitive
		);
	EXCEPTION
		WHEN POLICY_ALREADY_EXISTS THEN
			NULL;
	END;
	
	BEGIN
		dbms_rls.add_policy(
		    object_schema   => 'CSR',
		    object_name     => 'EST_WATER_CONV_MAPPING',
		    policy_name     => 'EST_WATER_CONV_MAPPING_POLICY',
		    function_schema => 'CSR',
		    policy_function => 'appSidCheck',
		    statement_types => 'select, insert, update, delete',
		    update_check	=> true,
		    policy_type     => dbms_rls.context_sensitive
		);
	EXCEPTION
		WHEN POLICY_ALREADY_EXISTS THEN
			NULL;
	END;
	
	BEGIN
		dbms_rls.add_policy(
		    object_schema   => 'CSR',
		    object_name     => 'EST_WATER_USE_MAPPING',
		    policy_name     => 'EST_WATER_USE_MAPPING_POLICY',
		    function_schema => 'CSR',
		    policy_function => 'appSidCheck',
		    statement_types => 'select, insert, update, delete',
		    update_check	=> true,
		    policy_type     => dbms_rls.context_sensitive
		);
	EXCEPTION
		WHEN POLICY_ALREADY_EXISTS THEN
			NULL;
	END;
END;
/

@../energy_star_pkg
@../energy_star_body

@update_tail
