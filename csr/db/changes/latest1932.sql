-- Please update version.sql too -- this keeps clean builds in sync
define version=1932
@update_header

CREATE TABLE CSR.DELEGATION_DATE_SCHEDULE(
	APP_SID                 		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	DELEGATION_DATE_SCHEDULE_ID 	NUMBER(10, 0) 	NOT NULL,
	START_DTM 						DATE 			NOT NULL,
	END_DTM 						DATE 			NOT NULL,
	CONSTRAINT CK_DATES CHECK (START_DTM = TRUNC(START_DTM, 'MON') AND END_DTM = TRUNC(END_DTM, 'MON') AND END_DTM > START_DTM),
	CONSTRAINT PK_DELEGATION_DATE_SCHEDULE PRIMARY KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID)
)
;

CREATE TABLE CSR.SHEET_DATE_SCHEDULE(
    APP_SID                 			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEGATION_DATE_SCHEDULE_ID 		NUMBER(10, 0)   NOT NULL,
	START_DTM 							DATE 			NOT NULL,
	CREATION_DTM						DATE 			NOT NULL,
	SUBMISSION_DTM						DATE 			NOT NULL,
	REMINDER_DTM						DATE 			NOT NULL,
	CONSTRAINT CK_START_DTM CHECK (START_DTM = TRUNC(START_DTM, 'MON')),
	CONSTRAINT CK_SUBMISSION_DTM CHECK (SUBMISSION_DTM >= START_DTM),
	CONSTRAINT CK_REMINDER_DTM CHECK (REMINDER_DTM <= SUBMISSION_DTM),
    CONSTRAINT PK_SHEET_DATE_SCHEDULE	PRIMARY KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID, START_DTM)
)
;
  
CREATE TABLE CSR.DELEG_PLAN_DATE_SCHEDULE(
    APP_SID                 		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    DELEG_PLAN_SID    				NUMBER(10, 0)	NOT NULL,
    ROLE_SID						NUMBER(10, 0),
	DELEG_PLAN_COL_ID               NUMBER(10, 0),
    SCHEDULE_XML					CLOB,
	REMINDER_OFFSET					NUMBER(10,0), 
	DELEGATION_DATE_SCHEDULE_ID 	NUMBER(10, 0),
	CONSTRAINT CK_SCHEDULE CHECK ((DELEGATION_DATE_SCHEDULE_ID IS NULL AND REMINDER_OFFSET IS NOT NULL AND SCHEDULE_XML IS NOT NULL) OR (DELEGATION_DATE_SCHEDULE_ID IS NOT NULL AND REMINDER_OFFSET IS NULL AND SCHEDULE_XML IS NULL)),
	CONSTRAINT UK_DELEG_PLAN_DATE_SCHEDULE  UNIQUE (APP_SID, DELEG_PLAN_SID, ROLE_SID, DELEG_PLAN_COL_ID)
)
;

ALTER TABLE CSR.DELEGATION ADD DELEGATION_DATE_SCHEDULE_ID NUMBER(10, 0)
;

ALTER TABLE CSR.DELEGATION_DATE_SCHEDULE ADD CONSTRAINT FK_DELEG_DATE_SCHDL_CUSTOMER
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.SHEET_DATE_SCHEDULE ADD CONSTRAINT FK_SHEET_SCHDL_DELEG_SCHDL_ID
    FOREIGN KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID)
    REFERENCES CSR.DELEGATION_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

ALTER TABLE CSR.DELEG_PLAN_DATE_SCHEDULE ADD CONSTRAINT FK_DLG_PLN_SCHDL_DELEG_SCHDL
    FOREIGN KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID)
    REFERENCES CSR.DELEGATION_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

ALTER TABLE CSR.DELEG_PLAN_DATE_SCHEDULE ADD CONSTRAINT FK_DLG_PLN_DATE_SCHDL_DLG_PLN
    FOREIGN KEY (APP_SID, DELEG_PLAN_SID)
    REFERENCES CSR.DELEG_PLAN(APP_SID, DELEG_PLAN_SID)
;

ALTER TABLE CSR.DELEG_PLAN_DATE_SCHEDULE ADD CONSTRAINT FK_DLG_PLN_SCHDL_ROLE
    FOREIGN KEY (APP_SID, ROLE_SID)
    REFERENCES CSR.ROLE(APP_SID, ROLE_SID)
;

ALTER TABLE CSR.DELEG_PLAN_DATE_SCHEDULE ADD CONSTRAINT FK_DLG_PLN_SCHDL_DLG_PLN_COL
    FOREIGN KEY (APP_SID, DELEG_PLAN_COL_ID)
    REFERENCES CSR.DELEG_PLAN_COL(APP_SID, DELEG_PLAN_COL_ID)
;

ALTER TABLE CSR.DELEGATION ADD CONSTRAINT FK_DELEG_DELEG_DATE_SCHDL
    FOREIGN KEY (APP_SID, DELEGATION_DATE_SCHEDULE_ID)
    REFERENCES CSR.DELEGATION_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

CREATE INDEX CSR.IX_SHEET_DATE_SCHDL_SCHDL_ID ON CSR.SHEET_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

CREATE INDEX CSR.IX_DELEG_PLAN_SCHDL_SCHDL_ID ON CSR.DELEG_PLAN_DATE_SCHEDULE(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

CREATE INDEX CSR.IX_DELEG_SCHDL_ID ON CSR.DELEGATION(APP_SID, DELEGATION_DATE_SCHEDULE_ID)
;

CREATE SEQUENCE csr.DELEGATION_DATE_SCHEDULE_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

DECLARE
	policy_already_exists exception;
	pragma exception_init(policy_already_exists, -28101);

	type t_tabs is table of varchar2(30);
	v_list t_tabs;
	v_null_list t_tabs;
BEGIN	
	v_list := t_tabs(
		'DELEGATION_DATE_SCHEDULE',
		'SHEET_DATE_SCHEDULE',
		'DELEG_PLAN_DATE_SCHEDULE' 		
	);
	for i in 1 .. v_list.count loop
		declare
			v_name varchar2(30);
			v_i pls_integer default 1;
		begin
			loop
				begin
					if v_i = 1 then
						v_name := SUBSTR(v_list(i), 1, 23)||'_POLICY';
					else
						v_name := SUBSTR(v_list(i), 1, 21)||'_POLICY_'||v_i;
					end if;
					dbms_output.put_line('doing '||v_name);
				    dbms_rls.add_policy(
				        object_schema   => 'CSR',
				        object_name     => v_list(i),
				        policy_name     => v_name,
				        function_schema => 'CSR',
				        policy_function => 'appSidCheck',
				        statement_types => 'select, insert, update, delete',
				        update_check	=> true,
				        policy_type     => dbms_rls.context_sensitive );
				  	exit;
				exception
					when policy_already_exists then
						v_i := v_i + 1;
				end;
			end loop;
		end;
	end loop;
END;
/

CREATE OR REPLACE VIEW csr.v$delegation AS
	SELECT d.*, dp.submit_confirmation_text
	  FROM (
		SELECT delegation.*, CONNECT_BY_ROOT(delegation_sid) root_delegation_sid
		  FROM delegation
		 START WITH parent_sid = app_sid
	   CONNECT BY parent_sid = prior delegation_sid) d
	  LEFT JOIN delegation_policy dp ON dp.delegation_sid = root_delegation_sid;

@..\sheet_body
@..\delegation_pkg
@..\delegation_body
@..\deleg_plan_pkg
@..\deleg_plan_body
@..\role_body

@update_tail