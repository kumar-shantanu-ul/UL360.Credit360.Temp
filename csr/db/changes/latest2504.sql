-- Please update version.sql too -- this keeps clean builds in sync
define version=2504
@update_header

CREATE TABLE CSR.EST_ATTR_FOR_BUILDING(
    ATTR_NAME       VARCHAR2(256)    NOT NULL,
    TYPE_NAME       VARCHAR2(256)    NOT NULL,
    IS_MANDATORY    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_MANDATORY IN(0,1)),
    CONSTRAINT PK_EST_ATTR_FOR_BUILDING PRIMARY KEY (ATTR_NAME)
)
;

CREATE TABLE CSR.EST_ATTR_FOR_SPACE(
    ATTR_NAME    VARCHAR2(256)     NOT NULL,
    TYPE_NAME    VARCHAR2(256)     NOT NULL,
    NOTES        VARCHAR2(4000),
    CONSTRAINT PK_EST_ATTR_FOR_SPACE PRIMARY KEY (ATTR_NAME)
)
;

CREATE TABLE CSR.EST_ATTR_TYPE(
    TYPE_NAME     VARCHAR2(256)    NOT NULL,
    BASIC_TYPE    VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_ATTR_TYPE PRIMARY KEY (TYPE_NAME)
)
;

CREATE TABLE CSR.EST_ATTR_UNIT(
    TYPE_NAME    VARCHAR2(256)    NOT NULL,
    UOM          VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_ATTR_UNIT PRIMARY KEY (TYPE_NAME, UOM)
)
;

CREATE TABLE CSR.EST_ATTR_ENUM(
    TYPE_NAME    VARCHAR2(256)    NOT NULL,
    ENUM         VARCHAR2(256)    NOT NULL,
    POS          NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_EST_ATTR_ENUM PRIMARY KEY (TYPE_NAME, ENUM)
)
;

CREATE TABLE CSR.EST_ATTR_MEASURE(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MEASURE_SID    NUMBER(10, 0)    NOT NULL,
    TYPE_NAME      VARCHAR2(256)    NOT NULL,
    CONSTRAINT PK_EST_ATTR_MEASURE PRIMARY KEY (APP_SID, TYPE_NAME)
)
;

CREATE TABLE CSR.EST_ATTR_MEASURE_CONV(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    MEASURE_CONVERSION_ID    NUMBER(10, 0),
    TYPE_NAME                VARCHAR2(256)    NOT NULL,
    UOM                      VARCHAR2(256)    NOT NULL,
    MEASURE_SID              NUMBER(10, 0),
    CONSTRAINT PK_EST_ATTR_MEASURE_CONV PRIMARY KEY (APP_SID, TYPE_NAME, UOM)
)
;

CREATE TABLE CSR.EST_SPACE_TYPE_ATTR(
    EST_SPACE_TYPE    VARCHAR2(256)    NOT NULL,
    ATTR_NAME         VARCHAR2(256)    NOT NULL,
    IS_MANDATORY      NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_MANDATORY IN(0,1)),
    CONSTRAINT PK_EST_SPACE_TYPE_ATTR PRIMARY KEY (EST_SPACE_TYPE, ATTR_NAME)
)
;


ALTER TABLE CSR.EST_ATTR_FOR_BUILDING ADD CONSTRAINT FK_EST_ATTRBLD_ATTRTYPE 
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;

ALTER TABLE CSR.EST_ATTR_FOR_SPACE ADD CONSTRAINT FK_EST_ATTRSPC_ATTRTYPE 
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;

ALTER TABLE CSR.EST_ATTR_UNIT ADD CONSTRAINT FK_EST_ATTRTYPE_ATTRUNIT 
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;

ALTER TABLE CSR.EST_ATTR_ENUM ADD CONSTRAINT FK_EST_ATTRTYPE_ATTRENUM 
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;

ALTER TABLE CSR.EST_ATTR_MEASURE ADD CONSTRAINT FK_MEASURE_EST_ATTTRMEASURE 
    FOREIGN KEY (APP_SID, MEASURE_SID)
    REFERENCES CSR.MEASURE(APP_SID, MEASURE_SID)
;

ALTER TABLE CSR.EST_ATTR_MEASURE ADD CONSTRAINT FK_CUST_EST_ATTRMEASURE 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID)
;

ALTER TABLE CSR.EST_ATTR_MEASURE ADD CONSTRAINT FK_EST_ATTRTYPE_MEASURE 
    FOREIGN KEY (TYPE_NAME)
    REFERENCES CSR.EST_ATTR_TYPE(TYPE_NAME)
;

ALTER TABLE CSR.EST_ATTR_MEASURE_CONV ADD CONSTRAINT FK_EST_ATTRMEAS_ATTRCONV 
    FOREIGN KEY (APP_SID, TYPE_NAME)
    REFERENCES CSR.EST_ATTR_MEASURE(APP_SID, TYPE_NAME)
;

ALTER TABLE CSR.EST_ATTR_MEASURE_CONV ADD CONSTRAINT FK_EST_ATTRUNIT_CONV 
    FOREIGN KEY (TYPE_NAME, UOM)
    REFERENCES CSR.EST_ATTR_UNIT(TYPE_NAME, UOM)
;

ALTER TABLE CSR.EST_ATTR_MEASURE_CONV ADD CONSTRAINT FK_MEASCONV_ESTATTRMEASCONV 
    FOREIGN KEY (APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID)
;

ALTER TABLE CSR.EST_SPACE_TYPE_ATTR ADD CONSTRAINT FK_EST_ATTRSPC_SPCTYPEATTR 
    FOREIGN KEY (ATTR_NAME)
    REFERENCES CSR.EST_ATTR_FOR_SPACE(ATTR_NAME)
;

-- FK INDEXES
CREATE INDEX CSR.IX_EST_ATTRBLD_ATTRTYPE ON CSR.EST_ATTR_FOR_BUILDING (TYPE_NAME);
CREATE INDEX CSR.IX_EST_ATTRSPC_ATTRTYPE ON CSR.EST_ATTR_FOR_SPACE (TYPE_NAME);
CREATE INDEX CSR.IX_EST_ATTRTYPE_ATTRUNIT ON CSR.EST_ATTR_UNIT (TYPE_NAME);
CREATE INDEX CSR.IX_EST_ATTRTYPE_ATTRENUM ON CSR.EST_ATTR_ENUM (TYPE_NAME);
CREATE INDEX CSR.IX_MEASURE_EST_ATTTRMEASURE ON CSR.EST_ATTR_MEASURE (APP_SID, MEASURE_SID);
CREATE INDEX CSR.IX_CUST_EST_ATTRMEASURE ON CSR.EST_ATTR_MEASURE (APP_SID);
CREATE INDEX CSR.IX_EST_ATTRTYPE_MEASURE ON CSR.EST_ATTR_MEASURE (TYPE_NAME);
CREATE INDEX CSR.IX_EST_ATTRMEAS_ATTRCONV ON CSR.EST_ATTR_MEASURE_CONV (APP_SID, TYPE_NAME);
CREATE INDEX CSR.IX_EST_ATTRUNIT_CONV ON CSR.EST_ATTR_MEASURE_CONV (TYPE_NAME, UOM);
CREATE INDEX CSR.IX_MEASCONV_ESTATTRMEASCONV ON CSR.EST_ATTR_MEASURE_CONV (APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID);
CREATE INDEX CSR.IX_EST_ATTRSPC_SPCTYPEATTR ON CSR.EST_SPACE_TYPE_ATTR (ATTR_NAME);

-- RLS
DECLARE
	FEATURE_NOT_ENABLED EXCEPTION;
	PRAGMA EXCEPTION_INIT(FEATURE_NOT_ENABLED, -439);
	policy_already_exists exception;
	pragma exception_init(policy_already_exists, -28101);
	type t_tabs is table of varchar2(30);
	v_list t_tabs;
	v_null_list t_tabs;
	v_nullable VARCHAR2(1);
begin	
	v_list := t_tabs(
		'EST_ATTR_MEASURE',
		'EST_ATTR_MEASURE_CONV'
	);
	for i in 1 .. v_list.count loop
		declare
			v_name varchar2(30);
			v_i pls_integer default 1;
		begin
			loop
				begin					
					-- verify that the table has an app_sid column (dev helper)
					BEGIN
						SELECT nullable 
						  INTO v_nullable
						  FROM all_tab_columns 
						 WHERE owner = 'CSR' 
						   AND table_name = UPPER(v_list(i))
						   AND column_name = 'APP_SID';
					EXCEPTION
						WHEN no_data_found THEN
							raise_application_error(-20001, 'CSR.'||v_list(i)||' does not have an app_sid column');
					END;
					
					if v_i = 1 then
						v_name := SUBSTR(v_list(i), 1, 23)||'_POLICY';
					else
						v_name := SUBSTR(v_list(i), 1, 21)||'_POLICY_'||v_i;
					end if;
					dbms_output.put_line('doing '||v_name);
				    dbms_rls.add_policy(
				        object_schema   => 'CSR',
				        object_name     => v_list(i),
				        policy_name     => v_name,
				        function_schema => 'CSR',
				        policy_function => (CASE WHEN v_nullable ='N' THEN 'appSidCheck' ELSE 'nullableAppSidCheck' END),
				        statement_types => 'select, insert, update, delete',
				        update_check	=> true,
				        policy_type     => dbms_rls.context_sensitive );
				  	exit;
				exception
					when policy_already_exists then
						v_i := v_i + 1;
					WHEN FEATURE_NOT_ENABLED THEN
						DBMS_OUTPUT.PUT_LINE('RLS policy '||v_name||' not applied as feature not enabled');
						exit;
				end;
			end loop;
		end;
	end loop;
end;
/

create or replace package csr.energy_star_attr_pkg as end;
/
grant execute on csr.energy_star_attr_pkg to web_user;

@../energy_star_attr_pkg
@../energy_star_attr_body

@update_tail
