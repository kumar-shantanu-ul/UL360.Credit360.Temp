-- Please update version.sql too -- this keeps clean builds in sync
define version=1465
@update_header


CREATE SEQUENCE CSR.SPACE_TYPE_ID_SEQ
    START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE CACHE 5 NOORDER;

CREATE SEQUENCE CSR.PROPERTY_TYPE_ID_SEQ
    START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE CACHE 5 NOORDER;

CREATE SEQUENCE CSR.LEASE_TYPE_ID_SEQ
    START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE CACHE 5 NOORDER;
    
CREATE SEQUENCE CSR.METER_IND_ID_SEQ
    START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE CACHE 5 NOORDER;
    
CREATE TABLE CSR.SPACE_TYPE (	
	APP_SID			NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SPACE_TYPE_ID	NUMBER(10) NOT NULL,
	LABEL			VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_SPACE_TYPE	PRIMARY KEY (APP_SID, SPACE_TYPE_ID)
);
CREATE UNIQUE INDEX CSR.UK_SPACE_TYPE ON CSR.SPACE_TYPE(APP_SID, UPPER(LABEL));

CREATE TABLE CSR.SPACE_TYPE_IND (
	APP_SID			NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SPACE_TYPE_ID	NUMBER(10) NOT NULL,
	IND_SID			NUMBER(10) NOT NULL
);

ALTER TABLE CSR.SPACE_TYPE_IND ADD CONSTRAINT FK_SPACE_TYPE_IND_IND
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID);

CREATE TABLE CSR.PROPERTY_TYPE (
	APP_SID				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROPERTY_TYPE_ID	NUMBER(10) NOT NULL,
	LABEL				VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_PROPERTY_TYPE	PRIMARY KEY (APP_SID, PROPERTY_TYPE_ID)
);

CREATE UNIQUE INDEX CSR.UK_PROPERTY_TYPE ON CSR.PROPERTY_TYPE(APP_SID, UPPER(LABEL));

ALTER TABLE CSR.PROPERTY ADD (
	PROPERTY_TYPE_ID	NUMBER(10),
	COMPANY_SID			NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') 
);

ALTER TABLE CSR.PROPERTY ADD CONSTRAINT FK_PROP_PROP_TYPE
    FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID)
    REFERENCES CSR.PROPERTY_TYPE(APP_SID, PROPERTY_TYPE_ID);

GRANT SELECT, REFERENCES ON CHAIN.COMPANY TO CSR;

ALTER TABLE CSR.PROPERTY ADD CONSTRAINT FK_PROP_COMPANY
    FOREIGN KEY (APP_SID, COMPANY_SID)
    REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID);
    
CREATE TABLE CSR.PROPERTY_TYPE_SPACE_TYPE (
	APP_SID				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PROPERTY_TYPE_ID	NUMBER(10) NOT NULL,
	SPACE_TYPE_ID		NUMBER(10) NOT NULL
);


ALTER TABLE CSR.PROPERTY_TYPE_SPACE_TYPE ADD CONSTRAINT FK_PRP_TYP_SPC_TYPE_SPC
    FOREIGN KEY (APP_SID, SPACE_TYPE_ID)
    REFERENCES CSR.SPACE_TYPE(APP_SID, SPACE_TYPE_ID) ON DELETE CASCADE;

ALTER TABLE CSR.PROPERTY_TYPE_SPACE_TYPE ADD CONSTRAINT FK_PRP_TYP_SPC_TYPE_PROP
    FOREIGN KEY (APP_SID, PROPERTY_TYPE_ID)
    REFERENCES CSR.PROPERTY_TYPE(APP_SID, PROPERTY_TYPE_ID) ON DELETE CASCADE;


CREATE TABLE CSR.LEASE_TYPE (	
	APP_SID			NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	LEASE_TYPE_ID	NUMBER(10) NOT NULL,
	CONSTRAINT PK_LEASE_TYPE	PRIMARY KEY (APP_SID, LEASE_TYPE_ID)
);


CREATE TABLE CSR.SPACE(
    APP_SID          NUMBER(10)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    REGION_SID       NUMBER(10)    NOT NULL,			 
	SPACE_TYPE_ID	 NUMBER(10)    NOT NULL,	
    CONSTRAINT PK_SPACE PRIMARY KEY (APP_SID, REGION_SID)
);

ALTER TABLE CSR.SPACE ADD CONSTRAINT FK_SPACE_SPACE_TYPE
    FOREIGN KEY (APP_SID, SPACE_TYPE_ID)
    REFERENCES CSR.SPACE_TYPE(APP_SID, SPACE_TYPE_ID);


-- a table specifying which indicators_sids can be used for tracking meter data
-- GROUP_KEY is a way of grouping up (e.g. Energy v. Water)
CREATE TABLE CSR.METER_IND(
	APP_SID					NUMBER(10)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	METER_IND_ID			NUMBER(10)	  NOT NULL,
	LABEL					VARCHAR2(255) NOT NULL,
    CONSUMPTION_IND_SID		NUMBER(10)	  NOT NULL,	
    COST_IND_SID			NUMBER(10)	  NOT NULL,	
    GROUP_KEY				VARCHAR(255),
    CONSTRAINT PK_METER_IND PRIMARY KEY (APP_SID, METER_IND_ID)
);

CREATE UNIQUE INDEX CSR.UK_METER_IND ON CSR.METER_IND(APP_SID, CONSUMPTION_IND_SID, NVL(GROUP_KEY,'ALL'));

ALTER TABLE CSR.TAG_GROUP ADD (	
	LOOKUP_KEY		VARCHAR2(64)
);

CREATE TABLE CSR.REGION_TYPE_TAG_GROUP (
	APP_SID				NUMBER(10)  DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	REGION_TYPE			NUMBER(10)	NOT NULL,
	TAG_GROUP_ID		NUMBER(10)	NOT NULL,
	CONSTRAINT PK_REGION_TYPE_TAG_GROUP PRIMARY KEY (APP_SID, REGION_TYPE, TAG_GROUP_ID)
);

ALTER TABLE CSR.REGION_TYPE_TAG_GROUP ADD CONSTRAINT FK_REG_TYP_TG_REG_TYP
    FOREIGN KEY (REGION_TYPE)
    REFERENCES CSR.REGION_TYPE(REGION_TYPE);

ALTER TABLE CSR.REGION_TYPE_TAG_GROUP ADD CONSTRAINT FK_REG_TYP_TG_TG
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID);



CREATE OR REPLACE VIEW csr.v$property AS
    SELECT r.app_sid, r.region_sid, r.description, r.parent_sid, r.lookup_key, p.street_addr_1, p.street_addr_2, p.city, p.state, p.postcode, c.country country_code,
        c.name country_name, pt.property_type_id, pt.label property_type_label,
        p.flow_item_id, fi.current_state_id, fs.label current_state_label, fs.lookup_key current_state_lookup_key,
        r.active, r.acquisition_dtm, r.disposal_dtm, geo_longitude lng, geo_latitude lat
      FROM property p
        JOIN v$region r ON p.region_sid = r.region_sid AND p.app_sid = r.app_sid
        LEFT JOIN postcode.country c ON r.geo_country = c.country 
        LEFT JOIN property_type pt ON p.property_type_id = pt.property_type_id AND p.app_sid = pt.app_sid
        LEFT JOIN flow_item fi ON p.flow_item_id = fi.flow_item_id AND p.app_sid = fi.app_sid
        LEFT JOIN flow_state fs ON fi.current_state_id = fs.flow_state_id AND fi.app_sid = fs.app_sid;


CREATE OR REPLACE VIEW csr.v$space AS
    SELECT s.region_sid, r.description, r.parent_sid, s.space_type_id, st.label space_type_label
      FROM space s
        JOIN v$region r on s.region_sid = r.region_sid
        JOIN space_type st ON s.space_type_Id = st.space_type_id;

create or replace package csr.property_pkg as
end;
/
grant execute on csr.property_pkg to web_user;
create or replace package csr.space_pkg as
end;
/
grant execute on csr.space_pkg to web_user;

@..\property_pkg
@..\space_pkg
@..\tag_pkg

@..\property_body
@..\space_body
@..\tag_body	

@update_tail
