-- Please update version.sql too -- this keeps clean builds in sync
define version=1875
@update_header

CREATE TABLE CSR.INITIATIVE(
    APP_SID              NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID       NUMBER(10, 0)     NOT NULL,
    PROJECT_SID          NUMBER(10, 0)     NOT NULL,
    PARENT_SID           NUMBER(10, 0),
    FLOW_SID             NUMBER(10, 0)     NOT NULL,
    FLOW_ITEM_ID         NUMBER(10, 0)     NOT NULL,
    NAME                 VARCHAR2(1024)    NOT NULL,
    PROJECT_START_DTM    DATE,
    PROJECT_END_DTM      DATE,
    RUNNING_START_DTM    DATE,
    RUNNING_END_DTM      DATE,
    FIELDS_XML           CLOB,
    INTERNAL_REF         VARCHAR2(255),
    PERIOD_DURATION      NUMBER(10, 0)     NOT NULL,
    CREATED_BY_SID       NUMBER(10, 0)     NOT NULL,
    CREATED_DTM          DATE              DEFAULT SYSDATE NOT NULL,
    IS_RAMPED            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (IS_RAMPED IN(0,1)),
    CONSTRAINT PK_INITIATIVE PRIMARY KEY (APP_SID, INITIATIVE_SID),
    CONSTRAINT UK_INITIATIVE UNIQUE (INITIATIVE_SID) -- for CMS ENUM COLUMNS
);

CREATE TABLE CSR.INITIATIVE_COMMENT(
    APP_SID                  NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_COMMENT_ID    NUMBER(10, 0)    NOT NULL,
    INITIATIVE_SID           NUMBER(10, 0),
    USER_SID                 NUMBER(10, 0)    NOT NULL,
    POSTED_DTM               DATE             DEFAULT SYSDATE NOT NULL,
    COMMENT_TEXT             CLOB,
    CONSTRAINT PK_INITIATIVE_COMMENT PRIMARY KEY (APP_SID, INITIATIVE_COMMENT_ID)
);

CREATE TABLE CSR.INITIATIVE_GROUP(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    NAME                   VARCHAR2(256)    NOT NULL,
    IS_PUBLIC              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_PUBLIC IN(0,1)),
    CONSTRAINT PK_INITIATIVE_GROUP PRIMARY KEY (APP_SID, INITIATIVE_GROUP_ID)
);

CREATE TABLE CSR.INITIATIVE_GROUP_MEMBER(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    INITIATIVE_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_GROUP_MEMBER PRIMARY KEY (APP_SID, INITIATIVE_GROUP_ID, INITIATIVE_SID)
);

CREATE TABLE CSR.INITIATIVE_GROUP_USER(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    USER_SID               NUMBER(10, 0)    NOT NULL,
    CAN_EDIT               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (CAN_EDIT IN(0,1)),
    CONSTRAINT PK_INITIATIVE_GROUP_USER PRIMARY KEY (APP_SID, INITIATIVE_GROUP_ID, USER_SID)
);

CREATE TABLE CSR.INITIATIVE_IMPORT_MAP_MRU(
    APP_SID         NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    CSR_USER_SID    NUMBER(10, 0)     NOT NULL,
    FROM_NAME       VARCHAR2(1024)    NOT NULL,
    TO_NAME         VARCHAR2(1024)    NOT NULL,
    POS             NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_INIT_IMPORT_MAPPING_MRU PRIMARY KEY (APP_SID, CSR_USER_SID, FROM_NAME, TO_NAME)
);

CREATE TABLE CSR.INITIATIVE_IMPORT_TEMPLATE(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMPORT_TEMPLATE_ID    NUMBER(10, 0)     NOT NULL,
    NAME                  VARCHAR2(1024)    NOT NULL,
    HEADING_ROW_IDX       NUMBER(10, 0)     NOT NULL,
    WORKSHEET_NAME        VARCHAR2(1024)    NOT NULL,
    PROJECT_SID           NUMBER(10, 0),
    WORKBOOK              BLOB,
    IS_DEFAULT            NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (IS_DEFAULT IN(0,1)),
    CONSTRAINT PK_INITIATIVE_IMPORT_TEMPLATE PRIMARY KEY (APP_SID, IMPORT_TEMPLATE_ID)
);

CREATE TABLE CSR.INITIATIVE_IMPORT_TEMPLATE_MAP(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    IMPORT_TEMPLATE_ID    NUMBER(10, 0)     NOT NULL,
    TO_NAME               VARCHAR2(1024)    NOT NULL,
    FROM_IDX              NUMBER(10, 0)     NOT NULL,
    FROM_NAME             VARCHAR2(1024)    NOT NULL,
    CONSTRAINT PK_INIT_IMP_TPL_MAP PRIMARY KEY (APP_SID, IMPORT_TEMPLATE_ID, TO_NAME)
);

CREATE TABLE CSR.INITIATIVE_METRIC(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    IND_SID                 NUMBER(10, 0),
    IS_SAVING               NUMBER(10, 0)    DEFAULT 1 NOT NULL,
    PER_PERIOD_DURATION     NUMBER(10, 0),
    ONE_OFF_PERIOD          NUMBER(10, 0),
    IS_DURING               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_RUNNING              NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    IS_RAMPABLE             NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    LABEL                   VARCHAR2(1024)   NOT NULL,
    CHECK (IS_SAVING IN (0,1)),
    CHECK (IS_DURING IN(0,1)),
    CHECK (IS_RUNNING IN(0,1)),
    CHECK (IS_RAMPABLE IN(0,1)),
    CONSTRAINT PK_INITIATIVE_METRIC PRIMARY KEY (APP_SID, INITIATIVE_METRIC_ID)
);

CREATE TABLE CSR.INITIATIVE_METRIC_ASSOC(
    APP_SID               NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID           NUMBER(10, 0)    NOT NULL,
    PROPOSED_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    MEASURED_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_METRIC_ASSOC PRIMARY KEY (APP_SID, PROJECT_SID)
);

CREATE TABLE CSR.INITIATIVE_METRIC_GROUP(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID           NUMBER(10, 0)     NOT NULL,
    POS_GROUP             NUMBER(10, 0)     NOT NULL,
    IS_GROUP_MANDATORY    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    LABEL                 VARCHAR2(1024),
    INFO_TEXT             VARCHAR2(4000),
    CHECK (IS_GROUP_MANDATORY IN(0,1)),
    CONSTRAINT PK_INITIATIVE_METRIC_GROUP PRIMARY KEY (APP_SID, PROJECT_SID, POS_GROUP)
);

CREATE TABLE CSR.INITIATIVE_METRIC_INST(
    APP_SID                        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_METRIC_ID           NUMBER(10, 0)     NOT NULL,
    INITIATIVE_SID                 NUMBER(10, 0)     NOT NULL,
    PROJECT_SID                    NUMBER(10, 0)     NOT NULL,
    MEASURE_SID                    NUMBER(10, 0),
    ENTRY_MEASURE_CONVERSION_ID    NUMBER(10, 0),
    ENTRY_VAL                      NUMBER(24, 10),
    VAL                            NUMBER(24, 10),
    CONSTRAINT PK_INITIATIVE_METRIC_INST PRIMARY KEY (APP_SID, INITIATIVE_METRIC_ID, INITIATIVE_SID)
);

CREATE TABLE CSR.INITIATIVE_PERIOD(
    APP_SID                           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID                    NUMBER(10, 0)    NOT NULL,
    REGION_SID                        NUMBER(10, 0)    NOT NULL,
    START_DTM                         DATE             NOT NULL,
    PROJECT_SID                       NUMBER(10, 0)    NOT NULL,
    INITIATIVE_PERIOD_STATUS_ID       NUMBER(10, 0)    NOT NULL,
    SET_FLOW_STATE_ID                 NUMBER(10, 0),
    END_DTM                           DATE             NOT NULL,
    APPROVED_DTM                      DATE,
    APPROVED_BY_SID                   NUMBER(10, 0),
    PUBLIC_COMMENT_APPROVED_DTM       DATE,
    PUBLIC_COMMENT_APPROVED_BY_SID    NUMBER(10, 0),
    ENTERED_DTM                       DATE             DEFAULT SYSDATE NOT NULL,
    ENTERED_BY_SID                    NUMBER(10, 0)    NOT NULL,
    FIELDS_XML                        CLOB,
    NEEDS_AGGREGATION                 NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CONSTRAINT PK_INITIATIVE_PERIOD PRIMARY KEY (APP_SID, INITIATIVE_SID, REGION_SID, START_DTM)
);

CREATE TABLE CSR.INITIATIVE_PERIOD_STATUS(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_PERIOD_STATUS_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                          VARCHAR2(255)    NOT NULL,
    COLOUR                         NUMBER(10, 0),
    MEANS_PCT_COMPLETE             NUMBER(3, 2),
    CONSTRAINT PK_INITIATIVE_PERIOD_STATUS PRIMARY KEY (APP_SID, INITIATIVE_PERIOD_STATUS_ID)
);

CREATE TABLE CSR.INITIATIVE_PROJECT(
    APP_SID                   NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID               NUMBER(10, 0)     NOT NULL,
    NAME                      VARCHAR2(1024)    NOT NULL,
    START_DTM                 DATE,
    END_DTM                   DATE,
    FIELDS_XML                CLOB              NOT NULL,
    PERIOD_FIELDS_XML         CLOB              NOT NULL,
    ICON                      VARCHAR2(256),
    ABBREVIATION              VARCHAR2(16),
    POS_GROUP                 NUMBER(10, 0),
    POS                       NUMBER(10, 0),
    CATEGORY_LEVEL            NUMBER(10, 0),
    FLOW_SID                  NUMBER(10, 0)     NOT NULL,
    LIVE_FLOW_STATE_ID        NUMBER(10, 0)     NOT NULL,
    CONSTRAINT PK_INITIATIVE_PROJECT PRIMARY KEY (APP_SID, PROJECT_SID),
    CONSTRAINT CONS_INITIATIVE_PROJECT UNIQUE (APP_SID, PROJECT_SID, FLOW_SID)
);

CREATE TABLE CSR.INITIATIVE_PROJECT_TEAM(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    NAME              VARCHAR2(512)    NOT NULL,
    EMAIL             VARCHAR2(512)
);

CREATE TABLE CSR.INITIATIVE_REGION(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID        NUMBER(10, 0)    NOT NULL,
    USE_FOR_CALC      NUMBER(1, 0),
    CONSTRAINT PK_INITIATIVE_REGION PRIMARY KEY (APP_SID, INITIATIVE_SID, REGION_SID)
);

CREATE TABLE CSR.INITIATIVE_SPONSOR(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    NAME              VARCHAR2(512)    NOT NULL,
    EMAIL             VARCHAR2(512)
);

CREATE TABLE CSR.INITIATIVE_TAG(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    TAG_ID            NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_INITIATIVE_TAG PRIMARY KEY (APP_SID, INITIATIVE_SID, TAG_ID)
);

CREATE TABLE CSR.INITIATIVE_USER(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_SID    NUMBER(10, 0)    NOT NULL,
    USER_SID          NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID     NUMBER(10, 0)    NOT NULL,
    FLOW_SID          NUMBER(10, 0)    NOT NULL,
    IS_EDITABLE       NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    CHECK (IS_EDITABLE IN(0,1)),
    CONSTRAINT PK_INITIATIVE_USER PRIMARY KEY (APP_SID, INITIATIVE_SID, USER_SID, FLOW_STATE_ID)
);

CREATE TABLE CSR.INITIATIVES_OPTIONS(
    APP_SID                       NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_NAME_GEN_PROC      VARCHAR2(256),
    INITIATIVE_REMINDER_ALERTS    NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    INITIATIVE_NEW_DAYS           NUMBER(10, 0)     DEFAULT 5 NOT NULL,
    GANTT_PERIOD_COLOUR           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    INITIATIVES_HOST              VARCHAR2(256),
    MY_INITIATIVES_OPTIONS        VARCHAR2(1024),
    AUTO_COMPLETE_DATE            NUMBER(1, 0)      DEFAULT 1 NOT NULL,
    UPDATE_REF_ON_AMEND           NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    CHECK (INITIATIVE_REMINDER_ALERTS IN (0,1)),
    CHECK (GANTT_PERIOD_COLOUR IN(0,1)),
    CHECK (AUTO_COMPLETE_DATE IN(0,1)),
    CHECK (UPDATE_REF_ON_AMEND IN(0,1)),
    CONSTRAINT PK_INITIATIVES_OPTIONS PRIMARY KEY (APP_SID)
);

CREATE TABLE CSR.ISSUE_INITIATIVE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    ISSUE_INITIATIVE_ID    NUMBER(10, 0)    NOT NULL,
    INITIATIVE_SID         NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_ISSUE_INITIATIVE PRIMARY KEY (APP_SID, ISSUE_INITIATIVE_ID)
);

CREATE TABLE CSR.PROJECT_DOC_FOLDER(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID    NUMBER(10, 0)     NOT NULL,
    NAME           VARCHAR2(256)     NOT NULL,
    LABEL          VARCHAR2(1024)    NOT NULL,
    INFO_TEXT      VARCHAR2(4000),
    CONSTRAINT PK_PROJECT_DOC_FOLDER PRIMARY KEY (APP_SID, PROJECT_SID, NAME)
);

CREATE TABLE CSR.PROJECT_INIT_METRIC_FLOW_STATE(
    APP_SID                 NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    INITIATIVE_METRIC_ID    NUMBER(10, 0)    NOT NULL,
    FLOW_STATE_ID           NUMBER(10, 0)    NOT NULL,
    MANDATORY               NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    VISIBLE                 NUMBER(1, 0)     DEFAULT 1 NOT NULL,
    PROJECT_SID             NUMBER(10, 0)    NOT NULL,
    FLOW_SID                NUMBER(10, 0)    NOT NULL,
    CHECK (MANDATORY  IN (0,1)),
    CHECK (VISIBLE IN(0,1)),
    CONSTRAINT PK_PRJ_INIT_METRIC_FLOW_STATE PRIMARY KEY (APP_SID, INITIATIVE_METRIC_ID, FLOW_STATE_ID)
);

CREATE TABLE CSR.PROJECT_INITIATIVE_METRIC(
    APP_SID                 NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID             NUMBER(10, 0)     NOT NULL,
    POS                     NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    POS_GROUP               NUMBER(10, 0)     NOT NULL,
    UPDATE_PER_PERIOD       NUMBER(1, 0)      DEFAULT 0 NOT NULL,
    DEFAULT_VALUE           NUMBER(24, 10),
    INPUT_DP                NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    DISPLAY_CONTEXT         VARCHAR2(255)     DEFAULT 'ALL',
    INITIATIVE_METRIC_ID    NUMBER(10, 0)     NOT NULL,
    FLOW_SID                NUMBER(10, 0)     NOT NULL,
    INFO_TEXT               VARCHAR2(4000),
    CHECK (UPDATE_PER_PERIOD IN(0,1)),
    CHECK (DISPLAY_CONTEXT IN('ALL', 'CREATE', 'PORTLET')),
    CONSTRAINT PK_PROJECT_INITIATIVE_METRIC PRIMARY KEY (APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
);

CREATE TABLE CSR.PROJECT_INITIATIVE_PERIOD_STAT(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID                    NUMBER(10, 0)    NOT NULL,
    INITIATIVE_PERIOD_STATUS_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PROJECT_INIT_PERIOD_STAT PRIMARY KEY (APP_SID, PROJECT_SID, INITIATIVE_PERIOD_STATUS_ID)
);

CREATE TABLE CSR.PROJECT_TAG_GROUP(
    APP_SID         NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    PROJECT_SID     NUMBER(10, 0)    NOT NULL,
    POS             NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    TAG_GROUP_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_PROJECT_TAG_GROUP PRIMARY KEY (APP_SID, PROJECT_SID, TAG_GROUP_ID)
);

ALTER TABLE CSR.TAG_GROUP ADD(
    APPLIES_TO_INITIATIVES  NUMBER(1, 0)    DEFAULT 0 NOT NULL,
    CHECK (APPLIES_TO_INITIATIVES IN(0,1))
);

ALTER TABLE CSR.ISSUE DROP CONSTRAINT CHK_ISSUE_FKS;

ALTER TABLE CSR.ISSUE ADD(
	ISSUE_INITIATIVE_ID           NUMBER(10, 0),
	CONSTRAINT CHK_ISSUE_FKS CHECK (
		(ISSUE_PENDING_VAL_ID IS NOT NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_SHEET_VALUE_ID IS NOT NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_SURVEY_ANSWER_ID IS NOT NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_NON_COMPLIANCE_ID IS NOT NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_ACTION_ID IS NOT NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_METER_ID IS NOT NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_METER_ALARM_ID IS NOT NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_METER_RAW_DATA_ID IS NOT NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_METER_DATA_SOURCE_ID IS NOT NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_ACTION_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_SUPPLIER_ID IS NOT NULL AND ISSUE_INITIATIVE_ID IS NULL)
		OR
		(ISSUE_INITIATIVE_ID IS NOT NULL AND ISSUE_NON_COMPLIANCE_ID IS NULL AND ISSUE_SHEET_VALUE_ID IS NULL AND ISSUE_PENDING_VAL_ID IS NULL AND ISSUE_SURVEY_ANSWER_ID IS NULL AND ISSUE_METER_ID IS NULL AND ISSUE_METER_ALARM_ID IS NULL AND ISSUE_METER_RAW_DATA_ID IS NULL AND ISSUE_METER_DATA_SOURCE_ID IS NULL AND ISSUE_SUPPLIER_ID IS NULL AND ISSUE_ACTION_ID IS NULL)
	)	
);

ALTER TABLE CSR.FLOW_ITEM ADD(
	CONSTRAINT CONS_FLOW_ITEM UNIQUE (APP_SID, FLOW_ITEM_ID, FLOW_SID)
);

CREATE UNIQUE INDEX CSR.UK_PROJECT_DOC_FOLDER ON CSR.PROJECT_DOC_FOLDER(APP_SID, PROJECT_SID, LOWER(NAME));

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_CUSTOMER_INIT 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_FLOW_ITEM_INIT 
    FOREIGN KEY (APP_SID, FLOW_ITEM_ID, FLOW_SID)
    REFERENCES CSR.FLOW_ITEM(APP_SID, FLOW_ITEM_ID, FLOW_SID);

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_INIT_PROJECT_INIT 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID);

ALTER TABLE CSR.INITIATIVE ADD CONSTRAINT FK_INITI_PARENT_INITI 
    FOREIGN KEY (APP_SID, PARENT_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_COMMENT ADD CONSTRAINT FK_INIT_INIT_COMMENT 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_COMMENT ADD CONSTRAINT FK_USER_INIT_COMMENT 
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);

ALTER TABLE CSR.INITIATIVE_GROUP ADD CONSTRAINT FK_CUSTOMER_INIT_GRP 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.INITIATIVE_GROUP_MEMBER ADD CONSTRAINT FK_INIT_GRP_INIT_GRP_MEMBER 
    FOREIGN KEY (APP_SID, INITIATIVE_GROUP_ID)
    REFERENCES CSR.INITIATIVE_GROUP(APP_SID, INITIATIVE_GROUP_ID);

ALTER TABLE CSR.INITIATIVE_GROUP_MEMBER ADD CONSTRAINT FK_INIT_INIT_GRP_MEMBER 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_GROUP_USER ADD CONSTRAINT FK_INIT_GRP_INIT_GRP_USER 
    FOREIGN KEY (APP_SID, INITIATIVE_GROUP_ID)
    REFERENCES CSR.INITIATIVE_GROUP(APP_SID, INITIATIVE_GROUP_ID);

ALTER TABLE CSR.INITIATIVE_GROUP_USER ADD CONSTRAINT FK_USER_INIT_GROUP_USER 
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);

ALTER TABLE CSR.INITIATIVE_IMPORT_MAP_MRU ADD CONSTRAINT FK_USER_IMP_MAP_MRU 
    FOREIGN KEY (APP_SID, CSR_USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);

ALTER TABLE CSR.INITIATIVE_IMPORT_TEMPLATE ADD CONSTRAINT FK_CUSTOMER_IMP_TPL 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.INITIATIVE_IMPORT_TEMPLATE ADD CONSTRAINT FK_PROJET_IMP_TPL 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID);

ALTER TABLE CSR.INITIATIVE_IMPORT_TEMPLATE_MAP ADD CONSTRAINT FK_IMP_TPL_IMP_TPL_MAP 
    FOREIGN KEY (APP_SID, IMPORT_TEMPLATE_ID)
    REFERENCES CSR.INITIATIVE_IMPORT_TEMPLATE(APP_SID, IMPORT_TEMPLATE_ID);

ALTER TABLE CSR.INITIATIVE_METRIC ADD CONSTRAINT FK_CUSTOMER_INIT_METRIC 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.INITIATIVE_METRIC ADD CONSTRAINT FK_IND_INIT_MET 
    FOREIGN KEY (APP_SID, IND_SID)
    REFERENCES CSR.IND(APP_SID, IND_SID);

ALTER TABLE CSR.INITIATIVE_METRIC_ASSOC ADD CONSTRAINT FK_PRJ_INIT_MET_ASSOC 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID);

ALTER TABLE CSR.INITIATIVE_METRIC_ASSOC ADD CONSTRAINT FK_PRJ_INIT_MET_ASSOC_MEAS 
    FOREIGN KEY (APP_SID, PROJECT_SID, MEASURED_METRIC_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID);

ALTER TABLE CSR.INITIATIVE_METRIC_ASSOC ADD CONSTRAINT FK_PRJ_INIT_MET_ASSOC_PROP 
    FOREIGN KEY (APP_SID, PROJECT_SID, PROPOSED_METRIC_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID);

ALTER TABLE CSR.INITIATIVE_METRIC_GROUP ADD CONSTRAINT FK_PRJ_INIT_MET_GRP 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID);

ALTER TABLE CSR.INITIATIVE_METRIC_INST ADD CONSTRAINT FK_CONV_INIT_MET_INST 
    FOREIGN KEY (APP_SID, ENTRY_MEASURE_CONVERSION_ID, MEASURE_SID)
    REFERENCES CSR.MEASURE_CONVERSION(APP_SID, MEASURE_CONVERSION_ID, MEASURE_SID);

ALTER TABLE CSR.INITIATIVE_METRIC_INST ADD CONSTRAINT FK_INIT_INIT_METRIC_INST 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_METRIC_INST ADD CONSTRAINT FK_PRJ_INIT_MET_INIT_MET_INST 
    FOREIGN KEY (APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID);

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_FLOW_STATE_INIT_PERIOD 
    FOREIGN KEY (APP_SID, SET_FLOW_STATE_ID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID);

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_INIT_INIT_PERIOD 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_INIT_REGION_INIT_PERIOD 
    FOREIGN KEY (APP_SID, INITIATIVE_SID, REGION_SID)
    REFERENCES CSR.INITIATIVE_REGION(APP_SID, INITIATIVE_SID, REGION_SID);

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_PRJ_INIT_PRD_ST_INIT_PRD 
    FOREIGN KEY (APP_SID, PROJECT_SID, INITIATIVE_PERIOD_STATUS_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_PERIOD_STAT(APP_SID, PROJECT_SID, INITIATIVE_PERIOD_STATUS_ID);

ALTER TABLE CSR.INITIATIVE_PERIOD ADD CONSTRAINT FK_REGION_INIT_PERIOD 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID);

ALTER TABLE CSR.INITIATIVE_PERIOD_STATUS ADD CONSTRAINT FK_CUST_INIT_PERIOD_STAT 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.INITIATIVE_PROJECT ADD CONSTRAINT FK_CUSTOMER_PROJECT 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.INITIATIVE_PROJECT ADD CONSTRAINT FK_FLOW_PROJECT 
    FOREIGN KEY (APP_SID, FLOW_SID)
    REFERENCES CSR.FLOW(APP_SID, FLOW_SID);

ALTER TABLE CSR.INITIATIVE_PROJECT ADD CONSTRAINT FK_FLOW_STATE_PRJ 
    FOREIGN KEY (APP_SID, LIVE_FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID);

ALTER TABLE CSR.INITIATIVE_PROJECT_TEAM ADD CONSTRAINT FK_INIT_INIT_PRJ_TEAM 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_REGION ADD CONSTRAINT FK_INIT_INIT_REGION 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_REGION ADD CONSTRAINT FK_REGION_INIT_REGION 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID);

ALTER TABLE CSR.INITIATIVE_SPONSOR ADD CONSTRAINT FK_INIT_INIT_PRJ_SPONSOR 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_TAG ADD CONSTRAINT FK_INIT_INIT_TAG 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_TAG ADD CONSTRAINT FK_TAG_INIT_TAG 
    FOREIGN KEY (APP_SID, TAG_ID)
    REFERENCES CSR.TAG(APP_SID, TAG_ID);

ALTER TABLE CSR.INITIATIVE_USER ADD CONSTRAINT FK_FLOW_STATE_INIT_USER 
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID);

ALTER TABLE CSR.INITIATIVE_USER ADD CONSTRAINT FK_INIT_INIT_USER 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.INITIATIVE_USER ADD CONSTRAINT FK_USER_INIT_USER 
    FOREIGN KEY (APP_SID, USER_SID)
    REFERENCES CSR.CSR_USER(APP_SID, CSR_USER_SID);

ALTER TABLE CSR.INITIATIVES_OPTIONS ADD CONSTRAINT FK_CUSTOMER_INIT_OPTIONS 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.ISSUE ADD CONSTRAINT FK_ISSUE_INIT_ISSUE 
    FOREIGN KEY (APP_SID, ISSUE_INITIATIVE_ID)
    REFERENCES CSR.ISSUE_INITIATIVE(APP_SID, ISSUE_INITIATIVE_ID);

ALTER TABLE CSR.ISSUE_INITIATIVE ADD CONSTRAINT FK_CUSTOMER_ISSUE_INIT 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.ISSUE_INITIATIVE ADD CONSTRAINT FK_INIT_ISSUE_INIT 
    FOREIGN KEY (APP_SID, INITIATIVE_SID)
    REFERENCES CSR.INITIATIVE(APP_SID, INITIATIVE_SID);

ALTER TABLE CSR.PROJECT_DOC_FOLDER ADD CONSTRAINT FK_PROJECT_PROJECT_DOC_FOLDER 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID);

ALTER TABLE CSR.PROJECT_INIT_METRIC_FLOW_STATE ADD CONSTRAINT FK_FLST_PRJ_INIT_MET_FLST 
    FOREIGN KEY (APP_SID, FLOW_STATE_ID, FLOW_SID)
    REFERENCES CSR.FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID);

ALTER TABLE CSR.PROJECT_INIT_METRIC_FLOW_STATE ADD CONSTRAINT FK_PR_INIT_MET_PR_INIT_MET_FS 
    FOREIGN KEY (APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID);

ALTER TABLE CSR.PROJECT_INITIATIVE_METRIC ADD CONSTRAINT FK_INIT_MET_GRP_PRJ_INIT_MET 
    FOREIGN KEY (APP_SID, PROJECT_SID, POS_GROUP)
    REFERENCES CSR.INITIATIVE_METRIC_GROUP(APP_SID, PROJECT_SID, POS_GROUP);

ALTER TABLE CSR.PROJECT_INITIATIVE_METRIC ADD CONSTRAINT FK_INIT_MET_PRJ_INIT_MET 
    FOREIGN KEY (APP_SID, INITIATIVE_METRIC_ID)
    REFERENCES CSR.INITIATIVE_METRIC(APP_SID, INITIATIVE_METRIC_ID);

ALTER TABLE CSR.PROJECT_INITIATIVE_METRIC ADD CONSTRAINT FK_PRJ_PRJ_INIT_MET 
    FOREIGN KEY (APP_SID, PROJECT_SID, FLOW_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID, FLOW_SID);

ALTER TABLE CSR.PROJECT_INITIATIVE_PERIOD_STAT ADD CONSTRAINT FK_INIT_PRD_ST_PRJ_INIT_PRD_ST 
    FOREIGN KEY (APP_SID, INITIATIVE_PERIOD_STATUS_ID)
    REFERENCES CSR.INITIATIVE_PERIOD_STATUS(APP_SID, INITIATIVE_PERIOD_STATUS_ID);

ALTER TABLE CSR.PROJECT_INITIATIVE_PERIOD_STAT ADD CONSTRAINT FK_PRJ_PRJ_INIT_PRD_STAT 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID);

ALTER TABLE CSR.PROJECT_TAG_GROUP ADD CONSTRAINT FK_PRJ_PRJ_TAG_GRP 
    FOREIGN KEY (APP_SID, PROJECT_SID)
    REFERENCES CSR.INITIATIVE_PROJECT(APP_SID, PROJECT_SID);

ALTER TABLE CSR.PROJECT_TAG_GROUP ADD CONSTRAINT FK_TAG_GRP_PRJ_TAG_GRP 
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID);

CREATE INDEX CSR.IX_CUSTOMER_INIT ON CSR.INITIATIVE(APP_SID);
CREATE INDEX CSR.IX_FLOW_ITEM_INIT ON CSR.INITIATIVE(APP_SID, FLOW_ITEM_ID, FLOW_SID);
CREATE INDEX CSR.IX_INIT_PROJECT_INIT ON CSR.INITIATIVE(APP_SID, PROJECT_SID);
CREATE INDEX CSR.IX_INITI_PARENT_INITI ON CSR.INITIATIVE(APP_SID, PARENT_SID);
CREATE INDEX CSR.IX_INIT_INIT_COMMENT ON CSR.INITIATIVE_COMMENT(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_USER_INIT_COMMENT ON CSR.INITIATIVE_COMMENT(APP_SID, USER_SID);
CREATE INDEX CSR.IX_CUSTOMER_INIT_GRP ON CSR.INITIATIVE_GROUP(APP_SID);
CREATE INDEX CSR.IX_INIT_GRP_INIT_GRP_MEMBER ON CSR.INITIATIVE_GROUP_MEMBER(APP_SID, INITIATIVE_GROUP_ID);
CREATE INDEX CSR.IX_INIT_INIT_GRP_MEMBER ON CSR.INITIATIVE_GROUP_MEMBER(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_INIT_GRP_INIT_GRP_USER ON CSR.INITIATIVE_GROUP_USER(APP_SID, INITIATIVE_GROUP_ID);
CREATE INDEX CSR.IX_USER_INIT_GROUP_USER ON CSR.INITIATIVE_GROUP_USER(APP_SID, USER_SID);
CREATE INDEX CSR.IX_USER_IMP_MAP_MRU ON CSR.INITIATIVE_IMPORT_MAP_MRU(APP_SID, CSR_USER_SID);
CREATE INDEX CSR.IX_CUSTOMER_IMP_TPL ON CSR.INITIATIVE_IMPORT_TEMPLATE(APP_SID);
CREATE INDEX CSR.IX_PROJET_IMP_TPL ON CSR.INITIATIVE_IMPORT_TEMPLATE(APP_SID, PROJECT_SID);
CREATE INDEX CSR.IX_IMP_TPL_IMP_TPL_MAP ON CSR.INITIATIVE_IMPORT_TEMPLATE_MAP(APP_SID, IMPORT_TEMPLATE_ID);
CREATE INDEX CSR.IX_CUSTOMER_INIT_METRIC ON CSR.INITIATIVE_METRIC(APP_SID);
CREATE INDEX CSR.IX_IND_INIT_MET ON CSR.INITIATIVE_METRIC(APP_SID, IND_SID);
CREATE INDEX CSR.IX_PRJ_INIT_MET_ASSOC_MEAS ON CSR.INITIATIVE_METRIC_ASSOC(APP_SID, PROJECT_SID, MEASURED_METRIC_ID);
CREATE INDEX CSR.IX_PRJ_INIT_MET_ASSOC_PROP ON CSR.INITIATIVE_METRIC_ASSOC(APP_SID, PROJECT_SID, PROPOSED_METRIC_ID);
CREATE INDEX CSR.IX_PRJ_INIT_MET_GRP ON CSR.INITIATIVE_METRIC_GROUP(APP_SID, PROJECT_SID);
CREATE INDEX CSR.IX_CONV_INIT_MET_INST ON CSR.INITIATIVE_METRIC_INST(APP_SID, ENTRY_MEASURE_CONVERSION_ID, MEASURE_SID);
CREATE INDEX CSR.IX_INIT_INIT_METRIC_INST ON CSR.INITIATIVE_METRIC_INST(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_PRJ_INIT_MET_INIT_MET_INST ON CSR.INITIATIVE_METRIC_INST(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID);
CREATE INDEX CSR.IX_FLOW_STATE_INIT_PERIOD ON CSR.INITIATIVE_PERIOD(APP_SID, SET_FLOW_STATE_ID);
CREATE INDEX CSR.IX_INIT_INIT_PERIOD ON CSR.INITIATIVE_PERIOD(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_INIT_REGION_INIT_PERIOD ON CSR.INITIATIVE_PERIOD(APP_SID, INITIATIVE_SID, REGION_SID);
CREATE INDEX CSR.IX_PRJ_INIT_PRD_ST_INIT_PRD ON CSR.INITIATIVE_PERIOD(APP_SID, PROJECT_SID, INITIATIVE_PERIOD_STATUS_ID);
CREATE INDEX CSR.IX_REGION_INIT_PERIOD ON CSR.INITIATIVE_PERIOD(APP_SID, REGION_SID);
CREATE INDEX CSR.IX_CUST_INIT_PERIOD_STAT ON CSR.INITIATIVE_PERIOD_STATUS(APP_SID);
CREATE INDEX CSR.IX_CUSTOMER_PROJECT ON CSR.INITIATIVE_PROJECT(APP_SID);
CREATE INDEX CSR.IX_FLOW_PROJECT ON CSR.INITIATIVE_PROJECT(APP_SID, FLOW_SID);
CREATE INDEX CSR.IX_FLOW_STATE_PRJ ON CSR.INITIATIVE_PROJECT(APP_SID, LIVE_FLOW_STATE_ID, FLOW_SID);
CREATE INDEX CSR.IX_INIT_INIT_PRJ_TEAM ON CSR.INITIATIVE_PROJECT_TEAM(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_INIT_INIT_REGION ON CSR.INITIATIVE_REGION(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_REGION_INIT_REGION ON CSR.INITIATIVE_REGION(APP_SID, REGION_SID);
CREATE INDEX CSR.IX_INIT_INIT_PRJ_SPONSOR ON CSR.INITIATIVE_SPONSOR(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_INIT_INIT_TAG ON CSR.INITIATIVE_TAG(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_TAG_INIT_TAG ON CSR.INITIATIVE_TAG(APP_SID, TAG_ID);
CREATE INDEX CSR.IX_FLOW_STATE_INIT_USER ON CSR.INITIATIVE_USER(APP_SID, FLOW_STATE_ID, FLOW_SID);
CREATE INDEX CSR.IX_INIT_INIT_USER ON CSR.INITIATIVE_USER(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_USER_INIT_USER ON CSR.INITIATIVE_USER(APP_SID, USER_SID);
CREATE INDEX CSR.IX_ISSUE_INIT_ISSUE ON CSR.ISSUE(APP_SID, ISSUE_INITIATIVE_ID);
CREATE INDEX CSR.IX_CUSTOMER_ISSUE_INIT ON CSR.ISSUE_INITIATIVE(APP_SID);
CREATE INDEX CSR.IX_INIT_ISSUE_INIT ON CSR.ISSUE_INITIATIVE(APP_SID, INITIATIVE_SID);
CREATE INDEX CSR.IX_PROJECT_PROJECT_DOC_FOLDER ON CSR.PROJECT_DOC_FOLDER(APP_SID, PROJECT_SID);
CREATE INDEX CSR.IX_FLST_PRJ_INIT_MET_FLST ON CSR.PROJECT_INIT_METRIC_FLOW_STATE(APP_SID, FLOW_STATE_ID, FLOW_SID);
CREATE INDEX CSR.IX_PR_INIT_MET_PR_INIT_MET_FS ON CSR.PROJECT_INIT_METRIC_FLOW_STATE(APP_SID, PROJECT_SID, INITIATIVE_METRIC_ID);
CREATE INDEX CSR.IX_INIT_MET_GRP_PRJ_INIT_MET ON CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, POS_GROUP);
CREATE INDEX CSR.IX_INIT_MET_PRJ_INIT_MET ON CSR.PROJECT_INITIATIVE_METRIC(APP_SID, INITIATIVE_METRIC_ID);
CREATE INDEX CSR.IX_PRJ_PRJ_INIT_MET ON CSR.PROJECT_INITIATIVE_METRIC(APP_SID, PROJECT_SID, FLOW_SID);
CREATE INDEX CSR.IX_INIT_PRD_ST_PRJ_INIT_PRD_ST ON CSR.PROJECT_INITIATIVE_PERIOD_STAT(APP_SID, INITIATIVE_PERIOD_STATUS_ID);
CREATE INDEX CSR.IX_PRJ_PRJ_INIT_PRD_STAT ON CSR.PROJECT_INITIATIVE_PERIOD_STAT(APP_SID, PROJECT_SID);
CREATE INDEX CSR.IX_PRJ_PRJ_TAG_GRP ON CSR.PROJECT_TAG_GROUP(APP_SID, PROJECT_SID);
CREATE INDEX CSR.IX_TAG_GRP_PRJ_TAG_GRP ON CSR.PROJECT_TAG_GROUP(APP_SID, TAG_GROUP_ID);

--RLS
declare
	policy_already_exists exception;
	pragma exception_init(policy_already_exists, -28101);
	type t_tabs is table of varchar2(30);
	v_list t_tabs;
	v_null_list t_tabs;
	v_found number;
begin	
	v_list := t_tabs(
		'INITIATIVE',
        'INITIATIVE_COMMENT',
        'INITIATIVE_GROUP',
        'INITIATIVE_GROUP_MEMBER',
        'INITIATIVE_GROUP_USER',
        'INITIATIVE_IMPORT_MAP_MRU',
        'INITIATIVE_IMPORT_TEMPLATE',
        'INITIATIVE_IMPORT_TEMPLATE_MAP',
        'INITIATIVE_METRIC',
        'INITIATIVE_METRIC_ASSOC',
        'INITIATIVE_METRIC_GROUP',
        'INITIATIVE_METRIC_INST',
        'INITIATIVE_PERIOD',
        'INITIATIVE_PERIOD_STATUS',
        'INITIATIVE_PROJECT',
        'INITIATIVE_PROJECT_TEAM',
        'INITIATIVE_REGION',
        'INITIATIVE_SPONSOR',
        'INITIATIVE_TAG',
        'INITIATIVE_USER',
        'INITIATIVES_OPTIONS',
        'ISSUE_INITIATIVE',
        'PROJECT_DOC_FOLDER',
        'PROJECT_INIT_METRIC_FLOW_STATE',
        'PROJECT_INITIATIVE_METRIC',
        'PROJECT_INITIATIVE_PERIOD_STAT',
        'PROJECT_TAG_GROUP'
	);
	for i in 1 .. v_list.count loop
		declare
			v_name varchar2(30);
			v_i pls_integer default 1;
		begin
			loop
				begin
					-- verify that the table has an app_sid column (dev helper)
					select count(*) 
					  into v_found
					  from all_tab_columns 
					 where owner = 'CSR' 
					   and table_name = UPPER(v_list(i))
					   and column_name = 'APP_SID';
					
					if v_found = 0 then
						raise_application_error(-20001, 'CSR.'||v_list(i)||' does not have an app_sid column');
					end if;
					
					if v_i = 1 then
						v_name := SUBSTR(v_list(i), 1, 23)||'_POLICY';
					else
						v_name := SUBSTR(v_list(i), 1, 21)||'_POLICY_'||v_i;
					end if;
					dbms_output.put_line('doing '||v_name);
				    dbms_rls.add_policy(
				        object_schema   => 'CSR',
				        object_name     => v_list(i),
				        policy_name     => v_name,
				        function_schema => 'CSR',
				        policy_function => 'appSidCheck',
				        statement_types => 'select, insert, update, delete',
				        update_check	=> true,
				        policy_type     => dbms_rls.context_sensitive );
				    -- dbms_output.put_line('done  '||v_name);
				  	exit;
				exception
					when policy_already_exists then
						v_i := v_i + 1;
				end;
			end loop;
		end;
	end loop;
end;
/

-- Create SO classes
DECLARE
    v_new_class_id      security.security_pkg.T_SID_ID;
BEGIN
    security.user_pkg.logonadmin;
    BEGIN   
        security.class_pkg.CreateClass(security.security_pkg.GetACT, null, 'InitiativeProject', 'csr.initiative_project_pkg', null, v_new_class_id);
    EXCEPTION
        WHEN security.security_pkg.DUPLICATE_OBJECT_NAME THEN
            NULL;
    END;
    BEGIN   
        security.class_pkg.CreateClass(security.security_pkg.GetACT, null, 'Initiative', 'csr.initiative_pkg', null, v_new_class_id);
    EXCEPTION
        WHEN security.security_pkg.DUPLICATE_OBJECT_NAME THEN
            NULL;
    END;
END;
/
	
@update_tail
