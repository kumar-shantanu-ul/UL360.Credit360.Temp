-- Please update version.sql too -- this keeps clean builds in sync
define version=3280
define minor_version=3
@update_header

-- *** DDL ***
-- Create tables

CREATE TABLE CSR.COMPLIANCE_ITEM_VERSION_LOG (
	APP_SID							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPLIANCE_ITEM_VERSION_LOG_ID	NUMBER(10, 0) NOT NULL,
	COMPLIANCE_ITEM_ID				NUMBER(10, 0) NOT NULL,
	CHANGE_TYPE						NUMBER(10, 0),
	MAJOR_VERSION					NUMBER(10, 0) NOT NULL,
	MINOR_VERSION					NUMBER(10, 0) NOT NULL,
	IS_MAJOR_CHANGE					NUMBER(1, 0),
	DESCRIPTION						CLOB,
	CHANGE_DTM						DATE,
	LANG_ID							NUMBER(10, 0),
	CONSTRAINT PK_COMPLIANCE_ITEM_VERSION_LOG PRIMARY KEY (APP_SID, COMPLIANCE_ITEM_VERSION_LOG_ID)
);

CREATE SEQUENCE CSR.COMP_ITEM_VERSION_LOG_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE INDEX CSR.IX_CIVL_CI ON CSR.COMPLIANCE_ITEM_VERSION_LOG (APP_SID, COMPLIANCE_ITEM_ID);
CREATE INDEX CSR.IX_CIVL_CI_CT ON CSR.COMPLIANCE_ITEM_VERSION_LOG (CHANGE_TYPE);

CREATE TABLE CSRIMP.COMPLIANCE_ITEM_VERSION_LOG (
	CSRIMP_SESSION_ID				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	COMPLIANCE_ITEM_VERSION_LOG_ID	NUMBER(10, 0) NOT NULL,
	COMPLIANCE_ITEM_ID				NUMBER(10, 0) NOT NULL,
	CHANGE_TYPE						NUMBER(10, 0),
	MAJOR_VERSION					NUMBER(10, 0) NOT NULL,
	MINOR_VERSION					NUMBER(10, 0) NOT NULL,
	IS_MAJOR_CHANGE					NUMBER(1, 0),
	DESCRIPTION						CLOB,
	CHANGE_DTM					 	DATE NOT NULL,
	LANG_ID							NUMBER(10, 0),
	CONSTRAINT PK_COMPLIANCE_ITEM_VERSION_LOG PRIMARY KEY (CSRIMP_SESSION_ID, COMPLIANCE_ITEM_VERSION_LOG_ID),
	CONSTRAINT FK_COMP_ITEM_VERSION_LOG_IS FOREIGN KEY (CSRIMP_SESSION_ID)
		REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID)
		ON DELETE CASCADE
);

CREATE TABLE CSRIMP.MAP_COMP_ITEM_VERSION_LOG (
	CSRIMP_SESSION_ID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CSRIMP_SESSION_ID') NOT NULL,
	OLD_COMP_ITEM_VERSION_LOG_ID			NUMBER(10) NOT NULL,
	NEW_COMP_ITEM_VERSION_LOG_ID			NUMBER(10) NOT NULL,
	CONSTRAINT PK_MAP_COMP_ITEM_VERSION_LOG PRIMARY KEY (CSRIMP_SESSION_ID, OLD_COMP_ITEM_VERSION_LOG_ID),
	CONSTRAINT UK_MAP_COMP_ITEM_VERSION_LOG UNIQUE (CSRIMP_SESSION_ID, NEW_COMP_ITEM_VERSION_LOG_ID),
	CONSTRAINT FK_MAP_COMP_ITEM_VERSION_LOG FOREIGN KEY (CSRIMP_SESSION_ID) REFERENCES CSRIMP.CSRIMP_SESSION (CSRIMP_SESSION_ID) ON DELETE CASCADE
);


-- Alter tables
ALTER TABLE CSR.COMPLIANCE_ITEM_VERSION_LOG ADD CONSTRAINT UK_CIVL_I
	UNIQUE (APP_SID, COMPLIANCE_ITEM_ID, MAJOR_VERSION, MINOR_VERSION, IS_MAJOR_CHANGE);
;

ALTER TABLE CSR.COMPLIANCE_ITEM_VERSION_LOG ADD CONSTRAINT FK_CIVL_CI
	FOREIGN KEY (APP_SID, COMPLIANCE_ITEM_ID)
	REFERENCES CSR.COMPLIANCE_ITEM(APP_SID, COMPLIANCE_ITEM_ID)
;

ALTER TABLE CSR.COMPLIANCE_ITEM_VERSION_LOG ADD CONSTRAINT FK_CIVL_CI_CT 
	FOREIGN KEY (change_type)
	REFERENCES csr.compliance_item_change_type (compliance_item_change_type_id)
;

-- *** Grants ***
GRANT SELECT, INSERT, UPDATE ON csr.compliance_item_version_log TO csrimp;
GRANT SELECT ON csr.comp_item_version_log_seq TO csrimp;
GRANT SELECT, INSERT, UPDATE, DELETE ON csrimp.compliance_item_version_log TO tool_user;

-- ** Cross schema constraints ***

-- *** Views ***
-- Please paste the content of the view.

-- *** Data changes ***
-- RLS

-- Data

-- ** New package grants **

-- *** Conditional Packages ***

-- *** Packages ***
@../compliance_pkg
@../compliance_body
@../schema_pkg
@../schema_body

@../csrimp/imp_body

@update_tail
 