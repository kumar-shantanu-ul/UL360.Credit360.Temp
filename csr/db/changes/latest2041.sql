define version=2041
@update_header


exec security.user_pkg.logonadmin;

ALTER TABLE CSR.TAB_PORTLET ADD (
    ADDED_BY_USER_SID       NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
    ADDED_DTM               DATE    DEFAULT SYSDATE NOT NULL
);

ALTER TABLE csr.DELEG_PLAN ADD (
    LAST_APPLIED_DTM    DATE
);

ALTER TABLE CSR.IMG_CHART_IND ADD (
    FONT_SIZE   NUMBER(10) DEFAULT 11 NOT NULL
);

CREATE UNIQUE INDEX CSR.UK_INIT_METRIC_LOOKUP ON CSR.INITIATIVE_METRIC(APP_SID, NVL(UPPER(LOOKUP_KEY),'IMID'||TO_CHAR(INITIATIVE_METRIC_ID)));

CREATE SEQUENCE CSR.GEO_MAP_TAB_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER;


CREATE TABLE CSR.CUSTOMER_GEO_MAP_TAB_TYPE(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_TAB_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_CUSTOMER_GEO_MAP_TAB_TYPE PRIMARY KEY (APP_SID, GEO_MAP_TAB_TYPE_ID)
);

CREATE TABLE CSR.GEO_MAP(
    APP_SID                     NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_SID                 NUMBER(10, 0)    NOT NULL,
    LABEL                       VARCHAR2(255)    NOT NULL,
    GEO_TILESET_ID              NUMBER(10, 0)    NOT NULL,
    REGION_SELECTION_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    TAG_GROUP_ID                NUMBER(10, 0),
    INCLUDE_INACTIVE_REGIONS    NUMBER(1, 0)     DEFAULT 0 NOT NULL,
    START_DTM                   DATE             NOT NULL,
    END_DTM                     DATE,
    INTERVAL                    VARCHAR2(10)     DEFAULT 'y' NOT NULL,
    CONSTRAINT CHK_GEO_MAP_INCL_INACT CHECK (INCLUDE_INACTIVE_REGIONS IN (0,1)),
    CONSTRAINT CHK_GEO_MAP_INTERVAL CHECK (INTERVAL IN ('m','q','h','y')),
    CONSTRAINT PK_GEO_MAP PRIMARY KEY (APP_SID, GEO_MAP_SID)
);

CREATE TABLE CSR.GEO_MAP_REGION(
    APP_SID        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_SID    NUMBER(10, 0)    NOT NULL,
    REGION_SID     NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_GEO_MAP_REGION PRIMARY KEY (APP_SID, GEO_MAP_SID, REGION_SID)
);


CREATE TABLE CSR.GEO_MAP_TAB(
    APP_SID                NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_TAB_ID         NUMBER(10, 0)    NOT NULL,
    GEO_MAP_SID            NUMBER(10, 0)    NOT NULL,
    LABEL                  VARCHAR2(255)    NOT NULL,
    GEO_MAP_TAB_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    POS                    NUMBER(10, 0)    DEFAULT 0 NOT NULL,
    CONSTRAINT PK_GEO_MAP_TAB PRIMARY KEY (APP_SID, GEO_MAP_TAB_ID)
);

CREATE TABLE CSR.GEO_MAP_TAB_CHART(
    APP_SID           NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_TAB_ID    NUMBER(10, 0)    NOT NULL,
    DATAVIEW_SID      NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK_GEO_MAP_TAB_CHART PRIMARY KEY (APP_SID, GEO_MAP_TAB_ID)
);

CREATE TABLE CSR.GEO_TILESET(
    GEO_TILESET_ID    NUMBER(10, 0)     NOT NULL,
    LABEL             VARCHAR2(255)     NOT NULL,
    LOOKUP_KEY        VARCHAR2(255)     NOT NULL,
    URL_TEMPLATE      VARCHAR2(2000)    NOT NULL,
    MIN_ZOOM          NUMBER(10, 0)     DEFAULT 0 NOT NULL,
    MAX_ZOOM          NUMBER(10, 0)     DEFAULT 18 NOT NULL,
    ATTRIBUTION       VARCHAR2(1000)    NOT NULL,
    TILE_SIZE         NUMBER(10, 0)     DEFAULT 256 NOT NULL,
    CONSTRAINT PK_GEO_TILESET PRIMARY KEY (GEO_TILESET_ID)
);

CREATE TABLE CSR.GEO_MAP_REGION_DESCRIPTION(
    APP_SID        NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
    GEO_MAP_SID    NUMBER(10, 0)     NOT NULL,
    REGION_SID     NUMBER(10, 0)     NOT NULL,
    LANG           VARCHAR2(10)      NOT NULL,
    DESCRIPTION    VARCHAR2(1023)    NOT NULL,
    CONSTRAINT PK_GEO_MAP_REGION_DESCRIPTION PRIMARY KEY (APP_SID, GEO_MAP_SID, REGION_SID, LANG)
);

CREATE TABLE CSR.REGION_SELECTION_TYPE(
    REGION_SELECTION_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                       VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK_REGION_SELECTION_TYPE PRIMARY KEY (REGION_SELECTION_TYPE_ID)
);


CREATE TABLE CSR.GEO_MAP_TAB_TYPE(
    GEO_MAP_TAB_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    LABEL                  VARCHAR2(255)    NOT NULL,
    JS_CLASS               VARCHAR2(255)    NOT NULL,
    CONSTRAINT PK1867 PRIMARY KEY (GEO_MAP_TAB_TYPE_ID)
);

ALTER TABLE CSR.CUSTOMER_GEO_MAP_TAB_TYPE ADD CONSTRAINT FK_CUS_CUS_GEO_MT_TYPE 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.CUSTOMER_GEO_MAP_TAB_TYPE ADD CONSTRAINT FK_GEO_MAP_TT_CUS_GEO_MAP_TT 
    FOREIGN KEY (GEO_MAP_TAB_TYPE_ID)
    REFERENCES CSR.GEO_MAP_TAB_TYPE(GEO_MAP_TAB_TYPE_ID);


ALTER TABLE CSR.GEO_MAP ADD CONSTRAINT FK_CUS_GEO_MAP 
    FOREIGN KEY (APP_SID)
    REFERENCES CSR.CUSTOMER(APP_SID);

ALTER TABLE CSR.GEO_MAP ADD CONSTRAINT FK_GEO_TILESET_MAP 
    FOREIGN KEY (GEO_TILESET_ID)
    REFERENCES CSR.GEO_TILESET(GEO_TILESET_ID);

ALTER TABLE CSR.GEO_MAP ADD CONSTRAINT FK_REG_SEL_TYP_GEO_MAP 
    FOREIGN KEY (REGION_SELECTION_TYPE_ID)
    REFERENCES CSR.REGION_SELECTION_TYPE(REGION_SELECTION_TYPE_ID);

ALTER TABLE CSR.GEO_MAP ADD CONSTRAINT FK_TAG_GROUP_GEO_MAP 
    FOREIGN KEY (APP_SID, TAG_GROUP_ID)
    REFERENCES CSR.TAG_GROUP(APP_SID, TAG_GROUP_ID);

ALTER TABLE CSR.GEO_MAP_REGION ADD CONSTRAINT FK_GEO_MAP_MAP_REGION 
    FOREIGN KEY (APP_SID, GEO_MAP_SID)
    REFERENCES CSR.GEO_MAP(APP_SID, GEO_MAP_SID);

ALTER TABLE CSR.GEO_MAP_REGION ADD CONSTRAINT FK_REG_GEO_MAP_REG 
    FOREIGN KEY (APP_SID, REGION_SID)
    REFERENCES CSR.REGION(APP_SID, REGION_SID);

ALTER TABLE CSR.GEO_MAP_TAB ADD CONSTRAINT FK_CUS_GM_TT_GM_TAB 
    FOREIGN KEY (APP_SID, GEO_MAP_TAB_TYPE_ID)
    REFERENCES CSR.CUSTOMER_GEO_MAP_TAB_TYPE(APP_SID, GEO_MAP_TAB_TYPE_ID);

ALTER TABLE CSR.GEO_MAP_TAB ADD CONSTRAINT FK_GEO_MAP_GEO_MAP_TAB 
    FOREIGN KEY (APP_SID, GEO_MAP_SID)
    REFERENCES CSR.GEO_MAP(APP_SID, GEO_MAP_SID);

ALTER TABLE CSR.GEO_MAP_TAB_CHART ADD CONSTRAINT RefDATAVIEW4244 
    FOREIGN KEY (APP_SID, DATAVIEW_SID)
    REFERENCES CSR.DATAVIEW(APP_SID, DATAVIEW_SID);

ALTER TABLE CSR.GEO_MAP_TAB_CHART ADD CONSTRAINT FK_GEO_MT_GEO_MT_CHART 
    FOREIGN KEY (APP_SID, GEO_MAP_TAB_ID)
    REFERENCES CSR.GEO_MAP_TAB(APP_SID, GEO_MAP_TAB_ID) ON DELETE CASCADE;

ALTER TABLE CSR.GEO_MAP_REGION_DESCRIPTION ADD CONSTRAINT FK_GEO_MAP_REG_REG_DESC 
    FOREIGN KEY (APP_SID, GEO_MAP_SID, REGION_SID)
    REFERENCES CSR.GEO_MAP_REGION(APP_SID, GEO_MAP_SID, REGION_SID);

ALTER TABLE CSR.GEO_MAP_REGION_DESCRIPTION ADD CONSTRAINT FK_TRANS_SET_GEO_MAP_REG 
    FOREIGN KEY (APP_SID, LANG)
    REFERENCES ASPEN2.TRANSLATION_SET(APPLICATION_SID, LANG);


DECLARE
    v_id    NUMBER(10);
BEGIN   
    security.user_pkg.logonadmin;
    security.class_pkg.CreateClass(SYS_CONTEXT('SECURITY','ACT'), null, 'GeoMap', 'csr.geo_map_pkg', null, v_Id);
EXCEPTION
    WHEN security.security_pkg.DUPLICATE_OBJECT_NAME THEN
        NULL;
END;
/


begin
INSERT INTO CSR.REGION_SELECTION_TYPE (REGION_SELECTION_TYPE_ID, LABEL) VALUES (0, 'Use properties');
INSERT INTO CSR.REGION_SELECTION_TYPE (REGION_SELECTION_TYPE_ID, LABEL) VALUES (1, 'Use meters');
INSERT INTO CSR.REGION_SELECTION_TYPE (REGION_SELECTION_TYPE_ID, LABEL) VALUES (2, 'Use leaf nodes');
INSERT INTO CSR.REGION_SELECTION_TYPE (REGION_SELECTION_TYPE_ID, LABEL) VALUES (3, 'Use children');
INSERT INTO CSR.REGION_SELECTION_TYPE (REGION_SELECTION_TYPE_ID, LABEL) VALUES (4, 'Use countries');
INSERT INTO CSR.REGION_SELECTION_TYPE (REGION_SELECTION_TYPE_ID, LABEL) VALUES (5, 'Use sites tagged');
INSERT INTO CSR.REGION_SELECTION_TYPE (REGION_SELECTION_TYPE_ID, LABEL) VALUES (6, 'Use selected item only');
end;
/

begin
INSERT INTO CSR.GEO_MAP_TAB_TYPE (GEO_MAP_TAB_TYPE_ID, LABEL, JS_CLASS) VALUES (1, 'Property details', 'Credit360.GeoMapPopupTab.Property');
INSERT INTO CSR.GEO_MAP_TAB_TYPE (GEO_MAP_TAB_TYPE_ID, LABEL, JS_CLASS) VALUES (2, 'Chart', 'Credit360.GeoMapPopupTab.Chart');
end;
/

--begin
-- example - this probably needs changing
--INSERT INTO CSR.GEO_TILESET (GEO_TILESET_ID, LABEL, LOOKUP_KEY, URL_TEMPLATE, ATTRIBUTION) VALUES (1, 'Cloudmade', 'CLOUDMADE', 'http://{s}.tile.cloudmade.com/API-key/997/256/{z}/{x}/{y}.png', 'Map data');
--end;

grant select,insert,update,delete on csrimp.rag_status to web_user;


@update_tail
