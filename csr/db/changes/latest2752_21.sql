-- Please update version.sql too -- this keeps clean builds in sync
define version=2752
define minor_version=21
@update_header

ALTER TABLE CSR.FLOW_STATE_TRANSITION_ROLE DROP CONSTRAINT FK_FL_ST_ROLE_FL_ST_TR_ROLE DROP INDEX;
ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY DROP CONSTRAINT FK_FLOW_STATE_RL_CAP_ROLE DROP INDEX;
ALTER TABLE CSR.FLOW_STATE_TRANSITION_ROLE DROP PRIMARY KEY DROP INDEX;
ALTER TABLE CSR.FLOW_STATE_ALERT_ROLE DROP PRIMARY KEY DROP INDEX;
ALTER TABLE CSR.FLOW_TRANSITION_ALERT_ROLE DROP PRIMARY KEY DROP INDEX;
ALTER TABLE CSR.FLOW_STATE_ROLE DROP PRIMARY KEY DROP INDEX;
ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY DROP CONSTRAINT UK_FLOW_STATE_ROLE_CAPABILITY DROP INDEX;
ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY DROP CONSTRAINT CHK_FLOW_STATE_ROLE_CAPABILITY DROP INDEX;

GRANT SELECT ON security.act TO csr;

alter table CSR.FLOW_STATE_ALERT_ROLE modify (
	ROLE_SID	NULL
);

alter table CSR.FLOW_STATE_ROLE modify (
	ROLE_SID	NULL
);

alter table CSR.FLOW_STATE_TRANSITION_ROLE modify (
	ROLE_SID	NULL
);

ALTER TABLE CSR.FLOW_TRANSITION_ALERT_ROLE modify (
	ROLE_SID	NULL
);

alter table CSR.FLOW_STATE_ALERT_ROLE add (
	GROUP_SID NUMBER(10) NULL
);

alter table CSR.FLOW_STATE_ROLE add (
	GROUP_SID NUMBER(10) NULL
);

alter table CSR.FLOW_STATE_ROLE_CAPABILITY add (
	GROUP_SID NUMBER(10) NULL
);

alter table CSR.FLOW_STATE_TRANSITION_ROLE add (
	GROUP_SID NUMBER(10) NULL
);

alter table CSR.FLOW_TRANSITION_ALERT_ROLE add (
	GROUP_SID NUMBER(10) NULL
);

-- add constraints
ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY ADD CONSTRAINT UK_FLOW_STATE_ROLE_CAPABILITY UNIQUE (APP_SID, FLOW_STATE_ID, FLOW_CAPABILITY_ID, ROLE_SID, GROUP_SID, FLOW_INVOLVEMENT_TYPE_ID);
ALTER TABLE CSR.FLOW_STATE_ROLE ADD CONSTRAINT PK_FLOW_STATE_ROLE UNIQUE (APP_SID, FLOW_STATE_ID, ROLE_SID, GROUP_SID);
ALTER TABLE CSR.FLOW_STATE_TRANSITION_ROLE ADD CONSTRAINT PK_FLOW_STATE_TRANS_ROLE UNIQUE (APP_SID, FLOW_STATE_TRANSITION_ID, FROM_STATE_ID, ROLE_SID, GROUP_SID);
ALTER TABLE CSR.FLOW_STATE_ALERT_ROLE ADD CONSTRAINT PK_FLOW_STATE_ALERT_ROLE UNIQUE (APP_SID, FLOW_SID, FLOW_STATE_ALERT_ID, ROLE_SID, GROUP_SID);
ALTER TABLE CSR.FLOW_TRANSITION_ALERT_ROLE ADD CONSTRAINT PK_FLOW_TRANSITION_ALERT_ROLE UNIQUE (APP_SID, FLOW_TRANSITION_ALERT_ID, ROLE_SID, GROUP_SID);
ALTER TABLE CSR.FLOW_STATE_TRANSITION_ROLE ADD CONSTRAINT FK_FL_ST_ROLE_FL_ST_TR_ROLE 
    FOREIGN KEY (APP_SID, FROM_STATE_ID, ROLE_SID, GROUP_SID)
    REFERENCES CSR.FLOW_STATE_ROLE(APP_SID, FLOW_STATE_ID, ROLE_SID, GROUP_SID) ON DELETE CASCADE  DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY ADD CONSTRAINT FK_FLOW_STATE_RL_CAP_ROLE FOREIGN KEY (APP_SID, FLOW_STATE_ID, ROLE_SID, GROUP_SID) REFERENCES CSR.FLOW_STATE_ROLE (APP_SID, FLOW_STATE_ID, ROLE_SID, GROUP_SID);
ALTER TABLE CSR.FLOW_STATE_ALERT_ROLE ADD CONSTRAINT CHK_FSAR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL));
ALTER TABLE CSR.FLOW_STATE_ROLE ADD CONSTRAINT CHK_FSR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL));
ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY ADD CONSTRAINT CHK_FLOW_STATE_ROLE_CAPABILITY CHECK (
	(ROLE_SID IS NULL AND GROUP_SID IS NOT NULL AND FLOW_INVOLVEMENT_TYPE_ID IS NULL) OR
	(ROLE_SID IS NOT NULL AND GROUP_SID IS NULL AND FLOW_INVOLVEMENT_TYPE_ID IS NULL) OR
	(ROLE_SID IS NULL AND GROUP_SID IS NULL AND FLOW_INVOLVEMENT_TYPE_ID IS NOT NULL));

ALTER TABLE CSR.FLOW_STATE_TRANSITION_ROLE ADD CONSTRAINT CHK_FSTR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL));
ALTER TABLE CSR.FLOW_TRANSITION_ALERT_ROLE ADD CONSTRAINT CHK_FTAR_ROLE_SID_GROUP_SID CHECK ((ROLE_SID IS NULL AND GROUP_SID IS NOT NULL) OR (ROLE_SID IS NOT NULL AND GROUP_SID IS NULL));
ALTER TABLE CSR.FLOW_STATE_ALERT_ROLE ADD CONSTRAINT FK_FSAR_GROUP FOREIGN KEY (GROUP_SID) REFERENCES SECURITY.GROUP_TABLE(SID_ID);
ALTER TABLE CSR.FLOW_STATE_ROLE ADD CONSTRAINT FK_FSR_GROUP FOREIGN KEY (GROUP_SID) REFERENCES SECURITY.GROUP_TABLE(SID_ID);
ALTER TABLE CSR.FLOW_STATE_ROLE_CAPABILITY ADD CONSTRAINT FK_FSRC_GROUP FOREIGN KEY (GROUP_SID) REFERENCES SECURITY.GROUP_TABLE(SID_ID);
ALTER TABLE CSR.FLOW_STATE_TRANSITION_ROLE ADD CONSTRAINT FK_FSTR_GROUP FOREIGN KEY (GROUP_SID) REFERENCES SECURITY.GROUP_TABLE(SID_ID);
ALTER TABLE CSR.FLOW_TRANSITION_ALERT_ROLE ADD CONSTRAINT FK_FTAR_GROUP FOREIGN KEY (GROUP_SID) REFERENCES SECURITY.GROUP_TABLE(SID_ID);

-- types
DROP TYPE CSR.T_FLOW_STATE_TABLE;
DROP TYPE CSR.T_FLOW_STATE_ROW;
DROP TYPE CSR.T_FLOW_STATE_TRANS_TABLE;
DROP TYPE CSR.T_FLOW_STATE_TRANS_ROW;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_STATE
(
	FLOW_SID				NUMBER(10) NOT NULL,
	POS						NUMBER(10) NOT NULL,
	FLOW_STATE_ID			NUMBER(10) NOT NULL,
	LABEL					VARCHAR2(255) NOT NULL,
	LOOKUP_KEY				VARCHAR2(255),
	IS_FINAL				NUMBER(1) NOT NULL,
	STATE_COLOUR			NUMBER(10),
	EDITABLE_ROLE_SIDS		VARCHAR2(2000),
	NON_EDITABLE_ROLE_SIDS	VARCHAR2(2000),
	EDITABLE_COL_SIDS		VARCHAR2(2000),
	NON_EDITABLE_COL_SIDS	VARCHAR2(2000),
	INVOLVED_TYPE_IDS		VARCHAR2(2000),
	EDITABLE_GROUP_SIDS		VARCHAR2(2000),
	NON_EDITABLE_GROUP_SIDS	VARCHAR2(2000),
	ATTRIBUTES_XML			XMLTYPE
)
ON COMMIT DELETE ROWS
;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_STATE_ALERT
(
	FLOW_SID					NUMBER(10) NOT NULL,
	FLOW_STATE_ID				NUMBER(10) NOT NULL,
	CUSTOMER_ALERT_TYPE_ID		NUMBER(10) NOT NULL,
	FLOW_STATE_ALERT_ID			NUMBER(10) NOT NULL,
	FLOW_ALERT_DESCRIPTION		VARCHAR2(500) NOT NULL,
	HELPER_SP					VARCHAR2(256),
	ROLE_SIDS					VARCHAR2(2000),
	GROUP_SIDS					VARCHAR2(2000),
	USER_SIDS					VARCHAR2(2000),
	RECURRENCE_XML				XMLTYPE NOT NULL
)
ON COMMIT DELETE ROWS
;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_STATE_ROLE_CAP
(
	FLOW_SID					NUMBER(10) NOT NULL,
	FLOW_STATE_RL_CAP_ID 		NUMBER(10) NOT NULL,
	FLOW_STATE_ID				NUMBER(10) NOT NULL,
	FLOW_CAPABILITY_ID			NUMBER(10) NOT NULL,
	ROLE_SID					NUMBER(10),
	FLOW_INVOLVEMENT_TYPE_ID	NUMBER(10),
	PERMISSION_SET				NUMBER(10) NOT NULL,
	GROUP_SID					NUMBER(10)
)
ON COMMIT DELETE ROWS
;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_STATE_TRANS
(
	FLOW_SID					NUMBER(10) NOT NULL,
	POS							NUMBER(10) NOT NULL,
	FLOW_STATE_TRANSITION_ID	NUMBER(10) NOT NULL,
	FROM_STATE_ID				NUMBER(10) NOT NULL,
	TO_STATE_ID					NUMBER(10) NOT NULL,
	ASK_FOR_COMMENT				VARCHAR2(16) NOT NULL,
	MANDATORY_FIELDS_MESSAGE	VARCHAR2(255),
	HOURS_BEFORE_AUTO_TRAN		NUMBER(10),
	BUTTON_ICON_PATH			VARCHAR2(255),
	VERB						VARCHAR2(255) NOT NULL,
	LOOKUP_KEY					VARCHAR2(255),
	HELPER_SP					VARCHAR2(255),
	ROLE_SIDS					VARCHAR2(2000),
	COLUMN_SIDS					VARCHAR2(2000),
	INVOLVED_TYPE_IDS			VARCHAR2(2000),
	GROUP_SIDS					VARCHAR2(2000),
	ATTRIBUTES_XML				XMLTYPE
)
ON COMMIT DELETE ROWS
;

CREATE GLOBAL TEMPORARY TABLE CSR.T_FLOW_TRANS_ALERT
(
	FLOW_SID					NUMBER(10) NOT NULL,
	FLOW_TRANSITION_ALERT_ID	NUMBER(10) NOT NULL,
	FLOW_STATE_TRANSITION_ID	NUMBER(10) NOT NULL,
	CUSTOMER_ALERT_TYPE_ID		NUMBER(10) NOT NULL,
	DESCRIPTION					VARCHAR2(500) NOT NULL,
	TO_INITIATOR				NUMBER(1) NOT NULL,
	HELPER_SP					VARCHAR2(256),
	FLOW_CMS_COLS				VARCHAR2(2000),
	USER_SIDS					VARCHAR2(2000),
	ROLE_SIDS					VARCHAR2(2000),
	GROUP_SIDS					VARCHAR2(2000),
	ALERT_MANAGER_FLAGS			VARCHAR2(2000),
	INVOLVED_TYPE_IDS			VARCHAR2(2000)
)
ON COMMIT DELETE ROWS
;

@update_tail
