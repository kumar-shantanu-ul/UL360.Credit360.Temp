-- Please update version.sql too -- this keeps clean builds in sync
define version=73
@update_header

VARIABLE version NUMBER
BEGIN :version := 73; END; -- CHANGE THIS TO MATCH VERSION NUMBER
/

WHENEVER SQLERROR EXIT SQL.SQLCODE
DECLARE
	v_version	version.db_version%TYPE;
BEGIN
	SELECT db_version INTO v_version FROM version;
	IF v_version >= :version THEN
		RAISE_APPLICATION_ERROR(-20001, '========= UPDATE '||:version||' HAS ALREADY BEEN APPLIED =======');
	END IF;
END;
/	

INSERT INTO ALERT_TYPE ( ALERT_TYPE_ID, DESCRIPTION, GET_DATA_SP, PARAMS_XML ) VALUES (10, 'Mail sent upon initial submission of data', NULL, '<params><param name="EMAIL"/><param name="USER_NAME"/><param name="FULL_NAME"/><param name="LABEL"/></params>'); 
commit;


alter table approval_step rename column max_values to max_sheet_value_count;

alter table approval_step_user rename column fallback_user_id to fallback_user_sid;


-- 
-- TABLE: APPROVAL_STEP_SHEET 
--

CREATE TABLE APPROVAL_STEP_SHEET(
    APPROVAL_STEP_ID    NUMBER(10, 0)     NOT NULL,
    SHEET_KEY           VARCHAR2(255)     NOT NULL,
    LABEL               VARCHAR2(1204)    NOT NULL,
    PENDING_PERIOD_ID    NUMBER(10, 0),
    PENDING_IND_ID       NUMBER(10, 0),
    PENDING_REGION_ID    NUMBER(10, 0),
    SUBMITTED_VALUE_COUNT	NUMBER(10, 0) DEFAULT 0 NOT NULL,
    SUBMIT_BLOCKED	NUMBER(1, 0) DEFAULT 0 NOT NULL,
    CONSTRAINT PK310 PRIMARY KEY (APPROVAL_STEP_ID, SHEET_KEY)
)
;



-- 
-- TABLE: APPROVAL_STEP_SHEET_LOG 
--

CREATE TABLE APPROVAL_STEP_SHEET_LOG(
    APPROVAL_STEP_ID    NUMBER(10, 0)    NOT NULL,
    SHEET_KEY           VARCHAR2(255)    NOT NULL,
    DTM                 DATE              DEFAULT SYSDATE NOT NULL,
    BY_USER_SID         NUMBER(10, 0)    NOT NULL,
    UP_OR_DOWN          NUMBER(1, 0)     NOT NULL,
    NOTE                CLOB
)
;

-- 
-- TABLE: PENDING_VAL_COMMENT_READ 
--

CREATE TABLE PENDING_VAL_COMMENT_READ(
    PENDING_VAL_COMMENT_ID    NUMBER(10, 0)    NOT NULL,
    CSR_USER_SID              NUMBER(10, 0)    NOT NULL,
    READ_DTM                  DATE              DEFAULT SYSDATE NOT NULL,
    CONSTRAINT PK307 PRIMARY KEY (PENDING_VAL_COMMENT_ID, CSR_USER_SID)
)
;





-- 
-- TABLE: APPROVAL_STEP_SHEET 
--

ALTER TABLE APPROVAL_STEP_SHEET ADD CONSTRAINT RefAPPROVAL_STEP546 
    FOREIGN KEY (APPROVAL_STEP_ID)
    REFERENCES APPROVAL_STEP(APPROVAL_STEP_ID)
;


ALTER TABLE APPROVAL_STEP_SHEET ADD CONSTRAINT RefPENDING_PERIOD553 
    FOREIGN KEY (PENDING_PERIOD_ID)
    REFERENCES PENDING_PERIOD(PENDING_PERIOD_ID)
;

ALTER TABLE APPROVAL_STEP_SHEET ADD CONSTRAINT RefPENDING_REGION554 
    FOREIGN KEY (PENDING_REGION_ID)
    REFERENCES PENDING_REGION(PENDING_REGION_ID)
;

ALTER TABLE APPROVAL_STEP_SHEET ADD CONSTRAINT RefPENDING_IND555 
    FOREIGN KEY (PENDING_IND_ID)
    REFERENCES PENDING_IND(PENDING_IND_ID)
;


-- 
-- TABLE: APPROVAL_STEP_SHEET_LOG 
--

ALTER TABLE APPROVAL_STEP_SHEET_LOG ADD CONSTRAINT RefAPPROVAL_STEP_SHEET547 
    FOREIGN KEY (APPROVAL_STEP_ID, SHEET_KEY)
    REFERENCES APPROVAL_STEP_SHEET(APPROVAL_STEP_ID, SHEET_KEY)
;

ALTER TABLE APPROVAL_STEP_SHEET_LOG ADD CONSTRAINT RefCSR_USER548 
    FOREIGN KEY (BY_USER_SID)
    REFERENCES CSR_USER(CSR_USER_SID)
;



-- 
-- TABLE: PENDING_VAL_COMMENT_READ 
--

ALTER TABLE PENDING_VAL_COMMENT_READ ADD CONSTRAINT RefCSR_USER542 
    FOREIGN KEY (CSR_USER_SID)
    REFERENCES CSR_USER(CSR_USER_SID)
;

ALTER TABLE PENDING_VAL_COMMENT_READ ADD CONSTRAINT RefPENDING_VAL_COMMENT543 
    FOREIGN KEY (PENDING_VAL_COMMENT_ID)
    REFERENCES PENDING_VAL_COMMENT(PENDING_VAL_COMMENT_ID)
;

@..\pending_pkg
@..\pending_body

declare
begin
	 for r in (select * from approval_step)
	 loop
         pending_pkg.SetSheetMaxValueCount(r.approval_step_id);
	 end loop;
end;
/

commit;


UPDATE csr.version SET db_version = :version;
COMMIT;

PROMPT
PROMPT ================== UPDATED OK ========================
PROMPT
EXIT



@update_tail
