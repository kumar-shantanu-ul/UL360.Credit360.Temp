BEGIN
	INSERT INTO CHAIN.COMPANY_GROUP_TYPE (COMPANY_GROUP_TYPE_ID, NAME, IS_GLOBAL) VALUES (1, 'Administrators', 0);
	INSERT INTO CHAIN.COMPANY_GROUP_TYPE (COMPANY_GROUP_TYPE_ID, NAME, IS_GLOBAL) VALUES (2, 'Users', 0);
	INSERT INTO CHAIN.COMPANY_GROUP_TYPE (COMPANY_GROUP_TYPE_ID, NAME, IS_GLOBAL) VALUES (3, 'Pending Users', 0);
	INSERT INTO CHAIN.COMPANY_GROUP_TYPE (COMPANY_GROUP_TYPE_ID, NAME, IS_GLOBAL) VALUES (4, 'Chain Administrators', 1);
	INSERT INTO CHAIN.COMPANY_GROUP_TYPE (COMPANY_GROUP_TYPE_ID, NAME, IS_GLOBAL) VALUES (5, 'Chain Users', 1);

	INSERT INTO CHAIN.REFERENCE_UNIQUENESS (REFERENCE_UNIQUENESS_ID, DESCRIPTION) VALUES (0, 'None');
	INSERT INTO CHAIN.REFERENCE_UNIQUENESS (REFERENCE_UNIQUENESS_ID, DESCRIPTION) VALUES (1, 'Country');
	INSERT INTO CHAIN.REFERENCE_UNIQUENESS (REFERENCE_UNIQUENESS_ID, DESCRIPTION) VALUES (2, 'Global');

	INSERT INTO CHAIN.REFERENCE_LOCATION (REFERENCE_LOCATION_ID, DESCRIPTION) VALUES (0, 'Show on the company details card');
	INSERT INTO CHAIN.REFERENCE_LOCATION (REFERENCE_LOCATION_ID, DESCRIPTION) VALUES (1, 'Show on the company reference label card');

	INSERT INTO chain.card_init_param_type(param_type_id, description) VALUES(0, 'Global Parameter. Applies to all cards in an application (that are part of any group).');
	INSERT INTO chain.card_init_param_type(param_type_id, description) VALUES(1, 'Specific Parameter. Applies to a specific card in a specific group and application.');

	INSERT INTO CHAIN.COMPANY_FUNCTION (COMPANY_FUNCTION_ID, DESCRIPTION) VALUES (1, 'Procurer');
	INSERT INTO CHAIN.COMPANY_FUNCTION (COMPANY_FUNCTION_ID, DESCRIPTION) VALUES (2, 'Supplier');

	BEGIN
		INSERT INTO CSR.AUDIT_TYPE_GROUP (AUDIT_TYPE_GROUP_ID, DESCRIPTION) VALUES (4, 'Chain objects');
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO CSR.AUDIT_TYPE ( AUDIT_TYPE_GROUP_ID, AUDIT_TYPE_ID, LABEL ) VALUES (4, 200, 'Business relationship');
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	BEGIN
		INSERT INTO CSR.AUDIT_TYPE ( AUDIT_TYPE_GROUP_ID, AUDIT_TYPE_ID, LABEL ) VALUES (4, 201, 'Product Type');
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			NULL;
	END;
	
	INSERT INTO CHAIN.PRODUCT_METRIC_AGG_RULE (RULE_TYPE_ID, LABEL) VALUES (1, 'Aggregate');
	INSERT INTO CHAIN.PRODUCT_METRIC_AGG_RULE (RULE_TYPE_ID, LABEL) VALUES (2, 'Average');
	INSERT INTO CHAIN.PRODUCT_METRIC_AGG_RULE (RULE_TYPE_ID, LABEL) VALUES (3, 'Take lowest');

	INSERT INTO CHAIN.REFERENCE_VALIDATION(REFERENCE_VALIDATION_ID, DESCRIPTION, VALIDATION_REGEX, VALIDATION_TEXT) VALUES (0, 'Any', NULL, NULL);
	INSERT INTO CHAIN.REFERENCE_VALIDATION(REFERENCE_VALIDATION_ID, DESCRIPTION, VALIDATION_REGEX, VALIDATION_TEXT) VALUES (1, 'Numeric only', '^[0-9]+$', 'Please enter only numbers');
	INSERT INTO CHAIN.REFERENCE_VALIDATION(REFERENCE_VALIDATION_ID, DESCRIPTION, VALIDATION_REGEX, VALIDATION_TEXT) VALUES (2, 'Text only', '^[a-zA-Z]+$', 'Please enter only letters');

	INSERT INTO CHAIN.PRODUCT_METRIC_ICON(PRODUCT_METRIC_ICON_ID, DESCRIPTION, ICON_PATH) VALUES(1, 'Weight', '/fp/shared/images/productWeight.gif');
	INSERT INTO CHAIN.PRODUCT_METRIC_ICON(PRODUCT_METRIC_ICON_ID, DESCRIPTION, ICON_PATH) VALUES(2, 'Volume', '/fp/shared/images/productVolume.gif');

	INSERT INTO CHAIN.DD_DEF_BLCKLST_EMAIL (EMAIL_DOMAIN) VALUES ('example');
	INSERT INTO CHAIN.DD_DEF_BLCKLST_EMAIL (EMAIL_DOMAIN) VALUES ('gmail');
	INSERT INTO CHAIN.DD_DEF_BLCKLST_EMAIL (EMAIL_DOMAIN) VALUES ('googlemail');
	INSERT INTO CHAIN.DD_DEF_BLCKLST_EMAIL (EMAIL_DOMAIN) VALUES ('yahoo');

END;
/



@@capabilities
@@cards
@@card_managers
@@components
@@csr_alerts
@@invitation
@@messages
@@questionnaires
@@tasks
@@users
@@file_upload
@@filters
@@filter_alerts
@@higg
@@grid_exensions
@@bsci
