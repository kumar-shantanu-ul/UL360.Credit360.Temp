--
-- Chain Schema. Now manually maintained.
--

--
-- SEQUENCE: ALERT_ENTRY_ID_SEQ
--

CREATE SEQUENCE CHAIN.ALERT_ENTRY_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: CAPABILITY_ID_SEQ
--

CREATE SEQUENCE CHAIN.CAPABILITY_ID_SEQ
	START WITH 1000
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: CARD_ID_SEQ
--

CREATE SEQUENCE CHAIN.CARD_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.COMPANY_TAB_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.COMPANY_HEADER_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.PRODUCT_HEADER_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.PRODUCT_TAB_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.PRODUCT_SUPPLIER_TAB_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;


--
-- SEQUENCE: CHAIN.COMPANY_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.COMPANY_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: COMPONENT_ID_SEQ
--

CREATE SEQUENCE CHAIN.COMPONENT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: CHAIN.COMPOUND_FILTER_ID_SEQ
--

CREATE SEQUENCE CHAIN.COMPOUND_FILTER_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: CHAIN.CUSTOMER_AGGREGATE_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.CUSTOMER_AGGREGATE_TYPE_ID_SEQ
	START WITH 10000
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.DEBUG_LOG_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: FILE_GROUP_FILE_ID_SEQ
--

CREATE SEQUENCE CHAIN.FILE_GROUP_FILE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: FILE_GROUP_ID_SEQ
--

CREATE SEQUENCE CHAIN.FILE_GROUP_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: FILTER_FIELD_ID_SEQ
--

CREATE SEQUENCE CHAIN.FILTER_FIELD_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: FILTER_ID_SEQ
--

CREATE SEQUENCE CHAIN.FILTER_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: FILTER_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.FILTER_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: FILTER_VALUE_ID_SEQ
--

CREATE SEQUENCE CHAIN.FILTER_VALUE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: GROUP_CAPABILITY_ID_SEQ
--

CREATE SEQUENCE CHAIN.GROUP_CAPABILITY_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: HIGG_CONFIG_ID_SEQ
--

CREATE SEQUENCE CHAIN.HIGG_CONFIG_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: INVITATION_ID_SEQ
--

CREATE SEQUENCE CHAIN.INVITATION_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: MESSAGE_COMPLETION_ID_SEQ
--

CREATE SEQUENCE CHAIN.MESSAGE_COMPLETION_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: MESSAGE_DEFINITION_ID_SEQ
--

CREATE SEQUENCE CHAIN.MESSAGE_DEFINITION_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: MESSAGE_ID_SEQ
--

CREATE SEQUENCE CHAIN.MESSAGE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: METRIC_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.METRIC_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: NEWSFLASH_ID_SEQ
--

CREATE SEQUENCE CHAIN.NEWSFLASH_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: PRODUCT_ID_SEQ
--

CREATE SEQUENCE CHAIN.PRODUCT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: PRODUCT_COMPANY_ALERT_ID_SEQ
--

CREATE SEQUENCE CHAIN.PRODUCT_COMPANY_ALERT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: CHAIN.PURCHASE_ID_SEQ
--

CREATE SEQUENCE CHAIN.PURCHASE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: QUESTIONNAIRE_ID_SEQ
--

CREATE SEQUENCE CHAIN.QUESTIONNAIRE_ID_SEQ
	START WITH 10000
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: QUESTIONNAIRE_SHARE_ID_SEQ
--

CREATE SEQUENCE CHAIN.QUESTIONNAIRE_SHARE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: QUESTIONNAIRE_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.QUESTIONNAIRE_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: RECIPIENT_ID_SEQ
--

CREATE SEQUENCE CHAIN.RECIPIENT_ID_SEQ
	START WITH 10000
	INCREMENT BY 1
	MINVALUE 10000
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: REVIEW_ALERT_ID_SEQ
--

CREATE SEQUENCE CHAIN.REVIEW_ALERT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: SCHEDULED_ALERT_ID_SEQ
--

CREATE SEQUENCE CHAIN.SCHEDULED_ALERT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: TASK_CHANGE_GROUP_ID_SEQ
--

CREATE SEQUENCE CHAIN.TASK_CHANGE_GROUP_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: TASK_ENTRY_ID_SEQ
--

CREATE SEQUENCE CHAIN.TASK_ENTRY_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: TASK_ID_SEQ
--

CREATE SEQUENCE CHAIN.TASK_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: TASK_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.TASK_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: VIRTUALLY_ACTIVE_KEY_SEQ
--

CREATE SEQUENCE CHAIN.VIRTUALLY_ACTIVE_KEY_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: ACTIVITY_ID_SEQ
--

CREATE SEQUENCE CHAIN.ACTIVITY_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: ACTIVITY_LOG_ID_SEQ
--

CREATE SEQUENCE CHAIN.ACTIVITY_LOG_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: ACTIVITY_LOG_FILE_ID_SEQ
--

CREATE SEQUENCE CHAIN.ACTIVITY_LOG_FILE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: ACTIVITY_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.ACTIVITY_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: ACTIVITY_TYPE_ACTION_ID_SEQ
--

CREATE SEQUENCE CHAIN.ACTIVITY_TYPE_ACTION_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: ACTIVITY_OUTCM_TYP_ACTN_ID_SEQ
--

CREATE SEQUENCE CHAIN.ACTIVITY_OUTCM_TYP_ACTN_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: OUTCOME_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.OUTCOME_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER;


--
-- SEQUENCE: PRODUCT_TYPE_ID_SEQ
--

CREATE SEQUENCE CHAIN.PRODUCT_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: filter_page_ind_id_seq
--

CREATE SEQUENCE CHAIN.FILTER_PAGE_IND_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- SEQUENCE: filter_page_cms_table_id_seq
--

CREATE SEQUENCE CHAIN.FILTER_PAGE_CMS_TABLE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;


--
-- SEQUENCE: filter_page_ind_intrval_id_seq
--

CREATE SEQUENCE CHAIN.FILTER_PAGE_IND_INTRVAL_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.REFERENCE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.COMPANY_REFERENCE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE chain.import_source_id_seq
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE chain.dedupe_mapping_id_seq
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE chain.dedupe_merge_log_id_seq
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE chain.dedupe_rule_id_seq
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE chain.dedupe_rule_set_id_seq
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.DEDUPE_PROCESSED_RECORD_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.DEDUPE_MATCH_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;


CREATE SEQUENCE chain.dedupe_staging_link_id_seq
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.DEDUPE_PREPROC_RULE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;


CREATE SEQUENCE CHAIN.CERTIFICATION_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.ALT_COMPANY_NAME_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.PRODUCT_SUPPLIER_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.PRODUCT_METRIC_VAL_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.PRODUCT_SUPPLR_MTRC_VAL_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.CUSTOMER_FILTER_COLUMN_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.CUSTOMER_FILTER_ITEM_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.CUST_FILT_ITEM_AGG_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.SUPPLIER_REL_SCORE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.PRODUCT_METRIC_CALC_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.COMPANY_TYPE_ROLE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE CHAIN.COMP_TAB_COMP_TYPE_ROLE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE SEQUENCE chain.geotag_batch_id_seq
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- TABLE: CHAIN.ACTIVITY
--

CREATE TABLE CHAIN.ACTIVITY(
	APP_SID				   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_ID			   NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION			   CLOB			  NOT NULL,
	TARGET_COMPANY_SID		NUMBER(10, 0)	 NOT NULL,
	CREATED_BY_COMPANY_SID	NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') NOT NULL,
	ACTIVITY_TYPE_ID		  NUMBER(10, 0)	 NOT NULL,
	ASSIGNED_TO_USER_SID	  NUMBER(10, 0),
	ASSIGNED_TO_ROLE_SID	  NUMBER(10, 0),
	TARGET_USER_SID		   NUMBER(10, 0),
	TARGET_ROLE_SID		   NUMBER(10, 0),
	ACTIVITY_DTM			  DATE			  NOT NULL,
	ORIGINAL_ACTIVITY_DTM	 DATE			  NOT NULL,
	CREATED_DTM			   DATE			  DEFAULT SYSDATE NOT NULL,
	CREATED_BY_ACTIVITY_ID	NUMBER(10, 0),
	CREATED_BY_SID			NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL,
	OUTCOME_TYPE_ID		   NUMBER(10, 0),
	OUTCOME_REASON			CLOB,
	LOCATION				  VARCHAR2(1000),
	LOCATION_TYPE			  NUMBER(10, 0),
	SHARE_WITH_TARGET		  NUMBER(1, 0)		DEFAULT 0 NOT NULL,
	PROJECT_ID				NUMBER(10, 0),
	CONSTRAINT PK_ACTIVITY PRIMARY KEY (APP_SID, ACTIVITY_ID),
	CONSTRAINT UK_ACTIVITY UNIQUE (APP_SID, ACTIVITY_ID,ACTIVITY_TYPE_ID),
	CONSTRAINT CHK_ACTIVITY_ASSIGNED CHECK (
		(ASSIGNED_TO_USER_SID IS NOT NULL OR ASSIGNED_TO_ROLE_SID IS NOT NULL) AND NOT
		(ASSIGNED_TO_USER_SID IS NOT NULL AND ASSIGNED_TO_ROLE_SID IS NOT NULL)
	),
	CONSTRAINT CHK_ACTIVITY_TARGET CHECK (
		TARGET_USER_SID IS NULL OR TARGET_ROLE_SID IS NULL
	)
)
;



--
-- TABLE: CHAIN.ACTIVITY_OUTCOME_TYPE
--

CREATE TABLE CHAIN.ACTIVITY_OUTCOME_TYPE(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	OUTCOME_TYPE_ID	 NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_ACTIVITY_OUTCOME_TYPE PRIMARY KEY (APP_SID, ACTIVITY_TYPE_ID, OUTCOME_TYPE_ID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_OUTCOME_TYPE_ACTION
--

CREATE TABLE CHAIN.ACTIVITY_OUTCOME_TYPE_ACTION(
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_OUTCOME_TYP_ACTION_ID	 NUMBER(10, 0)	NOT NULL,
	ACTIVITY_TYPE_ID				   NUMBER(10, 0)	NOT NULL,
	OUTCOME_TYPE_ID					NUMBER(10, 0)	NOT NULL,
	GENERATE_ACTIVITY_TYPE_ID		  NUMBER(10, 0)	NOT NULL,
	ALLOW_USER_INTERACTION			 NUMBER(1, 0)	 DEFAULT 0,
	DEFAULT_DESCRIPTION				CLOB,
	DEFAULT_ASSIGNED_TO_ROLE_SID	   NUMBER(10, 0),
	DEFAULT_TARGET_ROLE_SID			NUMBER(10, 0),
	DEFAULT_ACT_DATE_RELATIVE		  NUMBER(10, 0),
	DEFAULT_ACT_DATE_RELATIVE_UNIT	 VARCHAR2(1)	  DEFAULT 'd' NOT NULL,
	DEFAULT_SHARE_WITH_TARGET		  NUMBER(1)		DEFAULT 0 NOT NULL,
	DEFAULT_LOCATION				   VARCHAR2(1000),
	DEFAULT_LOCATION_TYPE			  NUMBER(10, 0),
	COPY_TAGS						  NUMBER(1)		DEFAULT 0 NOT NULL,
	COPY_ASSIGNED_TO				   NUMBER(1)		DEFAULT 0 NOT NULL,
	COPY_TARGET						NUMBER(1)		DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_ACT_OUT_ACT_DATE_REL_UNIT CHECK (DEFAULT_ACT_DATE_RELATIVE_UNIT IN ('d','m')),
	CONSTRAINT CHK_ACT_OUT_ACT_ALLOW_USR_INT CHECK (ALLOW_USER_INTERACTION IN (0,1)),
	CONSTRAINT CHK_ACT_OUT_ACT_SHARE_TARGET CHECK (DEFAULT_SHARE_WITH_TARGET IN (0,1)),
	CONSTRAINT CHK_ACT_OUT_ACT_COPY_TAGS CHECK (COPY_TAGS IN (0,1)),
	CONSTRAINT CHK_ACT_OUT_ACT_COPY_ASS CHECK (COPY_ASSIGNED_TO IN (0,1)),
	CONSTRAINT CHK_ACT_OUT_ACT_COPY_TARGET CHECK (COPY_TARGET IN (0,1)),
	CONSTRAINT PK_ACTIVITY_OUTCOME_TYPE_ACTN PRIMARY KEY (APP_SID, ACTIVITY_OUTCOME_TYP_ACTION_ID),
	CONSTRAINT UK_ACTIVITY_OUTCOME_TYPE_ACTN UNIQUE (APP_SID, ACTIVITY_TYPE_ID, OUTCOME_TYPE_ID, GENERATE_ACTIVITY_TYPE_ID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_TAG
--

CREATE TABLE CHAIN.ACTIVITY_TAG(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_ID		 NUMBER(10, 0)	NOT NULL,
	TAG_ID			  NUMBER(10, 0)	NOT NULL,
	ACTIVITY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	TAG_GROUP_ID		NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_ACTIVITY_TAG PRIMARY KEY (APP_SID, ACTIVITY_ID, TAG_ID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_TYPE_ALERT
--

CREATE TABLE CHAIN.ACTIVITY_TYPE_ALERT(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_TYPE_ID		  NUMBER(10, 0)	NOT NULL,
	CUSTOMER_ALERT_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	LABEL					 VARCHAR2(255)	NOT NULL,
	USE_SUPPLIER_COMPANY	  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	ALLOW_MANUAL_EDITING	  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	SEND_TO_TARGET			  NUMBER(1) NOT NULL,
	SEND_TO_ASSIGNEE		  NUMBER(1) NOT NULL,
	CONSTRAINT PK_ACTIVITY_TYPE_ALERT PRIMARY KEY (APP_SID, ACTIVITY_TYPE_ID, CUSTOMER_ALERT_TYPE_ID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_TYPE_ALERT_ROLE
--

CREATE TABLE CHAIN.ACTIVITY_TYPE_ALERT_ROLE(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ACTIVITY_TYPE_ID		  NUMBER(10, 0)	NOT NULL,
	CUSTOMER_ALERT_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	ROLE_SID				  NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_ACTIVITY_TYPE_ALERT_ROLE PRIMARY KEY (ACTIVITY_TYPE_ID, CUSTOMER_ALERT_TYPE_ID, ROLE_SID, APP_SID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_TYPE_DEFAULT_USER
--

CREATE TABLE CHAIN.ACTIVITY_TYPE_DEFAULT_USER(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	USER_SID			NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_ACTIVITY_TYPE_DEFAULT_USER PRIMARY KEY (APP_SID, ACTIVITY_TYPE_ID, USER_SID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_TYPE_TAG_GROUP
--

CREATE TABLE CHAIN.ACTIVITY_TYPE_TAG_GROUP(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	TAG_GROUP_ID		NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_ACTIVITY_TYPE_TAG_GROUP PRIMARY KEY (APP_SID, ACTIVITY_TYPE_ID, TAG_GROUP_ID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_INVOLVEMENT
--

CREATE TABLE CHAIN.ACTIVITY_INVOLVEMENT(
	APP_SID		 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_ID	 NUMBER(10, 0)	NOT NULL,
	USER_SID		NUMBER(10, 0)	NULL,
	ROLE_SID		NUMBER(10, 0)	NULL,
	ADDED_DTM	   DATE			 DEFAULT SYSDATE NOT NULL,
	ADDED_BY_SID	NUMBER(10, 0)	NOT NULL
)
;

ALTER TABLE CHAIN.ACTIVITY_INVOLVEMENT ADD CONSTRAINT UK_ACTIVITY_INVOLVEMENT
	UNIQUE (APP_SID, ACTIVITY_ID, USER_SID, ROLE_SID)
;

--
-- TABLE: CHAIN.ACCEPTANCE_STATUS
--

CREATE TABLE CHAIN.ACCEPTANCE_STATUS(
	ACCEPTANCE_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			 VARCHAR2(100)	NOT NULL,
	CONSTRAINT PK_ACCEPTANCE_STATUS PRIMARY KEY (ACCEPTANCE_STATUS_ID)
)
;



--
-- TABLE: CHAIN.ACTION_SECURITY_TYPE
--

CREATE TABLE CHAIN.ACTION_SECURITY_TYPE(
	ACTION_SECURITY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION				VARCHAR2(100)	NOT NULL,
	CONSTRAINT PK_ACTION_SECURITY_TYPE PRIMARY KEY (ACTION_SECURITY_TYPE_ID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_LOG
--

CREATE TABLE CHAIN.ACTIVITY_LOG(
	APP_SID				   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_LOG_ID		   NUMBER(10, 0)	 NOT NULL,
	ACTIVITY_ID			   NUMBER(10, 0)	 NOT NULL,
	MESSAGE				   CLOB			  NOT NULL,
	LOGGED_DTM				DATE			  DEFAULT SYSDATE NOT NULL,
	IS_SYSTEM_GENERATED	   NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	LOGGED_BY_USER_SID		NUMBER(10, 0)	 NOT NULL,
	REPLY_TO_ACTIVITY_LOG_ID  NUMBER(10, 0),
	PARAM_1				   VARCHAR2(2048),
	PARAM_2				   VARCHAR2(2048),
	PARAM_3				   VARCHAR2(2048),
	IS_VISIBLE_TO_SUPPLIER	NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	CORRESPONDENT_NAME		  VARCHAR2(256),
	IS_FROM_EMAIL			  NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_ACT_LOG_IS_VIS_TO_SUP CHECK (IS_VISIBLE_TO_SUPPLIER IN (0,1)),
	CONSTRAINT CHK_ACT_LOG_FROM_EMAIL CHECK (IS_FROM_EMAIL IN (0,1)),
	CONSTRAINT PK_ISSUE_LOG PRIMARY KEY (APP_SID, ACTIVITY_LOG_ID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_TYPE
--

CREATE TABLE CHAIN.ACTIVITY_TYPE(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_TYPE_ID		 NUMBER(10, 0)	NOT NULL,
	LABEL					VARCHAR2(255)	NOT NULL,
	CSS_CLASS				VARCHAR2(255)	NOT NULL,
	DUE_DTM_RELATIVE		 NUMBER(10, 0),
	DUE_DTM_RELATIVE_UNIT	VARCHAR2(1)	  DEFAULT 'd',
	HAS_TARGET_USER		  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	HAS_LOCATION			 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	USER_CAN_CREATE		  NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	HELPER_PKG			   VARCHAR2(255),
	LOOKUP_KEY			   VARCHAR2(255),
	TITLE_TEMPLATE		   VARCHAR2(255),
	CAN_SHARE				 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_ACT_TYP_DUE_DTM_REL_UNIT CHECK (DUE_DTM_RELATIVE_UNIT IN ('d','m')),
	CONSTRAINT CHK_ACT_TYP_HAS_LOC CHECK (HAS_LOCATION IN (0,1)),
	CONSTRAINT PK_ACTIVITY_TYPE PRIMARY KEY (APP_SID, ACTIVITY_TYPE_ID)
)
;



--
-- TABLE: CHAIN.ACTIVITY_TYPE_ACTION
--

CREATE TABLE CHAIN.ACTIVITY_TYPE_ACTION(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_TYPE_ACTION_ID		NUMBER(10, 0)	NOT NULL,
	ACTIVITY_TYPE_ID			   NUMBER(10, 0)	NOT NULL,
	GENERATE_ACTIVITY_TYPE_ID	  NUMBER(10, 0)	NOT NULL,
	ALLOW_USER_INTERACTION		 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	DEFAULT_DESCRIPTION			CLOB,
	DEFAULT_ASSIGNED_TO_ROLE_SID   NUMBER(10, 0),
	DEFAULT_TARGET_ROLE_SID		NUMBER(10, 0),
	DEFAULT_ACT_DATE_RELATIVE	  NUMBER(10, 0),
	DEFAULT_ACT_DATE_RELATIVE_UNIT VARCHAR2(1)	  DEFAULT 'd' NOT NULL,
	DEFAULT_SHARE_WITH_TARGET	  NUMBER(1)		DEFAULT 0 NOT NULL,
	DEFAULT_LOCATION			   VARCHAR2(1000),
	DEFAULT_LOCATION_TYPE		  NUMBER(10, 0),
	COPY_TAGS					  NUMBER(1)		DEFAULT 0 NOT NULL,
	COPY_ASSIGNED_TO			   NUMBER(1)		DEFAULT 0 NOT NULL,
	COPY_TARGET					NUMBER(1)		DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_ACT_TYP_ACT_DATE_REL_UNIT CHECK (DEFAULT_ACT_DATE_RELATIVE_UNIT IN ('d','m')),
	CONSTRAINT CHK_ACT_TO_GEN_USER_INTER CHECK (ALLOW_USER_INTERACTION IN (0,1)),
	CONSTRAINT CHK_ACT_TYP_ACT_COPY_TAGS CHECK (COPY_TAGS IN (0,1)),
	CONSTRAINT CHK_ACT_TYP_ACT_COPY_ASS CHECK (COPY_ASSIGNED_TO IN (0,1)),
	CONSTRAINT CHK_ACT_TYP_ACT_COPY_TARGET CHECK (COPY_TARGET IN (0,1)),
	CONSTRAINT CHK_ACT_TYP_ACT_SHARE_TARGET CHECK (DEFAULT_SHARE_WITH_TARGET IN (0,1)),
	CONSTRAINT PK_ACTIVITY_TYPE_ACTION PRIMARY KEY (APP_SID, ACTIVITY_TYPE_ACTION_ID),
	CONSTRAINT UK_ACTIVITY_TYPE_ACTION UNIQUE (APP_SID, ACTIVITY_TYPE_ID, GENERATE_ACTIVITY_TYPE_ID)
)
;



--
-- TABLE: CHAIN.ADDRESSING_TYPE
--

CREATE TABLE CHAIN.ADDRESSING_TYPE(
	ADDRESSING_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION		   VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK243 PRIMARY KEY (ADDRESSING_TYPE_ID)
)
;

--
-- TABLE: CHAIN.AGGREGATE_TYPE
--

CREATE TABLE chain.aggregate_type (
	card_group_id			NUMBER(10) NOT NULL,
	aggregate_type_id		NUMBER(10) NOT NULL,
	description				VARCHAR2(255) NOT NULL,
	CONSTRAINT pk_aggregate_type PRIMARY KEY (card_group_id, aggregate_type_id)
);

--
-- TABLE: CHAIN.ALERT_ENTRY
--

CREATE TABLE CHAIN.ALERT_ENTRY(
	APP_SID					 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ALERT_ENTRY_ID			  NUMBER(10, 0)	NOT NULL,
	ALERT_ENTRY_TYPE_ID		 NUMBER(10, 0)	NOT NULL,
	USER_SID					NUMBER(10, 0)	NOT NULL,
	TEMPLATE_NAME			   VARCHAR2(100)	NOT NULL,
	COMPANY_SID				 NUMBER(10, 0),
	MESSAGE_ID				  NUMBER(10, 0),
	OWNER_SCHEDULED_ALERT_ID	NUMBER(10, 0),
	PRIORITY					NUMBER(10, 0)	DEFAULT 0,
	OCCURRED_DTM				TIMESTAMP(6)	 NOT NULL,
	CONSTRAINT PK144 PRIMARY KEY (APP_SID, ALERT_ENTRY_ID)
)
;



--
-- TABLE: CHAIN.ALERT_ENTRY_PARAM
--

CREATE TABLE CHAIN.ALERT_ENTRY_PARAM(
	APP_SID		   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ALERT_ENTRY_ID	NUMBER(10, 0)	 NOT NULL,
	NAME			  VARCHAR2(100)	 NOT NULL,
	VALUE			 VARCHAR2(1000)	NOT NULL,
	CONSTRAINT PK163 PRIMARY KEY (APP_SID, ALERT_ENTRY_ID, NAME)
)
;



--
-- TABLE: CHAIN.ALERT_ENTRY_TEMPLATE
--

CREATE TABLE CHAIN.ALERT_ENTRY_TEMPLATE(
	ALERT_ENTRY_TYPE_ID	NUMBER(10, 0)	 NOT NULL,
	TEMPLATE_NAME		  VARCHAR2(100)	 NOT NULL,
	TEMPLATE			   VARCHAR2(1000)	NOT NULL,
	CONSTRAINT PK160 PRIMARY KEY (ALERT_ENTRY_TYPE_ID, TEMPLATE_NAME)
)
;



--
-- TABLE: CHAIN.ALERT_ENTRY_TYPE
--

CREATE TABLE CHAIN.ALERT_ENTRY_TYPE(
	ALERT_ENTRY_TYPE_ID		   NUMBER(10, 0)	 NOT NULL,
	STD_ALERT_TYPE_ID			 NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION				   VARCHAR2(255)	 NOT NULL,
	COMPANY_SECTION_TEMPLATE	  VARCHAR2(1000)	NOT NULL,
	USER_SECTION_TEMPLATE		 VARCHAR2(1000)	NOT NULL,
	IMPORTANT_SECTION_TEMPLATE	VARCHAR2(1000)	NOT NULL,
	GENERATOR_SP				  VARCHAR2(255)	 NOT NULL,
	SCHEDULE_XML				  CLOB			  NOT NULL,
	ENABLED					   NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	FORCE_DISABLE				 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	CONSTRAINT PK146 PRIMARY KEY (ALERT_ENTRY_TYPE_ID)
)
;



--
-- TABLE: CHAIN.ALERT_PARTIAL_TEMPLATE
--

CREATE TABLE CHAIN.ALERT_PARTIAL_TEMPLATE(
	APP_SID					 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ALERT_TYPE_ID			   NUMBER(10, 0)	NOT NULL,
	PARTIAL_TEMPLATE_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	LANG						VARCHAR2(10)	 NOT NULL,
	PARTIAL_HTML				CLOB			 NOT NULL,
	CONSTRAINT PK_ALERT_PARTIAL_TEMPLATE PRIMARY KEY (APP_SID, ALERT_TYPE_ID, PARTIAL_TEMPLATE_TYPE_ID, LANG)
)
;



--
-- TABLE: CHAIN.ALERT_PARTIAL_TEMPLATE_PARAM
--

CREATE TABLE CHAIN.ALERT_PARTIAL_TEMPLATE_PARAM(
	APP_SID					 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ALERT_TYPE_ID			   NUMBER(10, 0)	NOT NULL,
	PARTIAL_TEMPLATE_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	FIELD_NAME				  VARCHAR2(50)	 NOT NULL,
	CONSTRAINT PK_ALERT_PARTIAL_TPL_PARAM PRIMARY KEY (APP_SID, ALERT_TYPE_ID, PARTIAL_TEMPLATE_TYPE_ID, FIELD_NAME)
)
;



--
-- TABLE: CHAIN.ALL_COMPONENT_TYPE
--

CREATE TABLE CHAIN.ALL_COMPONENT_TYPE(
	COMPONENT_TYPE_ID	   NUMBER(10, 0)	NOT NULL,
	HANDLER_CLASS		   VARCHAR2(255)	NOT NULL,
	HANDLER_PKG			 VARCHAR2(255)	NOT NULL,
	NODE_JS_PATH			VARCHAR2(255)	NOT NULL,
	DESCRIPTION			 VARCHAR2(100)	NOT NULL,
	EDITOR_CARD_GROUP_ID	NUMBER(10, 0),
	CONSTRAINT PK_ALL_COMPONENT_TYPE PRIMARY KEY (COMPONENT_TYPE_ID)
)
;



--
-- TABLE: CHAIN.AMOUNT_UNIT
--

CREATE TABLE CHAIN.AMOUNT_UNIT(
	APP_SID			   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AMOUNT_UNIT_ID		NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION		   VARCHAR2(255)	 NOT NULL,
	UNIT_TYPE			 VARCHAR2(32)	  NOT NULL,
	CONVERSION_TO_BASE	NUMBER(20, 10),
	CONSTRAINT PK362 PRIMARY KEY (APP_SID, AMOUNT_UNIT_ID)
)
;



--
-- TABLE: CHAIN.APPLIED_COMPANY_CAPABILITY
--

CREATE TABLE CHAIN.APPLIED_COMPANY_CAPABILITY(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID			NUMBER(10, 0)	NOT NULL,
	GROUP_CAPABILITY_ID	NUMBER(10, 0)	NOT NULL,
	PERMISSION_SET		 NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK120 PRIMARY KEY (APP_SID, COMPANY_SID, GROUP_CAPABILITY_ID, PERMISSION_SET)
)
;



--
-- TABLE: CHAIN.BUSINESS_UNIT
--

CREATE TABLE CHAIN.BUSINESS_UNIT(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BUSINESS_UNIT_ID		   NUMBER(10, 0)	NOT NULL,
	PARENT_BUSINESS_UNIT_ID	NUMBER(10, 0),
	DESCRIPTION				VARCHAR2(255)	NOT NULL,
	ACTIVE					 NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	CONSTRAINT CHK_BU_ACTIVE_0_OR_1 CHECK (ACTIVE IN (0,1)),
	CONSTRAINT PK_BUSINESS_UNIT PRIMARY KEY (APP_SID, BUSINESS_UNIT_ID)
)
;



--
-- TABLE: CHAIN.BUSINESS_UNIT_MEMBER
--

CREATE TABLE CHAIN.BUSINESS_UNIT_MEMBER(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BUSINESS_UNIT_ID	NUMBER(10, 0)	NOT NULL,
	USER_SID			NUMBER(10, 0)	NOT NULL,
	IS_PRIMARY_BU	   NUMBER(1, 0),
	CONSTRAINT CHK_BU_MEM_IS_PRIM_NULL_OR_1 CHECK (IS_PRIMARY_BU IS NULL OR IS_PRIMARY_BU =1),
	CONSTRAINT PK_BUSINESS_UNIT_MEMBER PRIMARY KEY (APP_SID, BUSINESS_UNIT_ID, USER_SID)
)
;



--
-- TABLE: CHAIN.BUSINESS_UNIT_SUPPLIER
--

CREATE TABLE CHAIN.BUSINESS_UNIT_SUPPLIER(
	APP_SID				 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BUSINESS_UNIT_ID		NUMBER(10, 0)	NOT NULL,
	SUPPLIER_COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	IS_PRIMARY_BU		   NUMBER(1, 0),
	CONSTRAINT CHK_BU_SUP_IS_PRIM_NULL_OR_1 CHECK (IS_PRIMARY_BU IS NULL OR IS_PRIMARY_BU = 1),
	CONSTRAINT PK_BUSINESS_UNIT_SUPPLIER PRIMARY KEY (APP_SID, BUSINESS_UNIT_ID, SUPPLIER_COMPANY_SID)
)
;



--
-- TABLE: CHAIN.CAPABILITY
--

CREATE TABLE CHAIN.CAPABILITY(
	CAPABILITY_ID			NUMBER(10, 0)	NOT NULL,
	CAPABILITY_NAME			VARCHAR2(100)	NOT NULL,
	CAPABILITY_TYPE_ID		NUMBER(10, 0)	NOT NULL,
	PERM_TYPE				NUMBER(10, 0)	NOT NULL,
	IS_SUPPLIER				NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	SUPPLIER_ON_PURCHASER	NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	DESCRIPTION				VARCHAR2(1024),
	CAPABILITY_GROUP_ID		NUMBER(10, 0)	DEFAULT 7 NOT NULL,
	POSITION				NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_CAPABILITY_IS_SUPPLIER CHECK (CAPABILITY_TYPE_ID IN (0, 3) OR (CAPABILITY_TYPE_ID IN (1, 2) AND CAPABILITY_TYPE_ID = IS_SUPPLIER + 1)),
	CHECK (IS_SUPPLIER IN (0, 1)),
	CONSTRAINT CK_SUPPLIER_ON_PURCHASER CHECK (SUPPLIER_ON_PURCHASER IN (0, 1)),
	CONSTRAINT PK125 PRIMARY KEY (CAPABILITY_ID),
	CONSTRAINT UC_CAP_NAME_TYPE  UNIQUE (CAPABILITY_TYPE_ID, CAPABILITY_NAME)
)
;

CREATE TABLE CHAIN.CAPABILITY_GROUP(
	CAPABILITY_GROUP_ID		NUMBER(10, 0)		NOT NULL,
	GROUP_NAME				VARCHAR2(255)		NOT NULL,
	GROUP_POSITION			NUMBER(10, 0)		DEFAULT 0 NOT NULL,
	IS_VISIBLE				NUMBER(1, 0)		DEFAULT 1 NOT NULL,
	CONSTRAINT PK_CAPABILITY_GROUP PRIMARY KEY (CAPABILITY_GROUP_ID)
);


--
-- TABLE: CHAIN.CAPABILITY_TYPE
--

CREATE TABLE CHAIN.CAPABILITY_TYPE(
	CAPABILITY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION		   VARCHAR2(100)	NOT NULL,
	CONTAINER			 VARCHAR2(100),
	CONSTRAINT PK169 PRIMARY KEY (CAPABILITY_TYPE_ID)
)
;



--
-- TABLE: CHAIN.CARD
--

CREATE TABLE CHAIN.CARD(
	CARD_ID		  NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION	  VARCHAR2(4000)	NOT NULL,
	CLASS_TYPE	   VARCHAR2(1000)	NOT NULL,
	JS_CLASS_TYPE	VARCHAR2(1000)	NOT NULL,
	JS_INCLUDE	   VARCHAR2(1000)	NOT NULL,
	CSS_INCLUDE	  VARCHAR2(1000),
	CONSTRAINT PK47 PRIMARY KEY (CARD_ID),
	CONSTRAINT UC_C_JCT  UNIQUE (JS_CLASS_TYPE)
)
;



--
-- TABLE: CHAIN.CARD_GROUP
--

CREATE TABLE CHAIN.CARD_GROUP(
	CARD_GROUP_ID	NUMBER(10, 0)	 NOT NULL,
	NAME			 VARCHAR2(100),
	DESCRIPTION	  VARCHAR2(4000),
	HELPER_PKG	   VARCHAR2(255),
	LIST_PAGE_URL	VARCHAR2(255),
	CONSTRAINT PK49 PRIMARY KEY (CARD_GROUP_ID)
)
;

--
-- TABLE: CHAIN.CARD_GROUP_COLUMN_TYPE
--

CREATE TABLE chain.card_group_column_type (
	card_group_id			NUMBER(10) NOT NULL,
	column_id				NUMBER(10) NOT NULL,
	column_type				NUMBER(10) NOT NULL,
	description				VARCHAR2(255) NOT NULL,
	CONSTRAINT pk_card_group_column_type PRIMARY KEY (card_group_id, column_id)
);

--
-- TABLE: CHAIN.CARD_GROUP_CARD
--

CREATE TABLE CHAIN.CARD_GROUP_CARD(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	CARD_GROUP_ID			  NUMBER(10, 0)	NOT NULL,
	CARD_ID					NUMBER(10, 0)	NOT NULL,
	POSITION				   NUMBER(10, 0)	NOT NULL,
	REQUIRED_PERMISSION_SET	NUMBER(10, 0),
	REQUIRED_CAPABILITY_ID	 NUMBER(10, 0),
	INVERT_CAPABILITY_CHECK	NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	FORCE_TERMINATE			NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	CONSTRAINT PK48 PRIMARY KEY (APP_SID, CARD_GROUP_ID, CARD_ID)
)
;



--
-- TABLE: CHAIN.CARD_GROUP_PROGRESSION
--

CREATE TABLE CHAIN.CARD_GROUP_PROGRESSION(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	CARD_GROUP_ID	   NUMBER(10, 0)	NOT NULL,
	FROM_CARD_ID		NUMBER(10, 0)	NOT NULL,
	FROM_CARD_ACTION	VARCHAR2(100)	NOT NULL,
	TO_CARD_ID		  NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK211 PRIMARY KEY (APP_SID, CARD_GROUP_ID, FROM_CARD_ID, FROM_CARD_ACTION)
)
;



--
-- TABLE: CHAIN.CARD_INIT_PARAM
--

CREATE TABLE CHAIN.CARD_INIT_PARAM(
	CARD_ID		  NUMBER(10, 0)	NOT NULL,
	APP_SID		  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PARAM_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	KEY			  VARCHAR2(255)	NOT NULL,
	VALUE			VARCHAR2(255)	NOT NULL,
	CARD_GROUP_ID	NUMBER(10, 0),
	CONSTRAINT CHK_CARD_INIT_PARAM_PARAM_TYPE CHECK ((PARAM_TYPE_ID = 0 /* GLOBAL */ AND CARD_GROUP_ID IS NULL) OR (PARAM_TYPE_ID = 1 /* SPECIFIC */ AND CARD_GROUP_ID IS NOT NULL))
)
;



--
-- TABLE: CHAIN.CARD_INIT_PARAM_TYPE
--

CREATE TABLE CHAIN.CARD_INIT_PARAM_TYPE(
	PARAM_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION	  VARCHAR2(255),
	CONSTRAINT PK482 PRIMARY KEY (PARAM_TYPE_ID)
)
;



--
-- TABLE: CHAIN.CARD_PROGRESSION_ACTION
--

CREATE TABLE CHAIN.CARD_PROGRESSION_ACTION(
	CARD_ID	NUMBER(10, 0)	NOT NULL,
	ACTION	 VARCHAR2(100)	NOT NULL,
	CONSTRAINT check_is_lower CHECK (action = lower(trim(action))),
	CONSTRAINT PK210 PRIMARY KEY (CARD_ID, ACTION)
)
;



--
-- TABLE: CHAIN.CHAIN_USER
--

CREATE TABLE CHAIN.CHAIN_USER(
	APP_SID					 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	USER_SID					NUMBER(10, 0)	NOT NULL,
	VISIBILITY_ID			   NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	REGISTRATION_STATUS_ID	  NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	DEFAULT_STYLESHEET		  VARCHAR2(200),
	DEFAULT_CSS_PATH			VARCHAR2(200),
	DEFAULT_HOME_PAGE		   VARCHAR2(200),
	DEFAULT_COMPANY_SID		 NUMBER(10, 0),
	MERGED_TO_USER_SID		  NUMBER(10, 0),
	DELETED					 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	TMP_IS_CHAIN_USER		   NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	DETAILS_CONFIRMED		   NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	RECEIVE_SCHEDULED_ALERTS	NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	NEXT_SCHEDULED_ALERT_DTM	TIMESTAMP(6)	 DEFAULT TO_DATE(TO_CHAR(SYSDATE+2, 'yyyy/mm/dd')||' 08:00', 'yyyy/mm/dd HH24:MI') NOT NULL,
	SCHEDULED_ALERT_TIME		TIMESTAMP(6)	 DEFAULT TO_DATE('08:00','HH24:MI') NOT NULL,
	CONSTRAINT MERGED_CHECK CHECK ((REGISTRATION_STATUS_ID <> 3 AND MERGED_TO_USER_SID IS NULL) OR (REGISTRATION_STATUS_ID = 3 AND MERGED_TO_USER_SID IS NOT NULL AND USER_SID <> MERGED_TO_USER_SID)),
	CONSTRAINT PK_CSR_USER PRIMARY KEY (APP_SID, USER_SID)
)
;



--
-- TABLE: CHAIN.CHAIN_USER_EMAIL_ADDRESS_LOG
--

CREATE TABLE CHAIN.CHAIN_USER_EMAIL_ADDRESS_LOG(
	APP_SID			  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	USER_SID			 NUMBER(10, 0)	NOT NULL,
	EMAIL				VARCHAR2(256)	NOT NULL,
	LAST_MODIFIED_DTM	DATE			 DEFAULT SYSDATE NOT NULL,
	MODIFIED_BY_SID	  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','SID') NOT NULL
)
;



--
-- TABLE: CHAIN.COMPANY
--

CREATE TABLE CHAIN.COMPANY(
	APP_SID					  NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID				  NUMBER(10, 0)	 NOT NULL,
	PARENT_SID				   NUMBER(10, 0),
	COMPANY_TYPE_ID			  NUMBER(10, 0)	 NOT NULL,
	CREATED_DTM				  DATE			  DEFAULT SYSDATE,
	NAME						 VARCHAR2(255)	 NOT NULL,
	ACTIVATED_DTM				DATE,
	ACTIVE					   NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	ADDRESS_1					VARCHAR2(255),
	ADDRESS_2					VARCHAR2(255),
	ADDRESS_3					VARCHAR2(255),
	ADDRESS_4					VARCHAR2(255),
	STATE						VARCHAR2(255),
	POSTCODE					 VARCHAR2(255),
	COUNTRY_CODE				 VARCHAR2(2)	   NOT NULL,
	PHONE						VARCHAR2(255),
	FAX						  VARCHAR2(255),
	WEBSITE					  VARCHAR2(1000),
	EMAIL						VARCHAR2(255),
	DELETED					  NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	DETAILS_CONFIRMED			NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	STUB_REGISTRATION_GUID	   VARCHAR2(38),
	ALLOW_STUB_REGISTRATION	  NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	MAPPING_APPROVAL_REQUIRED	NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	APPROVE_STUB_REGISTRATION	NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	USER_LEVEL_MESSAGING		 NUMBER(10, 0)	 DEFAULT 0 NOT NULL,
	SECTOR_ID					NUMBER(10, 0),
	CAN_SEE_ALL_COMPANIES		NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	SUPP_REL_CODE_LABEL		  VARCHAR2(100),
	SUPP_REL_CODE_LABEL_MAND	 NUMBER(10, 0)	 DEFAULT 0 NOT NULL,
	CITY						 VARCHAR2(255) 	   DEFAULT NULL,
	COUNTRY_IS_HIDDEN			 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	DEACTIVATED_DTM				 DATE,
	REQUESTED_BY_COMPANY_SID	 NUMBER(10),
	REQUESTED_BY_USER_SID		 NUMBER(10),
	PENDING						NUMBER(1) DEFAULT 0 NOT NULL,
	SIGNATURE 					VARCHAR2(1024) NOT NULL,
	CONSTRAINT chk_pending CHECK (pending IN (0,1)),
	CONSTRAINT CHK_COMP_SEE_ALL_0_OR_1 CHECK (CAN_SEE_ALL_COMPANIES IN (0,1)),
	CHECK (SUPP_REL_CODE_LABEL_MAND IN (1,0)),
	CONSTRAINT PK691 PRIMARY KEY (APP_SID, COMPANY_SID),
	CONSTRAINT CHK_CO_COUNTRY_IS_HIDDEN CHECK (COUNTRY_IS_HIDDEN IN (0, 1))
)
;
CREATE UNIQUE INDEX CHAIN.UK_COMP_PARENT_NAME ON CHAIN.COMPANY (NVL(PARENT_SID, COMPANY_SID), DECODE(DELETED, 0, LOWER(NAME), COMPANY_SID));
CREATE UNIQUE INDEX CHAIN.UK_COMPANY_SIGNATURE ON CHAIN.COMPANY (APP_SID, DECODE(PENDING + DELETED, 0, LOWER(SIGNATURE), COMPANY_SID));

ALTER TABLE chain.company ADD CONSTRAINT fk_company_request_by_company
	FOREIGN KEY (app_sid, requested_by_company_sid) REFERENCES chain.company (app_sid, company_sid);

--
-- TABLE: CHAIN.COMPANY_CC_EMAIL
--

CREATE TABLE CHAIN.COMPANY_CC_EMAIL(
	APP_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	LOWER_EMAIL	VARCHAR2(255)	NOT NULL,
	EMAIL		  VARCHAR2(255)	NOT NULL,
	CONSTRAINT EMAIL_IS_LOWER CHECK (lower_email = LOWER(TRIM(email))),
	CONSTRAINT PK78 PRIMARY KEY (APP_SID, COMPANY_SID, LOWER_EMAIL)
)
;



--
-- TABLE: CHAIN.COMPANY_FUNC_QNR_ACTION
--

CREATE TABLE CHAIN.COMPANY_FUNC_QNR_ACTION(
	COMPANY_FUNCTION_ID		NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_ACTION_ID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_COMPANY_FUNC_QNR_ACTION PRIMARY KEY (COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
)
;



--
-- TABLE: CHAIN.COMPANY_FUNCTION
--

CREATE TABLE CHAIN.COMPANY_FUNCTION(
	COMPANY_FUNCTION_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			VARCHAR2(100)	NOT NULL,
	CONSTRAINT PK_COMPANY_FUNCTION PRIMARY KEY (COMPANY_FUNCTION_ID)
)
;



--
-- TABLE: CHAIN.COMPANY_GROUP
--

CREATE TABLE CHAIN.COMPANY_GROUP(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID			  NUMBER(10, 0)	NOT NULL,
	COMPANY_GROUP_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	GROUP_SID				NUMBER(10, 0),
	CONSTRAINT PK_COMPANY_GROUP PRIMARY KEY (APP_SID, COMPANY_SID, COMPANY_GROUP_TYPE_ID)
)
;



--
-- TABLE: CHAIN.COMPANY_GROUP_TYPE
--

CREATE TABLE CHAIN.COMPANY_GROUP_TYPE(
	COMPANY_GROUP_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	NAME					 VARCHAR2(100)	NOT NULL,
	IS_GLOBAL				NUMBER(1, 0)	 NOT NULL,
	CHECK (IS_GLOBAL IN (0, 1)),
	CONSTRAINT PK_COMPANY_GROUP_TYPE PRIMARY KEY (COMPANY_GROUP_TYPE_ID)
)
;



--
-- TABLE: CHAIN.COMPANY_METRIC
--

CREATE TABLE CHAIN.COMPANY_METRIC(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_METRIC_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_SID			   NUMBER(10, 0)	NOT NULL,
	METRIC_VALUE			  NUMBER(10, 3),
	NORMALISED_VALUE		  NUMBER(10, 3),
	CONSTRAINT PK22 PRIMARY KEY (APP_SID, COMPANY_METRIC_TYPE_ID, COMPANY_SID)
)
;



--
-- TABLE: CHAIN.COMPANY_METRIC_TYPE
--

CREATE TABLE CHAIN.COMPANY_METRIC_TYPE(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_METRIC_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			   VARCHAR2(200)	NOT NULL,
	CLASS					 VARCHAR2(64)	 NOT NULL,
	MAX_VALUE				 NUMBER(10, 3)	NOT NULL,
	CONSTRAINT PK23 PRIMARY KEY (APP_SID, COMPANY_METRIC_TYPE_ID)
)
;

--
-- TABLE: CHAIN.COMPANY_PRODUCT
--

CREATE TABLE CHAIN.COMPANY_PRODUCT (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_ID						NUMBER(10) NOT NULL,
	COMPANY_SID						NUMBER(10) NOT NULL,
	PRODUCT_TYPE_ID					NUMBER(10) NOT NULL,
	LOOKUP_KEY						VARCHAR2(1024),
	PRODUCT_REF						VARCHAR2(1024),
	IS_ACTIVE						NUMBER(1) NOT NULL,
	LAST_CHANGED_DTM_DESCRIPTION	DATE,
	CONSTRAINT PK_COMPANY_PRODUCT PRIMARY KEY (APP_SID, PRODUCT_ID)
)
;

CREATE UNIQUE INDEX CHAIN.COMPANY_PRODUCT_LOOKUP ON CHAIN.COMPANY_PRODUCT(APP_SID, LOWER(NVL(LOOKUP_KEY, 'NOLOOKUPKEY_' || PRODUCT_ID)));
CREATE UNIQUE INDEX CHAIN.IX_COMPANY_PRODUCT_REF ON CHAIN.COMPANY_PRODUCT(APP_SID, COMPANY_SID, LOWER(NVL(PRODUCT_REF, 'NOPRODUCTREF_' || PRODUCT_ID)));

--
-- TABLE: CHAIN.COMPANY_PRODUCT_TR
--

CREATE TABLE CHAIN.COMPANY_PRODUCT_TR (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_ID						NUMBER(10) NOT NULL,
	LANG							VARCHAR2(10) NOT NULL,
	DESCRIPTION						VARCHAR2(1024) NOT NULL,
	LAST_CHANGED_DTM_DESCRIPTION	DATE,
	CONSTRAINT PK_COMPANY_PRODUCT_TR PRIMARY KEY (APP_SID, PRODUCT_ID, LANG),
	CONSTRAINT FK_COMPANY_PRODUCT_TR FOREIGN KEY (app_sid, product_id) REFERENCES chain.company_product (app_sid, product_id)
)
;


--
-- TABLE: CHAIN.COMPANY_PRODUCT_REQUIRED_CERT
--

CREATE TABLE CHAIN.COMPANY_PRODUCT_REQUIRED_CERT	(
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_ID					NUMBER(10) NOT NULL,
	CERTIFICATION_TYPE_ID		NUMBER(10) NOT NULL,
	FROM_DTM					DATE NOT NULL,
	TO_DTM						DATE,
	CONSTRAINT PK_COMPANY_PRODUCT_REQRD_CRT PRIMARY KEY (APP_SID, PRODUCT_ID, CERTIFICATION_TYPE_ID)
)
;


--
-- TABLE: CHAIN.COMPANY_PRODUCT_CERTIFICATION
--

CREATE TABLE CHAIN.COMPANY_PRODUCT_CERTIFICATION (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_ID					NUMBER(10) NOT NULL,
	CERTIFICATION_ID			NUMBER(10) NOT NULL,
	APPLIED_DTM					DATE NOT NULL,
	CONSTRAINT PK_COMPANY_PRODUCT_CERTIFICATN PRIMARY KEY (APP_SID, PRODUCT_ID, CERTIFICATION_ID)
)
;


--
-- TABLE: CHAIN.COMPANY_REFERENCE
--

CREATE TABLE CHAIN.COMPANY_REFERENCE(
	APP_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_REFERENCE_ID 	NUMBER(10, 0)	NOT NULL,
	REFERENCE_ID 	NUMBER(10, 0)	NOT NULL,
	COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	VALUE		  VARCHAR2(200),
	CONSTRAINT PK_COMPANY_REFERENCE PRIMARY KEY (APP_SID, COMPANY_REFERENCE_ID),
	CONSTRAINT UC_COMPANY_REFERENCE UNIQUE (APP_SID, REFERENCE_ID, COMPANY_SID)
)
;

CREATE INDEX CHAIN.IX_COMPANY_REFERENCE_VAL ON CHAIN.COMPANY_REFERENCE(APP_SID, REFERENCE_ID, VALUE);

--
-- TABLE: CHAIN.COMPANY_TYPE
--

CREATE TABLE CHAIN.COMPANY_TYPE(
	APP_SID			 		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_TYPE_ID	 		NUMBER(10, 0)	NOT NULL,
	LOOKUP_KEY		  		VARCHAR2(100)	NOT NULL,
	SINGULAR					VARCHAR2(100)	NOT NULL,
	PLURAL			  		VARCHAR2(100)	NOT NULL,
	ALLOW_LOWER_CASE			NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	IS_DEFAULT		  		NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	IS_TOP_COMPANY	  		NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	POSITION					NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	USER_GROUP_SID	  		NUMBER(10, 0),
	USE_USER_ROLE	   		NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	USER_ROLE_SID	   		NUMBER(10, 0),
	CSS_CLASS		   		VARCHAR2(255),
	DEFAULT_REGION_TYPE			NUMBER(2),
	REGION_ROOT_SID				NUMBER(10),
	DEFAULT_REGION_LAYOUT		VARCHAR2(255),
	CREATE_SUBSIDS_UNDER_PARENT	NUMBER(1) DEFAULT 1 NOT NULL,
	CREATE_DOC_LIBRARY_FOLDER	NUMBER(1) DEFAULT 0 NOT NULL,
	CHECK (ALLOW_LOWER_CASE IN (0, 1)),
	CHECK (IS_TOP_COMPANY IN (0, 1)),
	CHECK (IS_DEFAULT IN (0, 1)),
	CHECK (LOOKUP_KEY = UPPER(TRIM(LOOKUP_KEY))),
	CONSTRAINT CHK_CT_USE_USER_ROLE_BOOL CHECK (USE_USER_ROLE IN (0, 1)),
	CONSTRAINT CHK_SUBS_UNDER_PARENT_1_0 CHECK (CREATE_SUBSIDS_UNDER_PARENT IN (1,0)),
	CONSTRAINT PK_COMPANY_TYPE PRIMARY KEY (APP_SID, COMPANY_TYPE_ID),
	CONSTRAINT CHK_CREATE_DOC_LIB_FOLDER_1_0 CHECK (CREATE_DOC_LIBRARY_FOLDER IN (1, 0))
)
;

CREATE TABLE CHAIN.COMPANY_TYPE_ROLE(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_TYPE_ROLE_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_TYPE_ID			NUMBER(10, 0)	NOT NULL,
	ROLE_SID				NUMBER(10, 0)	NOT NULL,
	POS						NUMBER(10)		NOT NULL,
	MANDATORY				NUMBER(1)		DEFAULT 1 NOT NULL,
	CASCADE_TO_SUPPLIER		NUMBER(1)		DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_CMPY_TYP_RL_MAND 	CHECK (MANDATORY IN (0,1)),
	CONSTRAINT CHK_CMPY_TYP_RL_CAC2SUP 	CHECK (CASCADE_TO_SUPPLIER IN (0,1)),
	CONSTRAINT FK_CMPY_TYP_RL_CMPY_TYP	FOREIGN KEY (APP_SID, COMPANY_TYPE_ID) REFERENCES CHAIN.COMPANY_TYPE (APP_SID, COMPANY_TYPE_ID),
	CONSTRAINT UK_COMPANY_TYPE_ROLE		UNIQUE (APP_SID, COMPANY_TYPE_ID, ROLE_SID) USING INDEX,
	CONSTRAINT PK_COMPANY_TYPE_ROLE		PRIMARY KEY (APP_SID, COMPANY_TYPE_ROLE_ID)
);

--
-- TABLE: CHAIN.COMPANY_TYPE_CAPABILITY
--

CREATE TABLE CHAIN.COMPANY_TYPE_CAPABILITY(
	APP_SID						  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRIMARY_COMPANY_TYPE_ID		  NUMBER(10, 0)	NOT NULL,
	PRIMARY_COMPANY_GROUP_TYPE_ID	NUMBER(10, 0)	NULL,
	SECONDARY_COMPANY_TYPE_ID		NUMBER(10, 0),
	TERTIARY_COMPANY_TYPE_ID		 NUMBER(10, 0),
	CAPABILITY_ID					NUMBER(10, 0)	NOT NULL,
	PERMISSION_SET				   NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	PRIMARY_COMPANY_TYPE_ROLE_SID	NUMBER(10, 0) 	  NULL,
	CONSTRAINT CHK_GROUP_ROLE_XOR CHECK ((PRIMARY_COMPANY_GROUP_TYPE_ID IS NOT NULL AND PRIMARY_COMPANY_TYPE_ROLE_SID IS NULL) OR (PRIMARY_COMPANY_GROUP_TYPE_ID IS NULL AND PRIMARY_COMPANY_TYPE_ROLE_SID IS NOT NULL)),
	CONSTRAINT CC_SECONDARY_TERTIARY CHECK (TERTIARY_COMPANY_TYPE_ID IS NULL
OR (TERTIARY_COMPANY_TYPE_ID IS NOT NULL AND SECONDARY_COMPANY_TYPE_ID IS NOT NULL))
)
;



--
-- TABLE: CHAIN.COMPANY_TYPE_RELATIONSHIP
--

CREATE TABLE CHAIN.COMPANY_TYPE_RELATIONSHIP(
	APP_SID					  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRIMARY_COMPANY_TYPE_ID	  NUMBER(10, 0)	NOT NULL,
	SECONDARY_COMPANY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	USE_USER_ROLES			   NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	FLOW_SID					 NUMBER(10, 0),
	HIDDEN					   NUMBER(1)		DEFAULT 0 NOT NULL,
	FOLLOWER_ROLE_SID			 NUMBER(10)	   NULL,
	CAN_BE_PRIMARY			   NUMBER(1, 0)	 DEFAULT 0 NOT NULL, 
	CONSTRAINT PK_COMPANY_TYPE_RELATIONSHIP PRIMARY KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID),
	CONSTRAINT CHK_CTR_USE_USER_ROLES_BOOL CHECK (USE_USER_ROLES IN (0, 1)),
	CONSTRAINT CHK_CMP_TYPE_REL_HIDDEN CHECK (HIDDEN IN (1, 0)),
	CONSTRAINT CHK_CMP_TYPE_REL_CBP CHECK (CAN_BE_PRIMARY IN (1, 0))
)
;



--
-- TABLE: CHAIN.COMPLETION_TYPE
--

CREATE TABLE CHAIN.COMPLETION_TYPE(
	COMPLETION_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION		   VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK283 PRIMARY KEY (COMPLETION_TYPE_ID)
)
;



--
-- TABLE: CHAIN.COMPONENT
--

CREATE TABLE CHAIN.COMPONENT(
	APP_SID			NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPONENT_ID	   NUMBER(10, 0)	 NOT NULL,
	CREATED_BY_SID	 NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	CREATED_DTM		DATE			  DEFAULT SYSDATE NOT NULL,
	DESCRIPTION		VARCHAR2(4000),
	COMPONENT_CODE	 VARCHAR2(4000),
	DELETED			NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	COMPONENT_NOTES	VARCHAR2(4000),
	COMPONENT_TYPE_ID 	NUMBER(10, 0) 	NOT NULL,
	COMPANY_SID NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY')  NOT NULL,
	PARENT_COMPONENT_ID 		NUMBER(10, 0),
	PARENT_COMPONENT_TYPE_ID 	NUMBER(10, 0),
	POSITION					NUMBER(10),
	AMOUNT_CHILD_PER_PARENT		NUMBER(10,3),
	AMOUNT_UNIT_ID				NUMBER(10),
	CHECK (DELETED IN (0,1)),
	CONSTRAINT PK_COMPONENT PRIMARY KEY (APP_SID, COMPONENT_ID),
	CONSTRAINT UK_COMPONENT UNIQUE(APP_SID, COMPONENT_ID, COMPANY_SID, COMPONENT_TYPE_ID)
)
;


--
-- TABLE: CHAIN.COMPONENT_DOCUMENT
--

CREATE TABLE CHAIN.COMPONENT_DOCUMENT(
	APP_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPONENT_ID	   NUMBER(10, 0)	NOT NULL,
	FILE_UPLOAD_SID	NUMBER(10, 0)	NOT NULL,
	KEY				VARCHAR2(50)	 NOT NULL,
	CONSTRAINT PK364 PRIMARY KEY (APP_SID, COMPONENT_ID, FILE_UPLOAD_SID)
)
;


--
-- TABLE: CHAIN.COMPONENT_SOURCE
--

CREATE TABLE CHAIN.COMPONENT_SOURCE(
	APP_SID			   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPONENT_TYPE_ID	 NUMBER(10, 0)	 NOT NULL,
	PROGRESSION_ACTION	VARCHAR2(100)	 NOT NULL,
	CARD_TEXT			 VARCHAR2(2000)	NOT NULL,
	DESCRIPTION_XML	   VARCHAR2(4000),
	POSITION			  NUMBER(10, 0)	 NOT NULL,
	CARD_GROUP_ID		 NUMBER(10, 0)
)
;



--
-- TABLE: CHAIN.COMPONENT_SUPPLIER_TYPE
--

CREATE TABLE CHAIN.COMPONENT_SUPPLIER_TYPE(
	COMPONENT_SUPPLIER_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION				   VARCHAR2(100)	NOT NULL,
	CONSTRAINT PK_COMPONENT_SUPPLIER_TYPE PRIMARY KEY (COMPONENT_SUPPLIER_TYPE_ID)
)
;



--
-- TABLE: CHAIN.COMPONENT_TYPE
--

CREATE TABLE CHAIN.COMPONENT_TYPE(
	APP_SID			  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPONENT_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_COMPONENT_TYPE PRIMARY KEY (APP_SID, COMPONENT_TYPE_ID)
)
;



--
-- TABLE: CHAIN.COMPONENT_TYPE_CONTAINMENT
--

CREATE TABLE CHAIN.COMPONENT_TYPE_CONTAINMENT(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	CONTAINER_COMPONENT_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	CHILD_COMPONENT_TYPE_ID		NUMBER(10, 0)	NOT NULL,
	ALLOW_ADD_EXISTING			 NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	ALLOW_ADD_NEW				  NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	CHECK (ALLOW_ADD_EXISTING IN (0, 1)),
	CHECK (ALLOW_ADD_NEW IN (0, 1)),
	CONSTRAINT PK_COMPONENT_TYPE_CONTAINMENT PRIMARY KEY (APP_SID, CONTAINER_COMPONENT_TYPE_ID, CHILD_COMPONENT_TYPE_ID)
)
;



--
-- TABLE: CHAIN.COMPOUND_FILTER
--

CREATE TABLE CHAIN.COMPOUND_FILTER(
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPOUND_FILTER_ID			NUMBER(10, 0)	NOT NULL,
	OPERATOR_TYPE				VARCHAR2(8)	  DEFAULT 'and' NOT NULL,
	CREATED_DTM					DATE			 DEFAULT SYSDATE NOT NULL,
	CREATED_BY_USER_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	CARD_GROUP_ID				NUMBER(10, 0)	NOT NULL,
	ACT_ID						CHAR(36),
	READ_ONLY_SAVED_FILTER_SID	NUMBER(10),
	IS_READ_ONLY_GROUP_BY		NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_COMP_FLTR_IS_RO_GRP_BY_1_0 CHECK (is_read_only_group_by IN (1, 0)),
	CONSTRAINT CHK_COMP_FIL_OP_TYPE CHECK (OPERATOR_TYPE IN ('and','or')),
	CONSTRAINT PK_COMPOUND_FILTER PRIMARY KEY (APP_SID, COMPOUND_FILTER_ID),
	CONSTRAINT UK_CMP_FIL_ID_CRD_GRP_ID  UNIQUE (APP_SID, COMPOUND_FILTER_ID, CARD_GROUP_ID)
)
;



--
-- TABLE: CHAIN.CUSTOMER_ALERT_ENTRY_TEMPLATE
--

CREATE TABLE CHAIN.CUSTOMER_ALERT_ENTRY_TEMPLATE(
	APP_SID				NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ALERT_ENTRY_TYPE_ID	NUMBER(10, 0)	 NOT NULL,
	TEMPLATE_NAME		  VARCHAR2(100)	 NOT NULL,
	TEMPLATE			   VARCHAR2(1000)	NOT NULL,
	CONSTRAINT PK537 PRIMARY KEY (APP_SID, ALERT_ENTRY_TYPE_ID, TEMPLATE_NAME)
)
;



--
-- TABLE: CHAIN.CUSTOMER_ALERT_ENTRY_TYPE
--

CREATE TABLE CHAIN.CUSTOMER_ALERT_ENTRY_TYPE(
	ALERT_ENTRY_TYPE_ID		   NUMBER(10, 0)	 NOT NULL,
	APP_SID					   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SECTION_TEMPLATE	  VARCHAR2(1000)	DEFAULT NULL,
	USER_SECTION_TEMPLATE		 VARCHAR2(1000)	DEFAULT NULL,
	IMPORTANT_SECTION_TEMPLATE	VARCHAR2(1000)	DEFAULT NULL,
	GENERATOR_SP				  VARCHAR2(255)	 DEFAULT NULL,
	SCHEDULE_XML				  CLOB			  DEFAULT NULL,
	ENABLED					   NUMBER(1, 0)	  DEFAULT NULL,
	FORCE_DISABLE				 NUMBER(1, 0)	  DEFAULT NULL,
	CONSTRAINT PK531 PRIMARY KEY (ALERT_ENTRY_TYPE_ID, APP_SID)
)
;



--
-- TABLE: CHAIN.CUSTOMER_OPTIONS
--

CREATE TABLE CHAIN.CUSTOMER_OPTIONS(
	APP_SID						   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PURCHASED_COMP_AUTO_MAP		   NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	ADD_CSR_USER_TO_TOP_COMP		  NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	COMPANY_USER_CREATE_ALERT		 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	INVITATION_EXPIRATION_DAYS		NUMBER(10, 0)	 DEFAULT 7 NOT NULL,
	SITE_NAME						 VARCHAR2(200),
	ADMIN_HAS_DEV_ACCESS			  NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	SUPPORT_EMAIL					 VARCHAR2(255),
	NEWSFLASH_SUMMARY_SP			  VARCHAR2(100),
	QUESTIONNAIRE_FILTER_CLASS		VARCHAR2(100),
	LAST_GENERATE_ALERT_DTM		   TIMESTAMP(6)	  DEFAULT SYSDATE NOT NULL,
	SCHEDULED_ALERT_INTVL_MINUTES	 NUMBER(10, 0)	 DEFAULT 15 NOT NULL,
	USE_TYPE_CAPABILITIES			 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	DEFAULT_RECEIVE_SCHED_ALERTS	  NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	OVERRIDE_SEND_QI_PATH			 VARCHAR2(2000),
	OVERRIDE_MANAGE_CO_PATH 		  VARCHAR2(2000),
	LOGIN_PAGE_MESSAGE				VARCHAR2(4000),
	INVITE_FROM_NAME_ADDENDUM		 VARCHAR2(4000),
	SCHED_ALERTS_ENABLED			  NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	LINK_HOST						 VARCHAR2(100),
	TOP_COMPANY_SID				   NUMBER(10, 0),
	PRODUCT_URL					   VARCHAR2(4000),
	PRODUCT_URL_READ_ONLY			 VARCHAR2(4000),
	DEFAULT_URL					   VARCHAR2(4000),
	ALLOW_NEW_USER_REQUEST			NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	DASHBOARD_TASK_SCHEME_ID		  NUMBER(10, 0),
	ALLOW_COMPANY_SELF_REG			NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	REGISTRATION_TERMS_URL			VARCHAR2(4000),
	REGISTRATION_TERMS_VERSION		NUMBER(10, 5),
	CHAIN_IS_VISIBLE_TO_TOP		   NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	INV_MGR_NORM_USER_FULL_ACCESS	 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	TASK_MANAGER_HELPER_TYPE		  VARCHAR2(1000),
	LANDING_URL					   VARCHAR2(1000),
	ALLOW_CC_ON_INVITE				NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	USE_COMPANY_TYPE_USER_GROUPS	  NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	ENABLE_QNNAIRE_REMINDER_ALERTS	NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	DEFAULT_SHARE_QNR_WITH_ON_BHLF	NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	ALLOW_ADD_EXISTING_CONTACTS	   NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	REQ_QNNAIRE_INVITATION_LANDING	VARCHAR2(1000),
	USE_COMPANY_TYPE_CSS_CLASS		NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	RESTRICT_CHANGE_EMAIL_DOMAINS	 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	SEND_CHANGE_EMAIL_ALERT		   NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	SHOW_ALL_COMPONENTS			   NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	show_invitation_preview			  NUMBER(1, 0)		DEFAULT 0 NOT NULL,
	activity_mail_account_sid		  NUMBER(10),
	flow_helper_class_path			  VARCHAR2(1000),
	SUPPLIER_FILTER_EXPORT_URL		  VARCHAR2(2000)	NULL,
	enable_user_visibility_options	  NUMBER(1, 0)		DEFAULT 0 NOT NULL,
	DEFAULT_QNR_INVITATION_WIZ		NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	COUNTRIES_HELPER_SP			   VARCHAR2(100),
	REINVITE_SUPPLIER				 NUMBER(1)		 DEFAULT 0 NOT NULL,
	INVITATION_EXPIRATION_REM_DAYS 	  NUMBER(10, 0) 	DEFAULT 5 NOT NULL,
	INVITATION_EXPIRATION_REM 		  NUMBER(1) 		DEFAULT 0 NOT NULL,
	COUNTRY_RISK_ENABLED	 		  NUMBER(1) 		DEFAULT 0 NOT NULL,
	FILTER_CACHE_TIMEOUT			  NUMBER(10)		DEFAULT 600 NOT NULL,
 	SHOW_MAP_ON_SUPPLIER_LIST 		  NUMBER(1) 		DEFAULT 0 NOT NULL,
	FORCE_LOGIN_AS_COMPANY			  NUMBER(1)			DEFAULT 0 NOT NULL,
	ENABLE_DEDUPE_PREPROCESS		  NUMBER(1) 		DEFAULT 0 NOT NULL,
	SHOW_EXTRA_DETAILS_IN_GRAPH		  NUMBER(1)			DEFAULT 0 NOT NULL,
	ENABLE_PRODUCT_COMPLIANCE 		  NUMBER(1) 		DEFAULT 0 NOT NULL,
	ENABLE_DEDUPE_ONBOARDING		  NUMBER(1) 		DEFAULT 0 NOT NULL,
	CREATE_ONE_FLOW_ITEM_FOR_COMP	  NUMBER(1) 		DEFAULT 1 NOT NULL,
	SHOW_AUDIT_COORDINATOR			NUMBER(1)		 DEFAULT 0 NOT NULL,
	PREVENT_RELATIONSHIP_LOOPS		  NUMBER(1)			DEFAULT 0 NOT NULL,
	ALLOW_DUPLICATE_EMAILS			NUMBER(1)		 DEFAULT 0 NOT NULL,
	COMPANY_GEOTAG_ENABLED			NUMBER(1)		 DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_CREATE_ONE_FLOW_ITEM CHECK(CREATE_ONE_FLOW_ITEM_FOR_COMP IN (0, 1)),
	CONSTRAINT CHK_ENABLE_DEDUPE_ONBOARDING CHECK (ENABLE_DEDUPE_ONBOARDING IN (0,1)),
	CONSTRAINT "CONSTRAINT REG_TERMS_CHECK" CHECK (((registration_terms_url IS NULL AND registration_terms_version IS NULL) OR (registration_terms_url IS NOT NULL AND registration_terms_version IS NOT NULL))),
	CHECK (USE_TYPE_CAPABILITIES IN (0, 1)),
	CONSTRAINT CHK_CO_UCTUG_BOOLEAN CHECK (USE_COMPANY_TYPE_USER_GROUPS IN (0, 1)),
	CONSTRAINT CHK_USE_CT_CSS_CLASS CHECK (USE_COMPANY_TYPE_CSS_CLASS IN (1, 0)),
	CONSTRAINT chk_co_restrict_email_domains CHECK (RESTRICT_CHANGE_EMAIL_DOMAINS IN (0, 1)),
	CONSTRAINT chk_co_change_email_alert CHECK (SEND_CHANGE_EMAIL_ALERT IN (0, 1)),
	CONSTRAINT chk_co_show_all_components CHECK (SHOW_ALL_COMPONENTS IN (0, 1)),
	CONSTRAINT chk_show_invitation_preview CHECK (show_invitation_preview IN (0, 1)),
	CONSTRAINT chk_co_visibility_options CHECK (enable_user_visibility_options IN (0, 1)),
	CONSTRAINT CHK_REINVITE_SUPPLIER CHECK (REINVITE_SUPPLIER IN (0,1)),
	CHECK (DEFAULT_QNR_INVITATION_WIZ IN (1, 2)),
	CONSTRAINT CHK_COUNTRY_RISK_ENABLED CHECK (COUNTRY_RISK_ENABLED IN (0, 1)),
	CONSTRAINT CHK_SHOW_MAP_ON_SUP_LIST CHECK (SHOW_MAP_ON_SUPPLIER_LIST IN (0, 1)),
	CONSTRAINT CHK_FORCE_LOGIN_AS_CO CHECK (FORCE_LOGIN_AS_COMPANY IN (0,1)),
	CONSTRAINT CHK_CO_ENABLE_PREPROCESS CHECK (ENABLE_DEDUPE_PREPROCESS IN (0,1)),
	CONSTRAINT CHK_SHOW_EXT_DET_IN_GRPH CHECK (SHOW_EXTRA_DETAILS_IN_GRAPH IN (0,1)),
	CONSTRAINT CHK_ENABLE_PRODUCT_COMPLIANCE CHECK (ENABLE_PRODUCT_COMPLIANCE IN (0,1)),
	CONSTRAINT CHK_SHOW_AUDIT_COORDINATOR CHECK (SHOW_AUDIT_COORDINATOR IN (0,1)),
	CONSTRAINT CHK_ALLOW_DUP_EMAILS CHECK (ALLOW_DUPLICATE_EMAILS IN (0, 1)),
	CONSTRAINT CHK_COMPANY_GEOTAG_ENABLED CHECK (COMPANY_GEOTAG_ENABLED IN (1,0)),
	CONSTRAINT PK_CUSTOMER PRIMARY KEY (APP_SID)
)
;

--
-- TABLE: CHAIN.CUSTOMER_OPTIONS_COLUMNS
--

CREATE TABLE CHAIN.CUSTOMER_OPTIONS_COLUMNS(
	COLUMN_NAME		   VARCHAR2(100)	 NOT NULL,
	DESCRIPTION		   VARCHAR2(4000),
	SHOW_IN_ADMIN_PAGE	NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	CHECK (SHOW_IN_ADMIN_PAGE IN (0, 1)),
	CONSTRAINT PK_CUST_OPT_COL PRIMARY KEY (COLUMN_NAME)
)
;

--
-- TABLE: CHAIN.CUSTOMER_AGGREGATE_TYPE
--

CREATE TABLE CHAIN.CUSTOMER_AGGREGATE_TYPE (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	CARD_GROUP_ID					NUMBER(10) NOT NULL,
	CUSTOMER_AGGREGATE_TYPE_ID		NUMBER(10) NOT NULL,
	CMS_AGGREGATE_TYPE_ID			NUMBER(10),
	INITIATIVE_METRIC_ID			NUMBER(10),
	IND_SID							NUMBER(10),
	FILTER_PAGE_IND_INTERVAL_ID		NUMBER(10),
	METER_AGGREGATE_TYPE_ID			NUMBER(10),
	SCORE_TYPE_AGG_TYPE_ID			NUMBER(10),
	CUST_FILT_ITEM_AGG_TYPE_ID		NUMBER(10, 0),
	CONSTRAINT PK_CUSTOMER_AGGREGATE_TYPE PRIMARY KEY (APP_SID, CUSTOMER_AGGREGATE_TYPE_ID),
	CONSTRAINT CHK_CUSTOMER_AGGREGATE_TYPE 
	CHECK ((
		CASE WHEN CMS_AGGREGATE_TYPE_ID			IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN INITIATIVE_METRIC_ID			IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN IND_SID						IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN FILTER_PAGE_IND_INTERVAL_ID	IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN METER_AGGREGATE_TYPE_ID		IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN SCORE_TYPE_AGG_TYPE_ID		IS NOT NULL THEN 1 ELSE 0 END +
		CASE WHEN CUST_FILT_ITEM_AGG_TYPE_ID	IS NOT NULL THEN 1 ELSE 0 END
	) = 1)
);

CREATE UNIQUE INDEX CHAIN.UK_CUSTOMER_AGGREGATE_TYPE ON CHAIN.CUSTOMER_AGGREGATE_TYPE (
		APP_SID, CARD_GROUP_ID, CMS_AGGREGATE_TYPE_ID, INITIATIVE_METRIC_ID, IND_SID, FILTER_PAGE_IND_INTERVAL_ID, METER_AGGREGATE_TYPE_ID, SCORE_TYPE_AGG_TYPE_ID, CUST_FILT_ITEM_AGG_TYPE_ID)
;

CREATE TABLE CHAIN.CUSTOMER_FILTER_COLUMN (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CUSTOMER_FILTER_COLUMN_ID	NUMBER(10, 0)	NOT NULL,
	CARD_GROUP_ID				NUMBER(10, 0)	NOT NULL,
	COLUMN_NAME					VARCHAR2(255)	NOT NULL,
	SESSION_PREFIX 				VARCHAR2(255),
	LABEL						VARCHAR2(1024)	NOT NULL,
	WIDTH						NUMBER(10, 0)	NOT NULL,
	FIXED_WIDTH					NUMBER(1, 0)	NOT NULL,
	SORTABLE					NUMBER(1, 0)	NOT NULL,
	CONSTRAINT PK_CUST_FILT_COL PRIMARY KEY (APP_SID, CUSTOMER_FILTER_COLUMN_ID),
	CONSTRAINT FK_CUST_FILT_COL_CARD_GRP FOREIGN KEY (CARD_GROUP_ID) REFERENCES CHAIN.CARD_GROUP (CARD_GROUP_ID),
	CONSTRAINT CK_CUST_FILT_COL_FIXED_WIDTH CHECK (FIXED_WIDTH IN (1, 0)),
	CONSTRAINT CK_CUST_FILT_COL_SORTABLE CHECK (SORTABLE IN (1, 0))
);

CREATE UNIQUE INDEX CHAIN.UK_CUSTOMER_FILTER_COLUMN ON CHAIN.CUSTOMER_FILTER_COLUMN(APP_SID, CARD_GROUP_ID, COLUMN_NAME, SESSION_PREFIX);

CREATE TABLE CHAIN.CUSTOMER_FILTER_ITEM (
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	CUSTOMER_FILTER_ITEM_ID		NUMBER(10, 0) NOT NULL,
	CARD_GROUP_ID				NUMBER(10, 0) NOT NULL,
	ITEM_NAME					VARCHAR2(255) NOT NULL,
	SESSION_PREFIX 				VARCHAR2(255),
	LABEL						VARCHAR2(1024)	NOT NULL,
	CAN_BREAKDOWN				NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_CUST_FILT_ITEM PRIMARY KEY (APP_SID, CUSTOMER_FILTER_ITEM_ID),
	CONSTRAINT FK_CUST_FILT_ITEM_CARD_GRP FOREIGN KEY (CARD_GROUP_ID) REFERENCES CHAIN.CARD_GROUP (CARD_GROUP_ID),
	CONSTRAINT CK_CUST_FILT_ITEM_CAN_BRKDN CHECK (CAN_BREAKDOWN IN (1, 0))
);

CREATE UNIQUE INDEX CHAIN.UK_CUSTOMER_FILTER_ITEM ON CHAIN.CUSTOMER_FILTER_ITEM(APP_SID, CARD_GROUP_ID, ITEM_NAME, SESSION_PREFIX);

CREATE TABLE CHAIN.CUST_FILT_ITEM_AGG_TYPE (
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	CUST_FILT_ITEM_AGG_TYPE_ID	NUMBER(10, 0) NOT NULL,
	CUSTOMER_FILTER_ITEM_ID		NUMBER(10, 0) NOT NULL,
	ANALYTIC_FUNCTION			NUMBER(10, 0) NOT NULL,
	CONSTRAINT PK_CUST_FILT_ITEM_AGG_TYPE PRIMARY KEY (APP_SID, CUST_FILT_ITEM_AGG_TYPE_ID),
	CONSTRAINT FK_CUST_FILT_ITEM_AGG_TYPE FOREIGN KEY (APP_SID, CUSTOMER_FILTER_ITEM_ID) REFERENCES CHAIN.CUSTOMER_FILTER_ITEM (APP_SID, CUSTOMER_FILTER_ITEM_ID)
);

CREATE UNIQUE INDEX CHAIN.UK_CUST_FILT_ITEM_AGG_TYPE ON CHAIN.CUST_FILT_ITEM_AGG_TYPE(APP_SID, CUSTOMER_FILTER_ITEM_ID, ANALYTIC_FUNCTION);

ALTER TABLE CHAIN.CUSTOMER_AGGREGATE_TYPE ADD CONSTRAINT FK_CUST_AGG_TYP_CUST_FILT_ITEM 
FOREIGN KEY (APP_SID, CUST_FILT_ITEM_AGG_TYPE_ID) 
REFERENCES CHAIN.CUST_FILT_ITEM_AGG_TYPE (APP_SID, CUST_FILT_ITEM_AGG_TYPE_ID)
;

CREATE TABLE CHAIN.DEBUG_LOG (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	DEBUG_LOG_ID					NUMBER(10) NOT NULL,
	LABEL							VARCHAR2(255) NOT NULL,
	START_DTM						TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
	END_DTM							TIMESTAMP,
	OBJECT_ID						NUMBER(10),
	CONSTRAINT PK_DEBUG_LOG PRIMARY KEY (APP_SID, DEBUG_LOG_ID)
);

CREATE TABLE CHAIN.DEBUG_ACT (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ACT_ID							CHAR(36) NOT NULL,
	CONSTRAINT PK_DEBUG_ACT PRIMARY KEY (APP_SID, ACT_ID)
);

--
-- TABLE: CHAIN.DEFAULT_MESSAGE_DEFINITION
--

CREATE TABLE CHAIN.DEFAULT_MESSAGE_DEFINITION(
	MESSAGE_DEFINITION_ID	NUMBER(10, 0)	 NOT NULL,
	MESSAGE_TEMPLATE		 VARCHAR2(4000)	NOT NULL,
	MESSAGE_PRIORITY_ID	  NUMBER(10, 0)	 NOT NULL,
	REPEAT_TYPE_ID		   NUMBER(10, 0)	 NOT NULL,
	ADDRESSING_TYPE_ID	   NUMBER(10, 0)	 NOT NULL,
	COMPLETION_TYPE_ID	   NUMBER(10, 0)	 NOT NULL,
	COMPLETED_TEMPLATE	   VARCHAR2(255),
	HELPER_PKG			   VARCHAR2(100),
	CSS_CLASS				VARCHAR2(255),
	CONSTRAINT PK241 PRIMARY KEY (MESSAGE_DEFINITION_ID)
)
;



--
-- TABLE: CHAIN.DEFAULT_MESSAGE_PARAM
--

CREATE TABLE CHAIN.DEFAULT_MESSAGE_PARAM(
	MESSAGE_DEFINITION_ID	NUMBER(10, 0)	 NOT NULL,
	PARAM_NAME			   VARCHAR2(255)	 NOT NULL,
	LOWER_PARAM_NAME		 VARCHAR2(255)	 NOT NULL,
	VALUE					VARCHAR2(1000),
	HREF					 VARCHAR2(1000),
	CSS_CLASS				VARCHAR2(255),
	CONSTRAINT CHK_LOWER_PARAM_MATCH CHECK (LOWER_PARAM_NAME = LOWER(PARAM_NAME)),
	CONSTRAINT CHK_IS_ALPHA_NUM CHECK (TRIM(TRANSLATE(REPLACE(LOWER_PARAM_NAME, ' ', '_'), 'abcdefghijklmnopqrstuvwxyz0123456789', ' ')) IS NULL),
	CONSTRAINT PK247 PRIMARY KEY (MESSAGE_DEFINITION_ID, PARAM_NAME)
)
;



--
-- TABLE: CHAIN.DEFAULT_PRODUCT_CODE_TYPE
--

CREATE TABLE CHAIN.DEFAULT_PRODUCT_CODE_TYPE(
	APP_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	CODE_LABEL1	VARCHAR2(100)	NOT NULL,
	CODE_LABEL2	VARCHAR2(100),
	CODE_LABEL3	VARCHAR2(100),
	CONSTRAINT PK407 PRIMARY KEY (APP_SID)
)
;



--
-- TABLE: CHAIN.DEFAULT_SUPP_REL_CODE_LABEL
--

CREATE TABLE CHAIN.DEFAULT_SUPP_REL_CODE_LABEL(
	APP_SID	  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	LABEL		VARCHAR2(100)	NOT NULL,
	MANDATORY	NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	CONSTRAINT CC_SRLC_MAND CHECK (MANDATORY IN (1,0)),
	CONSTRAINT PK_DEF_SUPP_REL_CODE_LAB PRIMARY KEY (APP_SID)
)
;



--
-- TABLE: CHAIN.DOWNLOAD_PERMISSION
--

CREATE TABLE CHAIN.DOWNLOAD_PERMISSION(
	DOWNLOAD_PERMISSION_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			   VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK349 PRIMARY KEY (DOWNLOAD_PERMISSION_ID)
)
;



--
-- TABLE: CHAIN.EMAIL_STUB
--

CREATE TABLE CHAIN.EMAIL_STUB(
	APP_SID				 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID			 NUMBER(10, 0)	NOT NULL,
	LOWER_STUB			  VARCHAR2(100)	NOT NULL,
	STUB					VARCHAR2(100)	NOT NULL,
	CONSTRAINT "stub is lower" CHECK (lower_stub = LOWER(TRIM(stub))),
	CONSTRAINT PK34 PRIMARY KEY (APP_SID, COMPANY_SID, LOWER_STUB)
)
;


--
-- TABLE: CHAIN.FILE_GROUP
--

CREATE TABLE CHAIN.FILE_GROUP(
	APP_SID					   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FILE_GROUP_ID				 NUMBER(10, 0)	 NOT NULL,
	GUID						  VARCHAR2(38)	  NOT NULL,
	COMPANY_SID				   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY'),
	FILE_GROUP_MODEL_ID		   NUMBER(10, 0)	 NOT NULL,
	DOWNLOAD_PERMISSION_ID		NUMBER(10, 0)	 DEFAULT 0 NOT NULL,
	TITLE						 VARCHAR2(255)	 NOT NULL,
	DESCRIPTION				   VARCHAR2(4000),
	DEFAULT_FILE_GROUP_FILE_ID	NUMBER(10, 0),
	CONSTRAINT FG_COMPANY_CHK CHECK (((company_sid IS NOT NULL) OR (download_permission_id = 1))),
	CONSTRAINT PK350 PRIMARY KEY (APP_SID, FILE_GROUP_ID)
)
;



--
-- TABLE: CHAIN.FILE_GROUP_FILE
--

CREATE TABLE CHAIN.FILE_GROUP_FILE(
	APP_SID			   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FILE_GROUP_FILE_ID	NUMBER(10, 0)	NOT NULL,
	FILE_GROUP_ID		 NUMBER(10, 0)	NOT NULL,
	FILE_UPLOAD_SID	   NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK352 PRIMARY KEY (APP_SID, FILE_GROUP_FILE_ID)
)
;



--
-- TABLE: CHAIN.FILE_GROUP_MODEL
--

CREATE TABLE CHAIN.FILE_GROUP_MODEL(
	FILE_GROUP_MODEL_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK358 PRIMARY KEY (FILE_GROUP_MODEL_ID)
)
;



--
-- TABLE: CHAIN.FILE_UPLOAD
--

CREATE TABLE CHAIN.FILE_UPLOAD(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FILE_UPLOAD_SID		   NUMBER(10, 0)	NOT NULL,
	COMPANY_SID			   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') NOT NULL,
	DOWNLOAD_PERMISSION_ID	NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	FILENAME				  VARCHAR2(255)	NOT NULL,
	MIME_TYPE				 VARCHAR2(255)	NOT NULL,
	DATA					  BLOB			 NOT NULL,
	SHA1					  RAW(20)		  NOT NULL,
	LAST_MODIFIED_DTM		 TIMESTAMP(6)	 DEFAULT SYSDATE NOT NULL,
	LANG					  VARCHAR2(10),
	LAST_MODIFIED_BY_SID	  NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_FILE_UPLOAD PRIMARY KEY (APP_SID, FILE_UPLOAD_SID)
)
;



--
-- TABLE: CHAIN.FILTER
--

CREATE TABLE CHAIN.FILTER(
	APP_SID			   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FILTER_ID			 NUMBER(10, 0)	NOT NULL,
	FILTER_TYPE_ID		NUMBER(10, 0)	NOT NULL,
	COMPOUND_FILTER_ID	NUMBER(10, 0)	NOT NULL,
	OPERATOR_TYPE		 VARCHAR2(8)	  DEFAULT 'and' NOT NULL,
	CONSTRAINT CHK_FILTER_OP_TYPE CHECK (OPERATOR_TYPE in ('and','or')),
	CONSTRAINT PK_FILTER_ID PRIMARY KEY (APP_SID, FILTER_ID),
	CONSTRAINT UK_FILTER_CMP_FIL_TYP UNIQUE (COMPOUND_FILTER_ID, FILTER_TYPE_ID)
)
;

--
-- TABLE: CHAIN.FILTER_FIELD
--

CREATE TABLE CHAIN.FILTER_FIELD(
	APP_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FILTER_FIELD_ID	NUMBER(10, 0)	NOT NULL,
	FILTER_ID		  NUMBER(10, 0)	NOT NULL,
	NAME			   VARCHAR2(255),
	COMPARATOR		 VARCHAR2(64),
	GROUP_BY_INDEX	 NUMBER(1),
	SHOW_ALL		   NUMBER(1),
	TOP_N			   NUMBER(10),
	BOTTOM_N		   NUMBER(10),
	SHOW_OTHER		   NUMBER(1),
	COLUMN_SID		   NUMBER(10),
	PERIOD_SET_ID		NUMBER(10),
	PERIOD_INTERVAL_ID	NUMBER(10),
	ROW_OR_COL			NUMBER(1),
	CONSTRAINT CHK_FLTR_FLD_SHO_ALL_0_1 CHECK (SHOW_ALL IN (0,1)),
	CONSTRAINT CHK_FLTR_FLD_SHO_OTH_0_1 CHECK ((TOP_N IS NULL AND BOTTOM_N IS NULL) OR SHOW_OTHER IN (0,1)),
	CONSTRAINT UK_FILTER_FIELD_NAME UNIQUE (APP_SID, FILTER_ID, NAME),
	CONSTRAINT PK_FLT_FLD PRIMARY KEY (APP_SID, FILTER_FIELD_ID)
)
;

CREATE TABLE chain.filter_field_top_n_cache (
	app_sid							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	filter_field_id					NUMBER(10) NOT NULL,
	group_by_index					NUMBER(1) NOT NULL,
	filter_value_id					NUMBER(10) NOT NULL,
	CONSTRAINT pk_filter_field_top_n_cache PRIMARY KEY (app_sid, filter_field_id, group_by_index, filter_value_id)
);

--
-- TABLE: CHAIN.filter_page_column
--

CREATE TABLE chain.filter_page_column (
	app_sid					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	card_group_id			NUMBER(10) NOT NULL,
	column_name				VARCHAR2(255) NOT NULL,
	session_prefix 			VARCHAR2(255),
	label					VARCHAR2(1024) NOT NULL,
	pos						NUMBER(10) NOT NULL,
	width					NUMBER(10) DEFAULT 150 NOT NULL,
	fixed_width				NUMBER(1) DEFAULT 0 NOT NULL,
	hidden					NUMBER(1) DEFAULT 0 NOT NULL,
	include_in_export		NUMBER(1) DEFAULT 0 NOT NULL,
	group_sid				NUMBER(10),
	group_key				VARCHAR2(255),
	CONSTRAINT chk_fltr_pg_col_fix_width_1_0 CHECK (fixed_width IN (1, 0)),
	CONSTRAINT chk_fltr_pg_col_hidden_1_0 CHECK (hidden IN (1, 0)),
	CONSTRAINT chk_fltr_pg_col_export_1_0 CHECK (include_in_export IN (1, 0))
);

CREATE UNIQUE INDEX chain.uk_filter_table_column ON chain.filter_page_column(app_sid, card_group_id, column_name, session_prefix, LOWER(group_key));

--
-- TABLE: CHAIN.filter_page_cms_table
--

CREATE TABLE chain.filter_item_config (
	app_sid					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	card_group_id			NUMBER(10) NOT NULL,
	card_id					NUMBER(10) NOT NULL,
	item_name				VARCHAR2(255) NOT NULL,
	session_prefix 			VARCHAR2(255),
	label					VARCHAR2(1024) NOT NULL,
	pos						NUMBER(10) NOT NULL,
	include_in_filter		NUMBER(1) DEFAULT 1 NOT NULL,
	include_in_breakdown	NUMBER(1) DEFAULT 0 NOT NULL,
	include_in_advanced		NUMBER(1) DEFAULT 0 NOT NULL,
	group_sid				NUMBER(10),
	path					VARCHAR2(1024),
	CONSTRAINT chk_fltr_itm_cfg_inc_fil_1_0 CHECK (include_in_filter IN (1, 0)),
	CONSTRAINT chk_fltr_itm_cfg_inc_brkd_1_0 CHECK (include_in_breakdown IN (1, 0)),
	CONSTRAINT chk_fltr_itm_cfg_inc_adv_1_0 CHECK (include_in_advanced IN (1, 0))
);

CREATE UNIQUE INDEX chain.uk_filter_item_config ON chain.filter_item_config(app_sid, card_group_id, card_id, item_name, session_prefix, path);

--
-- TABLE: chain.aggregate_type_config
--

CREATE TABLE chain.aggregate_type_config (
	app_sid					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	card_group_id			NUMBER(10) NOT NULL,
	aggregate_type_id		NUMBER(10) NOT NULL,
	label					VARCHAR2(1024) NOT NULL,
	pos						NUMBER(10) NOT NULL,
	enabled					NUMBER(1) DEFAULT 1 NOT NULL,
	group_sid				NUMBER(10),
	session_prefix 			VARCHAR2(255),
	path					VARCHAR2(1024),
	CONSTRAINT chk_agg_typ_cfg_enbld_1_0 CHECK (enabled IN (1, 0))
);

CREATE UNIQUE INDEX chain.uk_aggregate_type_config ON chain.aggregate_type_config(app_sid, card_group_id, aggregate_type_id, session_prefix, path);

--
-- TABLE: CHAIN.filter_page_cms_table
--

CREATE TABLE chain.filter_page_cms_table (
	app_sid							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	filter_page_cms_table_id		NUMBER(10) NOT NULL,
	card_group_id					NUMBER(10) NOT NULL,
	column_sid						NUMBER(10) NOT NULL,
	CONSTRAINT pk_filter_page_cms_table PRIMARY KEY (app_sid, filter_page_cms_table_id),
	CONSTRAINT uk_filter_page_cms_table_col UNIQUE (app_sid, column_sid)
);

--
-- TABLE: CHAIN.filter_page_ind
--

CREATE TABLE chain.filter_page_ind (
	app_sid							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	filter_page_ind_id				NUMBER(10) NOT NULL,
	card_group_id					NUMBER(10) NOT NULL,
	ind_sid							NUMBER(10) NOT NULL,
	period_set_id					NUMBER(10) NOT NULL,
	period_interval_id				NUMBER(10) NOT NULL,
	start_dtm						DATE,
	end_dtm							DATE,
	previous_n_intervals			NUMBER(10),
	include_in_list					NUMBER(1) DEFAULT 1 NOT NULL,
	include_in_filter				NUMBER(1) DEFAULT 1 NOT NULL,
	include_in_aggregates			NUMBER(1) DEFAULT 0 NOT NULL,
	include_in_breakdown			NUMBER(1) DEFAULT 0 NOT NULL,
	show_measure_in_description		NUMBER(1) DEFAULT 1 NOT NULL,
	show_interval_in_description	NUMBER(1) DEFAULT 1 NOT NULL,
	description_override			VARCHAR2(1023),
	CONSTRAINT pk_filter_page_ind PRIMARY KEY (app_sid, filter_page_ind_id),
	CONSTRAINT chk_fltr_pg_ind_dtm_or_intrvl CHECK (
		(start_dtm IS NOT NULL AND end_dtm IS NOT NULL AND previous_n_intervals IS NULL) OR
		(start_dtm IS NULL AND end_dtm IS NULL AND previous_n_intervals IS NOT NULL)),
	CONSTRAINT chk_fltr_pg_ind_intrvl_gt_0 CHECK (previous_n_intervals IS NULL OR previous_n_intervals > 0),
	CONSTRAINT chk_fltr_pg_ind_inc_list_1_0 CHECK (include_in_list IN (1,0)),
	CONSTRAINT chk_fltr_pg_ind_inc_fltr_1_0 CHECK (include_in_filter IN (1,0)),
	CONSTRAINT chk_fltr_pg_ind_inc_agg_1_0 CHECK (include_in_aggregates IN (1,0)),
	CONSTRAINT chk_fltr_pg_ind_inc_brkdwn_1_0 CHECK (include_in_breakdown IN (1,0)),
	CONSTRAINT chk_fltr_pg_ind_shw_msre_1_0 CHECK (show_measure_in_description IN (1,0)),
	CONSTRAINT chk_fltr_pg_ind_shw_intrvl_1_0 CHECK (show_interval_in_description IN (1,0))
);

--
-- TABLE: CHAIN.FILTER_PAGE_IND_INTERVAL
--

CREATE TABLE chain.filter_page_ind_interval (
	app_sid							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	filter_page_ind_interval_id		NUMBER(10) NOT NULL,
	filter_page_ind_id				NUMBER(10) NOT NULL,
	start_dtm						DATE,
	current_interval_offset			NUMBER(10),
	CONSTRAINT pk_filter_page_ind_interval PRIMARY KEY (app_sid, filter_page_ind_interval_id),
	CONSTRAINT chk_fltr_pg_i_itvl_dtm_or_itvl CHECK (
		(start_dtm IS NOT NULL AND current_interval_offset IS NULL) OR
		(start_dtm IS NULL AND current_interval_offset IS NOT NULL))
);

--
-- TABLE: CHAIN.FILTER_TYPE
--

CREATE TABLE CHAIN.FILTER_TYPE(
	FILTER_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION	   VARCHAR2(255),
	HELPER_PKG		VARCHAR2(255)	NOT NULL,
	CARD_ID		   NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_FILTER_TYPE PRIMARY KEY (FILTER_TYPE_ID)
)
;



--
-- TABLE: CHAIN.FILTER_VALUE
--

CREATE TABLE CHAIN.FILTER_VALUE(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FILTER_VALUE_ID			NUMBER(10, 0)	NOT NULL,
	FILTER_FIELD_ID			NUMBER(10, 0)	NOT NULL,
	NUM_VALUE				  NUMBER(10, 0),
	STR_VALUE				  VARCHAR2(255),
	START_DTM_VALUE			DATE,
	REGION_SID				 NUMBER(10, 0),
	MIN_NUM_VAL				NUMBER(24,10)	NULL,
	MAX_NUM_VAL				NUMBER(24,10)	NULL,
	USER_SID				   NUMBER (10, 0),
	END_DTM_VALUE			  DATE,
	DESCRIPTION				VARCHAR2(255),
	COMPOUND_FILTER_ID_VALUE   NUMBER(10),
	SAVED_FILTER_SID_VALUE	 NUMBER(10),
	POS						NUMBER(10),
	PERIOD_SET_ID			  NUMBER(10),
	PERIOD_INTERVAL_ID		 NUMBER(10),
	START_PERIOD_ID			NUMBER(10),
	FILTER_TYPE				NUMBER(10) NULL, -- Should be not-null, but can't guarantee existing data is consistent
	NULL_FILTER				NUMBER(10) DEFAULT 0 NOT NULL, -- chain.filter_pkg.NULL_FILTER_ALL
	COLOUR					 NUMBER(10),
	CONSTRAINT PK_FLT_VAL PRIMARY KEY (APP_SID, FILTER_VALUE_ID),
	CONSTRAINT CK_NULL_FILTER_VALID CHECK (
		NULL_FILTER IN (
			0, -- chain.filter_pkg.NULL_FILTER_ALL
			1, -- chain.filter_pkg.NULL_FILTER_REQUIRE_NULL
			2  -- chain.filter_pkg.NULL_FILTER_EXCLUDE_NULL
		)
	),
	CONSTRAINT CK_FILTER_TYPE_VALID CHECK (
		FILTER_TYPE IS NULL OR FILTER_TYPE IN (
			1, -- chain.filter_pkg.FILTER_VALUE_TYPE_NUMBER
			2, -- chain.filter_pkg.FILTER_VALUE_TYPE_NUMBER_RANGE
			3, -- chain.filter_pkg.FILTER_VALUE_TYPE_STRING
			4, -- chain.filter_pkg.FILTER_VALUE_TYPE_USER
			5, -- chain.filter_pkg.FILTER_VALUE_TYPE_REGION
			6, -- chain.filter_pkg.FILTER_VALUE_TYPE_DATE_RANGE
			7, -- chain.filter_pkg.FILTER_VALUE_TYPE_SAVED
			8  -- chain.filter_pkg.FILTER_VALUE_TYPE_COMPOUND
		)
	)
)
;

--
-- TABLE: CHAIN.GROUP_CAPABILITY
--

CREATE TABLE CHAIN.GROUP_CAPABILITY(
	GROUP_CAPABILITY_ID	  NUMBER(10, 0)	NOT NULL,
	COMPANY_GROUP_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	CAPABILITY_ID			NUMBER(10, 0)	NOT NULL,
	PERMISSION_SET		   NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	CONSTRAINT PK127 PRIMARY KEY (GROUP_CAPABILITY_ID),
	CONSTRAINT UK_GROUP_CAPABILITY  UNIQUE (COMPANY_GROUP_TYPE_ID, CAPABILITY_ID)
)
;



--
-- TABLE: CHAIN.GROUP_CAPABILITY_OVERRIDE
--

CREATE TABLE CHAIN.GROUP_CAPABILITY_OVERRIDE(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	GROUP_CAPABILITY_ID		NUMBER(10, 0)	NOT NULL,
	HIDE_GROUP_CAPABILITY	  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	PERMISSION_SET_OVERRIDE	NUMBER(10, 0),
	CONSTRAINT VALID_OVERRIDE CHECK (HIDE_GROUP_CAPABILITY = 1 OR (HIDE_GROUP_CAPABILITY = 0 AND PERMISSION_SET_OVERRIDE IS NOT NULL)),
	CONSTRAINT PK123 PRIMARY KEY (APP_SID, GROUP_CAPABILITY_ID)
)
;



--
-- TABLE: CHAIN.IMPLEMENTATION
--

CREATE TABLE CHAIN.IMPLEMENTATION(
	APP_SID		  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	NAME			 VARCHAR2(100)	NOT NULL,
	LINK_PKG		 VARCHAR2(100),
	EXECUTE_ORDER	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT CHK_IMPLEMENTATION_UPPER_NAME CHECK (NAME = UPPER(TRIM(NAME))),
	CONSTRAINT CHK_IMPLEMENTATION_LOWER_LINK CHECK (LINK_PKG = LOWER(TRIM(LINK_PKG))),
	CONSTRAINT PK_IMPLEMENTATION PRIMARY KEY (APP_SID, NAME)
)
;



--
-- TABLE: CHAIN.INVITATION
--

CREATE TABLE CHAIN.INVITATION(
	APP_SID						  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	INVITATION_ID					NUMBER(10, 0)	NOT NULL,
	LANG							 VARCHAR2(10)	 DEFAULT NULL,
	FROM_COMPANY_SID				 NUMBER(10, 0),
	FROM_USER_SID					NUMBER(10, 0),
	ON_BEHALF_OF_COMPANY_SID		 NUMBER(10, 0),
	TO_COMPANY_SID				   NUMBER(10, 0)	NOT NULL,
	TO_USER_SID					  NUMBER(10, 0)	NOT NULL,
	SENT_DTM						 TIMESTAMP(6),
	GUID							 VARCHAR2(38)	 NOT NULL,
	EXPIRATION_GRACE				 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	EXPIRATION_DTM				   TIMESTAMP(6)	 DEFAULT SYSDATE+7 NOT NULL,
	INVITATION_STATUS_ID			 NUMBER(10, 0)	DEFAULT 1 NOT NULL,
	INVITATION_TYPE_ID			   NUMBER(10, 0)	NOT NULL,
	REINVITATION_OF_INVITATION_ID	NUMBER(10, 0),
	CANCELLED_BY_USER_SID			NUMBER(10, 0),
	CANCELLED_DTM					TIMESTAMP(6),
	ACCEPTED_DTM					 TIMESTAMP(6),
	ACCEPTED_REG_TERMS_VERS		  NUMBER(10, 5),
	BATCH_JOB_ID					 NUMBER(10, 0),
	REMINDER_SENT 					 NUMBER(1) 		  DEFAULT 0 NOT NULL,
	CONSTRAINT STUB_INVITATION_CHECK CHECK (invitation_type_id <> 2 OR
(
	invitation_type_id = 2 AND
 	from_company_sid IS NULL AND
 	from_user_sid IS NULL
)),
	CONSTRAINT CHK_NO_QUEST_INVITATION CHECK (invitation_type_id <> 4 OR (
		invitation_type_id = 4 AND
		from_company_sid IS NOT NULL AND
		from_user_sid IS NOT NULL
	)),
	CONSTRAINT CHK_REQ_QNR_EXISTING_COMPANY CHECK (invitation_type_id <> 5 OR (
		invitation_type_id = 5 AND
		from_company_sid IS NOT NULL AND
		from_user_sid IS NOT NULL
	)),
	CONSTRAINT QUESTIONNAIRE_INVITATION_CHECK CHECK (invitation_type_id <> 1 OR
(
	invitation_type_id = 1 AND
 	from_company_sid IS NOT NULL AND
 	from_user_sid IS NOT NULL
)),
	CONSTRAINT PK90 PRIMARY KEY (APP_SID, INVITATION_ID)
)
;



--
-- TABLE: CHAIN.INVITATION_QNR_TYPE
--

CREATE TABLE CHAIN.INVITATION_QNR_TYPE(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	INVITATION_ID			NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	ADDED_BY_USER_SID		NUMBER(10, 0)	NOT NULL,
	REQUESTED_DUE_DTM		DATE,
	CONSTRAINT PK102 PRIMARY KEY (APP_SID, INVITATION_ID, QUESTIONNAIRE_TYPE_ID)
)
;



--
-- TABLE: CHAIN.INVITATION_QNR_TYPE_COMPONENT
--

CREATE TABLE CHAIN.INVITATION_QNR_TYPE_COMPONENT(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	INVITATION_ID			NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	COMPONENT_ID			 NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK499 PRIMARY KEY (APP_SID, INVITATION_ID, QUESTIONNAIRE_TYPE_ID, COMPONENT_ID)
)
;



--
-- TABLE: CHAIN.INVITATION_STATUS
--

CREATE TABLE CHAIN.INVITATION_STATUS(
	INVITATION_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			 VARCHAR2(100)	NOT NULL,
	FILTER_DESCRIPTION	  VARCHAR2(100),
	CONSTRAINT PK92 PRIMARY KEY (INVITATION_STATUS_ID)
)
;



--
-- TABLE: CHAIN.INVITATION_TYPE
--

CREATE TABLE CHAIN.INVITATION_TYPE(
	INVITATION_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION		   VARCHAR2(200)	NOT NULL,
	CONSTRAINT PK136 PRIMARY KEY (INVITATION_TYPE_ID)
)
;



--
-- TABLE: CHAIN.INVITATION_USER_TPL
--

CREATE TABLE CHAIN.INVITATION_USER_TPL(
	APP_SID	 NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	USER_SID	NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	LANG		VARCHAR2(10)	  NOT NULL,
	HEADER	  VARCHAR2(4000),
	FOOTER	  VARCHAR2(4000),
	CONSTRAINT PK_INVITATION_USER_TPL PRIMARY KEY (APP_SID, USER_SID, LANG)
)
;



--
-- TABLE: CHAIN.MESSAGE
--

CREATE TABLE CHAIN.MESSAGE(
	APP_SID					 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MESSAGE_ID				  NUMBER(10, 0)	NOT NULL,
	ACTION_ID				   NUMBER(10, 0),
	EVENT_ID					NUMBER(10, 0),
	MESSAGE_DEFINITION_ID	   NUMBER(10, 0)	NOT NULL,
	RE_COMPANY_SID			  NUMBER(10, 0),
	RE_USER_SID				 NUMBER(10, 0),
	RE_QUESTIONNAIRE_TYPE_ID	NUMBER(10, 0),
	RE_COMPONENT_ID			 NUMBER(10, 0),
	DUE_DTM					 TIMESTAMP(6),
	COMPLETED_DTM			   TIMESTAMP(6),
	COMPLETED_BY_USER_SID	   NUMBER(10, 0),
	RE_SECONDARY_COMPANY_SID	NUMBER(10, 0),
	RE_INVITATION_ID			NUMBER(10, 0),
	RE_AUDIT_REQUEST_ID			NUMBER(10, 0),
	CONSTRAINT PK246 PRIMARY KEY (APP_SID, MESSAGE_ID)
)
;



--
-- TABLE: CHAIN.MESSAGE_DEFINITION
--

CREATE TABLE CHAIN.MESSAGE_DEFINITION(
	APP_SID				  NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MESSAGE_DEFINITION_ID	NUMBER(10, 0)	 NOT NULL,
	MESSAGE_TEMPLATE		 VARCHAR2(4000),
	MESSAGE_PRIORITY_ID	  NUMBER(10, 0),
	COMPLETED_TEMPLATE	   VARCHAR2(255),
	HELPER_PKG			   VARCHAR2(100),
	CSS_CLASS				VARCHAR2(255),
	COMPLETION_TYPE_ID	   NUMBER(10, 0),
	CONSTRAINT PK242 PRIMARY KEY (APP_SID, MESSAGE_DEFINITION_ID)
)
;



--
-- TABLE: CHAIN.MESSAGE_DEFINITION_LOOKUP
--

CREATE TABLE CHAIN.MESSAGE_DEFINITION_LOOKUP(
	MESSAGE_DEFINITION_ID	NUMBER(10, 0)	NOT NULL,
	PRIMARY_LOOKUP_ID		NUMBER(10, 0)	NOT NULL,
	SECONDARY_LOOKUP_ID	  NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_MSG_DFN_LOOKUP PRIMARY KEY (MESSAGE_DEFINITION_ID)
)
;



--
-- TABLE: CHAIN.MESSAGE_PARAM
--

CREATE TABLE CHAIN.MESSAGE_PARAM(
	APP_SID				  NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MESSAGE_DEFINITION_ID	NUMBER(10, 0)	 NOT NULL,
	PARAM_NAME			   VARCHAR2(255)	 NOT NULL,
	VALUE					VARCHAR2(1000),
	HREF					 VARCHAR2(1000),
	CSS_CLASS				VARCHAR2(255),
	CONSTRAINT PK247_1 PRIMARY KEY (APP_SID, MESSAGE_DEFINITION_ID, PARAM_NAME)
)
;



--
-- TABLE: CHAIN.MESSAGE_PRIORITY
--

CREATE TABLE CHAIN.MESSAGE_PRIORITY(
	MESSAGE_PRIORITY_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK244 PRIMARY KEY (MESSAGE_PRIORITY_ID)
)
;



--
-- TABLE: CHAIN.MESSAGE_RECIPIENT
--

CREATE TABLE CHAIN.MESSAGE_RECIPIENT(
	APP_SID		 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MESSAGE_ID	  NUMBER(10, 0)	NOT NULL,
	RECIPIENT_ID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK306 PRIMARY KEY (APP_SID, MESSAGE_ID, RECIPIENT_ID)
)
;



--
-- TABLE: CHAIN.MESSAGE_REFRESH_LOG
--

CREATE TABLE CHAIN.MESSAGE_REFRESH_LOG(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	MESSAGE_ID		  NUMBER(10, 0)	NOT NULL,
	REFRESH_INDEX	   NUMBER(10, 0)	NOT NULL,
	REFRESH_DTM		 TIMESTAMP(6)	 DEFAULT SYSDATE NOT NULL,
	REFRESH_USER_SID	NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	CONSTRAINT PK315 PRIMARY KEY (APP_SID, MESSAGE_ID, REFRESH_INDEX)
)
;



--
-- TABLE: CHAIN.NEWSFLASH
--

CREATE TABLE CHAIN.NEWSFLASH(
	APP_SID		 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	NEWSFLASH_ID	NUMBER(10, 0)	NOT NULL,
	CREATED_DTM	 DATE			 DEFAULT SYSDATE NOT NULL,
	RELEASED_DTM	DATE			 DEFAULT SYSDATE,
	EXPIRED_DTM	 DATE,
	CONTENT		 CLOB,
	CONSTRAINT PK138 PRIMARY KEY (APP_SID, NEWSFLASH_ID)
)
;



--
-- TABLE: CHAIN.NEWSFLASH_COMPANY
--

CREATE TABLE CHAIN.NEWSFLASH_COMPANY(
	APP_SID		  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	NEWSFLASH_ID	 NUMBER(10, 0)	NOT NULL,
	FOR_SUPPLIERS	NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	FOR_USERS		NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	COMPANY_SID	  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') NOT NULL,
	CONSTRAINT PK139 PRIMARY KEY (APP_SID, NEWSFLASH_ID)
)
;



--
-- TABLE: CHAIN.NEWSFLASH_USER_SETTINGS
--

CREATE TABLE CHAIN.NEWSFLASH_USER_SETTINGS(
	APP_SID		 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	NEWSFLASH_ID	NUMBER(10, 0)	NOT NULL,
	USER_SID		NUMBER(10, 0)	NOT NULL,
	HIDDEN		  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	CONSTRAINT PK140 PRIMARY KEY (APP_SID, NEWSFLASH_ID, USER_SID)
)
;



--
-- TABLE: CHAIN.PRODUCT
--
CREATE TABLE CHAIN.PRODUCT(
	APP_SID 				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_ID				NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_PRODUCT	PRIMARY KEY (APP_SID, PRODUCT_ID)
);

--
-- TABLE: CHAIN.VALIDATION_STATUS
--
CREATE TABLE CHAIN.VALIDATION_STATUS(
	VALIDATION_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION				VARCHAR(255)	NOT NULL,
	CONSTRAINT PK_VALIDATION_STATUS PRIMARY KEY (VALIDATION_STATUS_ID),
	CONSTRAINT UK_VALIDATION_STATUS UNIQUE (DESCRIPTION)
);

--
-- TABLE: CHAIN.PRODUCT_REVISION
--
CREATE TABLE CHAIN.PRODUCT_REVISION(
	APP_SID					   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_ID					NUMBER(10, 0)	NOT NULL,
	SUPPLIER_ROOT_COMPONENT_ID	NUMBER(10, 0)	NOT NULL,
	VALIDATED_ROOT_COMPONENT_ID   NUMBER(10, 0),
	ACTIVE						NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	CODE2						 VARCHAR2(100),
	CODE3						 VARCHAR2(100),
	NEED_REVIEW				   NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	NOTES						 VARCHAR2(255),
	PUBLISHED					 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	VALIDATION_STATUS_ID			NUMBER(10, 0) DEFAULT 1 NOT NULL,
	LAST_PUBLISHED_DTM			TIMESTAMP(0),
	LAST_PUBLISHED_BY_USER_SID	NUMBER(10, 0),
	REVISION_NUM					NUMBER(10,0) NOT NULL,
	REVISION_START_DTM				DATE DEFAULT SYSDATE NOT NULL,
	REVISION_END_DTM				DATE,
	REVISION_CREATED_BY_SID			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	PREVIOUS_REV_NUMBER				NUMBER(10, 0),
	PREVIOUS_END_DTM				DATE,
	CONSTRAINT UK_PRODUCT_REV_END_DTM UNIQUE (APP_SID, PRODUCT_ID, REVISION_END_DTM, REVISION_NUM),
	CONSTRAINT PK_PRODUCT_REVISION PRIMARY KEY (APP_SID, PRODUCT_ID, REVISION_NUM),
	CONSTRAINT CHK_END_DTM
	CHECK (REVISION_END_DTM IS NULL OR (REVISION_END_DTM >= REVISION_START_DTM)),
	CONSTRAINT CHK_PREVIOUS_END_EQ_START CHECK ((PREVIOUS_END_DTM IS NULL AND REVISION_NUM = 1) OR (PREVIOUS_END_DTM IS NOT NULL AND PREVIOUS_END_DTM = REVISION_START_DTM)),
	CONSTRAINT CHK_PREV_REV_NUM CHECK ((PREVIOUS_REV_NUMBER IS NULL AND REVISION_NUM = 1)  OR (PREVIOUS_REV_NUMBER IS NOT NULL AND REVISION_NUM = PREVIOUS_REV_NUMBER + 1)),
	CONSTRAINT CHK_PROD_ACTIVE CHECK (ACTIVE IN (1,0)),
	CONSTRAINT CHK_PROD_NEED_REVIEW CHECK (NEED_REVIEW IN (1,0)),
	CONSTRAINT CHK_PRODUCT_PUBLISHED CHECK (PUBLISHED IN (1,0)),
	CONSTRAINT CHK_VALIDATION_PUBLISHED CHECK((PUBLISHED = 0 AND VALIDATION_STATUS_ID = 1) OR PUBLISHED = 1),
	CONSTRAINT UC_PRODUCT_REVISION_PSEUDO  UNIQUE (APP_SID, SUPPLIER_ROOT_COMPONENT_ID),
	CONSTRAINT UC_PRODUCT_REVISION_VALIDATED  UNIQUE (VALIDATED_ROOT_COMPONENT_ID)
);



--
-- TABLE: CHAIN.PRODUCT_CODE_TYPE
--

CREATE TABLE CHAIN.PRODUCT_CODE_TYPE(
	APP_SID					  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') NOT NULL,
	CODE_LABEL1				  VARCHAR2(100)	DEFAULT 'SKU' NOT NULL,
	CODE_LABEL2				  VARCHAR2(100),
	CODE2_MANDATORY			  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	CODE_LABEL3				  VARCHAR2(100),
	CODE3_MANDATORY			  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	MAPPING_APPROVAL_REQUIRED	NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	CHECK (CODE2_MANDATORY IN (1,0)),
	CHECK (CODE3_MANDATORY IN (1,0)),
	CONSTRAINT PK_PRODUCT_CODE_TYPE PRIMARY KEY (APP_SID, COMPANY_SID)
)
;

--
-- TABLE: CHAIN.PRODUCT_COMPANY_ALERT
--

CREATE TABLE CHAIN.PRODUCT_COMPANY_ALERT(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ALERT_ID				NUMBER(10, 0)	NOT NULL,
	COMPANY_PRODUCT_ID		NUMBER(10, 0)	NOT NULL,
	PURCHASER_COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	SUPPLIER_COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	USER_SID				NUMBER(10, 0)	NOT NULL,
	SENT_DTM				TIMESTAMP(6),
	CONSTRAINT PK_PRODUCT_COMPANY_ALERT PRIMARY KEY (APP_SID, ALERT_ID)
);
CREATE INDEX CHAIN.IX_PRODUCT_COMPANY_ALERT_PROD ON CHAIN.PRODUCT_COMPANY_ALERT (APP_SID, COMPANY_PRODUCT_ID);
CREATE INDEX CHAIN.IX_PRODUCT_COMPANY_ALERT_CPNYP ON CHAIN.PRODUCT_COMPANY_ALERT (APP_SID, PURCHASER_COMPANY_SID);
CREATE INDEX CHAIN.IX_PRODUCT_COMPANY_ALERT_CPNYS ON CHAIN.PRODUCT_COMPANY_ALERT (APP_SID, SUPPLIER_COMPANY_SID);
CREATE INDEX CHAIN.IX_PRODUCT_COMPANY_ALERT_USER ON CHAIN.PRODUCT_COMPANY_ALERT (APP_SID, USER_SID);



--
-- TABLE: CHAIN.PRODUCT_METRIC_TYPE
--

CREATE TABLE CHAIN.PRODUCT_METRIC_TYPE(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_METRIC_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			   VARCHAR2(200)	NOT NULL,
	CLASS					 VARCHAR2(64),
	MAX_SCORE				 NUMBER(10, 3),
	CONSTRAINT PK181 PRIMARY KEY (APP_SID, PRODUCT_METRIC_TYPE_ID)
)
;



--
-- TABLE: CHAIN.PURCHASE
--

CREATE TABLE CHAIN.PURCHASE(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP')  NOT NULL,
	PURCHASE_ID			  NUMBER(10, 0)	NOT NULL,
	PURCHASER_COMPANY_SID	NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','CHAIN_COMPANY') NOT NULL,
	COMPONENT_ID			 NUMBER(10, 0)	NOT NULL,
	START_DATE			   DATE			 NOT NULL,
	END_DATE				 DATE,
	INVOICE_NUMBER		   VARCHAR2(50),
	PURCHASE_ORDER		   VARCHAR2(50),
	NOTE					 VARCHAR2(255),
	AMOUNT				   NUMBER(10, 3)	NOT NULL,
	AMOUNT_UNIT_ID		   NUMBER(10, 0)	NOT NULL,
	PURCHASE_CHANNEL_ID	  NUMBER(10, 0),
	CONSTRAINT PK405 PRIMARY KEY (APP_SID, PURCHASE_ID)
)
;

ALTER TABLE CHAIN.PURCHASE ADD CONSTRAINT CC_INV_NUM_PURCH_ORD_END_DATE
	CHECK (END_DATE IS NULL OR (END_DATE IS NOT NULL AND INVOICE_NUMBER IS NULL AND PURCHASE_ORDER IS NULL));


--
-- TABLE: CHAIN.PURCHASE_CHANNEL
--

CREATE TABLE CHAIN.PURCHASE_CHANNEL(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','CHAIN_COMPANY') NOT NULL,
	PURCHASE_CHANNEL_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			VARCHAR2(255)	NOT NULL,
	REGION_SID			 NUMBER(10, 0),
	CONSTRAINT PK_PURCHASE_CHANNEL PRIMARY KEY (APP_SID, COMPANY_SID, PURCHASE_CHANNEL_ID)
)
;



--
-- TABLE: CHAIN.PURCHASED_COMPONENT
--

CREATE TABLE CHAIN.PURCHASED_COMPONENT(
	APP_SID					   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPONENT_ID				  NUMBER(10, 0)	NOT NULL,
	PREVIOUS_PURCH_COMPONENT_ID   NUMBER(10, 0),
	COMPANY_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') NOT NULL,
	SUPPLIER_COMPANY_SID		  NUMBER(10, 0),
	COMPONENT_TYPE_ID			 NUMBER(10, 0)	DEFAULT 3 NOT NULL,
	COMPONENT_SUPPLIER_TYPE_ID	NUMBER(10, 0),
	ACCEPTANCE_STATUS_ID		  NUMBER(10, 0),
	UNINVITED_SUPPLIER_SID		NUMBER(10, 0),
	SUPPLIER_PRODUCT_ID		   NUMBER(10, 0),
	MAPPED_DTM					DATE,
	MAPPED_BY_USER_SID			NUMBER(10, 0),
	PURCHASES_LOCKED			  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
   CONSTRAINT "CHK_SUPPLIER_TYPE" CHECK ((
	COMPONENT_SUPPLIER_TYPE_ID = 0
) OR (
		COMPONENT_SUPPLIER_TYPE_ID = 1
 	AND SUPPLIER_COMPANY_SID IS NOT NULL
) OR (
		COMPONENT_SUPPLIER_TYPE_ID = 3
	AND UNINVITED_SUPPLIER_SID IS NOT NULL
)),
	CONSTRAINT CHK_PURCH_CMPNT_TYPE CHECK (COMPONENT_TYPE_ID IN (3)),
	CONSTRAINT PK32 PRIMARY KEY (APP_SID, COMPONENT_ID)
)
;

CREATE TABLE CHAIN.VALIDATED_PURCHASED_COMPONENT(
	APP_SID					   	NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPONENT_ID				  	NUMBER(10, 0)	NOT NULL,
	MAPPED_PURCHASED_COMPONENT_ID	NUMBER(10, 0),
	CONSTRAINT PK_VAL_PURCH_COMP PRIMARY KEY (APP_SID, COMPONENT_ID)
)
;

ALTER TABLE CHAIN.VALIDATED_PURCHASED_COMPONENT ADD CONSTRAINT RefCOMPONENT_VALIDATED_PC
	FOREIGN KEY (APP_SID, COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT(APP_SID, COMPONENT_ID)
;

ALTER TABLE CHAIN.VALIDATED_PURCHASED_COMPONENT ADD CONSTRAINT RefPURCH_COMPONENT_VAL_PC
	FOREIGN KEY (APP_SID, MAPPED_PURCHASED_COMPONENT_ID)
	REFERENCES CHAIN.PURCHASED_COMPONENT(APP_SID, COMPONENT_ID)
;

--
-- TABLE: CHAIN.PURCHASER_FOLLOWER
--

CREATE TABLE CHAIN.PURCHASER_FOLLOWER(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PURCHASER_COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	SUPPLIER_COMPANY_SID	 NUMBER(10, 0)	NOT NULL,
	USER_SID				 NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK312 PRIMARY KEY (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID, USER_SID)
)
;



--
-- TABLE: CHAIN.QNNAIRE_SHARE_ALERT_LOG
--

CREATE TABLE CHAIN.QNNAIRE_SHARE_ALERT_LOG(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_SHARE_ID	NUMBER(10, 0)	NOT NULL,
	ALERT_SENT_DTM			DATE			 NOT NULL,
	STD_ALERT_TYPE_ID		 NUMBER(10, 0)	NOT NULL,
	USER_SID				  NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_QNNAIRE_SHARE_ALERT_LOG PRIMARY KEY (APP_SID, QUESTIONNAIRE_SHARE_ID, ALERT_SENT_DTM, STD_ALERT_TYPE_ID, USER_SID)
)
;



--
-- TABLE: CHAIN.QNR_ACTION_SECURITY_MASK
--

CREATE TABLE CHAIN.QNR_ACTION_SECURITY_MASK(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_TYPE_ID	  NUMBER(10, 0)	NOT NULL,
	COMPANY_FUNCTION_ID		NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_ACTION_ID	NUMBER(10, 0)	NOT NULL,
	ACTION_SECURITY_TYPE_ID	NUMBER(10, 0)	DEFAULT 1 NOT NULL,
	CONSTRAINT PK_QNR_ACTION_SECURITY_MASK PRIMARY KEY (APP_SID, QUESTIONNAIRE_TYPE_ID, COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
)
;



--
-- TABLE: CHAIN.QNR_SECURITY_SCHEME_CONFIG
--

CREATE TABLE CHAIN.QNR_SECURITY_SCHEME_CONFIG(
	SECURITY_SCHEME_ID		 NUMBER(10, 0)	NOT NULL,
	ACTION_SECURITY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_FUNCTION_ID		NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_ACTION_ID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT CHK_VALID_AST CHECK (ACTION_SECURITY_TYPE_ID IN (2)),--,4, 8...)),
	CONSTRAINT PK_QNR_SECURITY_SCHEME_CONFIG PRIMARY KEY (SECURITY_SCHEME_ID, ACTION_SECURITY_TYPE_ID, COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
)
;



--
-- TABLE: CHAIN.QNR_SHARE_LOG_ENTRY
--

CREATE TABLE CHAIN.QNR_SHARE_LOG_ENTRY(
	APP_SID				   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_SHARE_ID	NUMBER(10, 0)	 NOT NULL,
	SHARE_LOG_ENTRY_INDEX	 NUMBER(10, 0)	 NOT NULL,
	ENTRY_DTM				 TIMESTAMP(6)	  DEFAULT SYSDATE NOT NULL,
	SHARE_STATUS_ID		   NUMBER(10, 0)	 NOT NULL,
	COMPANY_SID			   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') NOT NULL,
	USER_SID				  NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	USER_NOTES				VARCHAR2(4000),
	CONSTRAINT PK197 PRIMARY KEY (APP_SID, QUESTIONNAIRE_SHARE_ID, SHARE_LOG_ENTRY_INDEX)
)
;



--
-- TABLE: CHAIN.QNR_STATUS_LOG_ENTRY
--

CREATE TABLE CHAIN.QNR_STATUS_LOG_ENTRY(
	APP_SID					NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_ID		   NUMBER(10, 0)	 NOT NULL,
	STATUS_LOG_ENTRY_INDEX	 NUMBER(10, 0)	 NOT NULL,
	ENTRY_DTM				  TIMESTAMP(6)	  DEFAULT SYSDATE NOT NULL,
	QUESTIONNAIRE_STATUS_ID	NUMBER(10, 0)	 NOT NULL,
	USER_SID				   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	USER_NOTES				 VARCHAR2(4000),
	CONSTRAINT PK196 PRIMARY KEY (APP_SID, QUESTIONNAIRE_ID, STATUS_LOG_ENTRY_INDEX)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE
--

CREATE TABLE CHAIN.QUESTIONNAIRE(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_ID		 NUMBER(10, 0)	NOT NULL,
	COMPANY_SID			  NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			  VARCHAR2(255),
	CREATED_DTM			  DATE,
	COMPONENT_ID			 NUMBER(10, 0),
	REJECTED				NUMBER(1)	DEFAULT 0 NOT NULL,
	CONSTRAINT PK687 PRIMARY KEY (APP_SID, QUESTIONNAIRE_ID),
	CONSTRAINT CHK_REJECTED_0_1 CHECK (REJECTED IN (0, 1))
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_ACTION
--

CREATE TABLE CHAIN.QUESTIONNAIRE_ACTION(
	QUESTIONNAIRE_ACTION_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION				VARCHAR2(100)	NOT NULL,
	CONSTRAINT PK_QUESTIONNAIRE_ACTION PRIMARY KEY (QUESTIONNAIRE_ACTION_ID)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_GROUP
--

CREATE TABLE CHAIN.QUESTIONNAIRE_GROUP(
	APP_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	GROUP_NAME	 VARCHAR2(30)	 NOT NULL,
	DESCRIPTION	VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK166 PRIMARY KEY (APP_SID, GROUP_NAME)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_INVITATION
--

CREATE TABLE CHAIN.QUESTIONNAIRE_INVITATION(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_ID	NUMBER(10, 0)	NOT NULL,
	INVITATION_ID	   NUMBER(10, 0)	NOT NULL,
	ADDED_DTM		   TIMESTAMP(6)	 DEFAULT SYSDATE NOT NULL,
	CONSTRAINT PK_QUESTIONNAIRE_INVITATION PRIMARY KEY (APP_SID, QUESTIONNAIRE_ID, INVITATION_ID)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_METRIC
--

CREATE TABLE CHAIN.QUESTIONNAIRE_METRIC(
	APP_SID						 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_ID				NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_METRIC_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	METRIC_VALUE					NUMBER(10, 0)	NOT NULL,
	NORMALISED_VALUE				NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK21 PRIMARY KEY (APP_SID, QUESTIONNAIRE_ID, QUESTIONNAIRE_METRIC_TYPE_ID)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_METRIC_TYPE
--

CREATE TABLE CHAIN.QUESTIONNAIRE_METRIC_TYPE(
	APP_SID						 NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_METRIC_TYPE_ID	NUMBER(10, 0)	 NOT NULL,
	QUESTIONNAIRE_TYPE_ID		   NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION					 VARCHAR2(4000),
	MAX_VALUE					   NUMBER(10, 0),
	CONSTRAINT PK24 PRIMARY KEY (APP_SID, QUESTIONNAIRE_METRIC_TYPE_ID)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_SECURITY_SCHEME
--

CREATE TABLE CHAIN.QUESTIONNAIRE_SECURITY_SCHEME(
	SECURITY_SCHEME_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION		   VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK_QNR_SECURITY_SCHEME PRIMARY KEY (SECURITY_SCHEME_ID)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_SHARE
--

CREATE TABLE CHAIN.QUESTIONNAIRE_SHARE(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_SHARE_ID	NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_ID		  NUMBER(10, 0)	NOT NULL,
	SHARE_WITH_COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	QNR_OWNER_COMPANY_SID	 NUMBER(10, 0)	NOT NULL,
	DUE_BY_DTM				DATE			 NOT NULL,
	OVERDUE_EVENTS_SENT	   NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	REMINDER_SENT_DTM		 DATE,
	OVERDUE_SENT_DTM		  DATE,
	EXPIRY_DTM				  DATE,
	EXPIRY_SENT_DTM			  DATE,
	CONSTRAINT PK174 PRIMARY KEY (APP_SID, QUESTIONNAIRE_SHARE_ID),
	CONSTRAINT UC_RELATIONNSHIP_SHARE  UNIQUE (APP_SID, SHARE_WITH_COMPANY_SID, QNR_OWNER_COMPANY_SID, QUESTIONNAIRE_ID)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_STATUS
--

CREATE TABLE CHAIN.QUESTIONNAIRE_STATUS(
	QUESTIONNAIRE_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION				VARCHAR2(200)	NOT NULL,
	CONSTRAINT PK19 PRIMARY KEY (QUESTIONNAIRE_STATUS_ID)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_TYPE
--

CREATE TABLE CHAIN.QUESTIONNAIRE_TYPE(
	APP_SID				  NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_TYPE_ID	NUMBER(10, 0)	 NOT NULL,
	VIEW_URL				 VARCHAR2(4000),
	EDIT_URL				 VARCHAR2(4000),
	OWNER_CAN_REVIEW		 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	CLASS					VARCHAR2(255)	 NOT NULL,
	NAME					 VARCHAR2(255)	 NOT NULL,
	DB_CLASS				 VARCHAR2(200),
	GROUP_NAME			   VARCHAR2(30),
	POSITION				 NUMBER(10, 0),
	ACTIVE				   NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	REQUIRES_REVIEW		  NUMBER(1, 0)	  DEFAULT 1 NOT NULL,
	REMINDER_OFFSET_DAYS	 NUMBER(10, 0),
	ENABLE_REMINDER_ALERT	NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	ENABLE_OVERDUE_ALERT	 NUMBER(1, 0)	  DEFAULT 0 NOT NULL,
	SECURITY_SCHEME_ID	   NUMBER(10, 0),
	CAN_BE_OVERDUE 			 NUMBER(1, 0)	   DEFAULT 1 NOT NULL,
	DEFAULT_OVERDUE_DAYS	 NUMBER(10, 0),
	PROCURER_CAN_REVIEW		 number(1, 0)	   DEFAULT 0 NOT NULL,
	EXPIRE_AFTER_MONTHS		 NUMBER(10),
	AUTO_RESEND_ON_EXPIRY	 NUMBER(10)		   DEFAULT 0 NOT NULL,
	IS_RESENDABLE			 NUMBER(1, 0)	   DEFAULT 1 NOT NULL,
	ENABLE_STATUS_LOG		 NUMBER(1, 0)	   DEFAULT 0 NOT NULL,
	ENABLE_TRANSITION_ALERT	 NUMBER(1, 0)	   DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_AUTO_RESEND_ON_EXPIRY CHECK (AUTO_RESEND_ON_EXPIRY IN (0,1)),
	CONSTRAINT CHK_ACTIVE_0_OR_1 CHECK (ACTIVE IN (0,1)),
	CONSTRAINT CHK_QNR_TYP_REQ_REV_0OR1 CHECK (REQUIRES_REVIEW IN (0,1)),
	CONSTRAINT CC_ENABLE_REMINDER_OFFSET CHECK (ENABLE_REMINDER_ALERT = 0 OR
(ENABLE_REMINDER_ALERT = 1 AND REMINDER_OFFSET_DAYS IS NOT NULL)),
	CONSTRAINT PK18 PRIMARY KEY (APP_SID, QUESTIONNAIRE_TYPE_ID),
	CONSTRAINT UC_QUESTIONNAIRE_TYPE_CLASS  UNIQUE (APP_SID, CLASS),
	CHECK (CAN_BE_OVERDUE IN (0, 1)),
	CONSTRAINT CHK_IS_RESENDABLE CHECK (IS_RESENDABLE IN (0, 1)),
	CONSTRAINT CHK_IS_RESENDABLE_ON_EXPIRY CHECK ((IS_RESENDABLE = 0 AND AUTO_RESEND_ON_EXPIRY = 0) OR IS_RESENDABLE = 1),
	CONSTRAINT CHK_ENABLE_STATUS_LOG_0_1 CHECK (ENABLE_STATUS_LOG IN (0, 1)),
	CONSTRAINT CHK_ENABLE_TRANSITION_ALRT_0_1 CHECK (ENABLE_TRANSITION_ALERT IN (0, 1))
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_USER
--

CREATE TABLE CHAIN.QUESTIONNAIRE_USER(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_ID	   NUMBER(10, 0)	NOT NULL,
	USER_SID			   NUMBER(10, 0)	NOT NULL,
	COMPANY_FUNCTION_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_SID			NUMBER(10, 0)	NOT NULL,
	ADDED_DTM			  TIMESTAMP(6)	 DEFAULT SYSDATE NOT NULL,
	CONSTRAINT PK_QUESTIONNAIRE_USER PRIMARY KEY (APP_SID, QUESTIONNAIRE_ID, USER_SID, COMPANY_FUNCTION_ID, COMPANY_SID)
)
;



--
-- TABLE: CHAIN.QUESTIONNAIRE_USER_ACTION
--

CREATE TABLE CHAIN.QUESTIONNAIRE_USER_ACTION(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_ID		   NUMBER(10, 0)	NOT NULL,
	USER_SID				   NUMBER(10, 0)	NOT NULL,
	COMPANY_FUNCTION_ID		NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_ACTION_ID	NUMBER(10, 0)	NOT NULL,
	COMPANY_SID				NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_QUESTIONNAIRE_USER_ACTION PRIMARY KEY (APP_SID, QUESTIONNAIRE_ID, USER_SID, COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID, COMPANY_SID)
)
;



--
-- TABLE: CHAIN.RECIPIENT
--

CREATE TABLE CHAIN.RECIPIENT(
	APP_SID		   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	RECIPIENT_ID	  NUMBER(10, 0)	NOT NULL,
	TO_COMPANY_SID	NUMBER(10, 0),
	TO_USER_SID	   NUMBER(10, 0),
	CONSTRAINT CHK_RECIPIENT_HAS_VALUE CHECK (to_company_sid IS NOT NULL OR to_user_sid IS NOT NULL),
	CONSTRAINT PK249 PRIMARY KEY (APP_SID, RECIPIENT_ID),
	CONSTRAINT UC_RECIPIENT	UNIQUE (TO_COMPANY_SID, TO_USER_SID)
)
;

--
-- TABLE: CHAIN.REFERENCE
--

CREATE TABLE CHAIN.REFERENCE(
	APP_SID						  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	REFERENCE_ID					 NUMBER(10, 0)	NOT NULL,
	LOOKUP_KEY					   VARCHAR2(255)	NOT NULL,
	DEPRICATED_REFERENCE_NUMBER	  NUMBER(10, 0)	NULL,
	LABEL							VARCHAR2(255)	NOT NULL,
	MANDATORY						NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	REFERENCE_UNIQUENESS_ID		  NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	REFERENCE_LOCATION_ID			NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	REFERENCE_FILTER_TYPE_ID		 NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	SHOW_IN_FILTER					 NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	REFERENCE_VALIDATION_ID			 NUMBER(10, 0)	  NOT NULL,
	CONSTRAINT CHK_REF_LOOKUP_KEY CHECK (LOOKUP_KEY = UPPER(TRIM(LOOKUP_KEY))),
	CONSTRAINT CHK_REF_MAND_BOOL CHECK (MANDATORY IN (0,1)),
	CONSTRAINT CHK_SHOW_IN_FILTER CHECK (SHOW_IN_FILTER IN (0,1)),
	CONSTRAINT PK_REFERENCE PRIMARY KEY (APP_SID, REFERENCE_ID),
	CONSTRAINT UC_REFERENCE UNIQUE (APP_SID, LOOKUP_KEY)
)
;

CREATE TABLE CHAIN.REFERENCE_COMPANY_TYPE(
	APP_SID						  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	REFERENCE_ID					 NUMBER(10, 0)	NOT NULL,
	COMPANY_TYPE_ID					 NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_REFERENCE_COMPANY_TYPE PRIMARY KEY (APP_SID, REFERENCE_ID, COMPANY_TYPE_ID),
	CONSTRAINT FK_REF_CMP_TYP_CMP_TYP FOREIGN KEY (APP_SID, COMPANY_TYPE_ID) REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID),
	CONSTRAINT FK_REF_CMP_TYP_REF FOREIGN KEY (APP_SID, REFERENCE_ID) REFERENCES CHAIN.REFERENCE(APP_SID, REFERENCE_ID)
);

CREATE INDEX CHAIN.IX_REF_CMP_TYP_CMP_TYP ON CHAIN.REFERENCE_COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID);

CREATE TABLE CHAIN.REFERENCE_CAPABILITY (
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	REFERENCE_ID					NUMBER(10, 0)	NOT NULL,
	PRIMARY_COMPANY_TYPE_ID			NUMBER(10, 0)	NOT NULL,
	PRIMARY_COMPANY_GROUP_TYPE_ID	NUMBER(10, 0),
	PRIMARY_COMPANY_TYPE_ROLE_SID	NUMBER(10, 0),
	SECONDARY_COMPANY_TYPE_ID		NUMBER(10, 0),
	PERMISSION_SET					NUMBER(10, 0)	NOT NULL,
	CONSTRAINT CK_REF_CAP_ROLE_XOR CHECK (
		(PRIMARY_COMPANY_GROUP_TYPE_ID IS NOT NULL AND PRIMARY_COMPANY_TYPE_ROLE_SID IS NULL) OR
		(PRIMARY_COMPANY_GROUP_TYPE_ID IS NULL AND PRIMARY_COMPANY_TYPE_ROLE_SID IS NOT NULL)
	),
	CONSTRAINT FK_REF_CAP_REF FOREIGN KEY (APP_SID, REFERENCE_ID) REFERENCES CHAIN.REFERENCE (APP_SID, REFERENCE_ID),
	CONSTRAINT FK_REF_CAP_PRI_COMP_TYPE FOREIGN KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID) REFERENCES CHAIN.COMPANY_TYPE (APP_SID, COMPANY_TYPE_ID),
	CONSTRAINT FK_REF_CAP_SEC_COMP_TYPE FOREIGN KEY (APP_SID, SECONDARY_COMPANY_TYPE_ID) REFERENCES CHAIN.COMPANY_TYPE (APP_SID, COMPANY_TYPE_ID),
	CONSTRAINT FK_REF_CAP_PRI_COMP_GRP FOREIGN KEY (PRIMARY_COMPANY_GROUP_TYPE_ID) REFERENCES CHAIN.COMPANY_GROUP_TYPE (COMPANY_GROUP_TYPE_ID)
);

CREATE UNIQUE INDEX CHAIN.UX_REFERENCE_CAPABILITY ON CHAIN.REFERENCE_CAPABILITY (
	APP_SID,
	REFERENCE_ID,
	PRIMARY_COMPANY_TYPE_ID,
	NVL2(PRIMARY_COMPANY_GROUP_TYPE_ID, 'CTG_' || PRIMARY_COMPANY_GROUP_TYPE_ID, 'CTR_' || PRIMARY_COMPANY_TYPE_ROLE_SID),
	NVL(SECONDARY_COMPANY_TYPE_ID, 0)
);

--
-- TABLE: CHAIN.REFERENCE_FILTER_TYPE
--

CREATE TABLE CHAIN.REFERENCE_FILTER_TYPE(
	REFERENCE_FILTER_TYPE_ID			 NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION				  		 VARCHAR2(1000)	NOT NULL,
	CONSTRAINT PK_REFERENCE_FILTER_TYPE_ID PRIMARY KEY (REFERENCE_FILTER_TYPE_ID)
)
;



--
-- TABLE: CHAIN.REFERENCE_LOCATION
--

CREATE TABLE CHAIN.REFERENCE_LOCATION(
	REFERENCE_LOCATION_ID	NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION			  VARCHAR2(1000)	NOT NULL,
	CONSTRAINT PK_REFERENCE_LOCATION PRIMARY KEY (REFERENCE_LOCATION_ID)
)
;



--
-- TABLE: CHAIN.REFERENCE_UNIQUENESS
--

CREATE TABLE CHAIN.REFERENCE_UNIQUENESS(
	REFERENCE_UNIQUENESS_ID	NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION				VARCHAR2(1000)	NOT NULL,
	CONSTRAINT PK_REFERENCE_UNIQUENESS PRIMARY KEY (REFERENCE_UNIQUENESS_ID)
)
;


--
-- TABLE: CHAIN.REFERENCE_VALIDATION
--

CREATE TABLE CHAIN.REFERENCE_VALIDATION (
	REFERENCE_VALIDATION_ID 	NUMBER(10) NOT NULL,
	DESCRIPTION 				VARCHAR2(255) NOT NULL,
	VALIDATION_REGEX 			VARCHAR2(255) NULL,
	VALIDATION_TEXT 			VARCHAR2(255) NULL,
	CONSTRAINT PK_REFERENCE_VALIDATION PRIMARY KEY (REFERENCE_VALIDATION_ID)
)
;


--
-- TABLE: CHAIN.REGISTRATION_STATUS
--

CREATE TABLE CHAIN.REGISTRATION_STATUS(
	REGISTRATION_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION			   VARCHAR2(200),
	CONSTRAINT PK29 PRIMARY KEY (REGISTRATION_STATUS_ID)
)
;



--
-- TABLE: CHAIN.REPEAT_TYPE
--

CREATE TABLE CHAIN.REPEAT_TYPE(
	REPEAT_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION	   VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK256_1 PRIMARY KEY (REPEAT_TYPE_ID)
)
;



--
-- TABLE: CHAIN.RESET_PASSWORD
--

CREATE TABLE CHAIN.RESET_PASSWORD(
	GUID						  VARCHAR2(38)	 NOT NULL,
	APP_SID					   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	EXPIRATION_GRACE			  NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	EXPIRATION_DTM				DATE			 DEFAULT SYSDATE+(1/24) NOT NULL,
	SENT_DTM					  DATE			 DEFAULT SYSDATE NOT NULL,
	USER_SID					  NUMBER(10, 0)	NOT NULL,
	ACCEPT_INVITATION_ON_RESET	NUMBER(10, 0),
	CONSTRAINT PK114 PRIMARY KEY (GUID)
)
;

--
-- TABLE: CHAIN.REVIEW_ALERT
--

CREATE TABLE CHAIN.REVIEW_ALERT(
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	REVIEW_ALERT_ID			NUMBER(10, 0)	NOT NULL,
	FROM_COMPANY_SID		NUMBER(10, 0)	NOT NULL,
	FROM_USER_SID			NUMBER(10, 0)	NOT NULL,
	TO_COMPANY_SID			NUMBER(10, 0)	NOT NULL,
	TO_USER_SID				NUMBER(10, 0)	NOT NULL,
	SENT_DTM				TIMESTAMP(6),
	CONSTRAINT PK_REVIEW_ALERT PRIMARY KEY (APP_SID, REVIEW_ALERT_ID)
);


--
-- TABLE: CHAIN.SAVED_FILTER
--

CREATE TABLE CHAIN.SAVED_FILTER(
	APP_SID							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SAVED_FILTER_SID				NUMBER(10, 0) NOT NULL,
	SEARCH_TEXT						VARCHAR2(255),
	GROUP_KEY						VARCHAR2(255),
	COMPOUND_FILTER_ID				NUMBER(10, 0),
	CARD_GROUP_ID					NUMBER(10, 0) NOT NULL,
	PARENT_SID						NUMBER(10, 0) NOT NULL,
	NAME							VARCHAR2(255) NOT NULL,
	GROUP_BY_COMPOUND_FILTER_ID		NUMBER(10),
	REGION_COLUMN_ID				NUMBER(10),
	DATE_COLUMN_ID					NUMBER(10),
	CMS_REGION_COLUMN_SID			NUMBER(10),
	CMS_DATE_COLUMN_SID				NUMBER(10),
	CMS_ID_COLUMN_SID				NUMBER(10),
	LIST_PAGE_URL					VARCHAR2(255),
	EXCLUDE_FROM_REPORTS			NUMBER(1) DEFAULT 0 NOT NULL,
	COMPANY_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY'),
	DUAL_AXIS						NUMBER(1) DEFAULT 0 NOT NULL,
	RANKING_MODE					NUMBER(1,0) DEFAULT 0 NOT NULL,
	COLOUR_BY						VARCHAR2(255),
	COLOUR_RANGE_ID					NUMBER(10),
	ORDER_BY						VARCHAR2(255),
	ORDER_DIRECTION					VARCHAR2(4),
	RESULTS_PER_PAGE				NUMBER(10),
	MAP_COLOUR_BY					VARCHAR2(255),
	MAP_CLUSTER_BIAS				NUMBER(2),
	HIDE_EMPTY						NUMBER(1,0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_SAVED_FILTER PRIMARY KEY (APP_SID, SAVED_FILTER_SID),
	CONSTRAINT CHK_ONE_REGION_COLUMN CHECK (NOT(REGION_COLUMN_ID IS NOT NULL AND CMS_REGION_COLUMN_SID IS NOT NULL)),
	CONSTRAINT CHK_ONE_DATE_COLUMN CHECK (NOT(DATE_COLUMN_ID IS NOT NULL AND CMS_DATE_COLUMN_SID IS NOT NULL)),
	CONSTRAINT chk_cms_id_col CHECK ((card_group_id != 43 AND cms_id_column_sid IS NULL) OR (card_group_id = 43 AND cms_id_column_sid IS NOT NULL)),
	CONSTRAINT CHK_SVD_FILR_EXL_FRM_REPORTS CHECK (EXCLUDE_FROM_REPORTS IN (0,1)),
	CONSTRAINT CHK_DUAL_AXIS CHECK (DUAL_AXIS IN (0, 1)),
	CONSTRAINT CHK_RANKING_MODE CHECK (RANKING_MODE IN (0, 1, 2)),
	CONSTRAINT CHK_HIDE_EMPTY CHECK (HIDE_EMPTY IN (0, 1))
)
;

CREATE TABLE CHAIN.SAVED_FILTER_AGGREGATION_TYPE (
	APP_SID					NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SAVED_FILTER_SID		NUMBER(10, 0)	NOT NULL,
	POS						NUMBER(10, 0)	NOT NULL,
	AGGREGATION_TYPE		NUMBER(10, 0),
	CUSTOMER_AGGREGATE_TYPE_ID	NUMBER(10, 0),
	CONSTRAINT PK_SAVED_FIL_AGGREGATION_TYP PRIMARY KEY (APP_SID, SAVED_FILTER_SID, POS),
	CONSTRAINT CHK_SVD_FIL_AGG_TYPE
	CHECK ((AGGREGATION_TYPE IS NOT NULL AND CUSTOMER_AGGREGATE_TYPE_ID IS NULL)
	   OR (AGGREGATION_TYPE IS NULL AND CUSTOMER_AGGREGATE_TYPE_ID IS NOT NULL))
)
;

CREATE TABLE chain.saved_filter_column (
	app_sid							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	saved_filter_sid				NUMBER(10) NOT NULL,
	column_name						VARCHAR2(255) NOT NULL,
	pos								NUMBER(10) NOT NULL,
	width							NUMBER(10),
	label							VARCHAR2(1024),
	CONSTRAINT pk_saved_filter_column PRIMARY KEY (app_sid, saved_filter_sid, column_name)
);

CREATE TABLE CHAIN.SAVED_FILTER_REGION (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SAVED_FILTER_SID				NUMBER(10) NOT NULL,
	REGION_SID						NUMBER(10) NOT NULL,
	CONSTRAINT PK_SAVED_FILTER_REGION PRIMARY KEY (APP_SID, SAVED_FILTER_SID, REGION_SID)
)
;

CREATE TABLE CHAIN.SAVED_FILTER_ALERT (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SAVED_FILTER_SID				NUMBER(10) NOT NULL,
	DESCRIPTION						VARCHAR2(4000),
	USERS_CAN_SUBSCRIBE				NUMBER(1) DEFAULT 0 NOT NULL,
	CUSTOMER_ALERT_TYPE_ID			NUMBER(10) NOT NULL,
	EVERY_N_MINUTES					NUMBER(10),
	SCHEDULE_XML					SYS.XMLTYPE,
	NEXT_FIRE_TIME					DATE NOT NULL,
	LAST_FIRE_TIME					DATE,
	ALERTS_SENT_ON_LAST_RUN			NUMBER(10),
	CONSTRAINT PK_SAVED_FILTER_ALERT PRIMARY KEY (APP_SID, SAVED_FILTER_SID),
	CONSTRAINT CHK_USERS_CAN_SUBSCRIBE_1_0 CHECK (USERS_CAN_SUBSCRIBE IN (1, 0)),
	CONSTRAINT CHK_SVD_FLTR_ALRT_N_MIN_SCHD CHECK ((every_n_minutes IS NOT NULL AND schedule_xml IS NULL) OR (every_n_minutes IS NULL AND schedule_xml IS NOT NULL)),
	CONSTRAINT FK_SAVED_FLTR_ALRT_FLTR_SID FOREIGN KEY (APP_SID, SAVED_FILTER_SID)
		REFERENCES CHAIN.SAVED_FILTER (APP_SID, SAVED_FILTER_SID)
);

CREATE TABLE CHAIN.SAVED_FILTER_ALERT_SUBSCRIPTN (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SAVED_FILTER_SID				NUMBER(10) NOT NULL,
	USER_SID						NUMBER(10) NOT NULL,
	REGION_SID						NUMBER(10),
	HAS_HAD_INITIAL_SET				NUMBER(1) DEFAULT 0 NOT NULL,
	ERROR_MESSAGE					VARCHAR2(4000),
	CONSTRAINT UK_SAVED_FLTR_ALRT_SUBSCRIPTN UNIQUE (APP_SID, SAVED_FILTER_SID, USER_SID, REGION_SID),
	CONSTRAINT CHK_SV_FL_ALT_SUB_INIT_SET_1_0 CHECK (HAS_HAD_INITIAL_SET IN (1, 0)),
	CONSTRAINT FK_SV_FL_ALRT_SUBS_SV_FL_ALRT FOREIGN KEY (APP_SID, SAVED_FILTER_SID)
		REFERENCES CHAIN.SAVED_FILTER_ALERT (APP_SID, SAVED_FILTER_SID)
);

CREATE TABLE CHAIN.SAVED_FILTER_SENT_ALERT (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SAVED_FILTER_SID				NUMBER(10) NOT NULL,
	USER_SID						NUMBER(10) NOT NULL,
	OBJECT_ID						NUMBER(10) NOT NULL,
	SENT_DTM						DATE NOT NULL,
	CONSTRAINT PK_SAVED_FILTER_SENT_ALERT PRIMARY KEY (APP_SID, SAVED_FILTER_SID, OBJECT_ID, USER_SID),
	CONSTRAINT FK_SV_FLTR_SENT_ALRT_FLTR_SID FOREIGN KEY (APP_SID, SAVED_FILTER_SID)
		REFERENCES CHAIN.SAVED_FILTER (APP_SID, SAVED_FILTER_SID)
);

CREATE TABLE CHAIN.SAVED_FILTER_ALERT_PARAM (
	CARD_GROUP_ID					NUMBER(10) NOT NULL,
	FIELD_NAME						VARCHAR(100) NOT NULL,
	DESCRIPTION						VARCHAR(200) NOT NULL,
	TRANSLATABLE					NUMBER(1) DEFAULT 0 NOT NULL,
	LINK_TEXT						VARCHAR(200),
	CONSTRAINT PK_SAVED_FILTER_ALERT_PARAM PRIMARY KEY (CARD_GROUP_ID, FIELD_NAME),
	CONSTRAINT CHK_SVD_FLTR_ALRT_PARAM_TR_0_1 CHECK (TRANSLATABLE IN (0,1)),
	CONSTRAINT FK_SVD_FLTR_ALRT_PARAM_CRD_GRP FOREIGN KEY (CARD_GROUP_ID)
		REFERENCES CHAIN.CARD_GROUP(CARD_GROUP_ID)
);

--
-- TABLE: CHAIN.SCHEDULED_ALERT
--

CREATE TABLE CHAIN.SCHEDULED_ALERT(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SCHEDULED_ALERT_ID	 NUMBER(10, 0)	NOT NULL,
	USER_SID			   NUMBER(10, 0)	NOT NULL,
	ALERT_ENTRY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	SENT_DTM			   TIMESTAMP(6)	 DEFAULT NULL,
	CONSTRAINT PK147 PRIMARY KEY (APP_SID, SCHEDULED_ALERT_ID, USER_SID, ALERT_ENTRY_TYPE_ID)
)
;

--
-- TABLE: CHAIN.SECTOR
--

CREATE TABLE CHAIN.SECTOR(
	APP_SID			 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SECTOR_ID		   NUMBER(10, 0)	NOT NULL,
	PARENT_SECTOR_ID	NUMBER(10, 0),
	DESCRIPTION		 VARCHAR2(255),
	ACTIVE			  NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	IS_OTHER			NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_SECTOR_ACTIVE_IN_0_1 CHECK (ACTIVE IN (0,1)),
	CHECK (IS_OTHER IN (0, 1)),
	CONSTRAINT PK_SECTOR PRIMARY KEY (APP_SID, SECTOR_ID)
)
;



--
-- TABLE: CHAIN.SHARE_STATUS
--

CREATE TABLE CHAIN.SHARE_STATUS(
	SHARE_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION		VARCHAR2(200)	NOT NULL,
	CONSTRAINT PK173 PRIMARY KEY (SHARE_STATUS_ID)
)
;	

--
-- TABLE: CHAIN.SUPPLIER_AUDIT
--

CREATE TABLE CHAIN.SUPPLIER_AUDIT(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AUDIT_SID				 NUMBER(10, 0)	NOT NULL,
	AUDITOR_COMPANY_SID	   NUMBER(10, 0)	NOT NULL,
	SUPPLIER_COMPANY_SID	  NUMBER(10, 0)	NOT NULL,
	CREATED_BY_COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_SUPPLIER_AUDIT PRIMARY KEY (APP_SID, AUDIT_SID)
)
;



--
-- TABLE: CHAIN.SUPPLIER_FOLLOWER
--

CREATE TABLE CHAIN.SUPPLIER_FOLLOWER(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PURCHASER_COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	SUPPLIER_COMPANY_SID	 NUMBER(10, 0)	NOT NULL,
	USER_SID				 NUMBER(10, 0)	NOT NULL,
	IS_PRIMARY			   NUMBER(1, 0),
	CHECK (IS_PRIMARY IS NULL OR IS_PRIMARY = 1),
	CONSTRAINT PK307 PRIMARY KEY (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID, USER_SID)
)
;



--
-- TABLE: CHAIN.SUPPLIER_RELATIONSHIP
--

CREATE TABLE CHAIN.SUPPLIER_RELATIONSHIP(
	APP_SID					   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PURCHASER_COMPANY_SID		 NUMBER(10, 0)	NOT NULL,
	SUPPLIER_COMPANY_SID		  NUMBER(10, 0)	NOT NULL,
	ACTIVE						NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	DELETED					   NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	VIRTUALLY_ACTIVE_UNTIL_DTM	TIMESTAMP(6),
	VIRTUALLY_ACTIVE_KEY		  NUMBER(10, 0),
	SUPP_REL_CODE				 VARCHAR2(100),
	FLOW_ITEM_ID				  NUMBER(10, 0),
	IS_PRIMARY					NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	CONSTRAINT PK17 PRIMARY KEY (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID),
	CONSTRAINT CHK_SUPP_REL_PRIMARY CHECK (IS_PRIMARY IN (1, 0))
)
;

CREATE UNIQUE INDEX CHAIN.UI_SUPPL_REL_PURCH_FLOW_ITEM ON CHAIN.SUPPLIER_RELATIONSHIP
	(APP_SID, PURCHASER_COMPANY_SID, NVL2(FLOW_ITEM_ID, FLOW_ITEM_ID, SUPPLIER_COMPANY_SID));

CREATE TABLE CHAIN.SUPPLIER_RELATIONSHIP_SOURCE (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PURCHASER_COMPANY_SID			NUMBER(10)		NOT NULL,
	SUPPLIER_COMPANY_SID			NUMBER(10)		NOT NULL,
	SOURCE_TYPE						NUMBER(2)		NOT NULL,
	OBJECT_ID						NUMBER(10)		NULL,
	CONSTRAINT UK_SUPPLIER_RELATIONSHIP_SRC UNIQUE (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID, SOURCE_TYPE, OBJECT_ID),
	CONSTRAINT CHK_SUPP_REL_SRC_TYPE CHECK (SOURCE_TYPE IN (0, 1, 2, 3)),
	CONSTRAINT FK_SUPP_REL_SRC_SUPP_REL FOREIGN KEY (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.SUPPLIER_RELATIONSHIP (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID) ON DELETE CASCADE
);

CREATE TABLE CHAIN.SUPPLIER_RELATIONSHIP_SCORE(
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	SUPPLIER_RELATIONSHIP_SCORE_ID	NUMBER(10, 0)	NOT NULL,
	PURCHASER_COMPANY_SID			NUMBER(10, 0)	NOT NULL,
	SUPPLIER_COMPANY_SID			NUMBER(10, 0)	NOT NULL,
	SCORE_THRESHOLD_ID				NUMBER(10, 0),
	SET_DTM							DATE			DEFAULT SYSDATE NOT NULL,
	SCORE							NUMBER(15, 5),
	SCORE_TYPE_ID					NUMBER(10, 0)	NOT NULL,
	CHANGED_BY_USER_SID 			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'SID'),
	COMMENT_TEXT           			CLOB,
	VALID_UNTIL_DTM        			DATE,
    SCORE_SOURCE_TYPE      			NUMBER(10),
    SCORE_SOURCE_ID        			NUMBER(10),
	IS_OVERRIDE						NUMBER(1)		DEFAULT 0 NOT NULL,
	CONSTRAINT PK_SUPPLIER_RELATIONHSIP_SCORE PRIMARY KEY (APP_SID, SUPPLIER_RELATIONSHIP_SCORE_ID),
	CONSTRAINT UK_SUPPLIER_RELATIONSHIP_SCORE UNIQUE (PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID, SCORE_TYPE_ID, SET_DTM, IS_OVERRIDE),
	CONSTRAINT CHK_SUP_REL_SCORE_SET_DTM CHECK (SET_DTM = TRUNC(SET_DTM)),
	CONSTRAINT CHK_SUP_REL_SCORE_VLD_DTM CHECK (VALID_UNTIL_DTM = TRUNC(VALID_UNTIL_DTM)),
	CONSTRAINT CHK_SUP_REL_DTM_VALID CHECK ((VALID_UNTIL_DTM IS NULL) OR (SET_DTM <= VALID_UNTIL_DTM)),
	CONSTRAINT CHK_IS_OVERRIDE CHECK (IS_OVERRIDE IN (0,1))
);

ALTER TABLE CHAIN.SUPPLIER_RELATIONSHIP_SCORE ADD CONSTRAINT FK_SUPPLIER_REL_SCORE_REL
	FOREIGN KEY (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.SUPPLIER_RELATIONSHIP (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID);

-- 
-- TABLE: CHAIN.PRODUCT_SUPPLIER 
--

CREATE TABLE CHAIN.PRODUCT_SUPPLIER (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_ID					NUMBER(10) NOT NULL,
	PRODUCT_SUPPLIER_ID			NUMBER(10) NOT NULL,
	PURCHASER_COMPANY_SID		NUMBER(10) NOT NULL,
	SUPPLIER_COMPANY_SID		NUMBER(10) NOT NULL,
	START_DTM					DATE NOT NULL,
	END_DTM						DATE,
	IS_ACTIVE					NUMBER(1) DEFAULT 0 NOT NULL,
	PRODUCT_SUPPLIER_REF		VARCHAR2(1024),
	CONSTRAINT PK_SUPPLIER_PRODUCT PRIMARY KEY (APP_SID, PRODUCT_SUPPLIER_ID),
	CONSTRAINT UK_SUPPLIER_PRODUCT UNIQUE (PRODUCT_ID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
);

ALTER TABLE CHAIN.PRODUCT_SUPPLIER ADD CONSTRAINT FK_PRODUCT_SUPPLIER_REL
	FOREIGN KEY (APP_SID, SUPPLIER_COMPANY_SID, PURCHASER_COMPANY_SID) 
	REFERENCES CHAIN.SUPPLIER_RELATIONSHIP(APP_SID, SUPPLIER_COMPANY_SID, PURCHASER_COMPANY_SID);
	
ALTER TABLE CHAIN.PRODUCT_SUPPLIER ADD CONSTRAINT FK_PRODUCT_SUPPLIER_PRODUCT
	FOREIGN KEY (APP_SID, PRODUCT_ID)
	REFERENCES CHAIN.COMPANY_PRODUCT (APP_SID, PRODUCT_ID);
	
CREATE UNIQUE INDEX CHAIN.IX_PRODUCT_SUPPLIER_REF ON CHAIN.PRODUCT_SUPPLIER(APP_SID, PRODUCT_ID, LOWER(NVL(PRODUCT_SUPPLIER_REF, 'NOSUPPLIERREF_' || PRODUCT_SUPPLIER_ID)));

-- 
-- TABLE: CHAIN.CHAIN.PRODUCT_SUPPLIER_METRIC_VAL 
--

CREATE TABLE CHAIN.PRODUCT_SUPPLIER_METRIC_VAL (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	SUPPLIER_PRODUCT_METRIC_VAL_ID  NUMBER(10) NOT NULL,
	PRODUCT_SUPPLIER_ID			NUMBER(10) NOT NULL,
	IND_SID						NUMBER(10) NOT NULL,
	START_DTM					DATE NOT NULL,
	END_DTM						DATE NOT NULL,
	VAL_NUMBER					NUMBER(24, 10) NOT NULL,
	ENTERED_AS_VAL_NUMBER		NUMBER(24, 10),
	MEASURE_CONVERSION_ID		NUMBER(10),
	ENTERED_DTM					DATE,
	ENTERED_BY_SID				NUMBER(10) NOT NULL,
	NOTE						VARCHAR2(4000),
	SOURCE_TYPE					NUMBER(10, 0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_PRODUCT_SUPPLIER_METRIC_VAL PRIMARY KEY (APP_SID, SUPPLIER_PRODUCT_METRIC_VAL_ID),
	CONSTRAINT UK_PRODUCT_SUPPLIER_METRIC_VAL UNIQUE (APP_SID, PRODUCT_SUPPLIER_ID, IND_SID, START_DTM),
	CONSTRAINT CK_SUPPLIED_PRODCT_MTRC_VL_DTM CHECK (START_DTM < END_DTM)
)
;

ALTER TABLE CHAIN.PRODUCT_SUPPLIER_METRIC_VAL ADD CONSTRAINT FK_PRODUCT_SUPPLR_MTRC_PRDUCT
	FOREIGN KEY (APP_SID, PRODUCT_SUPPLIER_ID)
	REFERENCES CHAIN.PRODUCT_SUPPLIER (APP_SID, PRODUCT_SUPPLIER_ID);
	
CREATE TABLE CHAIN.COMPANY_PRODUCT_TAG (
	APP_SID								NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_ID							NUMBER(10, 0)	NOT NULL,
	TAG_GROUP_ID						NUMBER(10, 0)	NOT NULL,
	TAG_ID								NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_COMPANY_PRODUCT_TAG PRIMARY KEY (APP_SID, PRODUCT_ID, TAG_GROUP_ID, TAG_ID),
	CONSTRAINT FK_COMPANY_PRODUCT_TAG_PROD FOREIGN KEY (APP_SID, PRODUCT_ID) REFERENCES CHAIN.COMPANY_PRODUCT (APP_SID, PRODUCT_ID)
);

CREATE TABLE CHAIN.PRODUCT_SUPPLIER_TAG (
	APP_SID								NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_SUPPLIER_ID					NUMBER(10, 0)	NOT NULL,
	TAG_GROUP_ID						NUMBER(10, 0)	NOT NULL,
	TAG_ID								NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_PRODUCT_SUPPLIER_TAG PRIMARY KEY (APP_SID, PRODUCT_SUPPLIER_ID, TAG_GROUP_ID, TAG_ID),
	CONSTRAINT FK_PRODUCT_SUPPLIER_TAG_PRSP FOREIGN KEY (APP_SID, PRODUCT_SUPPLIER_ID) REFERENCES CHAIN.PRODUCT_SUPPLIER (APP_SID, PRODUCT_SUPPLIER_ID)
);

--
-- TABLE: CHAIN.TASK
--

CREATE TABLE CHAIN.TASK(
	APP_SID				 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_ID				 NUMBER(10, 0)	NOT NULL,
	TASK_TYPE_ID			NUMBER(10, 0)	NOT NULL,
	OWNER_COMPANY_SID	   NUMBER(10, 0)	NOT NULL,
	SUPPLIER_COMPANY_SID	NUMBER(10, 0)	NOT NULL,
	TASK_STATUS_ID		  NUMBER(10, 0)	NOT NULL,
	LAST_TASK_STATUS_ID	 NUMBER(10, 0),
	DUE_DATE				DATE,
	NEXT_REVIEW_DATE		DATE,
	LAST_UPDATED_DTM		DATE,
	LAST_UPDATED_BY_SID	 NUMBER(10, 0),
	CHANGE_GROUP_ID		 NUMBER(10, 0),
	SKIPPED				 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_TASK_STATUS_NOT_VIRTUAL CHECK (TASK_STATUS_ID >= 0),
	CONSTRAINT CHK_LAST_STATUS_NOT_VIRTUAL CHECK (LAST_TASK_STATUS_ID >= 0 OR LAST_TASK_STATUS_ID IS NULL),
	CONSTRAINT PK63 PRIMARY KEY (APP_SID, TASK_ID)
)
;



--
-- TABLE: CHAIN.TASK_ACTION
--

CREATE TABLE CHAIN.TASK_ACTION(
	TASK_ACTION_ID	NUMBER(10, 0)	 NOT NULL,
	DESCRIPTION	   VARCHAR2(1000)	NOT NULL,
	CONSTRAINT PK328 PRIMARY KEY (TASK_ACTION_ID)
)
;



--
-- TABLE: CHAIN.TASK_ACTION_LOOKUP
--

CREATE TABLE CHAIN.TASK_ACTION_LOOKUP(
	TASK_ACTION_ID		 NUMBER(10, 0)	NOT NULL,
	FROM_TASK_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	TO_TASK_STATUS_ID	  NUMBER(10, 0)	NOT NULL
)
;



--
-- TABLE: CHAIN.TASK_ACTION_TRIGGER
--

CREATE TABLE CHAIN.TASK_ACTION_TRIGGER(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_TYPE_ID			  NUMBER(10, 0)	NOT NULL,
	ON_TASK_ACTION_ID		 NUMBER(10, 0)	NOT NULL,
	TRIGGER_TASK_ACTION_ID	NUMBER(10, 0)	NOT NULL,
	TRIGGER_TASK_NAME		 VARCHAR2(30)	 NOT NULL,
	POSITION				  NUMBER(10, 0)	NOT NULL,
	CONSTRAINT CHK_TAT_TRIGGER_NAME_IS_LOWER CHECK (TRIGGER_TASK_NAME = LOWER(TRIM(TRIGGER_TASK_NAME)))
)
;



--
-- TABLE: CHAIN.TASK_ACTION_TRIGGER_TRANSITION
--

CREATE TABLE CHAIN.TASK_ACTION_TRIGGER_TRANSITION(
	TASK_ACTION_ID		 NUMBER(10, 0)	NOT NULL,
	FROM_TASK_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	TO_TASK_STATUS_ID	  NUMBER(10, 0)	NOT NULL
)
;



--
-- TABLE: CHAIN.TASK_ENTRY
--

CREATE TABLE CHAIN.TASK_ENTRY(
	APP_SID				 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_ENTRY_ID		   NUMBER(10, 0)	NOT NULL,
	TASK_ENTRY_TYPE_ID	  NUMBER(10, 0)	NOT NULL,
	NAME					VARCHAR2(30),
	LAST_MODIFIED_DTM	   TIMESTAMP(6)	 DEFAULT SYSDATE NOT NULL,
	TASK_ID				 NUMBER(10, 0)	NOT NULL,
	LAST_MODIFIED_BY_SID	NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	CONSTRAINT CHK_TASK_ENTRY_NAME_IS_LOWER CHECK (NAME IS NULL OR NAME = LOWER(TRIM(NAME))),
	CONSTRAINT PK67 PRIMARY KEY (APP_SID, TASK_ENTRY_ID)
)
;



--
-- TABLE: CHAIN.TASK_ENTRY_DATE
--

CREATE TABLE CHAIN.TASK_ENTRY_DATE(
	APP_SID		  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_ENTRY_ID	NUMBER(10, 0)	NOT NULL,
	DTM			  TIMESTAMP(6),
	CONSTRAINT PK332 PRIMARY KEY (APP_SID, TASK_ENTRY_ID)
)
;



--
-- TABLE: CHAIN.TASK_ENTRY_FILE
--

CREATE TABLE CHAIN.TASK_ENTRY_FILE(
	APP_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_ENTRY_ID	  NUMBER(10, 0)	NOT NULL,
	FILE_UPLOAD_SID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK325 PRIMARY KEY (APP_SID, TASK_ENTRY_ID, FILE_UPLOAD_SID)
)
;



--
-- TABLE: CHAIN.TASK_ENTRY_NOTE
--

CREATE TABLE CHAIN.TASK_ENTRY_NOTE(
	APP_SID		  NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_ENTRY_ID	NUMBER(10, 0)	 NOT NULL,
	TEXT			 VARCHAR2(4000),
	CONSTRAINT PK333 PRIMARY KEY (APP_SID, TASK_ENTRY_ID)
)
;



--
-- TABLE: CHAIN.TASK_ENTRY_TYPE
--

CREATE TABLE CHAIN.TASK_ENTRY_TYPE(
	TASK_ENTRY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION		   VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK69 PRIMARY KEY (TASK_ENTRY_TYPE_ID)
)
;



--
-- TABLE: CHAIN.TASK_INVITATION_QNR_TYPE
--

CREATE TABLE CHAIN.TASK_INVITATION_QNR_TYPE(
	APP_SID				  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_ID				  NUMBER(10, 0)	NOT NULL,
	INVITATION_ID			NUMBER(10, 0)	NOT NULL,
	QUESTIONNAIRE_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK346 PRIMARY KEY (APP_SID, TASK_ID)
)
;



--
-- TABLE: CHAIN.TASK_SCHEME
--

CREATE TABLE CHAIN.TASK_SCHEME(
	APP_SID		   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_SCHEME_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION	   VARCHAR2(255)	NOT NULL,
	DB_CLASS		  VARCHAR2(64),
	CONSTRAINT PK88_1 PRIMARY KEY (APP_SID, TASK_SCHEME_ID)
)
;



--
-- TABLE: CHAIN.TASK_STATUS
--

CREATE TABLE CHAIN.TASK_STATUS(
	TASK_STATUS_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION	   VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK65_1 PRIMARY KEY (TASK_STATUS_ID)
)
;



--
-- TABLE: CHAIN.TASK_TYPE
--

CREATE TABLE CHAIN.TASK_TYPE(
	APP_SID				   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TASK_TYPE_ID			  NUMBER(10, 0)	NOT NULL,
	TASK_SCHEME_ID			NUMBER(10, 0)	NOT NULL,
	NAME					  VARCHAR2(30)	 NOT NULL,
	PARENT_TASK_TYPE_ID	   NUMBER(10, 0),
	DESCRIPTION			   VARCHAR2(255)	NOT NULL,
	DEFAULT_TASK_STATUS_ID	NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	DB_CLASS				  VARCHAR2(64),
	DUE_IN_DAYS			   NUMBER(10, 0),
	MANDATORY				 NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	DUE_DATE_EDITABLE		 NUMBER(1, 0)	 DEFAULT 1 NOT NULL,
	REVIEW_EVERY_N_DAYS	   NUMBER(10, 0),
	POSITION				  NUMBER(10, 0)	DEFAULT 0 NOT NULL,
	CARD_ID				   NUMBER(10, 0),
	CONSTRAINT CHK_TASK_TYPE_NAME_IS_LOWER CHECK (NAME = LOWER(TRIM(NAME))),
	CONSTRAINT PK88 PRIMARY KEY (APP_SID, TASK_TYPE_ID)
)
;



--
-- TABLE: CHAIN.TEMP_MESSAGE_MAP
--

CREATE TABLE CHAIN.TEMP_MESSAGE_MAP(
	MESSAGE_DEFINITION_ID	NUMBER(10, 0)	 NOT NULL,
	MESSAGE_TEMPLATE		 VARCHAR2(4000)	NOT NULL,
	ACTION_TYPE_ID		   NUMBER(10, 0),
	EVENT_TYPE_ID			NUMBER(10, 0),
	MAPPING_DONE			 NUMBER(10, 0),
	CONSTRAINT PK_TMP_MSG_MAP PRIMARY KEY (MESSAGE_DEFINITION_ID)
)
;



--
-- TABLE: CHAIN.TERTIARY_RELATIONSHIPS
--

CREATE TABLE CHAIN.TERTIARY_RELATIONSHIPS(
	APP_SID					  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRIMARY_COMPANY_TYPE_ID	  NUMBER(10, 0)	NOT NULL,
	SECONDARY_COMPANY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	TERTIARY_COMPANY_TYPE_ID	 NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_TERTIARY_RELATIONSHIPS PRIMARY KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID, TERTIARY_COMPANY_TYPE_ID)
)
;



--
-- TABLE: CHAIN.UCD_LOGON
--

CREATE TABLE CHAIN.UCD_LOGON(
	APP_SID				 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	UCD_ACT_ID			  CHAR(36)		 NOT NULL,
	PREVIOUS_USER_SID	   NUMBER(10, 0)	NOT NULL,
	PREVIOUS_ACT_ID		 CHAR(36)		 NOT NULL,
	PREVIOUS_COMPANY_SID	NUMBER(10, 0),
	CONSTRAINT PK319 PRIMARY KEY (APP_SID, UCD_ACT_ID)
)
;



--
-- TABLE: CHAIN.UNINVITED_SUPPLIER
--

CREATE TABLE CHAIN.UNINVITED_SUPPLIER(
	APP_SID				   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID			   NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') NOT NULL,
	UNINVITED_SUPPLIER_SID	NUMBER(10, 0)	 NOT NULL,
	CREATED_AS_COMPANY_SID	NUMBER(10, 0),
	NAME					  VARCHAR2(1000)	NOT NULL,
	COUNTRY_CODE			  VARCHAR2(2)	   NOT NULL,
	SUPP_REL_CODE			 VARCHAR2(100),
	CONSTRAINT CHK_UNINVITED_SUPP_CACS_SRC CHECK (((created_as_company_sid IS NULL) OR (supp_rel_code IS NULL))),
	CONSTRAINT PK_UNINVITED_SUPPLIER PRIMARY KEY (APP_SID, COMPANY_SID, UNINVITED_SUPPLIER_SID)
)
;



--
-- TABLE: CHAIN.URL_OVERRIDES
--

CREATE TABLE CHAIN.URL_OVERRIDES(
	APP_SID		  NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	HOST			 VARCHAR2(1000)	NOT NULL,
	KEY			  VARCHAR2(100)	 NOT NULL,
	SITE_NAME		VARCHAR2(200),
	SUPPORT_EMAIL	VARCHAR2(255)
)
;



--
-- TABLE: CHAIN.USER_ALERT_ENTRY_TYPE
--

CREATE TABLE CHAIN.USER_ALERT_ENTRY_TYPE(
	ALERT_ENTRY_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	USER_SID			   NUMBER(10, 0)	NOT NULL,
	SCHEDULE_XML		   CLOB			 DEFAULT NULL,
	ENABLED				NUMBER(1, 0)	 DEFAULT NULL,
	CONSTRAINT PK540 PRIMARY KEY (ALERT_ENTRY_TYPE_ID, APP_SID, USER_SID)
)
;



--
-- TABLE: CHAIN.USER_MESSAGE_LOG
--

CREATE TABLE CHAIN.USER_MESSAGE_LOG(
	APP_SID	   NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	USER_SID	  NUMBER(10, 0)	NOT NULL,
	MESSAGE_ID	NUMBER(10, 0)	NOT NULL,
	VIEWED_DTM	TIMESTAMP(6),
	CONSTRAINT PK252 PRIMARY KEY (APP_SID, USER_SID, MESSAGE_ID)
)
;



--
-- TABLE: CHAIN.VISIBILITY
--

CREATE TABLE CHAIN.VISIBILITY(
	VISIBILITY_ID	NUMBER(10, 0)	NOT NULL,
	DESCRIPTION	  VARCHAR2(100),
	CONSTRAINT PK26 PRIMARY KEY (VISIBILITY_ID)
)
;



--
-- TABLE: CHAIN.WORKSHEET_FILE_UPLOAD
--

CREATE TABLE CHAIN.WORKSHEET_FILE_UPLOAD(
	APP_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	WORKSHEET_ID	   NUMBER(10, 0)	NOT NULL,
	FILE_UPLOAD_SID	NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_WS_FU PRIMARY KEY (APP_SID, WORKSHEET_ID, FILE_UPLOAD_SID)
)
;

CREATE UNIQUE INDEX CHAIN.IX_COMPONENT_DELETED ON CHAIN.COMPONENT(APP_SID, DELETED, COMPONENT_ID);

--
-- TABLE: CHAIN.ACTIVITY_LOG_FILE
--

CREATE TABLE CHAIN.ACTIVITY_LOG_FILE(
	APP_SID				 NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ACTIVITY_LOG_FILE_ID	NUMBER(10, 0)	NOT NULL,
	ACTIVITY_LOG_ID		 NUMBER(10, 0)	NOT NULL,
	FILENAME				VARCHAR2(255)	NOT NULL,
	MIME_TYPE			   VARCHAR2(256)	NOT NULL,
	DATA					BLOB			 NOT NULL,
	SHA1					VARCHAR2(40)	 NOT NULL,
	UPLOADED_DTM			DATE			 DEFAULT SYSDATE NOT NULL,
	CONSTRAINT PK_ACTIVITY_LOG_FILE PRIMARY KEY (APP_SID, ACTIVITY_LOG_FILE_ID)
)
;

--
-- TABLE: OUTCOME_TYPE
--

CREATE TABLE CHAIN.OUTCOME_TYPE(
	APP_SID			NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	OUTCOME_TYPE_ID	NUMBER(10, 0)	NOT NULL,
	LABEL			  VARCHAR2(255)	NOT NULL,
	IS_SUCCESS		 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	IS_FAILURE		 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	IS_DEFERRED		NUMBER(1, 0)	 DEFAULT 0,
	REQUIRE_REASON	 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	LOOKUP_KEY		 VARCHAR2(255),
	CONSTRAINT PK_OUTCOME_TYPE PRIMARY KEY (APP_SID, OUTCOME_TYPE_ID)
)
;

CREATE TABLE CHAIN.PRODUCT_TYPE (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_TYPE_ID				NUMBER(10, 0)   NOT NULL,
	PARENT_PRODUCT_TYPE_ID	  NUMBER(10, 0),
	LABEL						VARCHAR2(4000) NOT NULL,
	LOOKUP_KEY					VARCHAR2(255),
	NODE_TYPE					NUMBER(10, 0) 	DEFAULT 0 NOT NULL,
	ACTIVE						NUMBER(1, 0) 	DEFAULT 1 NOT NULL,
	CONSTRAINT PK_PRODUCT_TYPE PRIMARY KEY (APP_SID, PRODUCT_TYPE_ID),
	CONSTRAINT UK_PRODUCT_TYPE UNIQUE (APP_SID, PARENT_PRODUCT_TYPE_ID, LABEL),
	CONSTRAINT FK_PRODUCT_TYPE_PARENT FOREIGN KEY (APP_SID, PARENT_PRODUCT_TYPE_ID) REFERENCES CHAIN.PRODUCT_TYPE (APP_SID, PRODUCT_TYPE_ID),
	CONSTRAINT FK_PRODUCT_TYPE_APP FOREIGN KEY (APP_SID) REFERENCES CHAIN.CUSTOMER_OPTIONS (APP_SID),
	CONSTRAINT CHK_NODE_TYPE CHECK (NODE_TYPE >= 0 AND NODE_TYPE <= 1),
	CONSTRAINT CHK_ACTIVE CHECK (ACTIVE IN (0,1))
)
;

CREATE TABLE CHAIN.PRODUCT_TYPE_TR(
	APP_SID						 NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	PRODUCT_TYPE_ID				 NUMBER(10, 0)	 NOT NULL,
	LANG							VARCHAR2(10)	  NOT NULL,
	DESCRIPTION					 VARCHAR2(1023),
	LAST_CHANGED_DTM_DESCRIPTION	DATE,
	CONSTRAINT PK_PRODUCT_TYPE_TR_DESCRIPTION PRIMARY KEY (APP_SID, PRODUCT_TYPE_ID, LANG),
	CONSTRAINT FK_PRODUCT_TYPE_IS FOREIGN KEY
		(APP_SID, PRODUCT_TYPE_ID) REFERENCES CHAIN.PRODUCT_TYPE (APP_SID, PRODUCT_TYPE_ID)
		ON DELETE CASCADE
)
;

CREATE TABLE CHAIN.COMPANY_PRODUCT_TYPE (
	APP_SID						NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID					NUMBER(10, 0)   NOT NULL,
	PRODUCT_TYPE_ID				NUMBER(10, 0)   NOT NULL,
	CONSTRAINT PK_COMPANY_PRODUCT_TYPE PRIMARY KEY (APP_SID, COMPANY_SID, PRODUCT_TYPE_ID),
	CONSTRAINT FK_COMPANY_PRODUCT_TYP_COMPANY FOREIGN KEY (APP_SID, COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID),
	CONSTRAINT FK_COMPANY_PRD_TYP_PRD_TYP FOREIGN KEY (APP_SID, PRODUCT_TYPE_ID) REFERENCES CHAIN.PRODUCT_TYPE (APP_SID, PRODUCT_TYPE_ID)
)
;

CREATE TABLE CHAIN.PRODUCT_TYPE_TAG (
	APP_SID						NUMBER(10, 0)   DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_TYPE_ID				NUMBER(10, 0)   NOT NULL,
	TAG_ID						NUMBER(10, 0)   NOT NULL,
	CONSTRAINT PK_PRODUCT_TYPE_TAG PRIMARY KEY (APP_SID, PRODUCT_TYPE_ID, TAG_ID),
	CONSTRAINT FK_PRODUCT_TYP_TAG_PRODUCT_TYP FOREIGN KEY (APP_SID, PRODUCT_TYPE_ID) REFERENCES CHAIN.PRODUCT_TYPE (APP_SID, PRODUCT_TYPE_ID)
)
;


CREATE UNIQUE INDEX CHAIN.UX_CARD_INIT_PARAM ON CHAIN.CARD_INIT_PARAM(APP_SID, CARD_ID, KEY, CASE WHEN PARAM_TYPE_ID = 0 /* GLOBAL */ THEN 1 ELSE CARD_GROUP_ID END);

--
-- INDEX: CHAIN.UK_BU_IS_PRIMARY
--

CREATE UNIQUE INDEX CHAIN.UK_BU_IS_PRIMARY ON CHAIN.BUSINESS_UNIT_MEMBER(
	CASE WHEN IS_PRIMARY_BU=1 THEN APP_SID END,
	CASE WHEN IS_PRIMARY_BU=1 THEN USER_SID END
)
;
--
-- INDEX: CHAIN.UK_BU_SUP_IS_PRIMARY
--

CREATE UNIQUE INDEX CHAIN.UK_BU_SUP_IS_PRIMARY ON CHAIN.BUSINESS_UNIT_SUPPLIER(
	CASE WHEN IS_PRIMARY_BU=1 THEN APP_SID END,
	CASE WHEN IS_PRIMARY_BU=1 THEN SUPPLIER_COMPANY_SID END
)
;
--
-- INDEX: CHAIN.IDX_LOWER_JS_CLASS_TYPE
--

CREATE UNIQUE INDEX CHAIN.IDX_LOWER_JS_CLASS_TYPE ON CHAIN.CARD(LOWER(JS_CLASS_TYPE))
;
--
-- INDEX: CHAIN.UNIQUE_GROUP_TYPE_NAME
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_GROUP_TYPE_NAME ON CHAIN.COMPANY_GROUP_TYPE(UPPER(TRIM(NAME)))
;
--
-- INDEX: CHAIN.UC_DEFAULT_COMPANY_TYPE
--

CREATE UNIQUE INDEX CHAIN.UC_DEFAULT_COMPANY_TYPE ON CHAIN.COMPANY_TYPE(APP_SID, CASE WHEN IS_DEFAULT = 1 THEN 1 ELSE COMPANY_TYPE_ID + 10 END)
;
--
-- INDEX: CHAIN.UK_COMPANY_TYPE_LOOKUP_KEY
--

CREATE UNIQUE INDEX CHAIN.UK_COMPANY_TYPE_LOOKUP_KEY ON CHAIN.COMPANY_TYPE(APP_SID, LOOKUP_KEY)
;
--
-- INDEX: CHAIN.UK_CTC_UNIQUE_PERMISSION_SET
--

CREATE UNIQUE INDEX CHAIN.UK_CTC_UNIQUE_PERMISSION_SET
	ON CHAIN.COMPANY_TYPE_CAPABILITY(APP_SID, PRIMARY_COMPANY_TYPE_ID, NVL2(PRIMARY_COMPANY_GROUP_TYPE_ID, PRIMARY_COMPANY_GROUP_TYPE_ID || 'GR', PRIMARY_COMPANY_TYPE_ROLE_SID || 'RL'), CAPABILITY_ID,
	NVL2(SECONDARY_COMPANY_TYPE_ID,
		NVL2(TERTIARY_COMPANY_TYPE_ID, 'T' || TERTIARY_COMPANY_TYPE_ID || 'R' || SECONDARY_COMPANY_TYPE_ID, 'R' || SECONDARY_COMPANY_TYPE_ID),
		'C' || PRIMARY_COMPANY_TYPE_ID))
;

--
-- INDEX: CHAIN.IX_CMP_FIL_CRTD_BY_USR_SID
--

CREATE INDEX CHAIN.IX_CMP_FIL_CRTD_BY_USR_SID ON CHAIN.COMPOUND_FILTER(CREATED_BY_USER_SID)
;
--
-- INDEX: CHAIN.IX_CMP_FIL_ACT_ID
--

CREATE INDEX CHAIN.IX_CMP_FIL_ACT_ID ON CHAIN.COMPOUND_FILTER(ACT_ID)
;
--
-- INDEX: CHAIN.UNIQUE_PARAM
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_PARAM ON CHAIN.DEFAULT_MESSAGE_PARAM(MESSAGE_DEFINITION_ID, LOWER_PARAM_NAME)
;
--
-- INDEX: CHAIN.UNIQUE_FG_GUID
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_FG_GUID ON CHAIN.FILE_GROUP(APP_SID, GUID)
;
--
-- INDEX: CHAIN.UNIQUE_FG_FILE
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_FG_FILE ON CHAIN.FILE_GROUP_FILE(APP_SID, FILE_GROUP_ID, FILE_UPLOAD_SID)
;
--
-- INDEX: CHAIN.UC_FILTER_TYPE_CARD_ID
--

CREATE UNIQUE INDEX CHAIN.UC_FILTER_TYPE_CARD_ID ON CHAIN.FILTER_TYPE(CARD_ID)
;
--
-- INDEX: CHAIN.IX_FILTER_VALUE_REGION_SID
--

CREATE INDEX CHAIN.IX_FILTER_VALUE_REGION_SID ON CHAIN.FILTER_VALUE(APP_SID, REGION_SID)
;
--
-- INDEX: CHAIN.IX_FILTER_PAGE_IND_CARD_GROUP
--

CREATE INDEX CHAIN.IX_FILTER_PAGE_IND_CARD_GROUP ON CHAIN.FILTER_PAGE_IND (APP_SID, CARD_GROUP_ID)
;
--
-- INDEX: CHAIN.UK_FILTER_PAGE_IND
--

CREATE UNIQUE INDEX CHAIN.UK_FILTER_PAGE_IND ON CHAIN.FILTER_PAGE_IND (
		APP_SID, CARD_GROUP_ID, IND_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID,
		START_DTM, END_DTM, PREVIOUS_N_INTERVALS)
;
--
-- INDEX: CHAIN.UK_FILTER_PAGE_IND_INTERVAL
--
CREATE UNIQUE INDEX CHAIN.UK_FILTER_PAGE_IND_INTERVAL ON CHAIN.FILTER_PAGE_IND_INTERVAL (
		APP_SID, FILTER_PAGE_IND_ID, START_DTM, CURRENT_INTERVAL_OFFSET)
;
--
-- INDEX: CHAIN.UC_IMPL_EXECUTE_ORDER
--

CREATE UNIQUE INDEX CHAIN.UC_IMPL_EXECUTE_ORDER ON CHAIN.IMPLEMENTATION(APP_SID, EXECUTE_ORDER)
;
--
-- INDEX: CHAIN.UC_UNIQUE_LINK_PKG
--

CREATE UNIQUE INDEX CHAIN.UC_UNIQUE_LINK_PKG ON CHAIN.IMPLEMENTATION(APP_SID, LINK_PKG)
;
--
-- INDEX: CHAIN.IX_UNIQUE_ACTIVE_GUID
--

CREATE UNIQUE INDEX CHAIN.IX_UNIQUE_ACTIVE_GUID ON CHAIN.INVITATION(APP_SID, GUID, NVL2(REINVITATION_OF_INVITATION_ID, INVITATION_ID, 0))
;
--
-- INDEX: CHAIN.UNIQUE_LOOKUP_IDS
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_LOOKUP_IDS ON CHAIN.MESSAGE_DEFINITION_LOOKUP(PRIMARY_LOOKUP_ID, SECONDARY_LOOKUP_ID)
;
--
-- INDEX: CHAIN.IX_SAVED_FIL_CMP_FIL_ID
--

CREATE INDEX CHAIN.IX_SAVED_FIL_CMP_FIL_ID ON CHAIN.SAVED_FILTER(APP_SID, COMPOUND_FILTER_ID)
;
CREATE INDEX CHAIN.IX_SAVED_FIL_GB_CMP_FIL_ID ON CHAIN.SAVED_FILTER(APP_SID, GROUP_BY_COMPOUND_FILTER_ID)
;
--
-- INDEX: CHAIN.UK_SAVED_FILTER_NAME
--

CREATE UNIQUE INDEX CHAIN.UK_SAVED_FILTER_NAME ON CHAIN.SAVED_FILTER(APP_SID, CARD_GROUP_ID, PARENT_SID, LOWER(NAME))
;
--
-- INDEX: CHAIN.IDX_PRIMARY_SUPPLIER_FOLLOWER
--

CREATE UNIQUE INDEX CHAIN.IDX_PRIMARY_SUPPLIER_FOLLOWER ON CHAIN.SUPPLIER_FOLLOWER(APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID, NVL(IS_PRIMARY, USER_SID))
;
--
-- INDEX: CHAIN.SUP_REL_VIR_ACTIVE_KEY_IDX
--

CREATE INDEX CHAIN.SUP_REL_VIR_ACTIVE_KEY_IDX ON CHAIN.SUPPLIER_RELATIONSHIP(VIRTUALLY_ACTIVE_KEY)
;
--
-- INDEX: CHAIN.UK_SUPP_REL_CODE
--

CREATE UNIQUE INDEX CHAIN.UK_SUPP_REL_CODE ON CHAIN.SUPPLIER_RELATIONSHIP(CASE WHEN "SUPP_REL_CODE" IS NULL THEN NULL WHEN "DELETED" = 1 THEN NULL ELSE TO_CHAR("APP_SID")||'-'||TO_CHAR("PURCHASER_COMPANY_SID")||'-'||"SUPP_REL_CODE" END)
;
--
-- INDEX: CHAIN.UNIQUE_TASK_SUP_REL
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_TASK_SUP_REL ON CHAIN.TASK(APP_SID, TASK_TYPE_ID, OWNER_COMPANY_SID, SUPPLIER_COMPANY_SID)
;
--
-- INDEX: CHAIN.UNIQUE_NAMED_TASK_ENTRY
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_NAMED_TASK_ENTRY ON CHAIN.TASK_ENTRY(APP_SID, TASK_ID, NAME)
;
--
-- INDEX: CHAIN.UNIQUE_TASK_TYPE_NAME
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_TASK_TYPE_NAME ON CHAIN.TASK_TYPE(APP_SID, NAME, TASK_SCHEME_ID)
;

--
-- INDEX: CHAIN.UNIQUE_ACTIVITY_CREATED_BY
--

CREATE UNIQUE INDEX CHAIN.UNIQUE_ACTIVITY_CREATED_BY ON CHAIN.ACTIVITY(APP_SID, NVL(CREATED_BY_ACTIVITY_ID, ACTIVITY_ID), ACTIVITY_TYPE_ID)
;

--
-- INDEX: CHAIN.PRODUCT_TYPE_LOOKUP
--

CREATE UNIQUE INDEX CHAIN.PRODUCT_TYPE_LOOKUP ON CHAIN.PRODUCT_TYPE(APP_SID, NVL2(LOOKUP_KEY, LOOKUP_KEY, PRODUCT_TYPE_ID))
;

--
-- TABLE: ACTIVITY
--

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_COMPANY
	FOREIGN KEY (APP_SID, TARGET_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_CREATED_BY_COMPANY
	FOREIGN KEY (APP_SID, CREATED_BY_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_ACTVTY_TYPE
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_ACTVTY_OUTCOME_TYPE
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID, OUTCOME_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_OUTCOME_TYPE(APP_SID, ACTIVITY_TYPE_ID, OUTCOME_TYPE_ID)
;

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_CREATED_BY_ACTVTY
	FOREIGN KEY (APP_SID, CREATED_BY_ACTIVITY_ID)
	REFERENCES CHAIN.ACTIVITY(APP_SID, ACTIVITY_ID)
;

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_ACTVTY_INVL
	FOREIGN KEY (APP_SID, ACTIVITY_ID, ASSIGNED_TO_USER_SID, ASSIGNED_TO_ROLE_SID)
	REFERENCES CHAIN.ACTIVITY_INVOLVEMENT (APP_SID, ACTIVITY_ID, USER_SID, ROLE_SID)
	DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_ASS_TO_CHAIN_USER
	FOREIGN KEY (APP_SID, ASSIGNED_TO_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID);

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_TARGET_CHAIN_USER
	FOREIGN KEY (APP_SID, TARGET_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID);

ALTER TABLE CHAIN.ACTIVITY ADD CONSTRAINT FK_ACTVTY_CREATE_BY_CHAIN_USER
	FOREIGN KEY (APP_SID, CREATED_BY_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID);


--
-- TABLE: ACTIVITY_OUTCOME_TYPE
--

ALTER TABLE CHAIN.ACTIVITY_OUTCOME_TYPE ADD CONSTRAINT FK_ACT_OUTCM_TYPE_OUTCM_TYPE
	FOREIGN KEY (APP_SID, OUTCOME_TYPE_ID)
	REFERENCES CHAIN.OUTCOME_TYPE(APP_SID, OUTCOME_TYPE_ID)
;

ALTER TABLE CHAIN.ACTIVITY_OUTCOME_TYPE ADD CONSTRAINT FK_ACT_OUTCM_TYPE_ACT_TYPE
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;


--
-- TABLE: ACTIVITY_OUTCOME_TYPE_ACTION
--

ALTER TABLE CHAIN.ACTIVITY_OUTCOME_TYPE_ACTION ADD CONSTRAINT FK_ACT_OUTCM_TYP_ACTN_ACT_TYP
	FOREIGN KEY (APP_SID, GENERATE_ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;

ALTER TABLE CHAIN.ACTIVITY_OUTCOME_TYPE_ACTION ADD CONSTRAINT FK_ACT_OUT_ACTN_ACT_OUT_TYP
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID, OUTCOME_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_OUTCOME_TYPE(APP_SID, ACTIVITY_TYPE_ID, OUTCOME_TYPE_ID)
;


--
-- TABLE: ACTIVITY_TAG
--

ALTER TABLE CHAIN.ACTIVITY_TAG ADD CONSTRAINT FK_ACTY_TAG_ACTY_TYP_TAG_GRP
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID, TAG_GROUP_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE_TAG_GROUP(APP_SID, ACTIVITY_TYPE_ID, TAG_GROUP_ID)
;

ALTER TABLE CHAIN.ACTIVITY_TAG ADD CONSTRAINT FK_ACTVTY_TAG_ACTVTY
	FOREIGN KEY (APP_SID, ACTIVITY_ID, ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY(APP_SID, ACTIVITY_ID, ACTIVITY_TYPE_ID)
;


--
-- TABLE: ACTIVITY_TYPE_ALERT
--

ALTER TABLE CHAIN.ACTIVITY_TYPE_ALERT ADD CONSTRAINT FK_ACTY_TYPE_ALERT_ACTY_TYPE
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;


--
-- TABLE: ACTIVITY_TYPE_ALERT_ROLE
--

ALTER TABLE CHAIN.ACTIVITY_TYPE_ALERT_ROLE ADD CONSTRAINT FK_ACT_ALRT_ROLE_ACT_TYP_ALRT
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID, CUSTOMER_ALERT_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE_ALERT(APP_SID, ACTIVITY_TYPE_ID, CUSTOMER_ALERT_TYPE_ID)
;


--
-- TABLE: ACTIVITY_TYPE_DEFAULT_USER
--

ALTER TABLE CHAIN.ACTIVITY_TYPE_DEFAULT_USER ADD CONSTRAINT FK_ACT_TYP_DEFLT_USER_ACT_TYP
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;

ALTER TABLE CHAIN.ACTIVITY_TYPE_DEFAULT_USER ADD CONSTRAINT FK_ACT_TYP_DEFLT_USR_CHAIN_USR
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: ACTIVITY_TYPE_TAG_GROUP
--

ALTER TABLE CHAIN.ACTIVITY_TYPE_TAG_GROUP ADD CONSTRAINT FK_ACT_TYPE_TAG_GROUP_ACT_TYP
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;


--
-- TABLE: ACTIVITY_INVOLVEMENT
--

ALTER TABLE CHAIN.ACTIVITY_INVOLVEMENT ADD CONSTRAINT CK_ACTVTY_INVL_USER_ROLE
	CHECK ((USER_SID IS NULL AND ROLE_SID IS NOT NULL) OR (USER_SID IS NOT NULL AND ROLE_SID IS NULL))
;

ALTER TABLE CHAIN.ACTIVITY_INVOLVEMENT ADD CONSTRAINT FK_ACTVTY_INVL_ACTVTY
	FOREIGN KEY (APP_SID, ACTIVITY_ID)
	REFERENCES CHAIN.ACTIVITY (APP_SID, ACTIVITY_ID)
;

ALTER TABLE CHAIN.ACTIVITY_INVOLVEMENT ADD CONSTRAINT FK_ACTVTY_INVL_CHAIN_USER
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER (APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.ACTIVITY_LOG
--

ALTER TABLE CHAIN.ACTIVITY_LOG ADD CONSTRAINT FK_ACTVTY_LOG_ACTVTY
	FOREIGN KEY (APP_SID, ACTIVITY_ID)
	REFERENCES CHAIN.ACTIVITY(APP_SID, ACTIVITY_ID)
;

ALTER TABLE CHAIN.ACTIVITY_LOG ADD CONSTRAINT FK_ACTVTY_LOG_CHAIN_USER
	FOREIGN KEY (APP_SID, LOGGED_BY_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


ALTER TABLE CHAIN.ACTIVITY_LOG ADD CONSTRAINT FK_ACTVTY_LOG_REPLY_ACTVTY_LOG
	FOREIGN KEY (APP_SID, REPLY_TO_ACTIVITY_LOG_ID)
	REFERENCES CHAIN.ACTIVITY_LOG(APP_SID, ACTIVITY_LOG_ID)
	DEFERRABLE INITIALLY DEFERRED
;


--
-- TABLE: CHAIN.ACTIVITY_TYPE_ACTION
--

ALTER TABLE CHAIN.ACTIVITY_TYPE_ACTION ADD CONSTRAINT FK_ACTY_TYP_ACTN_GEN_ACTY_TYP
	FOREIGN KEY (APP_SID, GENERATE_ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;

ALTER TABLE CHAIN.ACTIVITY_TYPE_ACTION ADD CONSTRAINT FK_ACTVTY_TYP_ACTN_ACTVTY_TYP
	FOREIGN KEY (APP_SID, ACTIVITY_TYPE_ID)
	REFERENCES CHAIN.ACTIVITY_TYPE(APP_SID, ACTIVITY_TYPE_ID)
;

--
-- TABLE: CHAIN.AGGREGATE_TYPE
--

ALTER TABLE chain.aggregate_type ADD CONSTRAINT fk_aggregate_type_card_group
	FOREIGN KEY (card_group_id) REFERENCES chain.card_group (card_group_id);

--
-- TABLE: CHAIN.ALL_COMPONENT_TYPE
--

ALTER TABLE CHAIN.ALL_COMPONENT_TYPE ADD CONSTRAINT FK_ALL_COMP_TYPE_CARDG
	FOREIGN KEY (EDITOR_CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP(CARD_GROUP_ID)
;


--
-- TABLE: CHAIN.AMOUNT_UNIT
--

ALTER TABLE CHAIN.AMOUNT_UNIT ADD CONSTRAINT RefCUSTOMER_OPTIONS987
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.APPLIED_COMPANY_CAPABILITY
--

ALTER TABLE CHAIN.APPLIED_COMPANY_CAPABILITY ADD CONSTRAINT RefGROUP_CAPABILITY277
	FOREIGN KEY (GROUP_CAPABILITY_ID)
	REFERENCES CHAIN.GROUP_CAPABILITY(GROUP_CAPABILITY_ID)
;

ALTER TABLE CHAIN.APPLIED_COMPANY_CAPABILITY ADD CONSTRAINT RefCOMPANY278
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.BUSINESS_UNIT
--

ALTER TABLE CHAIN.BUSINESS_UNIT ADD CONSTRAINT FK_BU_APP_SID
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.BUSINESS_UNIT ADD CONSTRAINT FK_BUSNESS_UNIT_PARENT
	FOREIGN KEY (APP_SID, PARENT_BUSINESS_UNIT_ID)
	REFERENCES CHAIN.BUSINESS_UNIT(APP_SID, BUSINESS_UNIT_ID)
;


--
-- TABLE: CHAIN.BUSINESS_UNIT_MEMBER
--

ALTER TABLE CHAIN.BUSINESS_UNIT_MEMBER ADD CONSTRAINT FK_BU_MEMBER_BU
	FOREIGN KEY (APP_SID, BUSINESS_UNIT_ID)
	REFERENCES CHAIN.BUSINESS_UNIT(APP_SID, BUSINESS_UNIT_ID)
;

ALTER TABLE CHAIN.BUSINESS_UNIT_MEMBER ADD CONSTRAINT FK_BU_MEMBER_USER
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.BUSINESS_UNIT_SUPPLIER
--

ALTER TABLE CHAIN.BUSINESS_UNIT_SUPPLIER ADD CONSTRAINT FK_BU_SUP_BU
	FOREIGN KEY (APP_SID, BUSINESS_UNIT_ID)
	REFERENCES CHAIN.BUSINESS_UNIT(APP_SID, BUSINESS_UNIT_ID)
;

ALTER TABLE CHAIN.BUSINESS_UNIT_SUPPLIER ADD CONSTRAINT FK_BU_SUP_SUP
	FOREIGN KEY (APP_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.CAPABILITY
--

ALTER TABLE CHAIN.CAPABILITY ADD CONSTRAINT RefCAPABILITY_TYPE380
	FOREIGN KEY (CAPABILITY_TYPE_ID)
	REFERENCES CHAIN.CAPABILITY_TYPE(CAPABILITY_TYPE_ID)
;

ALTER TABLE CHAIN.CAPABILITY ADD CONSTRAINT FK_CAP_CAP_GROUP
	FOREIGN KEY (CAPABILITY_GROUP_ID)
	REFERENCES CHAIN.CAPABILITY_GROUP(CAPABILITY_GROUP_ID)
;

--
-- TABLE: CHAIN.CARD_GROUP_COLUMN_TYPE
--

ALTER TABLE chain.card_group_column_type ADD CONSTRAINT fk_card_group_column_type_cg
	FOREIGN KEY (card_group_id)
	REFERENCES chain.card_group (card_group_id)
;



--
-- TABLE: CHAIN.CARD_GROUP_CARD
--

ALTER TABLE CHAIN.CARD_GROUP_CARD ADD CONSTRAINT RefCARD222
	FOREIGN KEY (CARD_ID)
	REFERENCES CHAIN.CARD(CARD_ID)
;

ALTER TABLE CHAIN.CARD_GROUP_CARD ADD CONSTRAINT RefCARD_GROUP223
	FOREIGN KEY (CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP(CARD_GROUP_ID)
;

ALTER TABLE CHAIN.CARD_GROUP_CARD ADD CONSTRAINT RefCAPABILITY293
	FOREIGN KEY (REQUIRED_CAPABILITY_ID)
	REFERENCES CHAIN.CAPABILITY(CAPABILITY_ID)
;


--
-- TABLE: CHAIN.CARD_GROUP_PROGRESSION
--

ALTER TABLE CHAIN.CARD_GROUP_PROGRESSION ADD CONSTRAINT RefCARD_GROUP_CARD521
	FOREIGN KEY (APP_SID, CARD_GROUP_ID, TO_CARD_ID)
	REFERENCES CHAIN.CARD_GROUP_CARD(APP_SID, CARD_GROUP_ID, CARD_ID)
;

ALTER TABLE CHAIN.CARD_GROUP_PROGRESSION ADD CONSTRAINT RefCARD_PROGRESSION_ACTION522
	FOREIGN KEY (FROM_CARD_ID, FROM_CARD_ACTION)
	REFERENCES CHAIN.CARD_PROGRESSION_ACTION(CARD_ID, ACTION)
;

ALTER TABLE CHAIN.CARD_GROUP_PROGRESSION ADD CONSTRAINT RefCARD_GROUP_CARD523
	FOREIGN KEY (APP_SID, CARD_GROUP_ID, FROM_CARD_ID)
	REFERENCES CHAIN.CARD_GROUP_CARD(APP_SID, CARD_GROUP_ID, CARD_ID)
;


--
-- TABLE: CHAIN.CARD_INIT_PARAM
--

ALTER TABLE CHAIN.CARD_INIT_PARAM ADD CONSTRAINT RefCARD_GROUP1160
	FOREIGN KEY (CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP(CARD_GROUP_ID)
;

ALTER TABLE CHAIN.CARD_INIT_PARAM ADD CONSTRAINT RefCARD_INIT_PARAM_TYPE1161
	FOREIGN KEY (PARAM_TYPE_ID)
	REFERENCES CHAIN.CARD_INIT_PARAM_TYPE(PARAM_TYPE_ID)
;

ALTER TABLE CHAIN.CARD_INIT_PARAM ADD CONSTRAINT RefCARD1162
	FOREIGN KEY (CARD_ID)
	REFERENCES CHAIN.CARD(CARD_ID)
;


--
-- TABLE: CHAIN.CARD_PROGRESSION_ACTION
--

ALTER TABLE CHAIN.CARD_PROGRESSION_ACTION ADD CONSTRAINT RefCARD524
	FOREIGN KEY (CARD_ID)
	REFERENCES CHAIN.CARD(CARD_ID)
;


--
-- TABLE: CHAIN.CHAIN_USER
--

ALTER TABLE CHAIN.CHAIN_USER ADD CONSTRAINT RefVISIBILITY58
	FOREIGN KEY (VISIBILITY_ID)
	REFERENCES CHAIN.VISIBILITY(VISIBILITY_ID)
;

ALTER TABLE CHAIN.CHAIN_USER ADD CONSTRAINT RefREGISTRATION_STATUS62
	FOREIGN KEY (REGISTRATION_STATUS_ID)
	REFERENCES CHAIN.REGISTRATION_STATUS(REGISTRATION_STATUS_ID)
;

ALTER TABLE CHAIN.CHAIN_USER ADD CONSTRAINT RefCUSTOMER_OPTIONS77
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.CHAIN_USER ADD CONSTRAINT RefCOMPANY211
	FOREIGN KEY (APP_SID, DEFAULT_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

--
-- TABLE: CHAIN.CHAIN_USER_EMAIL_ADDRESS_LOG
--

ALTER TABLE CHAIN.CHAIN_USER_EMAIL_ADDRESS_LOG ADD CONSTRAINT RefCHAIN_USER1174
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.CHAIN_USER_EMAIL_ADDRESS_LOG ADD CONSTRAINT RefCHAIN_USER1175
	FOREIGN KEY (APP_SID, MODIFIED_BY_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.COMPANY
--

ALTER TABLE CHAIN.COMPANY ADD CONSTRAINT RefCUSTOMER_OPTIONS78
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.COMPANY ADD CONSTRAINT FK_COMPANY_COMPANY_TYPE
	FOREIGN KEY (APP_SID, COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY ADD CONSTRAINT FK_COMPANY_SECTOR
	FOREIGN KEY (APP_SID, SECTOR_ID)
	REFERENCES CHAIN.SECTOR(APP_SID, SECTOR_ID)
;


--
-- TABLE: CHAIN.COMPANY_CC_EMAIL
--

ALTER TABLE CHAIN.COMPANY_CC_EMAIL ADD CONSTRAINT RefCOMPANY148
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.COMPANY_FUNC_QNR_ACTION
--

ALTER TABLE CHAIN.COMPANY_FUNC_QNR_ACTION ADD CONSTRAINT FK_CF_CFAQ
	FOREIGN KEY (COMPANY_FUNCTION_ID)
	REFERENCES CHAIN.COMPANY_FUNCTION(COMPANY_FUNCTION_ID)
;

ALTER TABLE CHAIN.COMPANY_FUNC_QNR_ACTION ADD CONSTRAINT FK_QA_CFAQ
	FOREIGN KEY (QUESTIONNAIRE_ACTION_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_ACTION(QUESTIONNAIRE_ACTION_ID)
;


--
-- TABLE: CHAIN.COMPANY_GROUP
--

ALTER TABLE CHAIN.COMPANY_GROUP ADD CONSTRAINT FK_CG_COMPANY
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.COMPANY_GROUP ADD CONSTRAINT FK_CG_COMPANY_GROUP_TYPE
	FOREIGN KEY (COMPANY_GROUP_TYPE_ID)
	REFERENCES CHAIN.COMPANY_GROUP_TYPE(COMPANY_GROUP_TYPE_ID)
;


--
-- TABLE: CHAIN.COMPANY_METRIC
--

ALTER TABLE CHAIN.COMPANY_METRIC ADD CONSTRAINT RefCOMPANY_METRIC_TYPE51
	FOREIGN KEY (APP_SID, COMPANY_METRIC_TYPE_ID)
	REFERENCES CHAIN.COMPANY_METRIC_TYPE(APP_SID, COMPANY_METRIC_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_METRIC ADD CONSTRAINT RefCOMPANY55
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.COMPANY_METRIC_TYPE
--

ALTER TABLE CHAIN.COMPANY_METRIC_TYPE ADD CONSTRAINT RefCUSTOMER_OPTIONS79
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

---
--- TABLE: CHAIN.COMPANY_PRODUCT
---

ALTER TABLE CHAIN.COMPANY_PRODUCT ADD CONSTRAINT FK_COMPANY_PRODUCT_PRODUCT
	FOREIGN KEY (APP_SID, PRODUCT_ID)
	REFERENCES CHAIN.PRODUCT(APP_SID, PRODUCT_ID)
;

ALTER TABLE CHAIN.COMPANY_PRODUCT ADD CONSTRAINT FK_COMPANY_PRODUCT_COMPANY_SID
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.COMPANY_PRODUCT ADD CONSTRAINT FK_COMPANY_PRODUCT_PRODUCT_TYP
	FOREIGN KEY (APP_SID, PRODUCT_TYPE_ID)
	REFERENCES CHAIN.PRODUCT_TYPE (APP_SID, PRODUCT_TYPE_ID)
;

--
-- TABLE: CHAIN.COMPANY_PRODUCT_REQUIRED_CERT
--

ALTER TABLE CHAIN.COMPANY_PRODUCT_REQUIRED_CERT ADD CONSTRAINT FK_CMPNY_PRDCT_RQRD_CRT_PRDCT
	FOREIGN KEY (APP_SID, PRODUCT_ID)
	REFERENCES CHAIN.COMPANY_PRODUCT (APP_SID, PRODUCT_ID)
;

--
-- TABLE: CHAIN.COMPANY_PRODUCT_CERTIFICATION
--

ALTER TABLE CHAIN.COMPANY_PRODUCT_CERTIFICATION ADD CONSTRAINT FK_COMPANY_PRODUCT_CERT_PRDCT
	FOREIGN KEY (APP_SID, PRODUCT_ID)
	REFERENCES CHAIN.COMPANY_PRODUCT (APP_SID, PRODUCT_ID)
;


--
-- TABLE: CHAIN.COMPANY_REFERENCE
--

ALTER TABLE CHAIN.COMPANY_REFERENCE ADD CONSTRAINT FK_COMPANY_COMPANY_REF
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.COMPANY_REFERENCE ADD CONSTRAINT FK_REF_COMPANY_REF
	FOREIGN KEY (APP_SID, REFERENCE_ID)
	REFERENCES CHAIN.REFERENCE(APP_SID, REFERENCE_ID)
;


--
-- TABLE: CHAIN.COMPANY_TYPE
--

ALTER TABLE CHAIN.COMPANY_TYPE ADD CONSTRAINT FK_COMPANY_TYPE_CO
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

--
-- TABLE: CHAIN.COMPANY_TYPE_CAPABILITY
--

ALTER TABLE CHAIN.COMPANY_TYPE_CAPABILITY ADD CONSTRAINT FK_CTC_CAPABILITY
	FOREIGN KEY (CAPABILITY_ID)
	REFERENCES CHAIN.CAPABILITY(CAPABILITY_ID)
;

ALTER TABLE CHAIN.COMPANY_TYPE_CAPABILITY ADD CONSTRAINT FK_CTC_COMPANY_GROUP_TYPE
	FOREIGN KEY (PRIMARY_COMPANY_GROUP_TYPE_ID)
	REFERENCES CHAIN.COMPANY_GROUP_TYPE(COMPANY_GROUP_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_TYPE_CAPABILITY ADD CONSTRAINT FK_CTC_COMPANY_TYPE
	FOREIGN KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_TYPE_CAPABILITY ADD CONSTRAINT FK_CTC_CTR_RELATIONSHIP
	FOREIGN KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE_RELATIONSHIP(APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_TYPE_CAPABILITY ADD CONSTRAINT FK_CTC_TR_RELATIONSHIP
	FOREIGN KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID, TERTIARY_COMPANY_TYPE_ID)
	REFERENCES CHAIN.TERTIARY_RELATIONSHIPS(APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID, TERTIARY_COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_TYPE_CAPABILITY ADD CONSTRAINT FK_CTC_COMPANY_TYPE_ROLE
	FOREIGN KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID, PRIMARY_COMPANY_TYPE_ROLE_SID)
	REFERENCES CHAIN.COMPANY_TYPE_ROLE(APP_SID, COMPANY_TYPE_ID, ROLE_SID)
;

--
-- TABLE: CHAIN.COMPANY_TYPE_RELATIONSHIP
--

ALTER TABLE CHAIN.COMPANY_TYPE_RELATIONSHIP ADD CONSTRAINT FK_CTR_COMPANY_TYPE_1
	FOREIGN KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_TYPE_RELATIONSHIP ADD CONSTRAINT FK_CTR_COMPANY_TYPE_2
	FOREIGN KEY (APP_SID, SECONDARY_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;


--
-- TABLE: CHAIN.COMPONENT
--

ALTER TABLE CHAIN.COMPONENT ADD CONSTRAINT FK_COMPONENT_CHAIN_USER
	FOREIGN KEY (APP_SID, CREATED_BY_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.COMPONENT ADD CONSTRAINT FK_COMPONENT_COPT
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.COMPONENT ADD CONSTRAINT FK_COMPONENT_CMP_TYPE_CONTAIN
	FOREIGN KEY (APP_SID, PARENT_COMPONENT_TYPE_ID, COMPONENT_TYPE_ID)
	REFERENCES CHAIN.COMPONENT_TYPE_CONTAINMENT (APP_SID, CONTAINER_COMPONENT_TYPE_ID, CHILD_COMPONENT_TYPE_ID);

ALTER TABLE CHAIN.COMPONENT ADD CONSTRAINT FK_COMPONENT_PARENT_CHILD
	FOREIGN KEY  (APP_SID, PARENT_COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT (APP_SID, COMPONENT_ID);

ALTER TABLE CHAIN.COMPONENT ADD CONSTRAINT FK_COMPONENT_UNIT
	FOREIGN KEY (APP_SID, AMOUNT_UNIT_ID)
	REFERENCES CHAIN.AMOUNT_UNIT(APP_SID, AMOUNT_UNIT_ID)
;


--
-- TABLE: CHAIN.COMPONENT_DOCUMENT
--

ALTER TABLE CHAIN.COMPONENT_DOCUMENT ADD CONSTRAINT RefFILE_UPLOAD901
	FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
	REFERENCES CHAIN.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CHAIN.COMPONENT_DOCUMENT ADD CONSTRAINT RefCOMPONENT902
	FOREIGN KEY (APP_SID, COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT(APP_SID, COMPONENT_ID)
;

ALTER TABLE CHAIN.COMPONENT_DOCUMENT ADD CONSTRAINT RefCUSTOMER_OPTIONS988
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

--
-- TABLE: CHAIN.COMPONENT_SOURCE
--

ALTER TABLE CHAIN.COMPONENT_SOURCE ADD CONSTRAINT RefCOMPONENT_TYPE528
	FOREIGN KEY (APP_SID, COMPONENT_TYPE_ID)
	REFERENCES CHAIN.COMPONENT_TYPE(APP_SID, COMPONENT_TYPE_ID)
;

ALTER TABLE CHAIN.COMPONENT_SOURCE ADD CONSTRAINT FK_COMPONENT_SOUCE_CARDG
	FOREIGN KEY (CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP(CARD_GROUP_ID)
;


--
-- TABLE: CHAIN.COMPONENT_TYPE
--

ALTER TABLE CHAIN.COMPONENT_TYPE ADD CONSTRAINT RefALL_COMPONENT_TYPE584
	FOREIGN KEY (COMPONENT_TYPE_ID)
	REFERENCES CHAIN.ALL_COMPONENT_TYPE(COMPONENT_TYPE_ID)
;

ALTER TABLE CHAIN.COMPONENT_TYPE ADD CONSTRAINT FK_COMPONENT_TYPE_COPT
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.COMPONENT_TYPE_CONTAINMENT
--

ALTER TABLE CHAIN.COMPONENT_TYPE_CONTAINMENT ADD CONSTRAINT RefCOMPONENT_TYPE532
	FOREIGN KEY (APP_SID, CONTAINER_COMPONENT_TYPE_ID)
	REFERENCES CHAIN.COMPONENT_TYPE(APP_SID, COMPONENT_TYPE_ID)
;

ALTER TABLE CHAIN.COMPONENT_TYPE_CONTAINMENT ADD CONSTRAINT RefCOMPONENT_TYPE533
	FOREIGN KEY (APP_SID, CHILD_COMPONENT_TYPE_ID)
	REFERENCES CHAIN.COMPONENT_TYPE(APP_SID, COMPONENT_TYPE_ID)
;


--
-- TABLE: CHAIN.COMPOUND_FILTER
--

ALTER TABLE CHAIN.COMPOUND_FILTER ADD CONSTRAINT FK_CMP_FIL_CARD_GRP
	FOREIGN KEY (CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP(CARD_GROUP_ID)
;

ALTER TABLE CHAIN.COMPOUND_FILTER ADD CONSTRAINT FK_COMP_FLTR_RO_SAVED_FLTR
	FOREIGN KEY (APP_SID, READ_ONLY_SAVED_FILTER_SID)
	REFERENCES CHAIN.SAVED_FILTER (APP_SID, SAVED_FILTER_SID)
;

--
-- TABLE: CHAIN.CUSTOMER_AGGREGATE_TYPE
--

ALTER TABLE CHAIN.CUSTOMER_AGGREGATE_TYPE ADD CONSTRAINT FK_CUSTOM_AGG_TYPE_CARD_GROUP
	FOREIGN KEY (CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP (CARD_GROUP_ID)
;
ALTER TABLE CHAIN.CUSTOMER_AGGREGATE_TYPE ADD CONSTRAINT FK_CSTM_AGG_TYP_FLTR_PG_I_ITVL
	FOREIGN KEY (APP_SID, FILTER_PAGE_IND_INTERVAL_ID)
	REFERENCES CHAIN.FILTER_PAGE_IND_INTERVAL (APP_SID, FILTER_PAGE_IND_INTERVAL_ID)
	ON DELETE CASCADE
;


--
-- TABLE: CHAIN.DEFAULT_MESSAGE_DEFINITION
--

ALTER TABLE CHAIN.DEFAULT_MESSAGE_DEFINITION ADD CONSTRAINT RefMESSAGE_PRIORITY725
	FOREIGN KEY (MESSAGE_PRIORITY_ID)
	REFERENCES CHAIN.MESSAGE_PRIORITY(MESSAGE_PRIORITY_ID)
;

ALTER TABLE CHAIN.DEFAULT_MESSAGE_DEFINITION ADD CONSTRAINT RefREPEAT_TYPE726
	FOREIGN KEY (REPEAT_TYPE_ID)
	REFERENCES CHAIN.REPEAT_TYPE(REPEAT_TYPE_ID)
;

ALTER TABLE CHAIN.DEFAULT_MESSAGE_DEFINITION ADD CONSTRAINT RefCOMPLETION_TYPE727
	FOREIGN KEY (COMPLETION_TYPE_ID)
	REFERENCES CHAIN.COMPLETION_TYPE(COMPLETION_TYPE_ID)
;

ALTER TABLE CHAIN.DEFAULT_MESSAGE_DEFINITION ADD CONSTRAINT RefMESSAGE_DEFINITION_LOOKU728
	FOREIGN KEY (MESSAGE_DEFINITION_ID)
	REFERENCES CHAIN.MESSAGE_DEFINITION_LOOKUP(MESSAGE_DEFINITION_ID)
;

ALTER TABLE CHAIN.DEFAULT_MESSAGE_DEFINITION ADD CONSTRAINT RefADDRESSING_TYPE729
	FOREIGN KEY (ADDRESSING_TYPE_ID)
	REFERENCES CHAIN.ADDRESSING_TYPE(ADDRESSING_TYPE_ID)
;


--
-- TABLE: CHAIN.DEFAULT_MESSAGE_PARAM
--

ALTER TABLE CHAIN.DEFAULT_MESSAGE_PARAM ADD CONSTRAINT RefDEFAULT_MESSAGE_DEFINITI730
	FOREIGN KEY (MESSAGE_DEFINITION_ID)
	REFERENCES CHAIN.DEFAULT_MESSAGE_DEFINITION(MESSAGE_DEFINITION_ID)
;


--
-- TABLE: CHAIN.DEFAULT_SUPP_REL_CODE_LABEL
--

ALTER TABLE CHAIN.DEFAULT_SUPP_REL_CODE_LABEL ADD CONSTRAINT RefCUSTOMER_OPTIONS1100
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.EMAIL_STUB
--

ALTER TABLE CHAIN.EMAIL_STUB ADD CONSTRAINT RefCOMPANY294
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

--
-- TABLE: CHAIN.FILE_GROUP
--

ALTER TABLE CHAIN.FILE_GROUP ADD CONSTRAINT RefCOMPANY881
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.FILE_GROUP ADD CONSTRAINT RefCUSTOMER_OPTIONS882
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.FILE_GROUP ADD CONSTRAINT RefFILE_GROUP_MODEL891
	FOREIGN KEY (FILE_GROUP_MODEL_ID)
	REFERENCES CHAIN.FILE_GROUP_MODEL(FILE_GROUP_MODEL_ID)
;

ALTER TABLE CHAIN.FILE_GROUP ADD CONSTRAINT RefDOWNLOAD_PERMISSION892
	FOREIGN KEY (DOWNLOAD_PERMISSION_ID)
	REFERENCES CHAIN.DOWNLOAD_PERMISSION(DOWNLOAD_PERMISSION_ID)
;

--
-- TABLE: CHAIN.FILE_GROUP_FILE
--

ALTER TABLE CHAIN.FILE_GROUP_FILE ADD CONSTRAINT RefFILE_UPLOAD883
	FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
	REFERENCES CHAIN.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CHAIN.FILE_GROUP_FILE ADD CONSTRAINT RefFILE_GROUP884
	FOREIGN KEY (APP_SID, FILE_GROUP_ID)
	REFERENCES CHAIN.FILE_GROUP(APP_SID, FILE_GROUP_ID)
;

ALTER TABLE CHAIN.FILE_GROUP_FILE ADD CONSTRAINT RefCUSTOMER_OPTIONS908
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.FILE_UPLOAD
--

ALTER TABLE CHAIN.FILE_UPLOAD ADD CONSTRAINT RefDOWNLOAD_PERMISSION893
	FOREIGN KEY (DOWNLOAD_PERMISSION_ID)
	REFERENCES CHAIN.DOWNLOAD_PERMISSION(DOWNLOAD_PERMISSION_ID)
;

ALTER TABLE CHAIN.FILE_UPLOAD ADD CONSTRAINT RefCUSTOMER_OPTIONS690
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.FILE_UPLOAD ADD CONSTRAINT RefCOMPANY691
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.FILE_UPLOAD ADD CONSTRAINT FU_CU_LAST_MODIFIED_BY_SID
	FOREIGN KEY (APP_SID, LAST_MODIFIED_BY_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.FILTER
--

ALTER TABLE CHAIN.FILTER ADD CONSTRAINT FK_COMP_FIL_FIL
	FOREIGN KEY (APP_SID, COMPOUND_FILTER_ID)
	REFERENCES CHAIN.COMPOUND_FILTER(APP_SID, COMPOUND_FILTER_ID)
;

ALTER TABLE CHAIN.FILTER ADD CONSTRAINT FK_FLT_FLT_TYP
	FOREIGN KEY (FILTER_TYPE_ID)
	REFERENCES CHAIN.FILTER_TYPE(FILTER_TYPE_ID)
;


--
-- TABLE: CHAIN.FILTER_FIELD
--

ALTER TABLE CHAIN.FILTER_FIELD ADD CONSTRAINT FK_FLT_FLT_FLD
	FOREIGN KEY (APP_SID, FILTER_ID)
	REFERENCES CHAIN.FILTER(APP_SID, FILTER_ID)
;


ALTER TABLE CHAIN.FILTER_FIELD_TOP_N_CACHE ADD CONSTRAINT fk_flt_fld_top_n_cache_flt_fld 
	FOREIGN KEY (app_sid, filter_field_id)
	REFERENCES chain.filter_field (app_sid, filter_field_id)
	ON DELETE CASCADE
;

--
-- TABLE: CHAIN.FILTER_PAGE_IND
--

ALTER TABLE CHAIN.FILTER_PAGE_IND ADD CONSTRAINT FK_FILTER_PAGE_IND_CARD_GROUP
	FOREIGN KEY (CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP(CARD_GROUP_ID)
;

--
-- TABLE: CHAIN.FILTER_TYPE
--
ALTER TABLE CHAIN.FILTER_PAGE_IND_INTERVAL ADD CONSTRAINT FK_FTR_PG_IND_INTVL_FTR_PG_IND
	FOREIGN KEY (APP_SID, FILTER_PAGE_IND_ID)
	REFERENCES CHAIN.FILTER_PAGE_IND (APP_SID, FILTER_PAGE_IND_ID)
;

--
-- TABLE: CHAIN.FILTER_TYPE
--

ALTER TABLE CHAIN.FILTER_TYPE ADD CONSTRAINT FK_FLT_TYPE_CARD
	FOREIGN KEY (CARD_ID)
	REFERENCES CHAIN.CARD(CARD_ID)
;


--
-- TABLE: CHAIN.FILTER_VALUE
--

ALTER TABLE CHAIN.FILTER_VALUE ADD CONSTRAINT FK_FLT_VAL_FLD
	FOREIGN KEY (APP_SID, FILTER_FIELD_ID)
	REFERENCES CHAIN.FILTER_FIELD(APP_SID, FILTER_FIELD_ID)
	ON DELETE CASCADE
;



ALTER TABLE chain.filter_value ADD (
	CONSTRAINT fk_filter_value_comp_filter FOREIGN KEY (app_sid, compound_filter_id_value)
		REFERENCES chain.compound_filter (app_sid, compound_filter_id),
	CONSTRAINT fk_filter_value_saved_filter FOREIGN KEY (app_sid, saved_filter_sid_value)
		REFERENCES chain.saved_filter (app_sid, saved_filter_sid)
);


--
-- TABLE: CHAIN.GROUP_CAPABILITY
--

ALTER TABLE CHAIN.GROUP_CAPABILITY ADD CONSTRAINT RefCOMPANY_GROUP_TYPE1078
	FOREIGN KEY (COMPANY_GROUP_TYPE_ID)
	REFERENCES CHAIN.COMPANY_GROUP_TYPE(COMPANY_GROUP_TYPE_ID)
;

ALTER TABLE CHAIN.GROUP_CAPABILITY ADD CONSTRAINT RefCAPABILITY281
	FOREIGN KEY (CAPABILITY_ID)
	REFERENCES CHAIN.CAPABILITY(CAPABILITY_ID)
;


--
-- TABLE: CHAIN.GROUP_CAPABILITY_OVERRIDE
--

ALTER TABLE CHAIN.GROUP_CAPABILITY_OVERRIDE ADD CONSTRAINT RefCUSTOMER_OPTIONS288
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.GROUP_CAPABILITY_OVERRIDE ADD CONSTRAINT RefGROUP_CAPABILITY289
	FOREIGN KEY (GROUP_CAPABILITY_ID)
	REFERENCES CHAIN.GROUP_CAPABILITY(GROUP_CAPABILITY_ID)
;


--
-- TABLE: CHAIN.IMPLEMENTATION
--

ALTER TABLE CHAIN.IMPLEMENTATION ADD CONSTRAINT FK_CO_IMPLEMENTATION
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.INVITATION
--

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefCOMPANY200
	FOREIGN KEY (APP_SID, FROM_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefCHAIN_USER201
	FOREIGN KEY (APP_SID, FROM_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefCOMPANY202
	FOREIGN KEY (APP_SID, TO_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefCHAIN_USER203
	FOREIGN KEY (APP_SID, TO_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefCUSTOMER_OPTIONS206
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefINVITATION_STATUS216
	FOREIGN KEY (INVITATION_STATUS_ID)
	REFERENCES CHAIN.INVITATION_STATUS(INVITATION_STATUS_ID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefINVITATION_TYPE299
	FOREIGN KEY (INVITATION_TYPE_ID)
	REFERENCES CHAIN.INVITATION_TYPE(INVITATION_TYPE_ID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefCHAIN_USER545
	FOREIGN KEY (APP_SID, CANCELLED_BY_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT RefINVITATION546
	FOREIGN KEY (APP_SID, REINVITATION_OF_INVITATION_ID)
	REFERENCES CHAIN.INVITATION(APP_SID, INVITATION_ID)
;

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT FK_INVITATION_COMPANY_OBO
	FOREIGN KEY (APP_SID, ON_BEHALF_OF_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.INVITATION_QNR_TYPE
--

ALTER TABLE CHAIN.INVITATION_QNR_TYPE ADD CONSTRAINT RefQUESTIONNAIRE_TYPE219
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_TYPE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_TYPE(APP_SID, QUESTIONNAIRE_TYPE_ID)
;

ALTER TABLE CHAIN.INVITATION_QNR_TYPE ADD CONSTRAINT RefINVITATION220
	FOREIGN KEY (APP_SID, INVITATION_ID)
	REFERENCES CHAIN.INVITATION(APP_SID, INVITATION_ID)
;

ALTER TABLE CHAIN.INVITATION_QNR_TYPE ADD CONSTRAINT RefCHAIN_USER225
	FOREIGN KEY (APP_SID, ADDED_BY_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.INVITATION_QNR_TYPE_COMPONENT
--

ALTER TABLE CHAIN.INVITATION_QNR_TYPE_COMPONENT ADD CONSTRAINT RefCOMPONENT1218
	FOREIGN KEY (APP_SID, COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT(APP_SID, COMPONENT_ID)
;

ALTER TABLE CHAIN.INVITATION_QNR_TYPE_COMPONENT ADD CONSTRAINT RefINVITATION_QNR_TYPE1219
	FOREIGN KEY (APP_SID, INVITATION_ID, QUESTIONNAIRE_TYPE_ID)
	REFERENCES CHAIN.INVITATION_QNR_TYPE(APP_SID, INVITATION_ID, QUESTIONNAIRE_TYPE_ID)
;


--
-- TABLE: CHAIN.INVITATION_USER_TPL
--

ALTER TABLE CHAIN.INVITATION_USER_TPL ADD CONSTRAINT FK_CHAIN_USER_IUT
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

--
-- TABLE: CHAIN.MESSAGE
--

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT RefDEFAULT_MESSAGE_DEFINITI731
	FOREIGN KEY (MESSAGE_DEFINITION_ID)
	REFERENCES CHAIN.DEFAULT_MESSAGE_DEFINITION(MESSAGE_DEFINITION_ID)
;

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT RefCOMPANY732
	FOREIGN KEY (APP_SID, RE_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT RefCHAIN_USER733
	FOREIGN KEY (APP_SID, RE_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT RefQUESTIONNAIRE_TYPE735
	FOREIGN KEY (APP_SID, RE_QUESTIONNAIRE_TYPE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_TYPE(APP_SID, QUESTIONNAIRE_TYPE_ID)
;

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT RefCHAIN_USER736
	FOREIGN KEY (APP_SID, COMPLETED_BY_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT RefCOMPONENT737
	FOREIGN KEY (APP_SID, RE_COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT(APP_SID, COMPONENT_ID)
;

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT RefCUSTOMER_OPTIONS738
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT FK_MESSAGE_INVITATION_ID
	FOREIGN KEY (APP_SID, RE_INVITATION_ID)
	REFERENCES CHAIN.INVITATION(APP_SID, INVITATION_ID)
;

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT FK_SECONDARY_COMP_SID
	FOREIGN KEY (APP_SID, RE_SECONDARY_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.MESSAGE_DEFINITION
--

ALTER TABLE CHAIN.MESSAGE_DEFINITION ADD CONSTRAINT RefCUSTOMER_OPTIONS739
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.MESSAGE_DEFINITION ADD CONSTRAINT RefMESSAGE_PRIORITY740
	FOREIGN KEY (MESSAGE_PRIORITY_ID)
	REFERENCES CHAIN.MESSAGE_PRIORITY(MESSAGE_PRIORITY_ID)
;

ALTER TABLE CHAIN.MESSAGE_DEFINITION ADD CONSTRAINT RefDEFAULT_MESSAGE_DEFINITI742
	FOREIGN KEY (MESSAGE_DEFINITION_ID)
	REFERENCES CHAIN.DEFAULT_MESSAGE_DEFINITION(MESSAGE_DEFINITION_ID)
;

ALTER TABLE CHAIN.MESSAGE_DEFINITION ADD CONSTRAINT FK_MSG_DEF_CMP_TYP
	FOREIGN KEY (COMPLETION_TYPE_ID)
	REFERENCES CHAIN.COMPLETION_TYPE(COMPLETION_TYPE_ID)
;


--
-- TABLE: CHAIN.MESSAGE_PARAM
--

ALTER TABLE CHAIN.MESSAGE_PARAM ADD CONSTRAINT RefMESSAGE_DEFINITION743
	FOREIGN KEY (APP_SID, MESSAGE_DEFINITION_ID)
	REFERENCES CHAIN.MESSAGE_DEFINITION(APP_SID, MESSAGE_DEFINITION_ID)
;

ALTER TABLE CHAIN.MESSAGE_PARAM ADD CONSTRAINT RefDEFAULT_MESSAGE_PARAM744
	FOREIGN KEY (MESSAGE_DEFINITION_ID, PARAM_NAME)
	REFERENCES CHAIN.DEFAULT_MESSAGE_PARAM(MESSAGE_DEFINITION_ID, PARAM_NAME)
;

ALTER TABLE CHAIN.MESSAGE_PARAM ADD CONSTRAINT RefCUSTOMER_OPTIONS745
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.MESSAGE_RECIPIENT
--

ALTER TABLE CHAIN.MESSAGE_RECIPIENT ADD CONSTRAINT RefRECIPIENT770
	FOREIGN KEY (APP_SID, RECIPIENT_ID)
	REFERENCES CHAIN.RECIPIENT(APP_SID, RECIPIENT_ID)
;

ALTER TABLE CHAIN.MESSAGE_RECIPIENT ADD CONSTRAINT RefMESSAGE771
	FOREIGN KEY (APP_SID, MESSAGE_ID)
	REFERENCES CHAIN.MESSAGE(APP_SID, MESSAGE_ID)
;


--
-- TABLE: CHAIN.MESSAGE_REFRESH_LOG
--

ALTER TABLE CHAIN.MESSAGE_REFRESH_LOG ADD CONSTRAINT RefCHAIN_USER803
	FOREIGN KEY (APP_SID, REFRESH_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.MESSAGE_REFRESH_LOG ADD CONSTRAINT RefMESSAGE804
	FOREIGN KEY (APP_SID, MESSAGE_ID)
	REFERENCES CHAIN.MESSAGE(APP_SID, MESSAGE_ID)
;


--
-- TABLE: CHAIN.NEWSFLASH
--

ALTER TABLE CHAIN.NEWSFLASH ADD CONSTRAINT RefCUSTOMER_OPTIONS305
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.NEWSFLASH_COMPANY
--

ALTER TABLE CHAIN.NEWSFLASH_COMPANY ADD CONSTRAINT RefCOMPANY306
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.NEWSFLASH_COMPANY ADD CONSTRAINT RefNEWSFLASH307
	FOREIGN KEY (APP_SID, NEWSFLASH_ID)
	REFERENCES CHAIN.NEWSFLASH(APP_SID, NEWSFLASH_ID)
;


--
-- TABLE: CHAIN.NEWSFLASH_USER_SETTINGS
--

ALTER TABLE CHAIN.NEWSFLASH_USER_SETTINGS ADD CONSTRAINT RefCHAIN_USER308
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.NEWSFLASH_USER_SETTINGS ADD CONSTRAINT RefNEWSFLASH_COMPANY309
	FOREIGN KEY (APP_SID, NEWSFLASH_ID)
	REFERENCES CHAIN.NEWSFLASH_COMPANY(APP_SID, NEWSFLASH_ID)
;


--
-- TABLE: CHAIN.PRODUCT_REVISION
--

ALTER TABLE CHAIN.PRODUCT_REVISION ADD CONSTRAINT FK_PRODUCT_REV_PREV_END_DTM
	FOREIGN KEY (APP_SID, PRODUCT_ID, PREVIOUS_END_DTM, PREVIOUS_REV_NUMBER)
	REFERENCES CHAIN.PRODUCT_REVISION (APP_SID, PRODUCT_ID, REVISION_END_DTM, REVISION_NUM);



ALTER TABLE CHAIN.PRODUCT_REVISION ADD CONSTRAINT FK_PRDCT_PUB_USER_SID
	FOREIGN KEY (APP_SID, LAST_PUBLISHED_BY_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


ALTER TABLE CHAIN.PRODUCT_REVISION ADD CONSTRAINT FK_PRODUCT_PSEUD_ROOT_CMP_COMP
	FOREIGN KEY (APP_SID, SUPPLIER_ROOT_COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT(APP_SID,COMPONENT_ID)
;

ALTER TABLE CHAIN.PRODUCT_REVISION ADD CONSTRAINT FK_PRODUCT_VALID_ROOT_CMP_COMP
	FOREIGN KEY (APP_SID, VALIDATED_ROOT_COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT(APP_SID,COMPONENT_ID)
;

ALTER TABLE CHAIN.PRODUCT_REVISION ADD CONSTRAINT FK_PRODUCT_REVISION_PRODUCT
	FOREIGN KEY (APP_SID, PRODUCT_ID)
	REFERENCES CHAIN.PRODUCT(APP_SID,PRODUCT_ID)
;

ALTER TABLE CHAIN.PRODUCT_REVISION ADD CONSTRAINT FK_PRODUCT_REVISION_VALIDATION
	FOREIGN KEY (VALIDATION_STATUS_ID)
	REFERENCES CHAIN.VALIDATION_STATUS(VALIDATION_STATUS_ID);
--
-- TABLE: CHAIN.PRODUCT_CODE_TYPE
--

ALTER TABLE CHAIN.PRODUCT_CODE_TYPE ADD CONSTRAINT FK_PRODUCT_CODE_TYPE_COMPANY
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.PRODUCT_METRIC_TYPE
--

ALTER TABLE CHAIN.PRODUCT_METRIC_TYPE ADD CONSTRAINT RefCUSTOMER_OPTIONS438
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;



--
-- TABLE: CHAIN.PURCHASE
--

ALTER TABLE CHAIN.PURCHASE ADD CONSTRAINT RefCOMPANY1094
	FOREIGN KEY (APP_SID, PURCHASER_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.PURCHASE ADD CONSTRAINT FK_PURCHASE_CHANNEL
	FOREIGN KEY (APP_SID, PURCHASER_COMPANY_SID, PURCHASE_CHANNEL_ID)
	REFERENCES CHAIN.PURCHASE_CHANNEL(APP_SID, COMPANY_SID, PURCHASE_CHANNEL_ID)
;

ALTER TABLE CHAIN.PURCHASE ADD CONSTRAINT FK_PURCHASE_PRODUCT
	FOREIGN KEY (APP_SID, COMPONENT_ID)
	REFERENCES CHAIN.PURCHASED_COMPONENT(APP_SID, COMPONENT_ID)
;

ALTER TABLE CHAIN.PURCHASE ADD CONSTRAINT FK_PURCHASE_UNIT
	FOREIGN KEY (APP_SID, AMOUNT_UNIT_ID)
	REFERENCES CHAIN.AMOUNT_UNIT(APP_SID, AMOUNT_UNIT_ID)
;


--
-- TABLE: CHAIN.PURCHASE_CHANNEL
--

ALTER TABLE CHAIN.PURCHASE_CHANNEL ADD CONSTRAINT FK_PURCHASE_CNL_COMPANY
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.PURCHASED_COMPONENT
--

ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT RefCHAIN_USER911
	FOREIGN KEY (APP_SID, MAPPED_BY_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT RefCOMPONENT_SUPPLIER_TYPE587
	FOREIGN KEY (COMPONENT_SUPPLIER_TYPE_ID)
	REFERENCES CHAIN.COMPONENT_SUPPLIER_TYPE(COMPONENT_SUPPLIER_TYPE_ID)
;

ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT RefACCEPTANCE_STATUS588
	FOREIGN KEY (ACCEPTANCE_STATUS_ID)
	REFERENCES CHAIN.ACCEPTANCE_STATUS(ACCEPTANCE_STATUS_ID)
;

ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT RefUNINVITED_SUPPLIER589
	FOREIGN KEY (APP_SID, COMPANY_SID, UNINVITED_SUPPLIER_SID)
	REFERENCES CHAIN.UNINVITED_SUPPLIER(APP_SID, COMPANY_SID, UNINVITED_SUPPLIER_SID)
;

ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT RefCOMPONENT593
	FOREIGN KEY (APP_SID, COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT(APP_SID, COMPONENT_ID)
;


ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT FK_PURCH_COMP_SUPP_REL_2
	FOREIGN KEY (APP_SID, COMPANY_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.SUPPLIER_RELATIONSHIP(APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
;

ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT FK_PURCHASED_CMP_COMPONENTS
	FOREIGN KEY (APP_SID, COMPONENT_ID, COMPONENT_TYPE_ID, COMPANY_SID)
	REFERENCES CHAIN.COMPONENT(APP_SID, COMPONENT_ID, COMPONENT_TYPE_ID, COMPANY_SID)
;

ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT FK_PURCH_CMP_PREV_PURCH_CMP
	FOREIGN KEY (APP_SID, PREVIOUS_PURCH_COMPONENT_ID)
	REFERENCES CHAIN.PURCHASED_COMPONENT(APP_SID, COMPONENT_ID)
;

ALTER TABLE CHAIN.PURCHASED_COMPONENT ADD CONSTRAINT FK_PURCHASED_CMP_PRODUCT
	FOREIGN KEY (APP_SID, SUPPLIER_PRODUCT_ID)
	REFERENCES CHAIN.PRODUCT(APP_SID,PRODUCT_ID)
;


--
-- TABLE: CHAIN.PURCHASER_FOLLOWER
--

ALTER TABLE CHAIN.PURCHASER_FOLLOWER ADD CONSTRAINT RefSUPPLIER_RELATIONSHIP785
	FOREIGN KEY (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.SUPPLIER_RELATIONSHIP(APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
;

ALTER TABLE CHAIN.PURCHASER_FOLLOWER ADD CONSTRAINT RefCHAIN_USER786
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.QNNAIRE_SHARE_ALERT_LOG
--

ALTER TABLE CHAIN.QNNAIRE_SHARE_ALERT_LOG ADD CONSTRAINT RefQUESTIONNAIRE_SHARE1150
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_SHARE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_SHARE(APP_SID, QUESTIONNAIRE_SHARE_ID)
;

ALTER TABLE CHAIN.QNNAIRE_SHARE_ALERT_LOG ADD CONSTRAINT FK_REF_USER_QSAL_USER
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.QNR_ACTION_SECURITY_MASK
--

ALTER TABLE CHAIN.QNR_ACTION_SECURITY_MASK ADD CONSTRAINT FK_AST_QASM
	FOREIGN KEY (ACTION_SECURITY_TYPE_ID)
	REFERENCES CHAIN.ACTION_SECURITY_TYPE(ACTION_SECURITY_TYPE_ID)
;

ALTER TABLE CHAIN.QNR_ACTION_SECURITY_MASK ADD CONSTRAINT FK_CGQA_QSM
	FOREIGN KEY (COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
	REFERENCES CHAIN.COMPANY_FUNC_QNR_ACTION(COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
;

ALTER TABLE CHAIN.QNR_ACTION_SECURITY_MASK ADD CONSTRAINT FK_QNRTYPE_QASM
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_TYPE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_TYPE(APP_SID, QUESTIONNAIRE_TYPE_ID)
;


--
-- TABLE: CHAIN.QNR_SECURITY_SCHEME_CONFIG
--

ALTER TABLE CHAIN.QNR_SECURITY_SCHEME_CONFIG ADD CONSTRAINT FK_AST_QSSC
	FOREIGN KEY (ACTION_SECURITY_TYPE_ID)
	REFERENCES CHAIN.ACTION_SECURITY_TYPE(ACTION_SECURITY_TYPE_ID)
;

ALTER TABLE CHAIN.QNR_SECURITY_SCHEME_CONFIG ADD CONSTRAINT FK_CFQA_QSSC
	FOREIGN KEY (COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
	REFERENCES CHAIN.COMPANY_FUNC_QNR_ACTION(COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
;

ALTER TABLE CHAIN.QNR_SECURITY_SCHEME_CONFIG ADD CONSTRAINT FK_CSS_QSSC
	FOREIGN KEY (SECURITY_SCHEME_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_SECURITY_SCHEME(SECURITY_SCHEME_ID)
;


--
-- TABLE: CHAIN.QNR_SHARE_LOG_ENTRY
--

ALTER TABLE CHAIN.QNR_SHARE_LOG_ENTRY ADD CONSTRAINT RefCHAIN_USER485
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.QNR_SHARE_LOG_ENTRY ADD CONSTRAINT RefCOMPANY486
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.QNR_SHARE_LOG_ENTRY ADD CONSTRAINT RefSHARE_STATUS488
	FOREIGN KEY (SHARE_STATUS_ID)
	REFERENCES CHAIN.SHARE_STATUS(SHARE_STATUS_ID)
;

ALTER TABLE CHAIN.QNR_SHARE_LOG_ENTRY ADD CONSTRAINT RefQUESTIONNAIRE_SHARE495
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_SHARE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_SHARE(APP_SID, QUESTIONNAIRE_SHARE_ID)
;


--
-- TABLE: CHAIN.QNR_STATUS_LOG_ENTRY
--

ALTER TABLE CHAIN.QNR_STATUS_LOG_ENTRY ADD CONSTRAINT RefCHAIN_USER489
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.QNR_STATUS_LOG_ENTRY ADD CONSTRAINT RefQUESTIONNAIRE_STATUS491
	FOREIGN KEY (QUESTIONNAIRE_STATUS_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_STATUS(QUESTIONNAIRE_STATUS_ID)
;

ALTER TABLE CHAIN.QNR_STATUS_LOG_ENTRY ADD CONSTRAINT RefQUESTIONNAIRE496
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE(APP_SID, QUESTIONNAIRE_ID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE
--

ALTER TABLE CHAIN.QUESTIONNAIRE ADD CONSTRAINT RefCOMPONENT1220
	FOREIGN KEY (APP_SID, COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT(APP_SID, COMPONENT_ID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE ADD CONSTRAINT RefQUESTIONNAIRE_TYPE41
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_TYPE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_TYPE(APP_SID, QUESTIONNAIRE_TYPE_ID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE ADD CONSTRAINT RefCOMPANY42
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE ADD CONSTRAINT RefCUSTOMER_OPTIONS83
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE_GROUP
--

ALTER TABLE CHAIN.QUESTIONNAIRE_GROUP ADD CONSTRAINT RefCUSTOMER_OPTIONS377
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE_INVITATION
--

ALTER TABLE CHAIN.QUESTIONNAIRE_INVITATION ADD CONSTRAINT FK_INVITATION_QNR_INVITATION
	FOREIGN KEY (APP_SID, INVITATION_ID)
	REFERENCES CHAIN.INVITATION(APP_SID, INVITATION_ID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_INVITATION ADD CONSTRAINT FK_QNR_QNR_INVITATION
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE(APP_SID, QUESTIONNAIRE_ID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE_METRIC
--

ALTER TABLE CHAIN.QUESTIONNAIRE_METRIC ADD CONSTRAINT RefQUESTIONNAIRE47
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE(APP_SID, QUESTIONNAIRE_ID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_METRIC ADD CONSTRAINT RefQUESTIONNAIRE_METRIC_TYPE53
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_METRIC_TYPE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_METRIC_TYPE(APP_SID, QUESTIONNAIRE_METRIC_TYPE_ID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE_METRIC_TYPE
--

ALTER TABLE CHAIN.QUESTIONNAIRE_METRIC_TYPE ADD CONSTRAINT RefQUESTIONNAIRE_TYPE52
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_TYPE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_TYPE(APP_SID, QUESTIONNAIRE_TYPE_ID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE_SHARE
--

ALTER TABLE CHAIN.QUESTIONNAIRE_SHARE ADD CONSTRAINT RefSUPPLIER_RELATIONSHIP387
	FOREIGN KEY (APP_SID, SHARE_WITH_COMPANY_SID, QNR_OWNER_COMPANY_SID)
	REFERENCES CHAIN.SUPPLIER_RELATIONSHIP(APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_SHARE ADD CONSTRAINT RefQUESTIONNAIRE388
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE(APP_SID, QUESTIONNAIRE_ID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_SHARE ADD CONSTRAINT RefCUSTOMER_OPTIONS497
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE_TYPE
--

ALTER TABLE CHAIN.QUESTIONNAIRE_TYPE ADD CONSTRAINT RefCUSTOMER_OPTIONS84
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_TYPE ADD CONSTRAINT RefQUESTIONNAIRE_GROUP378
	FOREIGN KEY (APP_SID, GROUP_NAME)
	REFERENCES CHAIN.QUESTIONNAIRE_GROUP(APP_SID, GROUP_NAME)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_TYPE ADD CONSTRAINT FK_QSS_QNRTYPE
	FOREIGN KEY (SECURITY_SCHEME_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_SECURITY_SCHEME(SECURITY_SCHEME_ID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE_USER
--

ALTER TABLE CHAIN.QUESTIONNAIRE_USER ADD CONSTRAINT FK_CF_QU
	FOREIGN KEY (COMPANY_FUNCTION_ID)
	REFERENCES CHAIN.COMPANY_FUNCTION(COMPANY_FUNCTION_ID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_USER ADD CONSTRAINT FK_CHAIN_USER_QU
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_USER ADD CONSTRAINT FK_COMPANY_QUESTIONNAIRE_USER
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_USER ADD CONSTRAINT FK_QUESTIONNAIRE_QU
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE(APP_SID, QUESTIONNAIRE_ID)
;


--
-- TABLE: CHAIN.QUESTIONNAIRE_USER_ACTION
--

ALTER TABLE CHAIN.QUESTIONNAIRE_USER_ACTION ADD CONSTRAINT FK_CFQA_QUA
	FOREIGN KEY (COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
	REFERENCES CHAIN.COMPANY_FUNC_QNR_ACTION(COMPANY_FUNCTION_ID, QUESTIONNAIRE_ACTION_ID)
;

ALTER TABLE CHAIN.QUESTIONNAIRE_USER_ACTION ADD CONSTRAINT FK_QU_QUA
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_ID, USER_SID, COMPANY_FUNCTION_ID, COMPANY_SID)
	REFERENCES CHAIN.QUESTIONNAIRE_USER(APP_SID, QUESTIONNAIRE_ID, USER_SID, COMPANY_FUNCTION_ID, COMPANY_SID)
;

--
-- TABLE: CHAIN.RECIPIENT
--

ALTER TABLE CHAIN.RECIPIENT ADD CONSTRAINT RefCHAIN_USER746
	FOREIGN KEY (APP_SID, TO_USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.RECIPIENT ADD CONSTRAINT RefCOMPANY747
	FOREIGN KEY (APP_SID, TO_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.RECIPIENT ADD CONSTRAINT RefCUSTOMER_OPTIONS748
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.REFERENCE
--

ALTER TABLE CHAIN.REFERENCE ADD CONSTRAINT FK_CO_REFERENCE
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


ALTER TABLE CHAIN.REFERENCE ADD CONSTRAINT FK_REF_LOCATION_REF
	FOREIGN KEY (REFERENCE_LOCATION_ID)
	REFERENCES CHAIN.REFERENCE_LOCATION(REFERENCE_LOCATION_ID)
;

ALTER TABLE CHAIN.REFERENCE ADD CONSTRAINT FK_REF_UNIQUENESS_REF
	FOREIGN KEY (REFERENCE_UNIQUENESS_ID)
	REFERENCES CHAIN.REFERENCE_UNIQUENESS(REFERENCE_UNIQUENESS_ID)
;

ALTER TABLE CHAIN.REFERENCE ADD CONSTRAINT FK_REFERENCE_VALIDATION
	FOREIGN KEY (REFERENCE_VALIDATION_ID)
	REFERENCES CHAIN.REFERENCE_VALIDATION(REFERENCE_VALIDATION_ID)
;

--
-- TABLE: CHAIN.RESET_PASSWORD
--

ALTER TABLE CHAIN.RESET_PASSWORD ADD CONSTRAINT RefINVITATION238
	FOREIGN KEY (APP_SID, ACCEPT_INVITATION_ON_RESET)
	REFERENCES CHAIN.INVITATION(APP_SID, INVITATION_ID)
;

-- FB38370 chain.company_user_pkg.PreparePasswordReset: not all site users are also chain users (like GMCR)
-- ALTER TABLE CHAIN.RESET_PASSWORD DISABLE CONSTRAINT RefCHAIN_USER239
/*
ALTER TABLE CHAIN.RESET_PASSWORD ADD CONSTRAINT RefCHAIN_USER239
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;
*/


--
-- TABLE: CHAIN.SAVED_FILTER
--

ALTER TABLE CHAIN.SAVED_FILTER ADD CONSTRAINT FK_SAVED_FILTER_CMP_ID
	FOREIGN KEY (APP_SID, COMPOUND_FILTER_ID, CARD_GROUP_ID)
	REFERENCES CHAIN.COMPOUND_FILTER(APP_SID, COMPOUND_FILTER_ID, CARD_GROUP_ID)
;

ALTER TABLE CHAIN.SAVED_FILTER ADD CONSTRAINT FK_SAVED_FILTER_GRP_BY_CMP_ID
	FOREIGN KEY (APP_SID, GROUP_BY_COMPOUND_FILTER_ID, CARD_GROUP_ID)
	REFERENCES CHAIN.COMPOUND_FILTER(APP_SID, COMPOUND_FILTER_ID, CARD_GROUP_ID)
;

ALTER TABLE CHAIN.SAVED_FILTER ADD CONSTRAINT fk_saved_fltr_region_column_id
	FOREIGN KEY (card_group_id, region_column_id)
	REFERENCES chain.card_group_column_type (card_group_id, column_id)
;

ALTER TABLE CHAIN.SAVED_FILTER ADD CONSTRAINT fk_saved_fltr_date_column_id
	FOREIGN KEY (card_group_id, date_column_id)
	REFERENCES chain.card_group_column_type (card_group_id, column_id)
;

ALTER TABLE CHAIN.SAVED_FILTER ADD CONSTRAINT fk_saved_filter_company
	FOREIGN KEY (app_sid, company_sid)
	REFERENCES chain.company (app_sid, company_sid)
;

--
-- TABLE: CHAIN.SAVED_FILTER_AGGREGATION_TYPE
--

ALTER TABLE CHAIN.SAVED_FILTER_AGGREGATION_TYPE ADD CONSTRAINT FK_SAVED_FILTER_AGG_SAVED
	FOREIGN KEY (APP_SID, SAVED_FILTER_SID)
	REFERENCES CHAIN.SAVED_FILTER(APP_SID, SAVED_FILTER_SID)
;


ALTER TABLE CHAIN.SAVED_FILTER_AGGREGATION_TYPE ADD CONSTRAINT FK_SVD_FIL_AGG_TYP_CUS_AGG_TYP
	FOREIGN KEY (APP_SID, CUSTOMER_AGGREGATE_TYPE_ID)
	REFERENCES CHAIN.CUSTOMER_AGGREGATE_TYPE (APP_SID, CUSTOMER_AGGREGATE_TYPE_ID)
;

ALTER TABLE CHAIN.SAVED_FILTER_AGGREGATION_TYPE ADD CONSTRAINT UK_SAVED_FIL_AGGREGATION_TYP
	UNIQUE (APP_SID, SAVED_FILTER_SID, AGGREGATION_TYPE, CUSTOMER_AGGREGATE_TYPE_ID)
;

ALTER TABLE CHAIN.SAVED_FILTER_COLUMN ADD CONSTRAINT fk_saved_fltr_col_saved_fltr 
	FOREIGN KEY (app_sid, saved_filter_sid)
	REFERENCES chain.saved_filter (app_sid, saved_filter_sid)
;

--
-- TABLE: CHAIN.SAVED_FILTER_REGION
--

ALTER TABLE CHAIN.SAVED_FILTER_REGION ADD CONSTRAINT FK_SVD_FLTR_REGION_SVD_FLTR
	FOREIGN KEY (APP_SID, SAVED_FILTER_SID)
	REFERENCES CHAIN.SAVED_FILTER(APP_SID, SAVED_FILTER_SID)
;

--
-- TABLE: CHAIN.SECTOR
--

ALTER TABLE CHAIN.SECTOR ADD CONSTRAINT FK_SECTOR_APP_SID
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.SECTOR ADD CONSTRAINT FK_SECTOR_PARENT_ID
	FOREIGN KEY (APP_SID, PARENT_SECTOR_ID)
	REFERENCES CHAIN.SECTOR(APP_SID, SECTOR_ID)
;


--
-- TABLE: CHAIN.PRODUCT_SUPPLIER_CERTIFICATION
--

CREATE TABLE CHAIN.PRODUCT_SUPPLIER_CERTIFICATION (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_SUPPLIER_ID			NUMBER(10) NOT NULL,
	CERTIFICATION_ID			NUMBER(10) NOT NULL,
	APPLIED_DTM					DATE NOT NULL,
	CONSTRAINT PK_PRODUCT_SUPPLIER_CERTIFICTN PRIMARY KEY (APP_SID, PRODUCT_SUPPLIER_ID, CERTIFICATION_ID)
)
;

ALTER TABLE CHAIN.PRODUCT_SUPPLIER_CERTIFICATION ADD CONSTRAINT FK_PRODUCT_SUPPLIER_CERT_PRDCT
	FOREIGN KEY (APP_SID, PRODUCT_SUPPLIER_ID)
	REFERENCES CHAIN.PRODUCT_SUPPLIER (APP_SID, PRODUCT_SUPPLIER_ID);


--
-- TABLE: CHAIN.SUPPLIER_AUDIT
--

ALTER TABLE CHAIN.SUPPLIER_AUDIT ADD CONSTRAINT FK_AUDIT_AUDITOR_COMPANY
	FOREIGN KEY (APP_SID, AUDITOR_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.SUPPLIER_AUDIT ADD CONSTRAINT FK_AUDIT_CREATED_BY_COMPANY
	FOREIGN KEY (APP_SID, CREATED_BY_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.SUPPLIER_AUDIT ADD CONSTRAINT FK_AUDIT_SUPPLIER_COMPANY
	FOREIGN KEY (APP_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.SUPPLIER_FOLLOWER
--

ALTER TABLE CHAIN.SUPPLIER_FOLLOWER ADD CONSTRAINT RefSUPPLIER_RELATIONSHIP787
	FOREIGN KEY (APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.SUPPLIER_RELATIONSHIP(APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
;

ALTER TABLE CHAIN.SUPPLIER_FOLLOWER ADD CONSTRAINT RefCHAIN_USER788
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.SUPPLIER_RELATIONSHIP
--

ALTER TABLE CHAIN.SUPPLIER_RELATIONSHIP ADD CONSTRAINT RefCOMPANY25
	FOREIGN KEY (APP_SID, PURCHASER_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.SUPPLIER_RELATIONSHIP ADD CONSTRAINT RefCOMPANY26
	FOREIGN KEY (APP_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;


--
-- TABLE: CHAIN.TASK
--

ALTER TABLE CHAIN.TASK ADD CONSTRAINT RefTASK_STATUS834
	FOREIGN KEY (LAST_TASK_STATUS_ID)
	REFERENCES CHAIN.TASK_STATUS(TASK_STATUS_ID)
;

ALTER TABLE CHAIN.TASK ADD CONSTRAINT RefTASK_STATUS130
	FOREIGN KEY (TASK_STATUS_ID)
	REFERENCES CHAIN.TASK_STATUS(TASK_STATUS_ID)
;

ALTER TABLE CHAIN.TASK ADD CONSTRAINT RefCUSTOMER_OPTIONS131
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.TASK ADD CONSTRAINT RefTASK_TYPE173
	FOREIGN KEY (APP_SID, TASK_TYPE_ID)
	REFERENCES CHAIN.TASK_TYPE(APP_SID, TASK_TYPE_ID)
;

ALTER TABLE CHAIN.TASK ADD CONSTRAINT RefCHAIN_USER254
	FOREIGN KEY (APP_SID, LAST_UPDATED_BY_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.TASK ADD CONSTRAINT RefSUPPLIER_RELATIONSHIP809
	FOREIGN KEY (APP_SID, OWNER_COMPANY_SID, SUPPLIER_COMPANY_SID)
	REFERENCES CHAIN.SUPPLIER_RELATIONSHIP(APP_SID, PURCHASER_COMPANY_SID, SUPPLIER_COMPANY_SID)
;


--
-- TABLE: CHAIN.TASK_ACTION_LOOKUP
--

ALTER TABLE CHAIN.TASK_ACTION_LOOKUP ADD CONSTRAINT RefTASK_STATUS854
	FOREIGN KEY (FROM_TASK_STATUS_ID)
	REFERENCES CHAIN.TASK_STATUS(TASK_STATUS_ID)
;

ALTER TABLE CHAIN.TASK_ACTION_LOOKUP ADD CONSTRAINT RefTASK_STATUS855
	FOREIGN KEY (TO_TASK_STATUS_ID)
	REFERENCES CHAIN.TASK_STATUS(TASK_STATUS_ID)
;

ALTER TABLE CHAIN.TASK_ACTION_LOOKUP ADD CONSTRAINT RefTASK_ACTION856
	FOREIGN KEY (TASK_ACTION_ID)
	REFERENCES CHAIN.TASK_ACTION(TASK_ACTION_ID)
;


--
-- TABLE: CHAIN.TASK_ACTION_TRIGGER
--

ALTER TABLE CHAIN.TASK_ACTION_TRIGGER ADD CONSTRAINT RefTASK_ACTION857
	FOREIGN KEY (ON_TASK_ACTION_ID)
	REFERENCES CHAIN.TASK_ACTION(TASK_ACTION_ID)
;

ALTER TABLE CHAIN.TASK_ACTION_TRIGGER ADD CONSTRAINT RefTASK_ACTION858
	FOREIGN KEY (TRIGGER_TASK_ACTION_ID)
	REFERENCES CHAIN.TASK_ACTION(TASK_ACTION_ID)
;

ALTER TABLE CHAIN.TASK_ACTION_TRIGGER ADD CONSTRAINT RefTASK_TYPE859
	FOREIGN KEY (APP_SID, TASK_TYPE_ID)
	REFERENCES CHAIN.TASK_TYPE(APP_SID, TASK_TYPE_ID)
;


--
-- TABLE: CHAIN.TASK_ACTION_TRIGGER_TRANSITION
--

ALTER TABLE CHAIN.TASK_ACTION_TRIGGER_TRANSITION ADD CONSTRAINT RefTASK_STATUS860
	FOREIGN KEY (FROM_TASK_STATUS_ID)
	REFERENCES CHAIN.TASK_STATUS(TASK_STATUS_ID)
;

ALTER TABLE CHAIN.TASK_ACTION_TRIGGER_TRANSITION ADD CONSTRAINT RefTASK_STATUS861
	FOREIGN KEY (TO_TASK_STATUS_ID)
	REFERENCES CHAIN.TASK_STATUS(TASK_STATUS_ID)
;

ALTER TABLE CHAIN.TASK_ACTION_TRIGGER_TRANSITION ADD CONSTRAINT RefTASK_ACTION862
	FOREIGN KEY (TASK_ACTION_ID)
	REFERENCES CHAIN.TASK_ACTION(TASK_ACTION_ID)
;


--
-- TABLE: CHAIN.TASK_ENTRY
--

ALTER TABLE CHAIN.TASK_ENTRY ADD CONSTRAINT RefTASK_ENTRY_TYPE863
	FOREIGN KEY (TASK_ENTRY_TYPE_ID)
	REFERENCES CHAIN.TASK_ENTRY_TYPE(TASK_ENTRY_TYPE_ID)
;

ALTER TABLE CHAIN.TASK_ENTRY ADD CONSTRAINT RefCUSTOMER_OPTIONS864
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.TASK_ENTRY_DATE
--

ALTER TABLE CHAIN.TASK_ENTRY_DATE ADD CONSTRAINT RefTASK_ENTRY865
	FOREIGN KEY (APP_SID, TASK_ENTRY_ID)
	REFERENCES CHAIN.TASK_ENTRY(APP_SID, TASK_ENTRY_ID)
;


--
-- TABLE: CHAIN.TASK_ENTRY_FILE
--

ALTER TABLE CHAIN.TASK_ENTRY_FILE ADD CONSTRAINT RefFILE_UPLOAD845
	FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
	REFERENCES CHAIN.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

ALTER TABLE CHAIN.TASK_ENTRY_FILE ADD CONSTRAINT RefTASK_ENTRY866
	FOREIGN KEY (APP_SID, TASK_ENTRY_ID)
	REFERENCES CHAIN.TASK_ENTRY(APP_SID, TASK_ENTRY_ID)
;


--
-- TABLE: CHAIN.TASK_ENTRY_NOTE
--

ALTER TABLE CHAIN.TASK_ENTRY_NOTE ADD CONSTRAINT RefTASK_ENTRY867
	FOREIGN KEY (APP_SID, TASK_ENTRY_ID)
	REFERENCES CHAIN.TASK_ENTRY(APP_SID, TASK_ENTRY_ID)
;


--
-- TABLE: CHAIN.TASK_INVITATION_QNR_TYPE
--

ALTER TABLE CHAIN.TASK_INVITATION_QNR_TYPE ADD CONSTRAINT RefINVITATION_QNR_TYPE872
	FOREIGN KEY (APP_SID, INVITATION_ID, QUESTIONNAIRE_TYPE_ID)
	REFERENCES CHAIN.INVITATION_QNR_TYPE(APP_SID, INVITATION_ID, QUESTIONNAIRE_TYPE_ID)
;

ALTER TABLE CHAIN.TASK_INVITATION_QNR_TYPE ADD CONSTRAINT RefTASK873
	FOREIGN KEY (APP_SID, TASK_ID)
	REFERENCES CHAIN.TASK(APP_SID, TASK_ID)
;


--
-- TABLE: CHAIN.TASK_SCHEME
--

ALTER TABLE CHAIN.TASK_SCHEME ADD CONSTRAINT RefCUSTOMER_OPTIONS816
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.TASK_TYPE
--

ALTER TABLE CHAIN.TASK_TYPE ADD CONSTRAINT RefTASK_STATUS835
	FOREIGN KEY (DEFAULT_TASK_STATUS_ID)
	REFERENCES CHAIN.TASK_STATUS(TASK_STATUS_ID)
;

ALTER TABLE CHAIN.TASK_TYPE ADD CONSTRAINT RefCUSTOMER_OPTIONS248
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.TASK_TYPE ADD CONSTRAINT RefTASK_TYPE296
	FOREIGN KEY (APP_SID, PARENT_TASK_TYPE_ID)
	REFERENCES CHAIN.TASK_TYPE(APP_SID, TASK_TYPE_ID)
;

ALTER TABLE CHAIN.TASK_TYPE ADD CONSTRAINT RefTASK_SCHEME817
	FOREIGN KEY (APP_SID, TASK_SCHEME_ID)
	REFERENCES CHAIN.TASK_SCHEME(APP_SID, TASK_SCHEME_ID)
;

ALTER TABLE CHAIN.TASK_TYPE ADD CONSTRAINT RefCARD819
	FOREIGN KEY (CARD_ID)
	REFERENCES CHAIN.CARD(CARD_ID)
;


--
-- TABLE: CHAIN.TEMP_MESSAGE_MAP
--

ALTER TABLE CHAIN.TEMP_MESSAGE_MAP ADD CONSTRAINT RefDEFAULT_MESSAGE_DEFINITI756
	FOREIGN KEY (MESSAGE_DEFINITION_ID)
	REFERENCES CHAIN.DEFAULT_MESSAGE_DEFINITION(MESSAGE_DEFINITION_ID)
;


--
-- TABLE: CHAIN.TERTIARY_RELATIONSHIPS
--

ALTER TABLE CHAIN.TERTIARY_RELATIONSHIPS ADD CONSTRAINT FK_TR_CTR_RELATIONSHIP
	FOREIGN KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE_RELATIONSHIP(APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.TERTIARY_RELATIONSHIPS ADD CONSTRAINT FK_TR_CTR_RELATIONSHIP_2
	FOREIGN KEY (APP_SID, PRIMARY_COMPANY_TYPE_ID, TERTIARY_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE_RELATIONSHIP(APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID)
;


--
-- TABLE: CHAIN.UCD_LOGON
--

ALTER TABLE CHAIN.UCD_LOGON ADD CONSTRAINT RefCUSTOMER_OPTIONS798
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.UNINVITED_SUPPLIER
--

ALTER TABLE CHAIN.UNINVITED_SUPPLIER ADD CONSTRAINT RefCOMPANY616
	FOREIGN KEY (APP_SID, CREATED_AS_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.UNINVITED_SUPPLIER ADD CONSTRAINT FK_UNINVITED_SUPPLIER_COMPANY
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

--
-- TABLE: CHAIN.URL_OVERRIDES
--

ALTER TABLE CHAIN.URL_OVERRIDES ADD CONSTRAINT FK_CO_URL_OVERRIDES
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;


--
-- TABLE: CHAIN.USER_MESSAGE_LOG
--

ALTER TABLE CHAIN.USER_MESSAGE_LOG ADD CONSTRAINT RefMESSAGE801
	FOREIGN KEY (APP_SID, MESSAGE_ID)
	REFERENCES CHAIN.MESSAGE(APP_SID, MESSAGE_ID)
;

ALTER TABLE CHAIN.USER_MESSAGE_LOG ADD CONSTRAINT RefCHAIN_USER802
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;


--
-- TABLE: CHAIN.WORKSHEET_FILE_UPLOAD
--

ALTER TABLE CHAIN.WORKSHEET_FILE_UPLOAD ADD CONSTRAINT FK_FU_WSFU
	FOREIGN KEY (APP_SID, FILE_UPLOAD_SID)
	REFERENCES CHAIN.FILE_UPLOAD(APP_SID, FILE_UPLOAD_SID)
;

/* CHAIN SCHEDULED ALERTS */



CREATE INDEX CHAIN.IX_REVIEW_ALERT ON CHAIN.REVIEW_ALERT(APP_SID, FROM_COMPANY_SID, TO_COMPANY_SID, SENT_DTM);

ALTER TABLE CHAIN.REVIEW_ALERT ADD CONSTRAINT FK_REVIEW_ALERT_FROM_CPNY
	FOREIGN KEY (APP_SID, FROM_COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID);

ALTER TABLE CHAIN.REVIEW_ALERT ADD CONSTRAINT FK_REVIEW_ALERT_TO_CPNY
	FOREIGN KEY (APP_SID, TO_COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID);

ALTER TABLE CHAIN.REVIEW_ALERT ADD CONSTRAINT FK_REVIEW_ALERT_FROM_USER
	FOREIGN KEY (APP_SID, FROM_USER_SID) REFERENCES CHAIN.CHAIN_USER (APP_SID, USER_SID);

ALTER TABLE CHAIN.REVIEW_ALERT ADD CONSTRAINT FK_REVIEW_ALERT_TO_USER
	FOREIGN KEY (APP_SID, TO_USER_SID) REFERENCES CHAIN.CHAIN_USER (APP_SID, USER_SID);

CREATE INDEX CHAIN.IX_REVIEW_ALERT_FROM_CPNY ON CHAIN.REVIEW_ALERT (APP_SID, FROM_COMPANY_SID);

CREATE INDEX CHAIN.IX_REVIEW_ALERT_TO_CPNY ON CHAIN.REVIEW_ALERT (APP_SID, TO_COMPANY_SID);

CREATE INDEX CHAIN.IX_REVIEW_ALERT_FROM_USER ON CHAIN.REVIEW_ALERT (APP_SID, FROM_USER_SID);

CREATE INDEX CHAIN.IX_REVIEW_ALERT_TO_USER ON CHAIN.REVIEW_ALERT (APP_SID, TO_USER_SID);

ALTER TABLE CHAIN.CUSTOMER_ALERT_ENTRY_TYPE ADD CONSTRAINT RefCUSTOMER_OPTIONS1285
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.CUSTOMER_ALERT_ENTRY_TYPE ADD CONSTRAINT RefALERT_ENTRY_TYPE1286
	FOREIGN KEY (ALERT_ENTRY_TYPE_ID)
	REFERENCES CHAIN.ALERT_ENTRY_TYPE(ALERT_ENTRY_TYPE_ID)
;

ALTER TABLE CHAIN.USER_ALERT_ENTRY_TYPE ADD CONSTRAINT RefCHAIN_USER1300
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.USER_ALERT_ENTRY_TYPE ADD CONSTRAINT RefALERT_ENTRY_TYPE1301
	FOREIGN KEY (ALERT_ENTRY_TYPE_ID)
	REFERENCES CHAIN.ALERT_ENTRY_TYPE(ALERT_ENTRY_TYPE_ID)
;

ALTER TABLE CHAIN.ALERT_ENTRY ADD CONSTRAINT RefSCHEDULED_ALERT327
	FOREIGN KEY (APP_SID, OWNER_SCHEDULED_ALERT_ID, USER_SID, ALERT_ENTRY_TYPE_ID)
	REFERENCES CHAIN.SCHEDULED_ALERT(APP_SID, SCHEDULED_ALERT_ID, USER_SID, ALERT_ENTRY_TYPE_ID)
;

ALTER TABLE CHAIN.ALERT_ENTRY ADD CONSTRAINT RefCUSTOMER_OPTIONS328
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.ALERT_ENTRY ADD CONSTRAINT RefALERT_ENTRY_TYPE329
	FOREIGN KEY (ALERT_ENTRY_TYPE_ID)
	REFERENCES CHAIN.ALERT_ENTRY_TYPE(ALERT_ENTRY_TYPE_ID)
;

ALTER TABLE CHAIN.ALERT_ENTRY ADD CONSTRAINT RefCOMPANY342
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.ALERT_ENTRY ADD CONSTRAINT RefCHAIN_USER343
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.ALERT_ENTRY ADD CONSTRAINT RefALERT_ENTRY_TEMPLATE366
	FOREIGN KEY (ALERT_ENTRY_TYPE_ID, TEMPLATE_NAME)
	REFERENCES CHAIN.ALERT_ENTRY_TEMPLATE(ALERT_ENTRY_TYPE_ID, TEMPLATE_NAME)
;

ALTER TABLE CHAIN.ALERT_ENTRY ADD CONSTRAINT RefMESSAGE1283
	FOREIGN KEY (APP_SID, MESSAGE_ID)
	REFERENCES CHAIN.MESSAGE(APP_SID, MESSAGE_ID)
;

ALTER TABLE CHAIN.ALERT_ENTRY_PARAM ADD CONSTRAINT RefALERT_ENTRY1284
	FOREIGN KEY (APP_SID, ALERT_ENTRY_ID)
	REFERENCES CHAIN.ALERT_ENTRY(APP_SID, ALERT_ENTRY_ID)
;

ALTER TABLE CHAIN.ALERT_ENTRY_TEMPLATE ADD CONSTRAINT RefALERT_ENTRY_TYPE368
	FOREIGN KEY (ALERT_ENTRY_TYPE_ID)
	REFERENCES CHAIN.ALERT_ENTRY_TYPE(ALERT_ENTRY_TYPE_ID)
;

ALTER TABLE CHAIN.CUSTOMER_ALERT_ENTRY_TEMPLATE ADD CONSTRAINT RefALERT_ENTRY_TYPE1296
	FOREIGN KEY (ALERT_ENTRY_TYPE_ID)
	REFERENCES CHAIN.ALERT_ENTRY_TYPE(ALERT_ENTRY_TYPE_ID)
;

ALTER TABLE CHAIN.CUSTOMER_ALERT_ENTRY_TEMPLATE ADD CONSTRAINT RefCUSTOMER_OPTIONS1297
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.SCHEDULED_ALERT ADD CONSTRAINT RefCHAIN_USER336
	FOREIGN KEY (APP_SID, USER_SID)
	REFERENCES CHAIN.CHAIN_USER(APP_SID, USER_SID)
;

ALTER TABLE CHAIN.SCHEDULED_ALERT ADD CONSTRAINT RefCUSTOMER_OPTIONS337
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

ALTER TABLE CHAIN.SCHEDULED_ALERT ADD CONSTRAINT RefALERT_ENTRY_TYPE1303
	FOREIGN KEY (ALERT_ENTRY_TYPE_ID)
	REFERENCES CHAIN.ALERT_ENTRY_TYPE(ALERT_ENTRY_TYPE_ID)
;

--
-- TABLE: CHAIN.ACTIVITY_LOG_FILE
--

ALTER TABLE CHAIN.ACTIVITY_LOG_FILE ADD CONSTRAINT FK_ACTVTY_LOG_FILE_ACTVTY_LOG
	FOREIGN KEY (APP_SID, ACTIVITY_LOG_ID)
	REFERENCES CHAIN.ACTIVITY_LOG(APP_SID, ACTIVITY_LOG_ID)
;


-- TABLE: CHAIN.PRODUCT_COMPANY_ALERT
ALTER TABLE CHAIN.PRODUCT_COMPANY_ALERT ADD CONSTRAINT FK_PRODUCT_COMPANY_ALERT_PROD
	FOREIGN KEY (APP_SID, COMPANY_PRODUCT_ID) REFERENCES CHAIN.COMPANY_PRODUCT (APP_SID, PRODUCT_ID);

ALTER TABLE CHAIN.PRODUCT_COMPANY_ALERT ADD CONSTRAINT FK_PRODUCT_COMPANY_ALERT_CPNYP
	FOREIGN KEY (APP_SID, PURCHASER_COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID);

ALTER TABLE CHAIN.PRODUCT_COMPANY_ALERT ADD CONSTRAINT FK_PRODUCT_COMPANY_ALERT_CPNYS
	FOREIGN KEY (APP_SID, SUPPLIER_COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID);

ALTER TABLE CHAIN.PRODUCT_COMPANY_ALERT ADD CONSTRAINT FK_PRODUCT_COMPANY_ALERT_USER
	FOREIGN KEY (APP_SID, USER_SID) REFERENCES CHAIN.CHAIN_USER (APP_SID, USER_SID);



CREATE TABLE CHAIN.COMPANY_TAB(
	APP_SID				NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_TAB_ID		 NUMBER(10, 0)	 NOT NULL,
	PLUGIN_ID			  NUMBER(10, 0)	 NOT NULL,
	PLUGIN_TYPE_ID		 NUMBER(10, 0)	 NOT NULL,
	POS					NUMBER(10, 0)	 NOT NULL,
	LABEL				  VARCHAR2(254)	 NOT NULL,
	PAGE_COMPANY_TYPE_ID   NUMBER(10, 0)	 NOT NULL,
	USER_COMPANY_TYPE_ID   NUMBER(10, 0)	 NOT NULL,
	VIEWING_OWN_COMPANY	NUMBER(1) DEFAULT 0 NOT NULL,
	OPTIONS				   VARCHAR2(255),
	PAGE_COMPANY_COL_SID   NUMBER(10) NULL,
	USER_COMPANY_COL_SID   NUMBER(10) NULL,
	FLOW_CAPABILITY_ID	   NUMBER(10) NULL,
	BUSINESS_RELATIONSHIP_TYPE_ID	NUMBER(10) NULL,
	DEFAULT_SAVED_FILTER_SID		NUMBER(10) NULL,
	SUPPLIER_RESTRICTION	NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_CMP_TAB_VIEW_OWN_CMP_1_0 CHECK (viewing_own_company IN (1, 0)),
	CONSTRAINT CHK_CMP_TAB_VIEWING_OWN_TYPES CHECK (viewing_own_company = 0 OR (user_company_type_id = page_company_type_id)),
	CONSTRAINT COMPANY_TAB_PK PRIMARY KEY (APP_SID, COMPANY_TAB_ID),
	CONSTRAINT CHK_COMP_TAB_SUPP_RES CHECK (SUPPLIER_RESTRICTION IN (0, 1, 2))
);

ALTER TABLE CHAIN.COMPANY_TAB ADD CONSTRAINT REF_PAGE_CT_COMPANY_TYPE
	FOREIGN KEY (APP_SID, PAGE_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_TAB ADD CONSTRAINT REF_USER_CT_COMPANY_TYPE
	FOREIGN KEY (APP_SID, USER_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_TAB ADD CONSTRAINT REF_CO_TAB_DEF_SAVED_FILTER
	FOREIGN KEY (APP_SID, DEFAULT_SAVED_FILTER_SID)
	REFERENCES CHAIN.SAVED_FILTER(APP_SID, SAVED_FILTER_SID)
;


CREATE TABLE CHAIN.COMPANY_TAB_RELATED_CO_TYPE(
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_TAB_ID					NUMBER(10, 0)	NOT NULL,
	COMPANY_TYPE_ID					NUMBER(10, 0)	NOT NULL,
	CONSTRAINT COMPANY_TAB_REL_CO_TYPE_PK PRIMARY KEY (APP_SID, COMPANY_TAB_ID, COMPANY_TYPE_ID)
);

ALTER TABLE CHAIN.COMPANY_TAB_RELATED_CO_TYPE ADD CONSTRAINT REF_RCT_COMPANY_TAB
	FOREIGN KEY (APP_SID, COMPANY_TAB_ID)
	REFERENCES CHAIN.COMPANY_TAB(APP_SID, COMPANY_TAB_ID)
;

ALTER TABLE CHAIN.COMPANY_TAB_RELATED_CO_TYPE ADD CONSTRAINT REF_RCT_COMPANY_TYPE
	FOREIGN KEY (APP_SID, COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

CREATE TABLE CHAIN.COMPANY_TAB_COMPANY_TYPE_ROLE(
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMP_TAB_COMP_TYPE_ROLE_ID		NUMBER(10, 0)	NOT NULL,
	COMPANY_TAB_ID					NUMBER(10, 0)	NOT NULL,
	COMPANY_GROUP_TYPE_ID			NUMBER(10, 0),
	COMPANY_TYPE_ROLE_ID			NUMBER(10, 0),
	CONSTRAINT CHK_COMPANY_TYPE_ROLE_GROUP CHECK ((COMPANY_GROUP_TYPE_ID IS NOT NULL AND COMPANY_TYPE_ROLE_ID IS NULL) OR (COMPANY_GROUP_TYPE_ID IS NULL AND COMPANY_TYPE_ROLE_ID IS NOT NULL)),
	CONSTRAINT PK_COMP_TAB_COMP_TYPE_ROLE PRIMARY KEY (APP_SID, COMP_TAB_COMP_TYPE_ROLE_ID)
);

ALTER TABLE CHAIN.COMPANY_TAB_COMPANY_TYPE_ROLE ADD CONSTRAINT FK_CTCTR_COMPANY_TAB
	FOREIGN KEY (APP_SID, COMPANY_TAB_ID)
	REFERENCES CHAIN.COMPANY_TAB (APP_SID, COMPANY_TAB_ID)
;

ALTER TABLE CHAIN.COMPANY_TAB_COMPANY_TYPE_ROLE ADD CONSTRAINT FK_CTCTR_COMPANY_GROUP_TYPE
	FOREIGN KEY (COMPANY_GROUP_TYPE_ID)
	REFERENCES CHAIN.COMPANY_GROUP_TYPE (COMPANY_GROUP_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_TAB_COMPANY_TYPE_ROLE ADD CONSTRAINT FK_CTCTR_COMPANY_TYPE_ROLE
	FOREIGN KEY (APP_SID, COMPANY_TYPE_ROLE_ID)
	REFERENCES CHAIN.COMPANY_TYPE_ROLE (APP_SID, COMPANY_TYPE_ROLE_ID)
;

CREATE TABLE CHAIN.COMPANY_HEADER(
	APP_SID				NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_HEADER_ID	  NUMBER(10, 0)	 NOT NULL,
	PLUGIN_ID			  NUMBER(10, 0)	 NOT NULL,
	PLUGIN_TYPE_ID		 NUMBER(10, 0)	 NOT NULL,
	POS					NUMBER(10, 0)	 NOT NULL,
	PAGE_COMPANY_TYPE_ID   NUMBER(10, 0)	 NOT NULL,
	USER_COMPANY_TYPE_ID   NUMBER(10, 0)	 NOT NULL,
	viewing_own_company	NUMBER(1) DEFAULT 0 NOT NULL,
	PAGE_COMPANY_COL_SID   NUMBER(10, 0),
	USER_COMPANY_COL_SID   NUMBER(10, 0),
	CONSTRAINT CHK_CMP_HEAD_VIEW_OWN_CMP_1_0 CHECK (viewing_own_company IN (1, 0)),
	CONSTRAINT CHK_CMP_HEAD_VIEWING_OWN_TYPES CHECK (viewing_own_company = 0 OR (user_company_type_id = page_company_type_id)),
	CONSTRAINT COMPANY_HEADER_PK PRIMARY KEY (APP_SID, COMPANY_HEADER_ID)
);

ALTER TABLE CHAIN.COMPANY_HEADER ADD CONSTRAINT FK_PAGE_CT_COMPANY_TYPE
	FOREIGN KEY (APP_SID, PAGE_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.COMPANY_HEADER ADD CONSTRAINT FK_USER_CT_COMPANY_TYPE
	FOREIGN KEY (APP_SID, USER_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;


CREATE TABLE CHAIN.PRODUCT_HEADER(
	APP_SID					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_HEADER_ID		NUMBER(10, 0) NOT NULL,
	PLUGIN_ID				NUMBER(10, 0) NOT NULL,
	PLUGIN_TYPE_ID			NUMBER(10, 0) NOT NULL,
	POS						NUMBER(10, 0) NOT NULL,
	PRODUCT_COMPANY_TYPE_ID	NUMBER(10, 0) NOT NULL,
	USER_COMPANY_TYPE_ID	NUMBER(10, 0) NOT NULL,
	VIEWING_OWN_PRODUCT		NUMBER(1) NOT NULL,
	VIEWING_AS_SUPPLIER		NUMBER(1) NOT NULL,
	PRODUCT_COL_SID			NUMBER(10, 0),
	USER_COMPANY_COL_SID	NUMBER(10, 0),
	CONSTRAINT CHK_PRD_HEAD_VIEW_OWN_CMP_1_0 CHECK (VIEWING_OWN_PRODUCT IN (1, 0)),
	CONSTRAINT CHK_PRD_HEAD_VIEW_AS_SUPP_1_0 CHECK (VIEWING_AS_SUPPLIER IN (1, 0)),
	CONSTRAINT PRODUCT_HEADER_PK PRIMARY KEY (APP_SID, PRODUCT_HEADER_ID)
);

ALTER TABLE CHAIN.PRODUCT_HEADER ADD CONSTRAINT FK_PROD_HEADER_PROD_COMP_TYPE
	FOREIGN KEY (APP_SID, PRODUCT_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.PRODUCT_HEADER ADD CONSTRAINT FK_PROD_HEADER_USER_COMP_TYPE
	FOREIGN KEY (APP_SID, USER_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

CREATE TABLE CHAIN.PRODUCT_HEADER_PRODUCT_TYPE (
	APP_SID					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_HEADER_ID		NUMBER(10, 0) NOT NULL,
	PRODUCT_TYPE_ID			NUMBER(10, 0) NOT NULL,
	CONSTRAINT PK_PRODUCT_HEADER_PRODUCT_TYPE PRIMARY KEY (APP_SID, PRODUCT_HEADER_ID, PRODUCT_TYPE_ID)
);

ALTER TABLE CHAIN.PRODUCT_HEADER_PRODUCT_TYPE ADD CONSTRAINT FK_PRODUCT_HEADER_PROD_TYPE_PH
	FOREIGN KEY (APP_SID, PRODUCT_HEADER_ID)
	REFERENCES CHAIN.PRODUCT_HEADER(APP_SID, PRODUCT_HEADER_ID)
;

ALTER TABLE CHAIN.PRODUCT_HEADER_PRODUCT_TYPE ADD CONSTRAINT FK_PRODUCT_HEADER_PROD_TYPE_PT
	FOREIGN KEY (APP_SID, PRODUCT_TYPE_ID)
	REFERENCES CHAIN.PRODUCT_TYPE(APP_SID, PRODUCT_TYPE_ID)
;

CREATE TABLE CHAIN.PRODUCT_TAB(
	APP_SID					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_TAB_ID			NUMBER(10, 0) NOT NULL,
	PLUGIN_ID				NUMBER(10, 0) NOT NULL,
	PLUGIN_TYPE_ID			NUMBER(10, 0) NOT NULL,
	POS						NUMBER(10, 0) NOT NULL,
	LABEL					VARCHAR2(254) NOT NULL,
	PRODUCT_COMPANY_TYPE_ID	NUMBER(10, 0) NOT NULL,
	USER_COMPANY_TYPE_ID	NUMBER(10, 0) NOT NULL,
	VIEWING_OWN_PRODUCT		NUMBER(1) NOT NULL,
	VIEWING_AS_SUPPLIER		NUMBER(1) NOT NULL,
	PRODUCT_COL_SID			NUMBER(10, 0),
	USER_COMPANY_COL_SID	NUMBER(10, 0),
	CONSTRAINT CHK_PRD_TAB_VIEW_OWN_CMP_1_0 CHECK (VIEWING_OWN_PRODUCT IN (1, 0)),
	CONSTRAINT CHK_PRD_TAB_VIEW_AS_SUPP_1_0 CHECK (VIEWING_AS_SUPPLIER IN (1, 0)),
	CONSTRAINT PRODUCT_TAB_PK PRIMARY KEY (APP_SID, PRODUCT_TAB_ID)
);

ALTER TABLE CHAIN.PRODUCT_TAB ADD CONSTRAINT FK_PROD_TAB_PROD_COMP_TYPE
	FOREIGN KEY (APP_SID, PRODUCT_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.PRODUCT_TAB ADD CONSTRAINT FK_PROD_TAB_USER_COMP_TYPE
	FOREIGN KEY (APP_SID, USER_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

CREATE TABLE CHAIN.PRODUCT_TAB_PRODUCT_TYPE (
	APP_SID					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_TAB_ID			NUMBER(10, 0) NOT NULL,
	PRODUCT_TYPE_ID			NUMBER(10, 0) NOT NULL,
	CONSTRAINT PK_PRODUCT_TAB_PRODUCT_TYPE PRIMARY KEY (APP_SID, PRODUCT_TAB_ID, PRODUCT_TYPE_ID)
);

ALTER TABLE CHAIN.PRODUCT_TAB_PRODUCT_TYPE ADD CONSTRAINT FK_PRODUCT_TAB_PROD_TYPE_PH
	FOREIGN KEY (APP_SID, PRODUCT_TAB_ID)
	REFERENCES CHAIN.PRODUCT_TAB(APP_SID, PRODUCT_TAB_ID)
;

ALTER TABLE CHAIN.PRODUCT_TAB_PRODUCT_TYPE ADD CONSTRAINT FK_PRODUCT_TAB_PROD_TYPE_PT
	FOREIGN KEY (APP_SID, PRODUCT_TYPE_ID)
	REFERENCES CHAIN.PRODUCT_TYPE(APP_SID, PRODUCT_TYPE_ID)
;

CREATE TABLE CHAIN.PRODUCT_SUPPLIER_TAB(
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_SUPPLIER_TAB_ID		NUMBER(10, 0) NOT NULL,
	PLUGIN_ID					NUMBER(10, 0) NOT NULL,
	PLUGIN_TYPE_ID				NUMBER(10, 0) NOT NULL,
	POS							NUMBER(10, 0) NOT NULL,
	LABEL						VARCHAR2(254) NOT NULL,
	PRODUCT_COMPANY_TYPE_ID		NUMBER(10, 0) NOT NULL,
	USER_COMPANY_TYPE_ID		NUMBER(10, 0) NOT NULL,
	VIEWING_OWN_PRODUCT			NUMBER(1) NOT NULL,
	VIEWING_AS_SUPPLIER			NUMBER(1) NOT NULL,
	PURCHASER_COMPANY_COL_SID	NUMBER(10, 0),
	SUPPLIER_COMPANY_COL_SID	NUMBER(10, 0),
	PRODUCT_COL_SID				NUMBER(10, 0),
	USER_COMPANY_COL_SID		NUMBER(10, 0),
	CONSTRAINT CK_PRD_SUP_TAB_VW_OWN_CMP_1_0 CHECK (VIEWING_OWN_PRODUCT IN (1, 0)),
	CONSTRAINT CK_PRD_SUP_TAB_VW_AS_SUPP_1_0 CHECK (VIEWING_AS_SUPPLIER IN (1, 0)),
	CONSTRAINT PRODUCT_SUPPLIER_TAB_PK PRIMARY KEY (APP_SID, PRODUCT_SUPPLIER_TAB_ID)
);

ALTER TABLE CHAIN.PRODUCT_SUPPLIER_TAB ADD CONSTRAINT FK_PROD_SUP_TAB_PROD_COMP_TYPE
	FOREIGN KEY (APP_SID, PRODUCT_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

ALTER TABLE CHAIN.PRODUCT_SUPPLIER_TAB ADD CONSTRAINT FK_PROD_SUP_TAB_USER_COMP_TYPE
	FOREIGN KEY (APP_SID, USER_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID)
;

CREATE TABLE CHAIN.PROD_SUPP_TAB_PRODUCT_TYPE (
	APP_SID						NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_SUPPLIER_TAB_ID	 NUMBER(10, 0)	 NOT NULL,
	PRODUCT_TYPE_ID				NUMBER(10, 0)	 NOT NULL,
	CONSTRAINT PK_PROD_SUPP_TAB_PRODUCT_TYPE PRIMARY KEY (APP_SID, PRODUCT_SUPPLIER_TAB_ID, PRODUCT_TYPE_ID)
);

ALTER TABLE CHAIN.PROD_SUPP_TAB_PRODUCT_TYPE ADD CONSTRAINT FK_PROD_SUPP_TAB_PROD_TYPE_PH
	FOREIGN KEY (APP_SID, PRODUCT_SUPPLIER_TAB_ID)
	REFERENCES CHAIN.PRODUCT_SUPPLIER_TAB(APP_SID, PRODUCT_SUPPLIER_TAB_ID)
;

ALTER TABLE CHAIN.PROD_SUPP_TAB_PRODUCT_TYPE ADD CONSTRAINT FK_PROD_SUPP_TAB_PROD_TYPE_PT
	FOREIGN KEY (APP_SID, PRODUCT_TYPE_ID)
	REFERENCES CHAIN.PRODUCT_TYPE(APP_SID, PRODUCT_TYPE_ID)
;

CREATE TABLE CHAIN.PRODUCT_METRIC_AGG_RULE (
	RULE_TYPE_ID				NUMBER(2) NOT NULL,
	LABEL						VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_PRODUCT_METRIC_AGG_RULE PRIMARY KEY (RULE_TYPE_ID)
)
;

CREATE TABLE CHAIN.PRODUCT_METRIC_ICON (
	PRODUCT_METRIC_ICON_ID		NUMBER(10,0) 	NOT NULL,
	DESCRIPTION					VARCHAR2(255)	NOT NULL,
	ICON_PATH					VARCHAR2(500)	NOT NULL,
	CONSTRAINT PK_PRODUCT_METRIC_ICON PRIMARY KEY (PRODUCT_METRIC_ICON_ID)
)
;

CREATE TABLE CHAIN.PRODUCT_METRIC (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	IND_SID						NUMBER(10, 0)	NOT NULL,
	APPLIES_TO_PRODUCT			NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	APPLIES_TO_PROD_SUPPLIER	NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	PRODUCT_METRIC_ICON_ID		NUMBER(10, 0)	NULL,
	IS_MANDATORY				NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	SHOW_MEASURE				NUMBER(1, 0)	DEFAULT 1 NOT NULL,
	CONSTRAINT PK_PRODUCT_METRIC PRIMARY KEY (APP_SID, IND_SID),
	CONSTRAINT CHK_PROD_METRIC_MAND CHECK (IS_MANDATORY IN (0,1)),
	CONSTRAINT CHK_PROD_MET_APP_TO_PROD CHECK (APPLIES_TO_PRODUCT IN (0,1)),
	CONSTRAINT CHK_PROD_MET_APP_TO_PR_SUPP CHECK (APPLIES_TO_PROD_SUPPLIER IN (0,1)),
	CONSTRAINT CHK_PROD_METRIC_SHW_MSR CHECK (SHOW_MEASURE IN (0,1))
)
;

ALTER TABLE CHAIN.PRODUCT_METRIC ADD CONSTRAINT FK_PRD_MTRC_PRD_MTRC_ICON
	FOREIGN KEY (PRODUCT_METRIC_ICON_ID)
	REFERENCES CHAIN.PRODUCT_METRIC_ICON (PRODUCT_METRIC_ICON_ID)
;

ALTER TABLE CHAIN.PRODUCT_SUPPLIER_METRIC_VAL ADD CONSTRAINT FK_PRD_SUPPL_MTRC_VAL_PRD_MTRC
	FOREIGN KEY (APP_SID, IND_SID)
	REFERENCES CHAIN.PRODUCT_METRIC (APP_SID, IND_SID)
;

CREATE TABLE CHAIN.PRODUCT_METRIC_PRODUCT_TYPE (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	IND_SID						NUMBER(10, 0)	NOT NULL,
	PRODUCT_TYPE_ID				NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_PRODUCT_METRIC_PRODUCT_TYPE PRIMARY KEY (APP_SID, IND_SID, PRODUCT_TYPE_ID)
)
;

ALTER TABLE CHAIN.PRODUCT_METRIC_PRODUCT_TYPE ADD CONSTRAINT FK_PRD_MTRC_PRD_TYPE_PRD_TYPE
	FOREIGN KEY (APP_SID, PRODUCT_TYPE_ID)
	REFERENCES CHAIN.PRODUCT_TYPE (APP_SID, PRODUCT_TYPE_ID)
;

ALTER TABLE CHAIN.PRODUCT_METRIC_PRODUCT_TYPE ADD CONSTRAINT FK_PRD_MTRC_PRD_TYPE_PRD_MTRC
	FOREIGN KEY (APP_SID, IND_SID)
	REFERENCES CHAIN.PRODUCT_METRIC (APP_SID, IND_SID)
;

CREATE TABLE CHAIN.PRODUCT_METRIC_VAL (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PRODUCT_METRIC_VAL_ID		NUMBER(10) NOT NULL,
	PRODUCT_ID					NUMBER(10) NOT NULL,
	IND_SID						NUMBER(10) NOT NULL,
	START_DTM					DATE NOT NULL,
	END_DTM						DATE NOT NULL,
	VAL_NUMBER					NUMBER(24, 10) NOT NULL,
	ENTERED_AS_VAL_NUMBER		NUMBER(24, 10),
	MEASURE_CONVERSION_ID		NUMBER(10),
	ENTERED_DTM					DATE,
	ENTERED_BY_SID				NUMBER(10) NOT NULL,
	NOTE						VARCHAR2(4000),
	SOURCE_TYPE					NUMBER(10, 0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_PRODUCT_METRIC_VAL PRIMARY KEY (APP_SID, PRODUCT_METRIC_VAL_ID),
	CONSTRAINT UK_PRODUCT_METRIC_VAL UNIQUE (APP_SID, PRODUCT_ID, IND_SID, START_DTM),
	CONSTRAINT CK_PRODUCT_METRIC_VAL_DTM CHECK (START_DTM < END_DTM)
)
;

ALTER TABLE CHAIN.PRODUCT_METRIC_VAL ADD CONSTRAINT FK_PRODUCT_METRIC_VAL_PRODUCT
	FOREIGN KEY (APP_SID, PRODUCT_ID)
	REFERENCES CHAIN.COMPANY_PRODUCT (APP_SID, PRODUCT_ID)
;

ALTER TABLE CHAIN.PRODUCT_METRIC_VAL ADD CONSTRAINT FK_PRD_MTRC_VAL_PRD_MTRC
	FOREIGN KEY (APP_SID, IND_SID)
	REFERENCES CHAIN.PRODUCT_METRIC (APP_SID, IND_SID)
;

CREATE SEQUENCE CHAIN.AUDIT_REQUEST_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.AUDIT_REQUEST (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AUDIT_REQUEST_ID			NUMBER(10, 0)	NOT NULL,
	AUDITOR_COMPANY_SID			NUMBER(10, 0)	NOT NULL,
	AUDITEE_COMPANY_SID			NUMBER(10, 0)	NOT NULL,
	REQUESTED_BY_COMPANY_SID	NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'CHAIN_COMPANY') NOT NULL,
	REQUESTED_BY_USER_SID		NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'SID') NOT NULL,
	REQUESTED_AT_DTM			DATE			DEFAULT SYSDATE NOT NULL,
	NOTES						CLOB,
	PROPOSED_DTM				DATE,
	AUDIT_SID					NUMBER(10, 0),
	CONSTRAINT PK_AUDIT_REQUEST PRIMARY KEY (APP_SID, AUDIT_REQUEST_ID),
	CONSTRAINT FK_AUDITREQ_AUDITOR FOREIGN KEY (APP_SID, AUDITOR_COMPANY_SID) REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID),
	CONSTRAINT FK_AUDITREQ_AUDITEE FOREIGN KEY (APP_SID, AUDITEE_COMPANY_SID) REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID),
	CONSTRAINT FK_AUDITREQ_REQBY   FOREIGN KEY (APP_SID, REQUESTED_BY_COMPANY_SID) REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
);

CREATE TABLE CHAIN.AUDIT_REQUEST_ALERT (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	AUDIT_REQUEST_ID			NUMBER(10, 0)	NOT NULL,
	USER_SID					NUMBER(10, 0)	NOT NULL,
	SENT_DTM					DATE,
	CONSTRAINT PK_AUDIT_REQUEST_ALERT PRIMARY KEY (APP_SID, AUDIT_REQUEST_ID, USER_SID),
	CONSTRAINT FK_ADUITREQALERT_AUDITREQ FOREIGN KEY (APP_SID, AUDIT_REQUEST_ID) REFERENCES CHAIN.AUDIT_REQUEST(APP_SID, AUDIT_REQUEST_ID)
);

ALTER TABLE CHAIN.MESSAGE ADD CONSTRAINT FK_MESSAGE_AUDITREQ
	FOREIGN KEY (APP_SID, RE_AUDIT_REQUEST_ID)
	REFERENCES CHAIN.AUDIT_REQUEST(APP_SID, AUDIT_REQUEST_ID)
;

CREATE SEQUENCE CHAIN.PROJECT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.PROJECT (
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	PROJECT_ID			NUMBER(10, 0)	NOT NULL,
	NAME				VARCHAR(255)	NOT NULL,
	CONSTRAINT PK_PROJECT PRIMARY KEY (APP_SID, PROJECT_ID)
);

ALTER TABLE CHAIN.ACTIVITY ADD
	CONSTRAINT FK_ACTVTY_PROJECT
		FOREIGN KEY (APP_SID, PROJECT_ID)
		REFERENCES CHAIN.PROJECT (APP_SID, PROJECT_ID)
;

CREATE TABLE chain.invitation_batch (
	app_sid					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	batch_job_id			NUMBER(10) NOT NULL,
	cc_from_user			NUMBER(1) NOT NULL,
	personal_msg			VARCHAR2(4000),
	cc_user_sid				NUMBER(10),
	cc_others				VARCHAR2(1000),
	std_alert_type_id		NUMBER(10) NOT NULL,
	lang 					VARCHAR2(20),
	CONSTRAINT chk_inv_batch_cc_from_0_1 CHECK (cc_from_user IN (0,1)),
	CONSTRAINT pk_invitation_batch PRIMARY KEY (app_sid, batch_job_id)
);

ALTER TABLE CHAIN.INVITATION ADD CONSTRAINT FK_INVITATION_BATCH_JOB
	FOREIGN KEY (APP_SID, BATCH_JOB_ID)
	REFERENCES CHAIN.INVITATION_BATCH(APP_SID, BATCH_JOB_ID);

CREATE INDEX CHAIN.IX_INVITATION_BATCH_JOB ON CHAIN.INVITATION(APP_SID, BATCH_JOB_ID);

CREATE TABLE CHAIN.QUESTIONNAIRE_EXPIRY_ALERT (
	APP_SID					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	QUESTIONNAIRE_SHARE_ID	NUMBER(10) NOT NULL,
	USER_SID				NUMBER(10) NOT NULL,
	CONSTRAINT PK_QUESTIONNAIRE_EXPIRY_ALERT PRIMARY KEY (APP_SID, QUESTIONNAIRE_SHARE_ID, USER_SID),
	CONSTRAINT FK_QNR_EXPIRY_SHARE_ID FOREIGN KEY (APP_SID, QUESTIONNAIRE_SHARE_ID) REFERENCES CHAIN.QUESTIONNAIRE_SHARE (APP_SID, QUESTIONNAIRE_SHARE_ID),
	CONSTRAINT FK_QNR_EXPIRY_USER FOREIGN KEY (APP_SID, USER_SID) REFERENCES CHAIN.CHAIN_USER (APP_SID, USER_SID)
);

CREATE INDEX CHAIN.IX_QNR_EXPIRY_SHARE_ID ON CHAIN.QUESTIONNAIRE_EXPIRY_ALERT (APP_SID, QUESTIONNAIRE_SHARE_ID);
CREATE INDEX CHAIN.IX_QNR_EXPIRY_USER ON CHAIN.QUESTIONNAIRE_EXPIRY_ALERT (APP_SID, USER_SID);

CREATE TABLE CHAIN.FILTERSUPPLIERREPORTLINKS
(
	APP_SID			NUMBER(10,0)		DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	REPORT_URL		NVARCHAR2(2000)		NOT NULL,
	LABEL			NVARCHAR2(500)		NOT NULL,
	POSITION		NUMBER(10)			NULL
);

CREATE SEQUENCE CHAIN.BUSINESS_REL_TYPE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BUSINESS_RELATIONSHIP_TYPE (
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BUSINESS_RELATIONSHIP_TYPE_ID	NUMBER(10,0) NOT NULL,
	LABEL							VARCHAR2(255) NOT NULL,
	LOOKUP_KEY 						VARCHAR2(255),
	FORM_PATH						VARCHAR2(255),
	TAB_SID							NUMBER(10, 0),
	COLUMN_SID						NUMBER(10, 0),
	USE_SPECIFIC_DATES				NUMBER(1,0) DEFAULT 1 NOT NULL,
	PERIOD_SET_ID					NUMBER(10,0) DEFAULT NULL,
	PERIOD_INTERVAL_ID				NUMBER(10,0) DEFAULT NULL,
	CONSTRAINT PK_BUSINESS_RELATIONSHIP_TYPE PRIMARY KEY (APP_SID, BUSINESS_RELATIONSHIP_TYPE_ID),
	CONSTRAINT CHK_BRT_USE_SPECIFIC_DATES CHECK (USE_SPECIFIC_DATES IN (0,1)) ENABLE,
	CONSTRAINT CHK_BRT_PERIOD_IDS CHECK ((USE_SPECIFIC_DATES = 1 AND PERIOD_SET_ID IS NULL AND PERIOD_INTERVAL_ID IS NULL) OR (USE_SPECIFIC_DATES = 0 AND PERIOD_SET_ID IS NOT NULL AND PERIOD_INTERVAL_ID IS NOT NULL)) ENABLE
);

CREATE INDEX CHAIN.IX_BUS_REL_TYPE_PER_INTERVAL ON CHAIN.BUSINESS_RELATIONSHIP_TYPE (APP_SID, PERIOD_SET_ID, PERIOD_INTERVAL_ID);

CREATE SEQUENCE CHAIN.BUSINESS_REL_TIER_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BUSINESS_RELATIONSHIP_TIER (
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BUSINESS_RELATIONSHIP_TYPE_ID	NUMBER(10,0) NOT NULL,
	BUSINESS_RELATIONSHIP_TIER_ID	NUMBER(10,0) NOT NULL,
	TIER							NUMBER(10,0) NOT NULL,
	LABEL							VARCHAR2(255) NOT NULL,
	DIRECT_FROM_PREVIOUS_TIER		NUMBER(1),
	CREATE_SUPPLIER_RELATIONSHIP	NUMBER(1),
	CREATE_NEW_COMPANY				NUMBER(1) DEFAULT 0 NOT NULL,
	LOOKUP_KEY 						VARCHAR2(255),
	ALLOW_MULTIPLE_COMPANIES		NUMBER(1) DEFAULT 0 NOT NULL,
	CREATE_SUP_RELS_W_LOWER_TIERS	NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_BUSINESS_RELATIONSHIP_TIER PRIMARY KEY (APP_SID, BUSINESS_RELATIONSHIP_TIER_ID),
	CONSTRAINT FK_BUS_REL_TIER_BUS_REL_TYPE FOREIGN KEY (APP_SID, BUSINESS_RELATIONSHIP_TYPE_ID) REFERENCES CHAIN.BUSINESS_RELATIONSHIP_TYPE (APP_SID, BUSINESS_RELATIONSHIP_TYPE_ID),
	CONSTRAINT UK_BUS_REL_TIER_TIER UNIQUE(APP_SID, BUSINESS_RELATIONSHIP_TYPE_ID, TIER),
	CONSTRAINT CK_BUS_REL_TIER_TIER CHECK (TIER > 0),
	CONSTRAINT CK_BUS_REL_TIER_DIRECT CHECK (
		(TIER = 1 AND DIRECT_FROM_PREVIOUS_TIER IS NULL) OR
		(TIER > 1 AND DIRECT_FROM_PREVIOUS_TIER IN (0, 1))
	),
	CONSTRAINT CK_BUS_REL_TIER_CREATE_SUP_REL CHECK (
	  	(TIER = 1 AND CREATE_SUPPLIER_RELATIONSHIP IS NULL) OR
		(TIER > 1 AND CREATE_SUPPLIER_RELATIONSHIP IN (0, 1))
	),
	CONSTRAINT CK_BUS_REL_TIER_CTSRWLT CHECK (CREATE_SUP_RELS_W_LOWER_TIERS IN (0, 1))
);

CREATE TABLE CHAIN.BUSINESS_REL_TIER_COMPANY_TYPE (
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BUSINESS_RELATIONSHIP_TIER_ID	NUMBER(10,0) NOT NULL,
	COMPANY_TYPE_ID					NUMBER(10,0) NOT NULL,
	CONSTRAINT PK_BUS_REL_TIER_COMP_TYPE PRIMARY KEY (APP_SID, BUSINESS_RELATIONSHIP_TIER_ID, COMPANY_TYPE_ID),
	CONSTRAINT FK_BUS_REL_TIER_COMP_TYPE_TIER FOREIGN KEY (APP_SID, BUSINESS_RELATIONSHIP_TIER_ID) REFERENCES CHAIN.BUSINESS_RELATIONSHIP_TIER (APP_SID, BUSINESS_RELATIONSHIP_TIER_ID),
	CONSTRAINT FK_BUS_REL_TIER_COMP_TYPE_COMP FOREIGN KEY (APP_SID, COMPANY_TYPE_ID) REFERENCES CHAIN.COMPANY_TYPE (APP_SID, COMPANY_TYPE_ID)
);

CREATE SEQUENCE CHAIN.BUSINESS_RELATIONSHIP_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

--
-- TABLE: CHAIN.BUSINESS_RELATIONSHIP
--

CREATE TABLE CHAIN.BUSINESS_RELATIONSHIP (
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BUSINESS_RELATIONSHIP_ID		NUMBER(10,0) NOT NULL,
	BUSINESS_RELATIONSHIP_TYPE_ID	NUMBER(10,0) NOT NULL,
	SIGNATURE						VARCHAR2(255),
	CONSTRAINT PK_BUSINESS_RELATIONSHIP PRIMARY KEY (APP_SID, BUSINESS_RELATIONSHIP_ID),
	CONSTRAINT FK_BUS_REL_BUS_REL_TYPE FOREIGN KEY (APP_SID, BUSINESS_RELATIONSHIP_TYPE_ID) REFERENCES CHAIN.BUSINESS_RELATIONSHIP_TYPE (APP_SID, BUSINESS_RELATIONSHIP_TYPE_ID)
);

CREATE SEQUENCE chain.business_rel_period_id_seq
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE chain.business_relationship_period (
	app_sid							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	business_rel_period_id			NUMBER(10,0) NOT NULL,
	business_relationship_id		NUMBER(10,0) NOT NULL,
	start_dtm						DATE NOT NULL,
	end_dtm							DATE,
	CONSTRAINT PK_BUSINESS_REL_PERIOD PRIMARY KEY (app_sid, business_rel_period_id),
	CONSTRAINT FK_BUS_REL_PERIOD_BUS_REL FOREIGN KEY (app_sid, business_relationship_id) REFERENCES chain.business_relationship (app_sid, business_relationship_id),
	CONSTRAINT CK_BUS_REL_PERIOD_END_DTM CHECK (end_dtm IS NULL OR end_dtm >= start_dtm)
);

--
-- TABLE: CHAIN.BUSINESS_RELATIONSHIP_COMPANY
--

CREATE TABLE CHAIN.BUSINESS_RELATIONSHIP_COMPANY (
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BUSINESS_RELATIONSHIP_ID		NUMBER(10,0) NOT NULL,
	BUSINESS_RELATIONSHIP_TIER_ID	NUMBER(10,0) NOT NULL,
	COMPANY_SID						NUMBER(10,0) NOT NULL,
	POS								NUMBER(10, 0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_BUS_REL_COMPANY PRIMARY KEY (APP_SID, BUSINESS_RELATIONSHIP_ID, BUSINESS_RELATIONSHIP_TIER_ID, POS),
	CONSTRAINT UK_BUS_REL_COMPANY_COMPANY UNIQUE (APP_SID, BUSINESS_RELATIONSHIP_ID, COMPANY_SID),
	CONSTRAINT FK_BUS_REL_COMPANY_BUS_REL FOREIGN KEY (APP_SID, BUSINESS_RELATIONSHIP_ID) REFERENCES CHAIN.BUSINESS_RELATIONSHIP (APP_SID, BUSINESS_RELATIONSHIP_ID),
	CONSTRAINT FK_BUS_REL_COMPANY_TIER FOREIGN KEY (APP_SID, BUSINESS_RELATIONSHIP_TIER_ID) REFERENCES CHAIN.BUSINESS_RELATIONSHIP_TIER (APP_SID, BUSINESS_RELATIONSHIP_TIER_ID),
	CONSTRAINT FK_BUS_REL_COMPANY_COMPANY FOREIGN KEY (APP_SID, COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID)
);

--
-- TABLE: CHAIN.CAPABILITY_FLOW_CAPABILITY
--

CREATE TABLE CHAIN.CAPABILITY_FLOW_CAPABILITY (
	APP_SID					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FLOW_CAPABILITY_ID		NUMBER(10, 0) NOT NULL,
	CAPABILITY_ID			NUMBER(10, 0) NOT NULL,
	CONSTRAINT PK_CAP_FLOW_CAP PRIMARY KEY (APP_SID, FLOW_CAPABILITY_ID, CAPABILITY_ID),
	CONSTRAINT UK_CAP_FLOW_CAP_CAPABILITY UNIQUE (APP_SID, CAPABILITY_ID),
	CONSTRAINT FK_CAP_FLOW_CAP_CAPABILITY FOREIGN KEY (CAPABILITY_ID) REFERENCES CHAIN.CAPABILITY (CAPABILITY_ID)
);

CREATE TABLE chain.geotag_batch(
	app_sid 			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	geotag_batch_id		NUMBER(10, 0) NOT NULL,
	batch_job_id		NUMBER(10, 0) NOT NULL,
	source				NUMBER(1) NOT NULL,
	CONSTRAINT pk_geotag_batch PRIMARY KEY (app_sid, geotag_batch_id),
	-- cross schema constraint
	CONSTRAINT chk_geotag_batch_trigger CHECK (source IN (0,1,2,3))
);

CREATE TABLE chain.geotag_batch_company_queue(
	app_sid 			NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	geotag_batch_id		NUMBER(10, 0) NOT NULL,
	company_sid			NUMBER(10, 0) NOT NULL,
	processed_dtm		DATE,
	longitude			NUMBER,
	latitude			NUMBER,
	CONSTRAINT pk_geotag_batch_company_queue PRIMARY KEY (app_sid, geotag_batch_id, company_sid),
	CONSTRAINT fk_geotag_batch_company FOREIGN KEY (app_sid, company_sid) REFERENCES chain.company (app_sid, company_sid),
	CONSTRAINT fk_geotag_batch FOREIGN KEY (app_sid, geotag_batch_id) REFERENCES chain.geotag_batch (app_sid, geotag_batch_id)
);

--
-- TABLE: CHAIN.FILTER_PAGE_COLUMN
--

ALTER TABLE CHAIN.FILTER_PAGE_COLUMN ADD CONSTRAINT FK_FLTR_PG_COL_CARD_GROUP
	FOREIGN KEY (CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP(CARD_GROUP_ID)
;

--
-- TABLE: CHAIN.FLOW_QUESTIONNAIRE_TYPE
--

CREATE TABLE CHAIN.FLOW_QUESTIONNAIRE_TYPE(
	APP_SID				 	NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FLOW_SID				NUMBER(10, 0)	 NOT NULL,
	QUESTIONNAIRE_TYPE_ID	NUMBER(10, 0)	 NOT NULL,
	CONSTRAINT	PK_FLOW_QNR_TYPE	PRIMARY KEY (APP_SID, FLOW_SID)
);

ALTER TABLE CHAIN.FLOW_QUESTIONNAIRE_TYPE ADD CONSTRAINT FK_FLOW_QNR_TYPE_QNNAIRE_TYPE
	FOREIGN KEY (APP_SID, QUESTIONNAIRE_TYPE_ID)
	REFERENCES CHAIN.QUESTIONNAIRE_TYPE (APP_SID, QUESTIONNAIRE_TYPE_ID)
;

--
-- TABLE: CHAIN.COMPANY_TAG_GROUP
--

CREATE TABLE CHAIN.COMPANY_TAG_GROUP (
	APP_SID						  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID					  NUMBER(10, 0)	NOT NULL,
	TAG_GROUP_ID					 NUMBER(10, 0)	NOT NULL,
	APPLIES_TO_COMPONENT			 NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	APPLIES_TO_PURCHASE			  NUMBER(1, 0)	 DEFAULT 0 NOT NULL,
	CONSTRAINT PK_COMP_TAG_GROUP PRIMARY KEY (APP_SID, COMPANY_SID, TAG_GROUP_ID)
);

ALTER TABLE CHAIN.COMPANY_TAG_GROUP ADD CONSTRAINT FK_COMP_TAG_GROUP_COMPANY
	FOREIGN KEY (APP_SID, COMPANY_SID)
	REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID);

--
-- TABLE: CHAIN.COMPONENT_TAG
--

CREATE TABLE CHAIN.COMPONENT_TAG (
	APP_SID						  NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TAG_ID						   NUMBER(10, 0)	NOT NULL,
	COMPONENT_ID					 NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_COMPONENT_TAG PRIMARY KEY (APP_SID, TAG_ID, COMPONENT_ID)
);

ALTER TABLE CHAIN.COMPONENT_TAG ADD CONSTRAINT FK_COMPONENT_TAG_COMPONENT
	FOREIGN KEY (APP_SID, COMPONENT_ID)
	REFERENCES CHAIN.COMPONENT (APP_SID, COMPONENT_ID);

--
-- TABLE: CHAIN.PURCHASE_TAG
--

CREATE TABLE CHAIN.PURCHASE_TAG (
	APP_SID						NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	TAG_ID						NUMBER(10, 0)	NOT NULL,
	PURCHASE_ID					NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_PURCHASE_TAG PRIMARY KEY (APP_SID, TAG_ID, PURCHASE_ID)
);

ALTER TABLE CHAIN.PURCHASE_TAG ADD CONSTRAINT FK_PURCHASE_TAG_COMPONENT
	FOREIGN KEY (APP_SID, PURCHASE_ID)
	REFERENCES CHAIN.PURCHASE (APP_SID, PURCHASE_ID);

CREATE INDEX chain.ix_purchase_tag_purchase_id ON chain.purchase_tag (app_sid, purchase_id);

--
-- TABLE: CHAIN.FLOW_FILTER
--

CREATE TABLE CHAIN.FLOW_FILTER (
	APP_SID 				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	FLOW_SID			  	NUMBER(10) NOT NULL,
	SAVED_FILTER_SID	 	NUMBER(10) NOT NULL,
  CONSTRAINT PK_FLOW_FILTER PRIMARY KEY (APP_SID, FLOW_SID, SAVED_FILTER_SID)
);

ALTER TABLE CHAIN.FLOW_FILTER ADD CONSTRAINT FK_FLOW_FILTER_FILTER
	FOREIGN KEY (APP_SID, SAVED_FILTER_SID)
	REFERENCES CHAIN.SAVED_FILTER(APP_SID, SAVED_FILTER_SID)
	ON DELETE CASCADE
;


--start FB82030
CREATE TABLE CHAIN.COMPANY_TYPE_TAG_GROUP(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	COMPANY_TYPE_ID		NUMBER(10, 0)	NOT NULL,
	TAG_GROUP_ID		NUMBER(10, 0)	NOT NULL,
	CONSTRAINT PK_COMPANY_TYPE_TAG_GROUP PRIMARY KEY (APP_SID, COMPANY_TYPE_ID, TAG_GROUP_ID)
);

ALTER TABLE CHAIN.COMPANY_TYPE_TAG_GROUP ADD CONSTRAINT FK_COMP_TYPE_TAG_GR_COMP_TYPE
	FOREIGN KEY (APP_SID, COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE(APP_SID, COMPANY_TYPE_ID);

--end FB82030

--start US2996


CREATE TABLE CHAIN.RISK_LEVEL (
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	RISK_LEVEL_ID					NUMBER(10, 0)	NOT NULL,
	LABEL							VARCHAR2(255)	NOT NULL,
	LOOKUP_KEY				 		VARCHAR2(255)	NULL,
	CONSTRAINT PK_RISK_LEVEL PRIMARY KEY (APP_SID, RISK_LEVEL_ID)
);

CREATE UNIQUE INDEX CHAIN.UK_RISK_LEVEL_LOOKUP_KEY ON CHAIN.RISK_LEVEL (APP_SID, NVL(UPPER(LOOKUP_KEY), TO_CHAR(RISK_LEVEL_ID)));

CREATE SEQUENCE CHAIN.RISK_LEVEL_ID_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999
  INCREMENT BY 1
  START WITH 1
  CACHE 20
  NOORDER
  NOCYCLE;

CREATE TABLE CHAIN.COUNTRY_RISK_LEVEL (
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COUNTRY							VARCHAR2(2)		NOT NULL,
	RISK_LEVEL_ID					NUMBER(10, 0)	NOT NULL,
	START_DTM				 		DATE			NOT NULL,
	CONSTRAINT PK_COUNTRY_RISK_LEVEL PRIMARY KEY (APP_SID, COUNTRY, START_DTM),
	CONSTRAINT FK_RISK_LEVEL FOREIGN KEY (APP_SID, RISK_LEVEL_ID) REFERENCES CHAIN.RISK_LEVEL(APP_SID, RISK_LEVEL_ID)
);

CREATE TABLE chain.dedupe_no_match_action (
	dedupe_no_match_action_id			NUMBER(10) NOT NULL,
	description 						VARCHAR2(100) NOT NULL,
	CONSTRAINT pk_dedupe_no_match_action PRIMARY KEY (dedupe_no_match_action_id)
);

CREATE TABLE chain.dedupe_sub (
	app_sid				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	dedupe_sub_id		NUMBER(10) NOT NULL,
	pattern				VARCHAR2(1000) NOT NULL,
	substitution		VARCHAR2(1000) NOT NULL,
	proc_pattern		VARCHAR2(1000),
	proc_substitution   VARCHAR2(1000),
	updated_dtm		 DATE,
	CONSTRAINT pk_dedupe_sub PRIMARY KEY (app_sid, dedupe_sub_id)
);

COMMENT ON TABLE chain.dedupe_sub IS 'desc="Deduplication CMS table for holding alternative strings for matching"';
COMMENT ON COLUMN chain.dedupe_sub.app_sid IS 'app';
COMMENT ON COLUMN chain.dedupe_sub.dedupe_sub_id IS 'desc="Id",auto';
COMMENT ON COLUMN chain.dedupe_sub.pattern IS 'desc="Pattern"';
COMMENT ON COLUMN chain.dedupe_sub.substitution IS 'desc="Substitution"';
COMMENT ON COLUMN chain.dedupe_sub.proc_pattern IS 'desc="Pre-processed pattern"';
COMMENT ON COLUMN chain.dedupe_sub.proc_substitution IS 'desc="Pre-processed substitution"';
COMMENT ON COLUMN chain.dedupe_sub.updated_dtm iS 'desc="Updated date"';

ALTER TABLE chain.dedupe_sub ADD CONSTRAINT fk_cust_opt_dedupe_sub
	FOREIGN KEY (app_sid)
	REFERENCES chain.customer_options(app_sid)
;

CREATE TABLE chain.import_source(
	app_sid						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	import_source_id			NUMBER NOT NULL,
	name						VARCHAR2(255) NOT NULL,
	position					NUMBER NOT NULL,
	dedupe_no_match_action_id	NUMBER(1, 0) DEFAULT 1 NOT NULL,
	lookup_key					VARCHAR2(32) NOT NULL,
	is_owned_by_system			NUMBER(1, 0) DEFAULT 0 NOT NULL,
	override_company_active		NUMBER(1, 0) DEFAULT 0 NOT NULL,
	CONSTRAINT pk_import_source PRIMARY KEY (app_sid, import_source_id),
	CONSTRAINT uc_import_source UNIQUE (app_sid, position)  DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT uc_import_source_lookup UNIQUE (app_sid, lookup_key),
	CONSTRAINT chk_is_owned_by_system CHECK (is_owned_by_system IN (0,1))
);

CREATE UNIQUE INDEX chain.uk_import_source_system_owned ON chain.import_source (CASE WHEN is_owned_by_system = 1 THEN app_sid END);

ALTER TABLE chain.import_source ADD CONSTRAINT fk_imp_source_no_match_action
	FOREIGN KEY (dedupe_no_match_action_id) REFERENCES chain.dedupe_no_match_action (dedupe_no_match_action_id);

CREATE TABLE CHAIN.IMPORT_SOURCE_LOCK(
	APP_SID				NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	IMPORT_SOURCE_ID	NUMBER(10, 0)	NOT NULL,
	IS_LOCKED			NUMBER(1, 0)	DEFAULT 0 NOT NULL,
	CONSTRAINT CHK_IS_LOCK_IS_LOCKED CHECK (IS_LOCKED IN (0, 1)),
	CONSTRAINT PK_IMPORT_SOURCE_LOCK PRIMARY KEY (APP_SID, IMPORT_SOURCE_ID)
)
;

ALTER TABLE CHAIN.IMPORT_SOURCE_LOCK ADD CONSTRAINT FK_IS_LOCK_IMPORT_SOURCE
	FOREIGN KEY (APP_SID, IMPORT_SOURCE_ID)
	REFERENCES CHAIN.IMPORT_SOURCE (APP_SID, IMPORT_SOURCE_ID);
	
CREATE TABLE chain.dedupe_staging_link(
	app_sid						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	dedupe_staging_link_id		NUMBER NOT NULL,
	import_source_id			NUMBER NOT NULL,
	description					VARCHAR2(64) NOT NULL,
	position					NUMBER (10, 0) NOT NULL,
	staging_tab_sid				NUMBER (10, 0) NULL,
	staging_id_col_sid			NUMBER (10, 0) NULL,
	staging_batch_num_col_sid	NUMBER (10, 0),
	staging_source_lookup_col_sid	NUMBER (10, 0),
	parent_staging_link_id		NUMBER (10, 0),
	destination_tab_sid			NUMBER (10, 0),
	is_owned_by_system 			NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT chk_system_tab_col 
		CHECK ((is_owned_by_system = 0 AND staging_tab_sid IS NOT NULL AND staging_id_col_sid IS NOT NULL) 
		OR (is_owned_by_system = 1 AND staging_tab_sid IS NULL AND staging_id_col_sid IS NULL)),
	CONSTRAINT chk_is_owned_by_system_st CHECK (is_owned_by_system IN (0,1)),
	CONSTRAINT pk_dedupe_staging_link PRIMARY KEY (app_sid, dedupe_staging_link_id),
	CONSTRAINT uc_dedupe_staging_link_pos UNIQUE (app_sid, position) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT uc_dedupe_staging_link_stag UNIQUE (app_sid, dedupe_staging_link_id, staging_tab_sid), --used for fk
	CONSTRAINT uc_dedupe_staging_link_dest UNIQUE (app_sid, dedupe_staging_link_id, destination_tab_sid) --used for fk
);

CREATE UNIQUE INDEX chain.uk_staging_system_owned ON chain.dedupe_staging_link (CASE WHEN is_owned_by_system = 1 THEN app_sid END);

CREATE UNIQUE INDEX chain.uk_dedupe_staging_link_parent ON chain.dedupe_staging_link
	(app_sid, import_source_id, NVL2(parent_staging_link_id, dedupe_staging_link_id, NULL));

CREATE TABLE chain.dedupe_field(
	dedupe_field_id			NUMBER NOT NULL,
	entity					VARCHAR2(30) NOT NULL,
	field					VARCHAR2(30) NOT NULL,
	description				VARCHAR2(64) NOT NULL,
	CONSTRAINT pk_dedupe_field PRIMARY KEY (dedupe_field_id),
	CONSTRAINT uc_dedupe_field UNIQUE (entity, field)
);

CREATE TABLE chain.dedupe_mapping(
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	dedupe_mapping_id				NUMBER NOT NULL,
	dedupe_staging_link_id 			NUMBER(10, 0) NOT NULL,
	tab_sid							NUMBER,
	col_sid							NUMBER,
	dedupe_field_id					NUMBER,
	reference_id 					NUMBER(10),
	tag_group_id 					NUMBER(10),
	role_sid	 					NUMBER(10),
	destination_tab_sid				NUMBER(10),
	destination_col_sid				NUMBER(10),
	allow_create_alt_company_name 	NUMBER(1),
	fill_nulls_under_ui_source		NUMBER(1) DEFAULT 0 NOT NULL,
	is_owned_by_system				NUMBER(1) DEFAULT 0 NOT NULL,
	CONSTRAINT chk_is_owned_by_system_map CHECK (is_owned_by_system IN (0,1)),
	CONSTRAINT chk_system_mapping_tab_col 
	CHECK ((is_owned_by_system = 0 AND tab_sid IS NOT NULL AND col_sid IS NOT NULL) 
		OR (is_owned_by_system = 1 AND tab_sid IS NULL AND col_sid IS NULL)),
	CONSTRAINT pk_dedupe_mapping PRIMARY KEY (app_sid, dedupe_mapping_id),
	CONSTRAINT chk_dedupe_field_one_value_set
	CHECK ((CASE WHEN dedupe_field_id IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN reference_id IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN tag_group_id IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN destination_col_sid IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN role_sid IS NOT NULL THEN 1 ELSE 0 END
		) = 1),
	CONSTRAINT chk_dedupe_map_dest_tab_col
	CHECK (destination_tab_sid IS NULL AND destination_col_sid IS NULL
		OR destination_tab_sid IS NOT NULL AND destination_col_sid IS NOT NULL ),
	CONSTRAINT chk_fill_nulls_zero_one CHECK (fill_nulls_under_ui_source IN (0,1))
);

CREATE UNIQUE INDEX chain.uk_dedupe_mapping ON chain.dedupe_mapping (app_sid, dedupe_staging_link_id, tab_sid, CASE WHEN is_owned_by_system = 0 THEN col_sid ELSE dedupe_mapping_id END);

CREATE TABLE chain.dedupe_rule_set(
	app_sid					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	dedupe_rule_set_id		NUMBER NOT NULL,
	description 			VARCHAR2(255) NOT NULL,
	dedupe_staging_link_id	NUMBER NOT NULL,
	dedupe_match_type_id 	NUMBER(10) NOT NULL,
	position				NUMBER NOT NULL,
	CONSTRAINT pk_dedupe_rule_set PRIMARY KEY (app_sid, dedupe_rule_set_id),
	CONSTRAINT uc_dedupe_rule_set UNIQUE (app_sid, dedupe_staging_link_id, position) DEFERRABLE INITIALLY DEFERRED
);

CREATE TABLE CHAIN.DEDUPE_MATCH_TYPE(
	DEDUPE_MATCH_TYPE_ID		NUMBER(10, 0) NOT NULL,
	LABEL						VARCHAR(32) NOT NULL,
	CONSTRAINT PK_DEDUPE_MATCH_TYPE PRIMARY KEY (DEDUPE_MATCH_TYPE_ID),
	CONSTRAINT UC_DEDUPE_MATCH_TYPE UNIQUE (LABEL)
);

CREATE TABLE chain.dedupe_rule_type (
	dedupe_rule_type_id 						NUMBER(10) NOT NULL,
	description 								VARCHAR2(100) NOT NULL,
	threshold_default 							NUMBER(3) NOT NULL,
	CONSTRAINT pk_dedupe_rule_type PRIMARY KEY (dedupe_rule_type_id),
	CONSTRAINT chk_dd_rule_type_threshold CHECK (threshold_default <=100 AND threshold_default > 0)
);

CREATE TABLE chain.dedupe_rule(
	app_sid					NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	dedupe_rule_id			NUMBER(10) NOT NULL,
	dedupe_rule_set_id		NUMBER NOT NULL,
	dedupe_mapping_id		NUMBER NOT NULL,
	dedupe_rule_type_id 	NUMBER(10) NOT NULL,
	match_threshold 		NUMBER(3) NOT NULL,
	position				NUMBER NOT NULL,
	CONSTRAINT pk_dedupe_rule PRIMARY KEY (app_sid, dedupe_rule_id),
	CONSTRAINT uc_dedupe_rule UNIQUE (app_sid, dedupe_rule_set_id, position) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT chk_dd_rule_threshold CHECK (match_threshold <=100 AND match_threshold > 0)
);

CREATE TABLE CHAIN.DEDUPE_PREPROC_COMP (
	APP_SID 				NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID 			NUMBER(10) NOT NULL,
	NAME 					VARCHAR2(255) NOT NULL,
	ADDRESS 				VARCHAR2(1024),
	CITY	 				VARCHAR2(255),
	STATE 					VARCHAR2(255),
	POSTCODE 				VARCHAR2(255),
	WEBSITE 				VARCHAR2(1000),
	PHONE					VARCHAR2(255),
	EMAIL_DOMAIN 			VARCHAR2(255),
	UPDATED_DTM 			DATE,
	CONSTRAINT PK_DEDUPE_PREPROC_COMP PRIMARY KEY (APP_SID, COMPANY_SID)
);

ALTER TABLE CHAIN.DEDUPE_PREPROC_COMP ADD CONSTRAINT COMPANY_DEDUPE_PREPROC_COMP
	FOREIGN KEY (APP_SID, COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID,COMPANY_SID);

CREATE TABLE CHAIN.DEDUPE_PREPROC_RULE (
	APP_SID						NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	DEDUPE_PREPROC_RULE_ID 		NUMBER(10) NOT NULL,
	PATTERN 					VARCHAR2(1000) NOT NULL,
	REPLACEMENT 				VARCHAR2(1000),
	RUN_ORDER 					NUMBER(10) NOT NULL,
	CONSTRAINT UC_DEDUPE_PREPROC_RULE UNIQUE (APP_SID, RUN_ORDER) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT CHK_DP_PP_RULE_PATT_REP CHECK (PATTERN <> REPLACEMENT),
	CONSTRAINT PK_DEDUPE_PREPROC_RULE PRIMARY KEY (APP_SID, DEDUPE_PREPROC_RULE_ID)
);

ALTER TABLE CHAIN.DEDUPE_PREPROC_RULE ADD CONSTRAINT REF_DEDUPE_PREPROCESS_RULE_APP
	FOREIGN KEY (APP_SID)
	REFERENCES CHAIN.CUSTOMER_OPTIONS(APP_SID)
;

CREATE TABLE CHAIN.DEDUPE_PP_FIELD_CNTRY (
	APP_SID 					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	DEDUPE_PREPROC_RULE_ID 		NUMBER(10) NOT NULL,
	DEDUPE_FIELD_ID 			NUMBER(10),
	COUNTRY_CODE				VARCHAR2(2),
	CONSTRAINT UC_DEDUPE_PP_FIELD_CNTRY UNIQUE (APP_SID, DEDUPE_PREPROC_RULE_ID, DEDUPE_FIELD_ID, COUNTRY_CODE)
);

ALTER TABLE CHAIN.DEDUPE_PP_FIELD_CNTRY ADD CONSTRAINT DD_PP_RULE_DD_PP_FIELD_CNTRY
	FOREIGN KEY (APP_SID, DEDUPE_PREPROC_RULE_ID) REFERENCES CHAIN.DEDUPE_PREPROC_RULE (APP_SID,DEDUPE_PREPROC_RULE_ID);

ALTER TABLE CHAIN.DEDUPE_PP_FIELD_CNTRY ADD CONSTRAINT DD_FIELD_DD_PP_FIELD_CNTRY
	FOREIGN KEY (DEDUPE_FIELD_ID) REFERENCES CHAIN.DEDUPE_FIELD (DEDUPE_FIELD_ID);

CREATE TABLE CHAIN.DEDUPE_MERGE_LOG(
	APP_SID							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	DEDUPE_MERGE_LOG_ID				NUMBER(10, 0) NOT NULL,
	DEDUPE_PROCESSED_RECORD_ID 		NUMBER(10, 0) NOT NULL,
	DEDUPE_FIELD_ID					NUMBER(10, 0),
	REFERENCE_ID 					NUMBER(10, 0),
	TAG_GROUP_ID 					NUMBER(10, 0),
	ROLE_SID	 					NUMBER(10, 0),
	DESTINATION_TAB_SID				NUMBER(10, 0),
	DESTINATION_COL_SID				NUMBER(10, 0),
	OLD_VAL							VARCHAR2(4000),
	NEW_VAL							VARCHAR2(4000),
	ERROR_MESSAGE					VARCHAR2(4000),
	CURRENT_DESC_VAL				VARCHAR2(4000),
	NEW_RAW_VAL						VARCHAR2(4000),
	NEW_TRANSLATED_VAL				VARCHAR2(4000),
	ALT_COMP_NAME_DOWNGRADE			NUMBER(1),
	CONSTRAINT PK_DEDUPE_MERGE_LOG PRIMARY KEY (APP_SID, DEDUPE_MERGE_LOG_ID),
	CONSTRAINT CHK_DEDUPE_MERGE_ONE_VALUE_SET CHECK ((CASE WHEN dedupe_field_id IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN reference_id IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN tag_group_id IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN destination_col_sid IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN role_sid IS NOT NULL THEN 1 ELSE 0 END
		+ CASE WHEN alt_comp_name_downgrade IS NOT NULL THEN 1 ELSE 0 END
		) = 1),
	CONSTRAINT CHK_DEDUPE_MERGE_LOG_VAL
		CHECK (new_val IS NOT NULL OR old_val IS NOT NULL OR error_message IS NOT NULL)
);

CREATE UNIQUE INDEX CHAIN.UK_DEDUPE_MERGE_LOG ON CHAIN.DEDUPE_MERGE_LOG
	(APP_SID, DEDUPE_PROCESSED_RECORD_ID, COALESCE(DEDUPE_FIELD_ID, REFERENCE_ID, TAG_GROUP_ID, DESTINATION_COL_SID, ROLE_SID));

ALTER TABLE CHAIN.DEDUPE_MERGE_LOG ADD CONSTRAINT FK_DEDUPE_MERGE_LOG_FLD
	FOREIGN KEY (DEDUPE_FIELD_ID)
	REFERENCES CHAIN.DEDUPE_FIELD (DEDUPE_FIELD_ID);

ALTER TABLE CHAIN.DEDUPE_MERGE_LOG ADD CONSTRAINT FK_DEDUPE_MERGE_LOG_REF
	FOREIGN KEY (APP_SID, REFERENCE_ID)
	REFERENCES CHAIN.REFERENCE (APP_SID, REFERENCE_ID);

ALTER TABLE chain.dedupe_staging_link ADD CONSTRAINT fk_staging_link_source
	FOREIGN KEY (app_sid, import_source_id)
	REFERENCES chain.import_source (app_sid, import_source_id);

ALTER TABLE chain.dedupe_staging_link ADD CONSTRAINT fk_parent_staging_link
	FOREIGN KEY (app_sid, parent_staging_link_id)
	REFERENCES chain.dedupe_staging_link (app_sid, dedupe_staging_link_id);

ALTER TABLE chain.dedupe_mapping ADD CONSTRAINT fk_dedupe_mapping_field
	FOREIGN KEY (dedupe_field_id)
	REFERENCES chain.dedupe_field(dedupe_field_id);

ALTER TABLE chain.dedupe_rule_set ADD CONSTRAINT fk_dedupe_rule_staging_link
	FOREIGN KEY (app_sid, dedupe_staging_link_id)
	REFERENCES chain.dedupe_staging_link(app_sid, dedupe_staging_link_id);

ALTER TABLE chain.dedupe_rule_set ADD CONSTRAINT fk_dedupe_rule_set_match_type
	FOREIGN KEY (dedupe_match_type_id) REFERENCES chain.dedupe_match_type (dedupe_match_type_id);

ALTER TABLE chain.dedupe_rule ADD CONSTRAINT fk_dedupe_rule_rule_set
	FOREIGN KEY (app_sid, dedupe_rule_set_id)
	REFERENCES chain.dedupe_rule_set(app_sid, dedupe_rule_set_id);

ALTER TABLE chain.dedupe_rule ADD CONSTRAINT fk_dedupe_rule_mapping
	FOREIGN KEY (app_sid, dedupe_mapping_id)
	REFERENCES chain.dedupe_mapping(app_sid, dedupe_mapping_id);

ALTER TABLE chain.dedupe_rule ADD CONSTRAINT fk_dedupe_rule_rule_type
	FOREIGN KEY (dedupe_rule_type_id) REFERENCES chain.dedupe_rule_type (dedupe_rule_type_id);

ALTER TABLE chain.dedupe_mapping ADD CONSTRAINT fk_mapping_reference
	FOREIGN KEY (app_sid, reference_id)
	REFERENCES chain.reference (app_sid, reference_id);

ALTER TABLE chain.dedupe_mapping ADD CONSTRAINT fk_dedupe_mapping_stag_tab
	FOREIGN KEY (app_sid, dedupe_staging_link_id, tab_sid)
	REFERENCES chain.dedupe_staging_link (app_sid, dedupe_staging_link_id, staging_tab_sid);

ALTER TABLE chain.dedupe_mapping ADD CONSTRAINT fk_dedupe_mapping_dest_tab
	FOREIGN KEY (app_sid, dedupe_staging_link_id, destination_tab_sid)
	REFERENCES chain.dedupe_staging_link (app_sid, dedupe_staging_link_id, destination_tab_sid);

--end US2996


CREATE TABLE CHAIN.DEDUPE_PROCESSED_RECORD(
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	DEDUPE_PROCESSED_RECORD_ID	NUMBER(10, 0) NOT NULL,
	DEDUPE_STAGING_LINK_ID		NUMBER(10, 0) NOT NULL,
	REFERENCE					VARCHAR(512) NOT NULL,
	PROCESSED_DTM				DATE DEFAULT SYSDATE NOT NULL,
	BATCH_NUM					NUMBER(10, 0),
	ITERATION_NUM				NUMBER(10, 0) NOT NULL,
	MATCHED_TO_COMPANY_SID		NUMBER(10, 0),
	DEDUPE_ACTION_TYPE_ID		NUMBER(1),
	MATCHED_DTM					DATE,
	MATCHED_BY_USER_SID			NUMBER(10, 0),
	CREATED_COMPANY_SID 		NUMBER(10, 0),
	PARENT_PROCESSED_RECORD_ID	NUMBER(10, 0),
	CMS_RECORD_ID				NUMBER(10, 0),
	DATA_MERGED					NUMBER(1, 0) DEFAULT 0 NOT NULL,
	IMPORTED_USER_SID			NUMBER(10),
	DEDUPE_ACTION				NUMBER(1),
	BATCH_JOB_ID				NUMBER(10) NULL,
	MERGE_STATUS_ID				NUMBER(10) NULL,
	ERROR_MESSAGE				VARCHAR2(4000) NULL,
	ERROR_DETAIL				VARCHAR2(4000) NULL,
	CONSTRAINT PK_DEDUPE_PROCESSED_RECORD PRIMARY KEY (APP_SID, DEDUPE_PROCESSED_RECORD_ID),
	CONSTRAINT CHK_DATA_MERGED CHECK (data_merged IN (0, 1)),
	CONSTRAINT CHK_ACTION_TYPE_ID CHECK (dedupe_action_type_id IN (1, 2)),
	CONSTRAINT CHK_DEDUPE_ACTION CHECK (DEDUPE_ACTION IN (1, 2, 3)),
	CONSTRAINT CHK_DDP_PRC_REC_BAT_JOB CHECK ((BATCH_JOB_ID IS NULL AND MERGE_STATUS_ID IS NULL) OR (BATCH_JOB_ID IS NOT NULL AND MERGE_STATUS_ID IS NOT NULL))
);

CREATE UNIQUE INDEX CHAIN.UK_DEDUPE_PROCESSED_RECORD ON CHAIN.DEDUPE_PROCESSED_RECORD
	(app_sid, dedupe_staging_link_id, reference, batch_num, iteration_num,
		NVL2(parent_processed_record_id, dedupe_processed_record_id, NULL));

ALTER TABLE chain.dedupe_processed_record ADD CONSTRAINT fk_dedupe_proc_rec_stag_ling
	FOREIGN KEY (app_sid, dedupe_staging_link_id)
	REFERENCES chain.dedupe_staging_link (app_sid, dedupe_staging_link_id);

ALTER TABLE chain.dedupe_processed_record ADD CONSTRAINT fk_dedupe_proc_rec_parent
	FOREIGN KEY (app_sid, parent_processed_record_id)
	REFERENCES chain.dedupe_processed_record (app_sid, dedupe_processed_record_id);


CREATE TABLE CHAIN.DEDUPE_MATCH(
	APP_SID						NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	DEDUPE_MATCH_ID				NUMBER(10, 0) NOT NULL,
	DEDUPE_PROCESSED_RECORD_ID	NUMBER(10, 0) NOT NULL,
	MATCHED_TO_COMPANY_SID		NUMBER(10, 0) NOT NULL,
	DEDUPE_RULE_SET_ID			NUMBER(10, 0) NOT NULL,
	CONSTRAINT PK_DEDUPE_MATCH PRIMARY KEY (APP_SID, DEDUPE_MATCH_ID),
	CONSTRAINT UC_DEDUPE_MATCH UNIQUE (APP_SID, DEDUPE_PROCESSED_RECORD_ID, MATCHED_TO_COMPANY_SID)
);

CREATE TABLE CHAIN.DEDUPE_BATCH_JOB (
	APP_SID						 NUMBER(10)	  DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BATCH_JOB_ID					NUMBER(10)	  NOT NULL,
	IMPORT_SOURCE_ID				NUMBER(10)	  NOT NULL,
	BATCH_NUMBER					NUMBER(10),
	FORCE_RE_EVAL				   NUMBER(1)	   DEFAULT 0 NOT NULL,
	CONSTRAINT PK_DEDUPE_BATCH_JOB PRIMARY KEY (APP_SID, BATCH_JOB_ID)
);


ALTER TABLE CHAIN.DEDUPE_MERGE_LOG ADD CONSTRAINT FK_DEDUPE_MERGE_LOG_PROCESSED
	FOREIGN KEY (APP_SID, DEDUPE_PROCESSED_RECORD_ID)
	REFERENCES CHAIN.DEDUPE_PROCESSED_RECORD (APP_SID, DEDUPE_PROCESSED_RECORD_ID)
;

ALTER TABLE CHAIN.DEDUPE_PROCESSED_RECORD ADD CONSTRAINT FK_DEDUPE_PROCESS_REC_COMPANY
	FOREIGN KEY (APP_SID, MATCHED_TO_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.DEDUPE_PROCESSED_RECORD ADD CONSTRAINT FK_DEDUPE_PROC_RECORD_COMPANY
	FOREIGN KEY (APP_SID, CREATED_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.DEDUPE_MATCH ADD CONSTRAINT FK_DEDUPE_MATCH_PROC_REC
	FOREIGN KEY (APP_SID, DEDUPE_PROCESSED_RECORD_ID)
	REFERENCES CHAIN.DEDUPE_PROCESSED_RECORD(APP_SID, DEDUPE_PROCESSED_RECORD_ID)
;

ALTER TABLE CHAIN.DEDUPE_MATCH ADD CONSTRAINT FK_DEDUPE_MATCH_COMPANY
	FOREIGN KEY (APP_SID, MATCHED_TO_COMPANY_SID)
	REFERENCES CHAIN.COMPANY(APP_SID, COMPANY_SID)
;

ALTER TABLE CHAIN.DEDUPE_MATCH ADD CONSTRAINT FK_DEDUPE_MATCH_RULE_SET
	FOREIGN KEY (APP_SID, DEDUPE_RULE_SET_ID)
	REFERENCES CHAIN.DEDUPE_RULE_SET(APP_SID, DEDUPE_RULE_SET_ID)
;

CREATE TABLE chain.pend_company_suggested_match (
	app_sid 					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	pending_company_sid 		NUMBER(10) NOT NULL,
	matched_company_sid			NUMBER(10) NOT NULL,
	dedupe_rule_set_id			NUMBER(10) NULL,
	CONSTRAINT pk_pend_company_suggestd_match PRIMARY KEY (app_sid, pending_company_sid, matched_company_sid)
);

ALTER TABLE chain.pend_company_suggested_match ADD CONSTRAINT chk_pend_company_matched_ne 
	CHECK (pending_company_sid != matched_company_sid);
		
ALTER TABLE chain.pend_company_suggested_match ADD CONSTRAINT fk_pend_company_sugg_match
	FOREIGN KEY (app_sid, pending_company_sid) REFERENCES chain.company (app_sid, company_sid);
	
ALTER TABLE chain.pend_company_suggested_match ADD CONSTRAINT fk_pend_matched_company
	FOREIGN KEY (app_sid, matched_company_sid) REFERENCES chain.company (app_sid, company_sid);
	
ALTER TABLE chain.pend_company_suggested_match ADD CONSTRAINT fk_pend_rule_set_id
	FOREIGN KEY (app_sid, dedupe_rule_set_id) REFERENCES chain.dedupe_rule_set (app_sid, dedupe_rule_set_id);
	
CREATE TABLE chain.pending_company_tag(
	app_sid 					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	pending_company_sid			NUMBER(10) NOT NULL,
	tag_id						NUMBER(10) NOT NULL,
	CONSTRAINT pk_pending_company_tag PRIMARY KEY (app_sid, pending_company_sid, tag_id)
);
		
ALTER TABLE chain.pending_company_tag ADD CONSTRAINT fk_pend_company_tag_comp
	FOREIGN KEY (app_sid, pending_company_sid) REFERENCES chain.company (app_sid, company_sid);

CREATE TABLE CHAIN.COMPANY_REQUEST_ACTION(
	APP_SID 					NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	COMPANY_SID 				NUMBER(10)		NOT NULL,
	MATCHED_COMPANY_SID			NUMBER(10),
	ACTION						NUMBER(10)		NOT NULL,
	IS_PROCESSED				NUMBER(1)		DEFAULT 0 NOT NULL,
	BATCH_JOB_ID				NUMBER(10),
	ERROR_MESSAGE				VARCHAR2(4000),
	ERROR_DETAIL				VARCHAR2(4000),
	SENT_DTM					DATE,
	CONSTRAINT PK_COMPANY_REQUEST_ACTION PRIMARY KEY (APP_SID, COMPANY_SID)
);	

ALTER TABLE CHAIN.COMPANY_REQUEST_ACTION ADD CONSTRAINT CHK_COMPANY_REQUEST_ACTION
	CHECK (ACTION IN (1, 2, 3));

ALTER TABLE CHAIN.COMPANY_REQUEST_ACTION ADD CONSTRAINT CHK_ACTION_MATCHED
	CHECK ((ACTION = 3 AND MATCHED_COMPANY_SID IS NOT NULL) OR MATCHED_COMPANY_SID IS NULL);
	
ALTER TABLE CHAIN.COMPANY_REQUEST_ACTION ADD CONSTRAINT FK_REQ_ACT_CMPNY_SID
	FOREIGN KEY (APP_SID, COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID);
	
ALTER TABLE CHAIN.COMPANY_REQUEST_ACTION ADD CONSTRAINT FK_REQ_ACT_MTCHD_CMPNY_SID
	FOREIGN KEY (APP_SID, MATCHED_COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID);

--begin US3004

CREATE TABLE CHAIN.HIGG (
	APP_SID					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FTP_FOLDER				VARCHAR2(1000) NOT NULL,
	FTP_PROFILE_LABEL		VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_HIGG PRIMARY KEY (APP_SID)
);

CREATE TABLE CHAIN.HIGG_CONFIG (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_CONFIG_ID					NUMBER(10)		NOT NULL,
	COMPANY_TYPE_ID					NUMBER(10)		NULL,
	AUDIT_TYPE_ID					NUMBER(10)		NOT NULL,
	SURVEY_SID						NUMBER(10)		NOT NULL,
	CLOSURE_TYPE_ID					NUMBER(10)		NULL,
	AUDIT_COORDINATOR_SID 			NUMBER(10)		NOT NULL,
	AGGREGATE_IND_GROUP_ID			NUMBER(10)		NULL,
	COPY_SCORE_ON_SURVEY_SUBMIT 	NUMBER(1) 		DEFAULT 0 NOT NULL,
	CONSTRAINT PK_HIGG_CONFIG PRIMARY KEY (APP_SID, HIGG_CONFIG_ID),
	CONSTRAINT FK_HIGG_COMPANY_TYPE_ID FOREIGN KEY (APP_SID, COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE (APP_SID, COMPANY_TYPE_ID),
	CONSTRAINT UK_HIGG_CONFIG_SURVEY UNIQUE (APP_SID, SURVEY_SID),
	CONSTRAINT CHK_COPY_SCORE_0_OR_1 CHECK (COPY_SCORE_ON_SURVEY_SUBMIT IN (0,1))
 );

CREATE TABLE CHAIN.HIGG_MODULE (
	HIGG_MODULE_ID					NUMBER(10) 		NOT NULL,
	HIGG_MODULE_VERSION				DECIMAL(10,4)	NOT NULL,
	MODULE_NAME						VARCHAR2(1000)	NOT NULL,
	TOTAL_SCORE						NUMBER(10)		NULL,
	SCORE_TYPE_LOOKUP_KEY 			VARCHAR2(255) 	NOT NULL,
	SCORE_TYPE_FORMAT_MASK 			VARCHAR2(20) 	NULL,
	CONSTRAINT PK_HIGG_MODULE PRIMARY KEY (HIGG_MODULE_ID)
);

COMMENT ON COLUMN CHAIN.HIGG_MODULE.HIGG_MODULE_ID IS 'DESC="Module ID"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE.MODULE_NAME IS 'DESC="Module name"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE.HIGG_MODULE_VERSION IS 'DESC="VERSION"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE.TOTAL_SCORE IS 'DESC="Total score"';

CREATE TABLE CHAIN.HIGG_MODULE_TAG_GROUP (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_MODULE_ID					NUMBER(10) 		NOT NULL,
	TAG_GROUP_ID					NUMBER(10)		NULL,
	CONSTRAINT PK_HIGG_MOD_TAG_GRP PRIMARY KEY (APP_SID, HIGG_MODULE_ID, TAG_GROUP_ID)
);

CREATE TABLE CHAIN.HIGG_CONFIG_MODULE (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_CONFIG_ID					NUMBER(10)	NOT NULL,
	HIGG_MODULE_ID					NUMBER(10)	NOT NULL,
	SCORE_TYPE_ID					NUMBER(10)  NOT NULL,
	CONSTRAINT PK_HIGG_CONFIG_MODULE PRIMARY KEY (APP_SID, HIGG_CONFIG_ID, HIGG_MODULE_ID),
	CONSTRAINT FK_HIGG_CONF_MOD_HIGG_CONF FOREIGN KEY (APP_SID, HIGG_CONFIG_ID)
	REFERENCES CHAIN.HIGG_CONFIG (APP_SID, HIGG_CONFIG_ID),
	CONSTRAINT FK_HIGG_CONF_MOD_HIGG_MOD FOREIGN KEY (HIGG_MODULE_ID)
	REFERENCES CHAIN.HIGG_MODULE (HIGG_MODULE_ID)
);

CREATE TABLE CHAIN.HIGG_MODULE_SECTION (
	HIGG_SECTION_ID					NUMBER(10)		NOT NULL,
	HIGG_MODULE_ID					NUMBER(10)		NOT NULL,
	SECTION_NAME					VARCHAR2(1000)	NULL,
	MAX_SCORE						NUMBER(10)		NULL,
	WEIGHTAGE						NUMBER(10)		NULL,
	CONSTRAINT PK_HIGG_MODULE_SECTION PRIMARY KEY ( HIGG_SECTION_ID),
	CONSTRAINT FK_HIGG_SECTION_SURVEY FOREIGN KEY (HIGG_MODULE_ID)
	REFERENCES CHAIN.HIGG_MODULE (HIGG_MODULE_ID)
);

COMMENT ON TABLE CHAIN.HIGG_MODULE_SECTION IS 'DESC="Higg module section"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SECTION.HIGG_SECTION_ID IS 'DESC="Section ID"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SECTION.HIGG_MODULE_ID IS 'DESC="Module",ENUM,ENUM_DESC_COL=MODULE_NAME';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SECTION.SECTION_NAME IS 'DESC="Section name"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SECTION.MAX_SCORE IS 'DESC="Maximum score"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SECTION.WEIGHTAGE IS 'DESC="Weight"';

CREATE TABLE CHAIN.HIGG_MODULE_SUB_SECTION (
	HIGG_SUB_SECTION_ID				NUMBER(10)		NOT NULL,
	HIGG_SECTION_ID					NUMBER(10)		NOT NULL,
	HIGG_MODULE_ID					NUMBER(10)		NOT NULL,
	SUB_SECTION_NAME				VARCHAR2(1000)	NULL,
	MAX_SCORE						NUMBER(10)		NULL,
	CONSTRAINT PK_HIGG_MODULE_SUB_SECTION PRIMARY KEY (HIGG_SUB_SECTION_ID),
	CONSTRAINT FK_HIGG_SUB_SEC_SEC FOREIGN KEY (HIGG_SECTION_ID)
	REFERENCES CHAIN.HIGG_MODULE_SECTION (HIGG_SECTION_ID),
	CONSTRAINT FK_HIGG_SUB_SECTION_SURVEY FOREIGN KEY (HIGG_MODULE_ID)
	REFERENCES CHAIN.HIGG_MODULE (HIGG_MODULE_ID)
);

COMMENT ON TABLE CHAIN.HIGG_MODULE_SUB_SECTION IS 'DESC="Higg module sub-section"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SUB_SECTION.HIGG_SUB_SECTION_ID IS 'DESC="Sub-section ID"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SUB_SECTION.HIGG_SECTION_ID IS 'DESC="Section",SEARCH_ENUM,ENUM_DESC_COL=SECTION_NAME';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SUB_SECTION.SUB_SECTION_NAME IS 'DESC="Sub-section name"';
COMMENT ON COLUMN CHAIN.HIGG_MODULE_SUB_SECTION.MAX_SCORE IS 'DESC="Maximum score"';

CREATE TABLE CHAIN.HIGG_QUESTION (
	HIGG_QUESTION_ID				NUMBER(10)		NOT NULL,
	HIGG_MODULE_ID					NUMBER(10)		NOT NULL,
	PARENT_QUESTION_ID				NUMBER(10)		NULL,
	HIGG_SUB_SECTION_ID				NUMBER(10)		NULL,
	IS_INDICATOR					NUMBER(1)		NULL,
	QUESTION_TYPE					VARCHAR2(255)	NOT NULL,
	QUESTION_TEXT					VARCHAR2(4000)	NULL,
	MAX_SCORE						NUMBER(10)		NULL,
	DISPLAY_ORDER					NUMBER(10)		NULL,
	UNITS_QUESTION_ID				NUMBER(10)		NULL,
	INDICATOR_NAME					VARCHAR2(255)	NULL,
	INDICATOR_LOOKUP 				VARCHAR2(255)	NULL,
	MEASURE_NAME 					VARCHAR2(255)	NULL,
	MEASURE_LOOKUP 					VARCHAR2(255)	NULL,
	MEASURE_DIVISIBILITY			NUMBER(10)		NULL,
	STD_MEASURE_CONVERSION_ID		NUMBER(10)		NULL,
	CONSTRAINT PK_HIGG_QUESTION PRIMARY KEY (HIGG_QUESTION_ID),
	CONSTRAINT UK_HIGG_QUESTION_MODULE UNIQUE (HIGG_MODULE_ID, HIGG_QUESTION_ID),
	CONSTRAINT FK_HIGG_QUESTION_PARENT FOREIGN KEY (PARENT_QUESTION_ID)
	REFERENCES CHAIN.HIGG_QUESTION (HIGG_QUESTION_ID),
	CONSTRAINT FK_HIGG_QUESTION_SUB_SECTION FOREIGN KEY (HIGG_SUB_SECTION_ID)
	REFERENCES CHAIN.HIGG_MODULE_SUB_SECTION (HIGG_SUB_SECTION_ID),
	CONSTRAINT CHK_IS_INDICATOR CHECK (IS_INDICATOR IN (0,1)),
	CONSTRAINT FK_HIGG_QUESTION_SURVEY FOREIGN KEY (HIGG_MODULE_ID)
	REFERENCES CHAIN.HIGG_MODULE (HIGG_MODULE_ID)
);

COMMENT ON TABLE CHAIN.HIGG_QUESTION IS 'DESC="Higg survey question"';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION.HIGG_QUESTION_ID IS 'DESC="Question ID"';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION.PARENT_QUESTION_ID IS 'DESC="Parent question",SEARCH_ENUM,ENUM_DESC_COL=QUESTION_TEXT';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION.HIGG_SUB_SECTION_ID IS 'DESC="Sub-section",SEARCH_ENUM,ENUM_DESC_COL=SUB_SECTION_NAME';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION.IS_INDICATOR IS 'DESC="Is indicator",BOOLEAN';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION.QUESTION_TYPE IS 'DESC="Question type"';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION.QUESTION_TEXT IS 'DESC="Question text"';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION.MAX_SCORE IS 'DESC="Max score"';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION.DISPLAY_ORDER IS 'DESC="Display order"';

CREATE TABLE CHAIN.HIGG_QUESTION_SURVEY (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_QUESTION_ID				NUMBER(10) NOT NULL,
	SURVEY_SID						NUMBER(10) NOT NULL,
	QS_QUESTION_ID					NUMBER(10) NOT NULL,
	QS_QUESTION_VERSION				NUMBER(10) NOT NULL,
	SURVEY_VERSION					NUMBER(10) NOT NULL,
	CONSTRAINT PK_HIGG_QUESTION_SURVEY PRIMARY KEY (APP_SID, HIGG_QUESTION_ID, SURVEY_SID),
	CONSTRAINT FK_HQS_HIGG_QUESTION FOREIGN KEY (HIGG_QUESTION_ID)
	REFERENCES CHAIN.HIGG_QUESTION (HIGG_QUESTION_ID)
);

CREATE TABLE CHAIN.HIGG_QUESTION_OPTION (
	HIGG_QUESTION_OPTION_ID			NUMBER(10)		NOT NULL,
	HIGG_QUESTION_ID				NUMBER(10)		NOT NULL,
	HIGG_MODULE_ID					NUMBER(10)		NOT NULL,
	OPTION_VALUE					VARCHAR2(1000)	NOT NULL,
	DISPLAY_ORDER					NUMBER(10)		NULL,
	MEASURE_CONVERSION 				VARCHAR2(255)	NULL,
	STD_MEASURE_CONVERSION_ID 		NUMBER(10)		NULL,
	CONSTRAINT PK_HIGG_QUESTION_OPTION PRIMARY KEY (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID),
	CONSTRAINT FK_HIGG_OPTION_QUESTION FOREIGN KEY (HIGG_MODULE_ID, HIGG_QUESTION_ID)
	REFERENCES CHAIN.HIGG_QUESTION (HIGG_MODULE_ID, HIGG_QUESTION_ID),
	CONSTRAINT FK_HIGG_Q_OPT_SURVEY FOREIGN KEY (HIGG_MODULE_ID)
	REFERENCES CHAIN.HIGG_MODULE (HIGG_MODULE_ID)
);

COMMENT ON TABLE CHAIN.HIGG_QUESTION_OPTION IS 'desc="Higg survey question option"';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION_OPTION.HIGG_QUESTION_OPTION_ID IS 'desc="Question option ID"';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION_OPTION.HIGG_QUESTION_ID IS 'desc="Question",SEARCH_ENUM,ENUM_DESC_COL=QUESTION_TEXT';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION_OPTION.OPTION_VALUE IS 'desc="Option"';
COMMENT ON COLUMN CHAIN.HIGG_QUESTION_OPTION.DISPLAY_ORDER IS 'desc="DISPLAY ORDER"';

CREATE TABLE CHAIN.HIGG_QUESTION_OPTION_SURVEY (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_QUESTION_ID				NUMBER(10) NOT NULL,
	HIGG_QUESTION_OPTION_ID			NUMBER(10) NOT NULL,
	SURVEY_SID						NUMBER(10) NOT NULL,
	QS_QUESTION_ID					NUMBER(10) NOT NULL,
	QS_QUESTION_OPTION_ID			NUMBER(10) NOT NULL,
	QS_QUESTION_VERSION				NUMBER(10) NOT NULL,
	QS_QUESTION_DRAFT				NUMBER(1) DEFAULT 0 NOT NULL,
	SURVEY_VERSION					NUMBER(10) NOT NULL,
	CONSTRAINT PK_HIGG_QO_SURVEY PRIMARY KEY (APP_SID, HIGG_QUESTION_OPTION_ID, SURVEY_SID),	
	CONSTRAINT CHK_HQOS_QUESTION_DRAFT CHECK (QS_QUESTION_DRAFT IN (0,1)),
	CONSTRAINT FK_HQOS_HIGG_QO FOREIGN KEY (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID)
	REFERENCES CHAIN.HIGG_QUESTION_OPTION (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID)
);

CREATE TABLE CHAIN.HIGG_PROFILE (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_PROFILE_ID					NUMBER(10)		NOT NULL,
	RESPONSE_YEAR					NUMBER(10)		NOT NULL,
	CONSTRAINT PK_HIGG_PROFILE PRIMARY KEY (APP_SID, HIGG_PROFILE_ID, RESPONSE_YEAR)
);

COMMENT ON COLUMN CHAIN.HIGG_PROFILE.APP_SID IS 'APP_SID';

CREATE TABLE CHAIN.HIGG_RESPONSE (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_RESPONSE_ID				NUMBER(10)		NOT NULL,
	HIGG_MODULE_ID					NUMBER(10)		NOT NULL,
	HIGG_ACCOUNT_ID					NUMBER(10)		NULL, -- DO WE NEED THIS?
	HIGG_PROFILE_ID					NUMBER(10)		NOT NULL,
	RESPONSE_YEAR					NUMBER(10)		NOT NULL,
	MODULE_NAME						VARCHAR2(255)	NULL,
	POSTED							NUMBER(1)		NULL,
	VERIFICATION_STATUS				VARCHAR2(1000)	NULL,
	VERIFICATION_DOCUMENT_URL		VARCHAR2(1000)	NULL,
	IS_BENCHMARKED					NUMBER(1)		NULL,
	RESPONSE_SCORE					DECIMAL(10,4)	NULL,
	LAST_UPDATED_DTM				DATE			NOT NULL,
	CONSTRAINT PK_HIGG_RESPONSE_ID PRIMARY KEY (APP_SID, HIGG_RESPONSE_ID),
	CONSTRAINT FK_HIGG_RESPONSE_SURVEY FOREIGN KEY (HIGG_MODULE_ID)
	REFERENCES CHAIN.HIGG_MODULE (HIGG_MODULE_ID),
	CONSTRAINT FK_HIGG_RESPONSE_PROFILE FOREIGN KEY (APP_SID, HIGG_PROFILE_ID, RESPONSE_YEAR)
	REFERENCES CHAIN.HIGG_PROFILE (APP_SID, HIGG_PROFILE_ID, RESPONSE_YEAR),
	CONSTRAINT UK_HIGG_RES_POSTED CHECK (POSTED IN (0,1)),
	CONSTRAINT UK_HIGG_RES_IS_BENCHMARKED CHECK (IS_BENCHMARKED IN (0,1))
);


COMMENT ON TABLE CHAIN.HIGG_RESPONSE IS 'desc="Higg survey response"';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.APP_SID IS 'APP_SID';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.HIGG_MODULE_ID IS 'desc="Higg survey",ENUM,ENUM_DESC_COL=MODULE_NAME';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.HIGG_ACCOUNT_ID IS 'desc="Account ID"';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.HIGG_PROFILE_ID IS 'desc="Profile ID"';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.MODULE_NAME IS 'desc="MODULE NAME"';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.POSTED IS 'desc="Posted",BOOLEAN';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.VERIFICATION_STATUS IS 'desc="Verification status"';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.VERIFICATION_DOCUMENT_URL IS 'desc="Verification document URL"';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.IS_BENCHMARKED IS 'desc="Is benchmarked",BOOLEAN';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.RESPONSE_SCORE IS 'desc="Score"';
COMMENT ON COLUMN CHAIN.HIGG_RESPONSE.LAST_UPDATED_DTM IS 'desc="Last updated"';

CREATE TABLE CHAIN.HIGG_SECTION_SCORE (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_RESPONSE_ID				NUMBER(10)		NOT NULL,
	HIGG_SECTION_ID					NUMBER(10)		NOT NULL,
	SCORE							DECIMAL(10,4)	NULL,
	CONSTRAINT PK_HIGG_SECTION_SCORE PRIMARY KEY (APP_SID, HIGG_RESPONSE_ID, HIGG_SECTION_ID),
	CONSTRAINT FK_HIGG_SECTION_SCORE_RES FOREIGN KEY (APP_SID, HIGG_RESPONSE_ID)
	REFERENCES CHAIN.HIGG_RESPONSE (APP_SID, HIGG_RESPONSE_ID),
	CONSTRAINT FK_HIGG_SECTION_SCORE_SEC FOREIGN KEY (HIGG_SECTION_ID)
	REFERENCES CHAIN.HIGG_MODULE_SECTION (HIGG_SECTION_ID)
);

COMMENT ON COLUMN CHAIN.HIGG_SECTION_SCORE.APP_SID IS 'APP_SID';

CREATE TABLE CHAIN.HIGG_SUB_SECTION_SCORE (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_RESPONSE_ID				NUMBER(10)		NOT NULL,
	HIGG_SECTION_ID					NUMBER(10)		NOT NULL,
	HIGG_SUB_SECTION_ID				NUMBER(10)		NOT NULL,
	SCORE							DECIMAL(10,4)	NULL,
	CONSTRAINT PK_HIGG_SUB_SECTION_SCORE PRIMARY KEY (APP_SID, HIGG_RESPONSE_ID, HIGG_SUB_SECTION_ID),
	CONSTRAINT FK_HIGG_SUBSEC_SCORE_RES FOREIGN KEY (APP_SID, HIGG_RESPONSE_ID, HIGG_SECTION_ID)
	REFERENCES CHAIN.HIGG_SECTION_SCORE (APP_SID, HIGG_RESPONSE_ID, HIGG_SECTION_ID),
	CONSTRAINT FK_HIGG_SUBSEC_SCORE_SEC FOREIGN KEY (HIGG_SUB_SECTION_ID)
	REFERENCES CHAIN.HIGG_MODULE_SUB_SECTION (HIGG_SUB_SECTION_ID)
);

COMMENT ON COLUMN CHAIN.HIGG_SUB_SECTION_SCORE.APP_SID IS 'APP_SID';

CREATE TABLE CHAIN.HIGG_QUESTION_RESPONSE (
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_RESPONSE_ID				NUMBER(10)		NOT NULL,
	HIGG_QUESTION_ID				NUMBER(10)		NOT NULL,
	SCORE							NUMBER(10)		NULL,
	ANSWER							VARCHAR2(4000)	NULL,
	OPTION_ID						NUMBER(10)		NULL,
	CONSTRAINT PK_HIGG_QUESTION_RESPONSE PRIMARY KEY (APP_SID, HIGG_RESPONSE_ID, HIGG_QUESTION_ID),
	CONSTRAINT FK_HIGG_QU_RES_RESPONSE FOREIGN KEY (APP_SID, HIGG_RESPONSE_ID)
	REFERENCES CHAIN.HIGG_RESPONSE (APP_SID, HIGG_RESPONSE_ID),
	CONSTRAINT FK_HIGG_QU_RESPONSE_QUESTION FOREIGN KEY (HIGG_QUESTION_ID)
	REFERENCES CHAIN.HIGG_QUESTION (HIGG_QUESTION_ID),
	CONSTRAINT FK_HIGG_QU_RESPONSE_OPTION FOREIGN KEY (HIGG_QUESTION_ID, OPTION_ID)
	REFERENCES CHAIN.HIGG_QUESTION_OPTION (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID)
);

COMMENT ON COLUMN CHAIN.HIGG_QUESTION_RESPONSE.APP_SID IS 'APP_SID';

CREATE TABLE CHAIN.HIGG_CONFIG_PROFILE (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_CONFIG_ID					NUMBER(10) NOT NULL,
	HIGG_PROFILE_ID					NUMBER(10) NOT NULL,
	RESPONSE_YEAR					NUMBER(10) NOT NULL,
	INTERNAL_AUDIT_SID				NUMBER(10) NOT NULL,
	CONSTRAINT PK_HIGG_CONFIG_PROFILE PRIMARY KEY (APP_SID, HIGG_CONFIG_ID, HIGG_PROFILE_ID, RESPONSE_YEAR),
	CONSTRAINT FK_HIGG_CON_PRO_CON FOREIGN KEY (APP_SID, HIGG_CONFIG_ID)
	REFERENCES CHAIN.HIGG_CONFIG (APP_SID, HIGG_CONFIG_ID),
	CONSTRAINT FK_HIGG_CON_PRO_PRO FOREIGN KEY (APP_SID, HIGG_PROFILE_ID, RESPONSE_YEAR)
	REFERENCES CHAIN.HIGG_PROFILE (APP_SID, HIGG_PROFILE_ID, RESPONSE_YEAR)
);

CREATE TABLE CHAIN.HIGG_QUESTION_OPT_CONVERSION (
	APP_SID							NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	HIGG_QUESTION_ID				NUMBER(10) NOT NULL,
	HIGG_QUESTION_OPTION_ID			NUMBER(10) NOT NULL,
	MEASURE_CONVERSION_ID			NUMBER(10) NULL,
	CONSTRAINT PK_HIGG_Q_OPT_CONV PRIMARY KEY (APP_SID, HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID),
	CONSTRAINT FK_HIGG_Q_O_CONV_QO FOREIGN KEY (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID)
	REFERENCES CHAIN.HIGG_QUESTION_OPTION (HIGG_QUESTION_ID, HIGG_QUESTION_OPTION_ID)
);

--end US3004

CREATE TABLE chain.grid_extension (
	grid_extension_id				NUMBER(10, 0)	NOT NULL,
	base_card_group_id				NUMBER(10)		NOT NULL,
	extension_card_group_id			NUMBER(10)		NOT NULL,
	record_name						VARCHAR2(255)	NOT NULL,
	CONSTRAINT pk_grid_extension PRIMARY KEY (grid_extension_id),
	CONSTRAINT fk_eg_base_card_group FOREIGN KEY (base_card_group_id) REFERENCES chain.card_group (card_group_id),
	CONSTRAINT fk_eg_extension_card_group FOREIGN KEY (extension_card_group_id) REFERENCES chain.card_group (card_group_id)
);

CREATE UNIQUE INDEX CHAIN.grid_extension ON CHAIN.grid_extension (base_card_group_id, extension_card_group_id);

CREATE TABLE chain.customer_grid_extension (
	app_sid							NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	grid_extension_id				NUMBER(10),
	enabled							NUMBER(1) DEFAULT 0,
	CONSTRAINT pk_customer_grid_extension PRIMARY KEY (app_sid, grid_extension_id),
	CONSTRAINT fk_cge_ge FOREIGN KEY (grid_extension_id) REFERENCES chain.grid_extension (grid_extension_id),
	CONSTRAINT chk_ege_enabled CHECK (enabled IN (0,1))
);

CREATE SEQUENCE CHAIN.BSCI_LOG_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_LOG(
	APP_SID							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BSCI_LOG_ID						NUMBER(10, 0)	NOT NULL,
	SERVICE							VARCHAR2(255)	NOT NULL,
	OUTBOUND_MESSAGE				CLOB,
	INBOUND_MESSAGE					CLOB,
	LOG_DTM							DATE			DEFAULT SYSDATE NOT NULL,
	CONSTRAINT PK_BSCI_LOG PRIMARY KEY (APP_SID, BSCI_LOG_ID)
);

CREATE SEQUENCE CHAIN.BSCI_INTEGRATION_REPORT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_INTEGRATION_REPORT(
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BSCI_INTEGRATION_REPORT_ID		NUMBER(10)		NOT NULL,
	START_DTM						DATE			NOT NULL,
	END_DTM 						DATE			NOT NULL,
	SUPPLIERS_CLEANED 				VARCHAR2(4000),
	N_SUPPLIERS_CLEANED 			NUMBER(10)		NOT NULL,
	SIZE_OF_BSCI_SUPPLY_CHAIN		NUMBER(10)		NOT NULL,
	N_UNIQUE_IDS_ENTERED 			NUMBER(10)		NOT NULL,
	FAULTY_BSCI_IDS 				VARCHAR2(4000),
	N_FAULTY_BSCI_IDS 				NUMBER(10)		NOT NULL,
	MISSING_BSCI_IDS 				VARCHAR2(4000),
	N_MISSING_BSCI_IDS 				NUMBER(10)		NOT NULL,
	SUPPLIER_SYNC_ENABLED 			NUMBER(1)		NOT NULL,
	AUDIT_SYNC_ENABLED 				NUMBER(1)		NOT NULL,
	NO_UPDATE_NEEDED_SUPS 			VARCHAR2(4000),
	N_NO_UPDATE_NEEDED_SUPS 		NUMBER(10)		NOT NULL,
	UPDATED_SUPPLIERS 				VARCHAR2(4000),
	N_UPDATED_SUPPLIERS 			NUMBER(10)		NOT NULL,
	ERRORED_SUPPLIERS 				VARCHAR2(4000),
	N_ERRORED_SUPPLIERS 			NUMBER(10)		NOT NULL,
	TOTAL_SUPPLIERS_PROCESSED		NUMBER(10)		NOT NULL,
	NO_UPDATE_NEEDED_AUDS 			VARCHAR2(4000),
	N_NO_UPDATE_NEEDED_AUDS 		NUMBER(10)		NOT NULL,
	OUTSIDE_WINDOW_AUDS 			VARCHAR2(4000),
	N_OUTSIDE_WINDOW_AUDS 			NUMBER(10)		NOT NULL,
	UPDATED_AUDITS 					VARCHAR2(4000),
	N_UPDATED_AUDITS 				NUMBER(10)		NOT NULL,
	ERRORED_AUDITS 					VARCHAR2(4000),
	N_ERRORED_AUDITS 				NUMBER(10)		NOT NULL,
	TOTAL_AUDITS_PROCESSED			NUMBER(10)		NOT NULL,
	CONSTRAINT PK_BSCI_INTEGRATION_REPORT PRIMARY KEY (APP_SID, BSCI_INTEGRATION_REPORT_ID),
	CONSTRAINT CHK_RPT_SUPPLIER_SYNC_ENABLED CHECK (SUPPLIER_SYNC_ENABLED IN (0,1)),
	CONSTRAINT CHK_RPT_AUDIT_SYNC_ENABLED CHECK (AUDIT_SYNC_ENABLED IN (0,1))
);

CREATE TABLE CHAIN.BSCI_RSP (
	RSP_ID							NUMBER(10)		NOT NULL,
	LABEL							VARCHAR2(255)	NOT NULL,
	CONSTRAINT PK_BSCI_RSP PRIMARY KEY (RSP_ID)
);

CREATE SEQUENCE CHAIN.BSCI_SUPPLIER_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_SUPPLIER(
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BSCI_SUPPLIER_ID				NUMBER(10)		NOT NULL,
	COMPANY_SID						NUMBER(10)		NOT NULL,
	BSCI_FACTORY_ID					NUMBER(10)		NOT NULL,
	LATEST_VERSION					NUMBER(10)		NOT NULL,
	IS_AUDIT_IN_PROGRESS			NUMBER(1)		DEFAULT 0 NOT NULL,
	LAST_UPDATED_DTM				DATE,
	CONSTRAINT PK_BSCI_SUPPLIER PRIMARY KEY (APP_SID, BSCI_SUPPLIER_ID),
	CONSTRAINT CHK_IS_AUDIT_IN_PROGRESS CHECK(IS_AUDIT_IN_PROGRESS IN (0,1))
);

CREATE UNIQUE INDEX CHAIN.UK_BSCI_SUPPLIER ON CHAIN.BSCI_SUPPLIER (COMPANY_SID, BSCI_FACTORY_ID, LATEST_VERSION);

ALTER TABLE CHAIN.BSCI_SUPPLIER ADD (CONSTRAINT FK_BSCI_SUPPLIER_COMP
	FOREIGN KEY (APP_SID, COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID));

CREATE TABLE CHAIN.BSCI_SUPPLIER_DET(
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BSCI_SUPPLIER_ID				NUMBER(10)		NOT NULL,
	VERSION_NUMBER					NUMBER(10)		NOT NULL,
	XML								CLOB			NOT NULL,
	ADDRESS							VARCHAR2(4000)	NULL,
	CITY							VARCHAR2(255)	NULL,
	INDUSTRY						VARCHAR2(255)	NULL,
	COUNTRY							VARCHAR2(255)	NOT NULL,
	POSTCODE						VARCHAR2(255)	NULL,
	REGION							VARCHAR2(255)	NULL,
	TERRITORY						VARCHAR2(255)	NULL,
	ADDRESS_LOCATION_TYPE			VARCHAR2(255)	NOT NULL,
	AUDIT_ANNOUNCEMENT_METHOD		VARCHAR2(255)	NULL,
	FACTORY_CONTACT					VARCHAR2(255)	NOT NULL,
	AUDIT_EXPIRATION_DTM			DATE			NULL,
	AUDIT_IN_PROGRESS				VARCHAR2(255)	NULL,
	AUDIT_RESULT					VARCHAR2(255)	NULL,
	BSCI_COMMENTS					VARCHAR2(4000)	NULL,
	LINKED_PARTICIPANTS				VARCHAR2(255)	NULL,
	IN_COMMITMENTS					VARCHAR2(255)	NULL,
	IN_SUPPLY_CHAIN					VARCHAR2(255)	NULL,
	LEGAL_STATUS					VARCHAR2(255)	NULL,
	NAME							VARCHAR2(255)	NULL,
	NUMBER_OF_ASSOCIATES			NUMBER(10)		NULL,
	NUMBER_OF_BUILDINGS				NUMBER(10)		NULL,
	PARTICIPANT_NAME				VARCHAR2(255)	NULL,
	PRODUCT_GROUP					VARCHAR2(255)	NULL,
	PRODUCT_TYPE					VARCHAR2(255)	NULL,
	CODE_OF_CONDUCT_ACCEPTED		VARCHAR2(255)	NULL,
	CODE_OF_CONDUCT_SIGNED			VARCHAR2(255)	NULL,
	AUDIT_DTM						DATE			NULL,
	SECTOR							VARCHAR2(255)	NULL,
	WEBSITE							VARCHAR2(255)	NULL,
	YEAR_FOUNDED					NUMBER(10),
	AUDIT_TYPE						VARCHAR2(255)	NULL,
	RSP_ID							NUMBER(10)		NULL,
	IS_AUDIT_IN_PROGRESS			NUMBER(1)		NULL,
	AUDIT_IN_PROGRESS_DTM			DATE			NULL,
	CODE_OF_CONDUCT_SIGN_INT		VARCHAR2(255)	NULL,
	SA8000_CERTIFIED				VARCHAR2(255)	NULL,
	AUDIT_CERTIFICATION				VARCHAR2(4000)	NULL,
	ADDRESS_TYPE					VARCHAR2(255)	NULL,
	ALIAS							VARCHAR2(4000)	NULL,
	BRANDS							VARCHAR2(4000)	NULL,
	BUSINESS_UNIT					VARCHAR2(4000)	NULL,
	EMAIL_ADDRESS					VARCHAR2(255)	NULL,
	CONSTRAINT PK_BSCI_SUPPLIER_DET PRIMARY KEY (APP_SID, BSCI_SUPPLIER_ID, VERSION_NUMBER),
	CONSTRAINT CHK_BSD_IS_AUDIT_IN_PROGRESS CHECK(IS_AUDIT_IN_PROGRESS IN (0,1))
);

ALTER TABLE CHAIN.BSCI_SUPPLIER_DET ADD (CONSTRAINT FK_BSCI_SUPPLIER_RSP
	FOREIGN KEY (RSP_ID) REFERENCES CHAIN.BSCI_RSP (RSP_ID));

ALTER TABLE CHAIN.BSCI_SUPPLIER_DET ADD (CONSTRAINT FK_CHAIN_BSCI_SUPPLIER_DET
	FOREIGN KEY (APP_SID, BSCI_SUPPLIER_ID) REFERENCES chain.BSCI_SUPPLIER (APP_SID, BSCI_SUPPLIER_ID));

CREATE SEQUENCE CHAIN.BSCI_AUDIT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_AUDIT(
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BSCI_AUDIT_ID					NUMBER(10)		NOT NULL,
	INTERNAL_AUDIT_SID				NUMBER(10)		NOT NULL,
	AUDIT_REF						NUMBER(10)		NOT NULL,
	LATEST_VERSION    				NUMBER(10)		NOT NULL,
	LAST_UPDATED_DTM				DATE,
	BSCI_AUDIT_TYPE					NUMBER(1)		NOT NULL,
	CONSTRAINT PK_BSCI_AUDIT PRIMARY KEY (APP_SID, BSCI_AUDIT_ID),
	CONSTRAINT CHK_BSCI_AUDIT_TYPE CHECK (BSCI_AUDIT_TYPE IN (0,1,2))
);

CREATE UNIQUE INDEX CHAIN.UK_BSCI_AUDIT ON CHAIN.BSCI_AUDIT (INTERNAL_AUDIT_SID, AUDIT_REF, LATEST_VERSION);

CREATE SEQUENCE CHAIN.BSCI_2009_AUDIT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_2009_AUDIT(
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BSCI_2009_AUDIT_ID				NUMBER(10)		NOT NULL,
	BSCI_AUDIT_ID					NUMBER(10)		NOT NULL,
	VERSION_NUMBER					NUMBER(10)		NOT NULL,
	XML								CLOB			NOT NULL,
	AUDIT_REF 						NUMBER(10)		NOT NULL,
	DTM								DATE			NOT NULL,
	EXPIRY_DTM						DATE			NOT NULL,
	SCORE							VARCHAR2(255),
	AUDIT_ANNOUNCED					NUMBER(1)		NOT NULL,
	AUDIT_STAGE						VARCHAR2(255)	NOT NULL,
	AUDIT_METHODOLOGY				VARCHAR2(255),
	LEAD_AUDITOR_NAME				VARCHAR2(255),
	MAN_DAYS						NUMBER(10,3),
	CYCLE							VARCHAR2(255),
	TOTAL_TURNOVER					NUMBER(24, 10),
	INTERVIEW_ESSENTIALS			CLOB,
	B_1								NUMBER(10),
	B_2								NUMBER(10),
	B_3								NUMBER(10),
	B_4								NUMBER(10),
	B_5_1							NUMBER(10),
	B_5_2							NUMBER(10),
	B_6								NUMBER(10),
	B_7								NUMBER(10),
	B_8								NUMBER(10),
	B_9								NUMBER(10),
	B_10							NUMBER(10),
	B_11							NUMBER(10),
	B_12							NUMBER(10),
	B_13							NUMBER(10),
	CONSTRAINT PK_BSCI_2009_AUDIT PRIMARY KEY (APP_SID, BSCI_2009_AUDIT_ID),
	CONSTRAINT CHK_2009_AUDIT_ANNOUNCED CHECK (AUDIT_ANNOUNCED IN (0,1))
);

ALTER TABLE CHAIN.BSCI_2009_AUDIT ADD CONSTRAINT FK_CHAIN_2009_BSCI_AUDIT
	FOREIGN KEY (APP_SID, BSCI_AUDIT_ID) REFERENCES CHAIN.BSCI_AUDIT (APP_SID, BSCI_AUDIT_ID);

CREATE SEQUENCE CHAIN.BSCI_2009_A_FINDING_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_2009_AUDIT_FINDING (
	APP_SID							NUMBER(10,0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BSCI_2009_AUDIT_FINDING_ID		NUMBER(10)		NOT NULL,
	BSCI_2009_AUDIT_ID				NUMBER(10)		NOT NULL,
	MSI_CATEGORY					VARCHAR2(255)	NOT NULL,
	MSI_SUB_CATEGORY				VARCHAR2(255)	NULL,
	SCORE							NUMBER(10,0)	NOT NULL,
	QUESTION						CLOB			NULL,
	GUIDELINES						CLOB			NULL,
	RATING							CLOB			NULL,
	CONSTRAINT PK_BSCI_2009_AUDIT_FINDING PRIMARY KEY (BSCI_2009_AUDIT_FINDING_ID)
);

ALTER TABLE CHAIN.BSCI_2009_AUDIT_FINDING ADD CONSTRAINT FK_BSCI_2009_AUDIT_FIND
	FOREIGN KEY (APP_SID, BSCI_2009_AUDIT_ID) REFERENCES CHAIN.BSCI_2009_AUDIT (APP_SID, BSCI_2009_AUDIT_ID);

CREATE SEQUENCE CHAIN.BSCI_2009_A_ASSOCIATE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_2009_AUDIT_ASSOCIATE (
	APP_SID							NUMBER(10,0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BSCI_2009_AUDIT_ASSOCIATE_ID	NUMBER(10)		NOT NULL,
	BSCI_2009_AUDIT_ID				NUMBER(10)		NOT NULL,
	ASSOCIATE						VARCHAR2(255)	NOT NULL,
	ASSOCIATE_COUNT					NUMBER(10,0)	NOT NULL,
	CONSTRAINT PK_BSCI_2009_AUDIT_ASSOC_ID PRIMARY KEY (BSCI_2009_AUDIT_ASSOCIATE_ID)
 );

ALTER TABLE CHAIN.BSCI_2009_AUDIT_ASSOCIATE ADD CONSTRAINT FK_BSCI_2009_AUDIT_ASSOC
	FOREIGN KEY (APP_SID, BSCI_2009_AUDIT_ID) REFERENCES CHAIN.BSCI_2009_AUDIT (APP_SID, BSCI_2009_AUDIT_ID);


CREATE SEQUENCE CHAIN.BSCI_2014_AUDIT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_2014_AUDIT(
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BSCI_2014_AUDIT_ID				NUMBER(10)		NOT NULL,
	BSCI_AUDIT_ID					NUMBER(10)		NOT NULL,
	VERSION_NUMBER					NUMBER(10)		NOT NULL,
	XML								CLOB			NOT NULL,
	AUDIT_REF 						NUMBER(10)		DEFAULT 0 NOT NULL,
	DTM								DATE			NOT NULL,
	EXPIRY_DTM						DATE			NOT NULL,
	SCORE							VARCHAR2(255),
	AUDIT_ANNOUNCED					NUMBER(1)		NOT NULL,
	AUDIT_STAGE						VARCHAR2(255)	NOT NULL,
	AUDIT_ENVIRONMENT				VARCHAR2(255),
	AUDITING_COMPANY				VARCHAR2(255),
	AUDITING_COMPANY_BRANCH			VARCHAR2(255),
	MAN_DAYS						NUMBER(10,3),
	NEED_FOLLOW_UP					VARCHAR2(255),
	AUDITOR_COMMENTS				CLOB,
	EXECUTIVE_SUMMARY_AUDIT_RPT		CLOB,
	INTERVIEW_ESSENTIALS			CLOB,
	LEAD_AUDITOR_NAME				VARCHAR2(255),
	PA1								VARCHAR2(255),
	PA2								VARCHAR2(255),
	PA3								VARCHAR2(255),
	PA4								VARCHAR2(255),
	PA5								VARCHAR2(255),
	PA6								VARCHAR2(255),
	PA7								VARCHAR2(255),
	PA8								VARCHAR2(255),
	PA9								VARCHAR2(255),
	PA10							VARCHAR2(255),
	PA11							VARCHAR2(255),
	PA12							VARCHAR2(255),
	PA13							VARCHAR2(255),
	CONSTRAINT PK_BSCI_2014_AUDIT PRIMARY KEY (APP_SID, BSCI_2014_AUDIT_ID)
);

ALTER TABLE CHAIN.BSCI_2014_AUDIT ADD CONSTRAINT FK_CHAIN_2014_BSCI_AUDIT
	FOREIGN KEY (APP_SID, BSCI_AUDIT_ID) REFERENCES CHAIN.BSCI_AUDIT (APP_SID, BSCI_AUDIT_ID);

CREATE SEQUENCE CHAIN.BSCI_2014_A_FINDING_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_2014_AUDIT_FINDING (
	APP_SID							NUMBER(10,0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BSCI_2014_AUDIT_FINDING_ID		NUMBER(10)		NOT NULL,
	BSCI_2014_AUDIT_ID				NUMBER(10)		NOT NULL,
	SUBHEADER_VAL					VARCHAR2(255)	NOT NULL,
	SUBHEADER_DESC					VARCHAR2(255)	NULL,
	SCORE							NUMBER(10,0)	NOT NULL,
	QUESTION						CLOB			NULL,
	GUIDELINES						CLOB			NULL,
	RATING							CLOB			NULL,
	CONSTRAINT PK_BSCI_2014_AUDIT_FINDING PRIMARY KEY (BSCI_2014_AUDIT_FINDING_ID)
);

ALTER TABLE CHAIN.BSCI_2014_AUDIT_FINDING ADD CONSTRAINT FK_BSCI_2014_AUDIT_FIND
	FOREIGN KEY (APP_SID, BSCI_2014_AUDIT_ID) REFERENCES CHAIN.BSCI_2014_AUDIT (APP_SID, BSCI_2014_AUDIT_ID);


CREATE SEQUENCE CHAIN.BSCI_2014_A_ASSOCIATE_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_2014_AUDIT_ASSOCIATE (
	APP_SID							NUMBER(10,0)	DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BSCI_2014_AUDIT_ASSOCIATE_ID	NUMBER(10)		NOT NULL,
	BSCI_2014_AUDIT_ID				NUMBER(10)		NOT NULL,
	ASSOCIATE						VARCHAR2(255)	NOT NULL,
	ASSOCIATE_COUNT					NUMBER(10,0)	NOT NULL,
	CONSTRAINT PK_BSCI_2014_AUDIT_ASSOC_ID PRIMARY KEY (BSCI_2014_AUDIT_ASSOCIATE_ID)
 );

ALTER TABLE CHAIN.BSCI_2014_AUDIT_ASSOCIATE ADD CONSTRAINT FK_BSCI_2014_AUDIT_ASSOC
	FOREIGN KEY (APP_SID, BSCI_2014_AUDIT_ID) REFERENCES CHAIN.BSCI_2014_AUDIT (APP_SID, BSCI_2014_AUDIT_ID);


CREATE SEQUENCE CHAIN.BSCI_EXT_AUDIT_ID_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	NOMAXVALUE
	CACHE 20
	NOORDER
;

CREATE TABLE CHAIN.BSCI_EXT_AUDIT(
	APP_SID							NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	BSCI_EXT_AUDIT_ID				NUMBER(10)		NOT NULL,
	BSCI_AUDIT_ID					NUMBER(10)		NOT NULL,
	VERSION_NUMBER					NUMBER(10)		NOT NULL,
	XML								CLOB			NOT NULL,
	AUDIT_REF						NUMBER(10)		DEFAULT 0 NOT NULL,
	DTM								DATE			NOT NULL,
	EXPIRY_DTM						DATE			NOT NULL,
	AUDIT_SCORE						VARCHAR2(255),
	AUDIT_TYPE						VARCHAR2(255),
	EXTERNAL_AUDIT_TYPE				VARCHAR2(255),
	AUDITING_COMPANY				VARCHAR2(255),
	SEQUENCE_NUMBER					NUMBER(10),
	CONSTRAINT PK_BSCI_EXT_AUDIT PRIMARY KEY (APP_SID, BSCI_AUDIT_ID, VERSION_NUMBER)
);

ALTER TABLE CHAIN.BSCI_EXT_AUDIT ADD CONSTRAINT FK_CHAIN_EXT_BSCI_AUDIT
	FOREIGN KEY (APP_SID, BSCI_AUDIT_ID) REFERENCES chain.BSCI_AUDIT (APP_SID, BSCI_AUDIT_ID);
	
	
	
	
	
	
-- START US5110

CREATE TABLE CHAIN.BSCI_IMPORT (
	APP_SID			 NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BSCI_ID			 NUMBER(10),
	BATCH_JOB_ID		NUMBER(10),
	CONSTRAINT PK_BSCI_BATCH_IMPORT PRIMARY KEY (APP_SID, BSCI_ID, BATCH_JOB_ID)
);

-- END US5110

CREATE TABLE CHAIN.FILTER_EXPORT_BATCH (
	APP_SID					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	BATCH_JOB_ID			NUMBER(10) NOT NULL,
	FILTER_TYPE 			NUMBER(1)  NOT NULL,
	COMPOUND_FILTER_ID		NUMBER(10) NULL,
	CARD_GROUP_ID			NUMBER(10) NOT NULL,
	CONSTRAINT PK_FILTER_EXPORT_BATCH PRIMARY KEY (APP_SID, BATCH_JOB_ID, FILTER_TYPE)
);

ALTER TABLE CHAIN.FILTER_EXPORT_BATCH ADD CONSTRAINT FK_FEB_BATCH_COMPOUND_FILTER
	FOREIGN KEY (APP_SID, COMPOUND_FILTER_ID)
	REFERENCES CHAIN.COMPOUND_FILTER (APP_SID, COMPOUND_FILTER_ID);

ALTER TABLE CHAIN.FILTER_EXPORT_BATCH ADD CONSTRAINT FK_FEB_CARD_GROUP
	FOREIGN KEY (CARD_GROUP_ID)
	REFERENCES CHAIN.CARD_GROUP (CARD_GROUP_ID);

ALTER TABLE CHAIN.COMPANY_TAB ADD CONSTRAINT FK_COMPANY_TAB_BUS_REL_TYPE
	FOREIGN KEY (APP_SID, BUSINESS_RELATIONSHIP_TYPE_ID)
	REFERENCES CHAIN.BUSINESS_RELATIONSHIP_TYPE (APP_SID, BUSINESS_RELATIONSHIP_TYPE_ID)
;

CREATE TABLE chain.company_type_score_calc (
	app_sid								NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	company_type_id						NUMBER(10, 0) NOT NULL,
	score_type_id						NUMBER(10, 0) NOT NULL,
	calc_type							VARCHAR2(50) NOT NULL,
	operator_type						VARCHAR2(10),
	supplier_score_type_id				NUMBER(10, 0),
	active_suppliers_only				NUMBER(1),
	CONSTRAINT pk_cmp_typ_scr_clc PRIMARY KEY (app_sid, company_type_id, score_type_id),
	CONSTRAINT fk_cmp_typ_scr_clc_cmp_typ FOREIGN KEY (app_sid, company_type_id) REFERENCES chain.company_type (app_sid, company_type_id),
	CONSTRAINT ck_cmp_typ_scr_clc_opr_typ CHECK (operator_type IS NULL OR operator_type IN ('sum', 'avg', 'max', 'min')),
	CONSTRAINT ck_cmp_typ_scr_clc_calc CHECK (
		calc_type = 'supplier_scores' AND operator_type IS NOT NULL AND supplier_score_type_id IS NOT NULL AND active_suppliers_only IN (0, 1)
	)
);

CREATE TABLE chain.comp_type_score_calc_comp_type (
	app_sid								NUMBER(10, 0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	company_type_id						NUMBER(10, 0) NOT NULL,
	score_type_id						NUMBER(10, 0) NOT NULL,
	supplier_company_type_id			NUMBER(10, 0) NOT NULL,
	CONSTRAINT pk_cmp_typ_scr_clc_cmp_typ PRIMARY KEY (app_sid, company_type_id, score_type_id, supplier_company_type_id),
	CONSTRAINT fk_cmp_typ_scr_clc_ct_parent FOREIGN KEY (app_sid, company_type_id, score_type_id) REFERENCES chain.company_type_score_calc (app_sid, company_type_id, score_type_id),
	CONSTRAINT fk_cmp_typ_scr_clc_ct_ct FOREIGN KEY (app_sid, company_type_id) REFERENCES chain.company_type (app_sid, company_type_id),
	CONSTRAINT fk_cmp_typ_scr_clc_ct_sct FOREIGN KEY (app_sid, supplier_company_type_id) REFERENCES chain.company_type (app_sid, company_type_id)
);

CREATE TABLE CHAIN.CERTIFICATION_TYPE (
	APP_SID					 NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CERTIFICATION_TYPE_ID	   NUMBER(10) NOT NULL,
	LABEL					   VARCHAR2(1024) NOT NULL,
	LOOKUP_KEY				  VARCHAR2(30),
	PRODUCT_REQUIREMENT_TYPE_ID	NUMBER(10, 0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_CERTIFICATION_TYPE PRIMARY KEY (APP_SID, CERTIFICATION_TYPE_ID)
);

CREATE TABLE CHAIN.CERT_TYPE_AUDIT_TYPE (
	APP_SID					 NUMBER(10, 0)	 DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	CERTIFICATION_TYPE_ID			NUMBER(10) NOT NULL,
	INTERNAL_AUDIT_TYPE_ID	  NUMBER(10) NOT NULL,
	CONSTRAINT PK_CERT_TYPE_AUDIT_TYPE PRIMARY KEY (APP_SID, CERTIFICATION_TYPE_ID, INTERNAL_AUDIT_TYPE_ID),
	CONSTRAINT FK_CERT_AUDIT_TYPE_CERT FOREIGN KEY (APP_SID, CERTIFICATION_TYPE_ID) REFERENCES CHAIN.CERTIFICATION_TYPE(APP_SID, CERTIFICATION_TYPE_ID)
);

ALTER TABLE CHAIN.COMPANY_PRODUCT_REQUIRED_CERT ADD CONSTRAINT FK_CMPNY_PRDCT_RQRD_CRT_CRT
	FOREIGN KEY (APP_SID, CERTIFICATION_TYPE_ID)
	REFERENCES CHAIN.CERTIFICATION_TYPE (APP_SID, CERTIFICATION_TYPE_ID)
;

CREATE TABLE CHAIN.ALT_COMPANY_NAME(
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	ALT_COMPANY_NAME_ID				NUMBER(10) NOT NULL,
	COMPANY_SID						NUMBER(10) NOT NULL,
	NAME							VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_ALT_COMPANY_NAME PRIMARY KEY (APP_SID, ALT_COMPANY_NAME_ID),
	CONSTRAINT FK_ALT_COMP_NAME_COMPANY FOREIGN KEY (APP_SID, COMPANY_SID) REFERENCES CHAIN.COMPANY (APP_SID, COMPANY_SID),
	CONSTRAINT UK_ALT_COMPANY_NAME UNIQUE (APP_SID, COMPANY_SID, NAME)
);

CREATE TABLE CHAIN.DEDUPE_PP_ALT_COMP_NAME (
	APP_SID 					NUMBER(10) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	ALT_COMPANY_NAME_ID			NUMBER(10) NOT NULL,
	COMPANY_SID 				NUMBER(10,0) NOT NULL,
	NAME 						VARCHAR2(255) NOT NULL,
	CONSTRAINT FK_DEDUPE_PP_ALT_COMP_NAME FOREIGN KEY (APP_SID, ALT_COMPANY_NAME_ID) REFERENCES CHAIN.ALT_COMPANY_NAME (APP_SID, ALT_COMPANY_NAME_ID),
	CONSTRAINT UK_DEDUPE_PP_ALT_COMP_NAME UNIQUE (APP_SID, ALT_COMPANY_NAME_ID, COMPANY_SID, NAME)
);

CREATE TABLE CHAIN.SUPPLIER_INVOLVEMENT_TYPE (
	APP_SID							NUMBER(10)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	FLOW_INVOLVEMENT_TYPE_ID		NUMBER(10)	NOT NULL,
	USER_COMPANY_TYPE_ID			NUMBER(10)	NULL,
	PAGE_COMPANY_TYPE_ID			NUMBER(10)	NULL,
	PURCHASER_TYPE					NUMBER(2)	NOT NULL,
	RESTRICT_TO_ROLE_SID			NUMBER(10)	NULL,
	CONSTRAINT PK_SUPPLIER_INVOLVEMENT_TYPE PRIMARY KEY (APP_SID, FLOW_INVOLVEMENT_TYPE_ID),
	CONSTRAINT FK_SUPP_INV_TYPE_SUP_REL FOREIGN KEY (APP_SID, USER_COMPANY_TYPE_ID, PAGE_COMPANY_TYPE_ID)
	REFERENCES CHAIN.COMPANY_TYPE_RELATIONSHIP (APP_SID, PRIMARY_COMPANY_TYPE_ID, SECONDARY_COMPANY_TYPE_ID),
	CONSTRAINT FK_SUPP_INV_TYPE_CO_TYPE_ROLE FOREIGN KEY (APP_SID, USER_COMPANY_TYPE_ID, RESTRICT_TO_ROLE_SID)
	REFERENCES CHAIN.COMPANY_TYPE_ROLE (APP_SID, COMPANY_TYPE_ID, ROLE_SID),
	CONSTRAINT UK_SUPP_INV_TYPE UNIQUE (APP_SID, USER_COMPANY_TYPE_ID, PAGE_COMPANY_TYPE_ID, PURCHASER_TYPE, RESTRICT_TO_ROLE_SID),
	CONSTRAINT CHK_SUPP_INV_TYPE_PUR_TYPE CHECK (PURCHASER_TYPE IN (1,2,3))
);

CREATE TABLE CHAIN.DD_CUSTOMER_BLCKLST_EMAIL(
	APP_SID							NUMBER(10,0) DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	EMAIL_DOMAIN					VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_DD_CUSTOMER_BLCKLST_EMAIL PRIMARY KEY(APP_SID, EMAIL_DOMAIN)
);

CREATE TABLE CHAIN.DD_DEF_BLCKLST_EMAIL(
	EMAIL_DOMAIN					VARCHAR2(255) NOT NULL,
	CONSTRAINT PK_DD_DEF_BLCKLST_EMAIL PRIMARY KEY (EMAIL_DOMAIN)
);

CREATE TABLE chain.product_metric_calc (
	app_sid							NUMBER(10, 0)	DEFAULT SYS_CONTEXT('SECURITY','APP') NOT NULL,
	product_metric_calc_id			NUMBER(10, 0)	NOT NULL,
	destination_ind_sid				NUMBER(10, 0)	NOT NULL,
	applies_to_products				NUMBER(1)		DEFAULT 0 NOT NULL,
	applies_to_product_companies	NUMBER(1)		DEFAULT 0 NOT NULL,
	applies_to_product_suppliers	NUMBER(1)		DEFAULT 0 NOT NULL,
	applies_to_prod_sup_purchasers	NUMBER(1)		DEFAULT 0 NOT NULL,
	applies_to_prod_sup_suppliers	NUMBER(1)		DEFAULT 0 NOT NULL,
	calc_type						NUMBER(10, 0)	NOT NULL,
	operator						VARCHAR2(10)	NOT NULL,
	source_ind_sid_1				NUMBER(10, 0)	NOT NULL,
	source_ind_sid_2				NUMBER(10, 0),
	source_argument_2				NUMBER(24, 10),	
	user_values_only				NUMBER(1),
	CONSTRAINT pk_product_metric_calc PRIMARY KEY (app_sid, product_metric_calc_id),
	CONSTRAINT fk_product_metric_calc_dest FOREIGN KEY (app_sid, destination_ind_sid) REFERENCES chain.product_metric (app_sid, ind_sid),
	CONSTRAINT fk_product_metric_calc_src1 FOREIGN KEY (app_sid, source_ind_sid_1) REFERENCES chain.product_metric (app_sid, ind_sid),
	CONSTRAINT fk_product_metric_calc_src2 FOREIGN KEY (app_sid, source_ind_sid_2) REFERENCES chain.product_metric (app_sid, ind_sid),
	CONSTRAINT ck_product_metric_calc_type CHECK (
		(calc_type = 0 AND applies_to_product_companies = 0 AND applies_to_prod_sup_purchasers = 0 AND applies_to_prod_sup_suppliers = 0)
		OR
		(calc_type = 1)
		OR
		(calc_type = 2 AND applies_to_product_suppliers = 0 AND applies_to_prod_sup_purchasers = 0 AND applies_to_prod_sup_suppliers = 0)
	),
	CONSTRAINT ck_product_metric_calc_ap_p CHECK (applies_to_products IN (0, 1)),
	CONSTRAINT ck_product_metric_calc_ap_pc CHECK (applies_to_product_companies IN (0, 1)),
	CONSTRAINT ck_product_metric_calc_ap_ps CHECK (applies_to_product_suppliers IN (0, 1)),
	CONSTRAINT ck_product_metric_calc_ap_psp CHECK (applies_to_prod_sup_purchasers IN (0, 1)),
	CONSTRAINT ck_product_metric_calc_ap_pss CHECK (applies_to_prod_sup_suppliers IN (0, 1)),
	CONSTRAINT ck_product_metric_calc_appl CHECK (
			applies_to_products = 1 OR
			applies_to_product_companies = 1 OR
			applies_to_product_suppliers = 1 OR
			applies_to_prod_sup_purchasers = 1 OR
			applies_to_prod_sup_suppliers = 1
	),
	CONSTRAINT ck_product_metric_calc_oper CHECK (
		(calc_type = 0 AND (operator IN ('+', '-', '*', '/')))
		OR
		(calc_type IN (1, 2) AND (operator IN ('count', 'sum', 'min', 'max', 'avg')))
	),
	CONSTRAINT ck_product_metric_calc_source CHECK (
		(calc_type = 0 AND (source_ind_sid_1 != destination_ind_sid) AND (
			(source_ind_sid_2 IS NOT NULL AND (source_ind_sid_2 != destination_ind_sid) AND source_argument_2 IS NULL) OR
			(source_ind_sid_2 IS NULL AND source_argument_2 IS NOT NULL)
		) AND user_values_only IS NULL)
		OR
		(calc_type IN (1, 2) AND (source_ind_sid_2 IS NULL OR source_ind_sid_2 != source_ind_sid_1) AND source_argument_2 IS NULL AND user_values_only IN (0, 1))
	)
);

CREATE UNIQUE INDEX chain.ux_product_metric_calc_prods ON chain.product_metric_calc (app_sid, destination_ind_sid, CASE WHEN applies_to_products = 1 THEN 0 ELSE product_metric_calc_id END);
CREATE UNIQUE INDEX chain.ux_product_metric_calc_prsps ON chain.product_metric_calc (app_sid, destination_ind_sid, CASE WHEN applies_to_product_suppliers = 1 THEN 0 ELSE product_metric_calc_id END);
CREATE UNIQUE INDEX chain.ux_product_metric_calc_comps ON chain.product_metric_calc (app_sid, destination_ind_sid, CASE WHEN applies_to_product_companies = 1
																														  OR applies_to_prod_sup_purchasers = 1
																														  OR applies_to_prod_sup_suppliers = 1 THEN 0 ELSE product_metric_calc_id END);

CREATE TABLE chain.integration_request (
	app_sid					NUMBER(10)		DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
	data_type				VARCHAR2(64)	NOT NULL,
	data_id					VARCHAR2(64)	NOT NULL,
	tenant_id				VARCHAR2(64)	NOT NULL,
	request_url				VARCHAR2(2048)	NOT NULL,
	request_verb			VARCHAR2(100)	NOT NULL,
	last_updated_dtm		DATE			NOT NULL,
	last_updated_message	VARCHAR2(1024)	NOT NULL,
	request_json			CLOB,
	correlation_id			VARCHAR2(64),
	CONSTRAINT pk_integration_request	PRIMARY KEY (app_sid, data_type, data_id, tenant_id)
);

-- please make sure this file ends with a new line (the same goes for all source code -- this avoids merge issues)
