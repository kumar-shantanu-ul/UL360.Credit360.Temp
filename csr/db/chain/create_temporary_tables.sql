CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_OLD_SO_CAPABILITIES
(
	CAPABILITY_ID		NUMBER NOT NULL,
	CAPABILITY_TYPE		NUMBER NOT NULL,
	CAPABILITY_NAME		VARCHAR2(255) NOT NULL,
	SO_ID				NUMBER NOT NULL,
	DACL_ID				NUMBER NOT NULL,
	DACL_SO_ID			NUMBER NOT NULL,
	PERMISSION_SET		NUMBER NOT NULL,
	GROUP_NAME			VARCHAR2(255) NOT NULL
) 
ON COMMIT PRESERVE ROWS; 

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_NEW_TYPE_CAPABILITIES
(
	CAPABILITY_ID		NUMBER NOT NULL,
	CAPABILITY_NAME		VARCHAR2(255) NOT NULL,
	PERMISSION_SET		NUMBER NOT NULL,
	GROUP_NAME			VARCHAR2(255) NOT NULL
) 
ON COMMIT PRESERVE ROWS; 

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_SUMMARY_TASKS
(
	TASK_NAME			VARCHAR2(255) NOT NULL,
	TASK_TYPE_ID		NUMBER(10) NOT NULL,
	COMPANY_SID			NUMBER(10),
	POSITION			NUMBER(10) NOT NULL,
	DUE_NOW				NUMBER(10),
	OVER_DUE			NUMBER(10),
	REALLY_OVER_DUE		NUMBER(10),
	DUE_SOON			NUMBER(10),
	DUE_LATER			NUMBER(10),
	DUE_DATE			DATE	
) 
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE chain.tt_dedupe_cms_data (
	processed_record_id				NUMBER(10) NOT NULL,
	oracle_schema					VARCHAR2(30) NOT NULL,
	source_table					VARCHAR2(30) NOT NULL,
	source_tab_sid					NUMBER(10) NOT NULL,
	source_column					VARCHAR2(30) NOT NULL,
	source_col_sid					NUMBER(10) NOT NULL,
	source_col_type					NUMBER(10) NOT NULL,
	source_data_type				VARCHAR2(255) NULL,
	destination_table				VARCHAR2(30) NOT NULL,
	destination_tab_sid				NUMBER(10) NOT NULL,
	destination_column				VARCHAR2(30) NOT NULL,
	destination_col_sid				NUMBER(10) NOT NULL,
	destination_col_type			NUMBER(10) NOT NULL,
	destination_data_type			VARCHAR2(255) NULL,
	current_str_value				VARCHAR2(4000) NULL,
	new_str_value					VARCHAR2(4000) NULL,
	current_date_value				DATE NULL,
	new_date_value					DATE NULL,
	current_desc_val				VARCHAR2(4000) NULL,
	new_raw_value					VARCHAR2(4000) NULL,
	new_translated_value			VARCHAR2(4000) NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_USER_DETAILS
(
	USER_SID			NUMBER(10),
	FULL_NAME           VARCHAR2(256), -- nice data types (from csr_user)
	FRIENDLY_NAME		VARCHAR2(255),
	PHONE_NUMBER		VARCHAR2(100),
	JOB_TITLE			VARCHAR2(100),
	VISIBILITY_ID       NUMBER(10),
	EMAIL  		        VARCHAR2(256), -- (from csr_user)
	SEND_ALERTS			NUMBER,
	USER_NAME			VARCHAR2(256)
) 
ON COMMIT PRESERVE ROWS;


CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_NAMED_PARAM 
( 
	ID					NUMBER(10) NOT NULL, 
	NAME				VARCHAR2(100) NOT NULL,
	VALUE				VARCHAR2(4000) NOT NULL
) 
ON COMMIT DELETE ROWS; 

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_ORDERED_PARAM 
( 
	ID					NUMBER(10) NOT NULL, 
	POSITION			NUMBER(10) NOT NULL,
	VALUE				VARCHAR2(255) NOT NULL
) 
ON COMMIT DELETE ROWS; 


CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_ID
( 
	ID							NUMBER(10) NOT NULL,
	POSITION					NUMBER(10)
) 
ON COMMIT DELETE ROWS; 


-- renamed from TT_QUESTIONNAIRE_LIST so that we can alter the table without worrying about open connection issues
-- TODO: drop the old TT_QUESTIONNAIRE_LIST
CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_QUESTIONNAIRE_ORGANIZER
( 
	QUESTIONNAIRE_ID			NUMBER(10) NULL,
	QUESTIONNAIRE_STATUS_ID		NUMBER(10) NOT NULL,
	QUESTIONNAIRE_STATUS_NAME	VARCHAR2(200) NOT NULL,
	STATUS_UPDATE_DTM			TIMESTAMP(6),
	DUE_BY_DTM					DATE,
	POSITION					NUMBER(10),
	NAME						VARCHAR2(200) NOT NULL,
	COMPONENT_DESCRIPTION		VARCHAR2(4000),
	COMPANY_SID					NUMBER(10) NOT NULL,
	QUESTIONNAIRE_TYPE_ID		NUMBER(10) NOT NULL
) 
ON COMMIT PRESERVE ROWS; 

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_PRODUCT_QNR_DATA_ORG
( 
	COMPONENT_ID				NUMBER(10) NOT NULL,
	COMPONENT_DESCRIPTION		VARCHAR2(4000) NOT NULL,
	QUESTIONNAIRE_TYPE_ID		NUMBER(10) NOT NULL,
	NAME						VARCHAR2(255) NOT NULL,
	COMPANY_SID					NUMBER(10) NOT NULL,
	CREATED_BY_SID				NUMBER(10) NOT NULL,
	QUESTIONNAIRE_ID			NUMBER(10),	
	QUESTIONNAIRE_STATUS_ID		NUMBER(10) NOT NULL,
	QUESTIONNAIRE_STATUS_NAME	VARCHAR2(255) NOT NULL,
	STATUS_UPDATE_DTM			TIMESTAMP(6) NOT NULL,
	DUE_BY_DTM					DATE,
	POSITION					NUMBER(10),
	URL							VARCHAR2(255),
	CAN_MANAGE_PROCURER_PERMS	NUMBER(1) DEFAULT 0, 
	CAN_MANAGE_SUPPLIER_PERMS	NUMBER(1) DEFAULT 0 
) 
ON COMMIT PRESERVE ROWS; 

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_PRODUCT_MAPPING_SEARCH
(
	COMPONENT_ID				NUMBER(10) NOT NULL,
	COMPONENT_DESCRIPTION		VARCHAR2(500),
	PRODUCT_ID					NUMBER(10) NOT NULL,
	PRODUCT_DESCRIPTION			VARCHAR2(500),
	MAPPED						NUMBER(1) NOT NULL,
	REJECTED					NUMBER(1) NOT NULL,
	CODE_LABEL1 				VARCHAR2(100),
	CODE1						VARCHAR2(100), 
	CODE_LABEL2					VARCHAR2(100), 
	CODE2						VARCHAR2(100),
	CODE_LABEL3					VARCHAR2(100), 
	CODE3						VARCHAR2(100),
	POSITION					NUMBER(10)
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_COMPONENT_TYPE_CONTAINMENT
(
	CONTAINER_COMPONENT_TYPE_ID	NUMBER(10) NOT NULL,
	CHILD_COMPONENT_TYPE_ID		NUMBER(10) NOT NULL,
	ALLOW_ADD_EXISTING			NUMBER(1)  NOT NULL,
	ALLOW_ADD_NEW				NUMBER(1)  NOT NULL
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_COMPONENT_TREE
(
	TOP_COMPONENT_ID			NUMBER(10) NOT NULL,
	CONTAINER_COMPONENT_ID		NUMBER(10),
	CHILD_COMPONENT_ID			NUMBER(10) NOT NULL,
	POSITION					NUMBER(10),
	AMOUNT_CHILD_PER_PARENT		NUMBER(10,3),
	AMOUNT_UNIT_ID				NUMBER(10)
)
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_PRODUCT_COMPONENT_TREE
(
	TOP_COMPONENT_ID			NUMBER(10) NOT NULL,
	TOP_PRODUCT_ID				NUMBER(10) NOT NULL
)
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_MESSAGE_SEARCH
(
	MESSAGE_ID                  NUMBER(10)    NOT NULL,
	MESSAGE_DEFINITION_ID       NUMBER(10)    NOT NULL,
	TO_COMPANY_SID				NUMBER(10),
	TO_USER_SID					NUMBER(10),
	RE_COMPANY_SID              NUMBER(10),
	RE_USER_SID                 NUMBER(10),
	RE_QUESTIONNAIRE_TYPE_ID    NUMBER(10),
	RE_COMPONENT_ID             NUMBER(10),
	ORDER_BY_DTM				TIMESTAMP,
	LAST_REFRESHED_BY_USER_SID  NUMBER(10),
	COMPLETED_BY_USER_SID       NUMBER(10),
	VIEWED_DTM					TIMESTAMP,
	RE_SECONDARY_COMPANY_SID	NUMBER(10),
	RE_INVITATION_ID 			NUMBER(10, 0),
	RE_AUDIT_REQUEST_ID			NUMBER(10, 0)
)
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_USER_TASKS
(
	SUPPLIER_NAME				VARCHAR2(255)	NOT NULL,
	SUPPLIER_SID				NUMBER(10,0)	NOT NULL,
	TASK_TYPE_DESCRIPTION		VARCHAR2(255)	NOT NULL,
	PARENT_TASK_TYPE_DESCRIPTION VARCHAR2(255)	NOT NULL,
	DUE_DATE					DATE,
	RN 							NUMBER,
	MESSAGE_TEMPLATE			VARCHAR2(4000),
	RE_QUESTIONNAIRE			VARCHAR2(255),
	RE_USER 					VARCHAR2(256),
	MESSAGE_DEFINITION_ID		NUMBER(10,0)
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_USER_GROUPS
(
	USER_SID					NUMBER(10) NOT NULL,
	COMPANY_SID					NUMBER(10) NOT NULL,
	GROUP_SID					NUMBER(10) NOT NULL,
	CONSTRAINT PK_TT_USER_GROUPS PRIMARY KEY (USER_SID, COMPANY_SID, GROUP_SID)
)
ON COMMIT DELETE ROWS;

CREATE SEQUENCE CHAIN.LINK_LOOKUP_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_SID_LINK_LOOKUP
(
	ID							NUMBER(10) NOT NULL,
	SID							NUMBER(10) NOT NULL
)
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_COMPANY_USER
(
	COMPANY_SID					NUMBER(10) NOT NULL,
	USER_SID					NUMBER(10) NOT NULL,
	CONSTRAINT PK_TT_COMPANY_USER PRIMARY KEY (COMPANY_SID, USER_SID)
)
ON COMMIT DELETE ROWS;

--used for various reference conflict checks
CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_REFERENCE_LABELS
(
	COMPANY_SID					NUMBER(10) 		NOT NULL,
	NAME						VARCHAR2(255)	NOT NULL,
	LOOKUP_KEY					VARCHAR2(255)	NOT NULL
)
ON COMMIT DELETE ROWS;

--used for generating file download zips
CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_FILE_UPLOAD
(
	FILE_UPLOAD_SID				NUMBER(10) 		NOT NULL,	
	COMPANY_SID					NUMBER(10) 		NOT NULL,
	FILENAME					VARCHAR2(255)	NOT NULL,
	FOLDER						VARCHAR2(255)	NOT NULL,
	LAST_MODIFIED_DTM			DATE	NOT NULL,
	FILE_SIZE					NUMBER(10) 		NOT NULL,
	CONSTRAINT PK_TT_FILE_UPLOADS PRIMARY KEY (FILE_UPLOAD_SID)
)
ON COMMIT DELETE ROWS; 

CREATE GLOBAL TEMPORARY TABLE "CHAIN"."TT_CUSTOMER_OPTIONS_PARAM" 
( 
	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"VALUE" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"DATA_TYPE" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"NULLABLE" NUMBER(1) NOT NULL ENABLE 
) 
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_QNR_SECURITY_ACTION
( 
	QUESTIONNAIRE_ID			NUMBER(10)  NOT NULL,
	QUESTIONNAIRE_TYPE_ID		NUMBER(10)  NOT NULL,
	COMPANY_FUNCTION_ID			NUMBER(10)  NOT NULL,
	COMPANY_SID					NUMBER(10)  NOT NULL,
	ACTION_SECURITY_TYPE_ID		NUMBER(10)  NOT NULL,
	QUESTIONNAIRE_ACTION_ID		NUMBER(10)  NOT NULL
)
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_QNR_SECURITY_ENTRY
( 
	QUESTIONNAIRE_ID			NUMBER(10)  NOT NULL,
	QUESTIONNAIRE_TYPE_ID		NUMBER(10)  NOT NULL,
	COMPANY_FUNCTION_ID			NUMBER(10)  NOT NULL,
	COMPANY_SID					NUMBER(10)  NOT NULL,
	ACTION_SECURITY_TYPE_ID		NUMBER(10)  NOT NULL,
	ID							NUMBER(10)  NOT NULL,
	DESCRIPTION					VARCHAR2(500) NOT NULL,
	POSITION					NUMBER(10)
) 
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_QNR_SECURITY_ENTRY_ACTION
( 
	QUESTIONNAIRE_ID			NUMBER(10)  NOT NULL,
	COMPANY_FUNCTION_ID			NUMBER(10)  NOT NULL,
	COMPANY_SID					NUMBER(10)  NOT NULL,
	ACTION_SECURITY_TYPE_ID		NUMBER(10)  NOT NULL,
	ID							NUMBER(10)  NOT NULL,
	QUESTIONNAIRE_ACTION_ID		NUMBER(10)  NOT NULL
) 
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_SCHED_ALERT_RECIP_LOOKUP
(
	ID							NUMBER(10) NOT NULL,
	SID							NUMBER(10) NOT NULL
)
ON COMMIT PRESERVE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_PRODUCT_RESULT_HELPER
( 
	PRODUCT_ID				NUMBER(10) NOT NULL,
	DESCRIPTION				VARCHAR(4000),
	CODE1					VARCHAR(4000),
	CODE2					VARCHAR(100),
	CODE3					VARCHAR(100),
	STATUS 					VARCHAR(100),
	POSITION				NUMBER(10)
) 
ON COMMIT PRESERVE ROWS; 


CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_FILTER_OBJECT_DATA
( 
	DATA_TYPE_ID				NUMBER(10)  NOT NULL,
	AGG_TYPE_ID					NUMBER(10)  NOT NULL,
	OBJECT_ID					NUMBER(10)  NOT NULL,
	FILTER_VALUE_ID				NUMBER(10),
	VAL_NUMBER					NUMBER(24, 10),
	CONSTRAINT UK_FILTER_OBJ_DATA UNIQUE (DATA_TYPE_ID, AGG_TYPE_ID, OBJECT_ID, FILTER_VALUE_ID)
) 
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_GROUP_BY_FIELD_VALUE (
	OBJECT_ID NUMBER(10),
	GROUP_BY_INDEX NUMBER(10),
	FILTER_VALUE_ID NUMBER(10),
	CONSTRAINT PK_GROUP_BY_FIELD_VALUE PRIMARY KEY (GROUP_BY_INDEX, OBJECT_ID, FILTER_VALUE_ID)
)ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_GROUP_BY_PIVOT (
	OBJECT_ID NUMBER(10),
	FILTER_VALUE_ID1 NUMBER(10),
	FILTER_VALUE_ID2 NUMBER(10),
	FILTER_VALUE_ID3 NUMBER(10),
	FILTER_VALUE_ID4 NUMBER(10)
) ON COMMIT DELETE ROWS;

CREATE INDEX CHAIN.IX_GROUP_BY_PIVOT ON CHAIN.TT_GROUP_BY_PIVOT (OBJECT_ID, FILTER_VALUE_ID1, FILTER_VALUE_ID2, FILTER_VALUE_ID3, FILTER_VALUE_ID4);

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_FILTER_VALUE_MAP (
	OLD_FILTER_VALUE_ID NUMBER(10),
	NEW_FILTER_VALUE_ID NUMBER(10)
) ON COMMIT DELETE ROWS;

-- 0 = chain.filter_pkg.NULL_FILTER_ALL
CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_FILTER_DATE_RANGE (
	FILTER_VALUE_ID NUMBER(10) NOT NULL,
	GROUP_BY_INDEX NUMBER(10),
	START_DTM DATE,
	END_DTM DATE,
	NULL_FILTER NUMBER(10) DEFAULT 0 NOT NULL
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_FILTER_IND_VAL (
	FILTER_PAGE_IND_INTERVAL_ID	NUMBER(10,0) NOT NULL,
	REGION_SID			NUMBER(10,0) NOT NULL,
	IND_SID				NUMBER(10,0) NOT NULL,
	PERIOD_START_DTM	DATE NOT NULL,
	PERIOD_END_DTM		DATE NOT NULL,
	VAL_NUMBER			NUMBER(24,10),
	ERROR_CODE			NUMBER(10,0),
	NOTE				CLOB
) ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_FILTER_ID (
	ID							NUMBER(10) NOT NULL
)
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_DEDUPE_PROCESSED_ROW(
	DEDUPE_PROCESSED_RECORD_ID	NUMBER(10, 0) NOT NULL,
	DEDUPE_STAGING_LINK_ID		NUMBER(10, 0) NOT NULL,
	REFERENCE					VARCHAR(512) NOT NULL,
	ITERATION_NUM				NUMBER(10, 0) NOT NULL,
	BATCH_NUM					NUMBER(10, 0) NULL,
	PROCESSED_DTM				DATE NOT NULL,
	MATCHED_TO_COMPANY_SID		NUMBER(10, 0),
	DEDUPE_ACTION_TYPE_ID		NUMBER(10, 0),
	MATCHED_DTM					DATE,
	MATCHED_BY_USER_SID			NUMBER(10, 0),
	MATCHED_TO_COMPANY_NAME		VARCHAR(512),
	IMPORT_SOURCE_NAME			VARCHAR(512) NOT NULL,
	CREATED_COMPANY_SID 		NUMBER(10, 0),
	CREATED_COMPANY_NAME		VARCHAR(512),
	DATA_MERGED					NUMBER(1,0),
	CMS_RECORD_ID 				NUMBER(10, 0),
	STAGING_LINK_DESCRIPTION 	VARCHAR(512),
	IMPORTED_USER_SID 			NUMBER(10),
	IMPORTED_USER_NAME 			VARCHAR2(256),
	MERGE_STATUS				NUMBER(10),
	ERROR_MESSAGE				VARCHAR2(4000),
	FORM_LOOKUP_KEY				VARCHAR2(255),
	DEDUPE_ACTION	 			NUMBER(1)
)
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_COLUMN_CONFIG(
	DEDUPE_MAPPING_ID			NUMBER(10),
	SOURCE_COLUMN				VARCHAR(30),
	SOURCE_COL_SID				NUMBER(10),
	SOURCE_COL_TYPE				NUMBER(10),
	SOURCE_DATA_TYPE			VARCHAR(64),
	DESTINATION_TABLE			VARCHAR(30),
	DESTINATION_TAB_SID			NUMBER(10),
	DESTINATION_COLUMN			VARCHAR(30),
	DESTINATION_COL_SID			NUMBER(10),
	DESTINATION_COL_TYPE		NUMBER(10),
	DESTINATION_DATA_TYPE		VARCHAR(64)
) 
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE CHAIN.TT_BSCI_SECTION 
( 
	section				VARCHAR2(1000) NOT NULL,
	SUB_SECTION			VARCHAR2(1000) NULL,
	SCORE				VARCHAR2(1000) NOT NULL
) 
ON COMMIT DELETE ROWS; 

CREATE GLOBAL TEMPORARY TABLE CHAIN.TEMP_GRID_EXTENSION_MAP
(
	SOURCE_ID			NUMBER(10, 0)	NOT NULL,
	LINKED_TYPE			NUMBER(10,0)	NOT NULL,
	LINKED_ID			NUMBER(10, 0)	NOT NULL
)
ON COMMIT DELETE ROWS;

CREATE GLOBAL TEMPORARY TABLE chain.tt_product (
	product_type_id				NUMBER(10) NOT NULL,
	product						VARCHAR2(255) NOT NULL,
	certification_type			VARCHAR2(255) NULL
) ON COMMIT DELETE ROWS;
