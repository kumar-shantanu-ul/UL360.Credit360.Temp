whenever oserror exit failure rollback
whenever sqlerror exit failure rollback

connect postcode/postcode@&_CONNECT_IDENTIFIER;

grant select, references on postcode.country to chain with grant option;

connect chain/chain@&_CONNECT_IDENTIFIER;

CREATE TABLE CARD_GROUP_PROGRESSION(
    APP_SID             NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    CARD_GROUP_ID       NUMBER(10, 0)    NOT NULL,
    FROM_CARD_ID        NUMBER(10, 0)    NOT NULL,
    FROM_CARD_ACTION    VARCHAR2(100)    NOT NULL,
    TO_CARD_ID          NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK211 PRIMARY KEY (APP_SID, CARD_GROUP_ID, FROM_CARD_ID, FROM_CARD_ACTION)
)
;

CREATE TABLE CARD_PROGRESSION_ACTION(
    CARD_ID    NUMBER(10, 0)    NOT NULL,
    ACTION     VARCHAR2(100)    NOT NULL,
    CONSTRAINT check_is_lower CHECK (action = lower(trim(action))),
    CONSTRAINT PK210 PRIMARY KEY (CARD_ID, ACTION)
)
;

ALTER TABLE CARD_GROUP_PROGRESSION ADD CONSTRAINT RefCARD_GROUP_CARD521 
    FOREIGN KEY (APP_SID, CARD_GROUP_ID, TO_CARD_ID)
    REFERENCES CARD_GROUP_CARD(APP_SID, CARD_GROUP_ID, CARD_ID)
;

ALTER TABLE CARD_GROUP_PROGRESSION ADD CONSTRAINT RefCARD_PROGRESSION_ACTION522 
    FOREIGN KEY (FROM_CARD_ID, FROM_CARD_ACTION)
    REFERENCES CARD_PROGRESSION_ACTION(CARD_ID, ACTION)
;

ALTER TABLE CARD_GROUP_PROGRESSION ADD CONSTRAINT RefCARD_GROUP_CARD523 
    FOREIGN KEY (APP_SID, CARD_GROUP_ID, FROM_CARD_ID)
    REFERENCES CARD_GROUP_CARD(APP_SID, CARD_GROUP_ID, CARD_ID)
;

ALTER TABLE CARD_PROGRESSION_ACTION ADD CONSTRAINT RefCARD524 
    FOREIGN KEY (CARD_ID)
    REFERENCES CARD(CARD_ID)
;

ALTER TABLE CARD_GROUP_CARD ADD (
	FORCE_TERMINATE            NUMBER(1, 0)     DEFAULT 0 NOT NULL
);

CREATE OR REPLACE TYPE T_CARD_ACTION_ROW AS 
  OBJECT ( 
	ON_ACTION			VARCHAR2(100),
	GO_TO_JS_CLASS		VARCHAR2(1000)
  );
/

CREATE OR REPLACE TYPE T_CARD_ACTION_LIST AS 
  TABLE OF T_CARD_ACTION_ROW;
/

ALTER TABLE COMPONENT_TYPE ADD (
        HANDLER_CLASS        VARCHAR2(255),
	    HANDLER_PKG          VARCHAR2(255),
	    NODE_JS_PATH         VARCHAR2(255)
);

ALTER TABLE CMPNT_CMPNT_RELATIONSHIP ADD (
	POSITION NUMBER(10)
);

CREATE GLOBAL TEMPORARY TABLE TT_PRODUCT_MAPPING_SEARCH
(
	COMPONENT_ID				NUMBER(10) NOT NULL,
	COMPONENT_DESCRIPTION		VARCHAR2(500),
	PRODUCT_ID					NUMBER(10) NOT NULL,
	PRODUCT_DESCRIPTION			VARCHAR2(500),
	MAPPED						NUMBER(1) NOT NULL,
	REJECTED					NUMBER(1) NOT NULL,
	CODE_LABEL1 				VARCHAR2(100),
	CODE1						VARCHAR2(100), 
	CODE_LABEL2					VARCHAR2(100), 
	CODE2						VARCHAR2(100),
	CODE_LABEL3					VARCHAR2(100), 
	CODE3						VARCHAR2(100),
	POSITION					NUMBER(10)
)
ON COMMIT PRESERVE ROWS;

ALTER TABLE COMPONENT ADD (
    COMPONENT_CODE       VARCHAR2(100)
);

BEGIN
	FOR r IN (
		SELECT card_id FROM card
	) LOOP
		BEGIN
			INSERT INTO card_progression_action
			(card_id, action)
			VALUES
			(r.card_id, 'default');
		EXCEPTION
			WHEN DUP_VAL_ON_INDEX THEN
				NULL;
		END;
	END LOOP;		
END;
/

CREATE TABLE COMPONENT_SOURCE(
    APP_SID               NUMBER(10, 0)     DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    COMPONENT_TYPE_ID     NUMBER(10, 0)     NOT NULL,
    PROGRESSION_ACTION    VARCHAR2(100)     NOT NULL,
    CARD_TEXT             VARCHAR2(2000)    NOT NULL,
    DESCRIPTION_XML       VARCHAR2(4000),
    POSITION              NUMBER(10, 0)     NOT NULL
)
;

ALTER TABLE COMPONENT_SOURCE ADD CONSTRAINT RefCOMPONENT_TYPE528 
    FOREIGN KEY (APP_SID, COMPONENT_TYPE_ID)
    REFERENCES COMPONENT_TYPE(APP_SID, COMPONENT_TYPE_ID)
;

CREATE TABLE COMPONENT_TYPE_CONTAINMENT(
    APP_SID                        NUMBER(10, 0)    DEFAULT SYS_CONTEXT('SECURITY', 'APP') NOT NULL,
    CONTAINER_COMPONENT_TYPE_ID    NUMBER(10, 0)    NOT NULL,
    CHILD_COMPONENT_TYPE_ID        NUMBER(10, 0)    NOT NULL,
    CONSTRAINT PK216 PRIMARY KEY (APP_SID, CONTAINER_COMPONENT_TYPE_ID, CHILD_COMPONENT_TYPE_ID)
)
;

ALTER TABLE COMPONENT_TYPE_CONTAINMENT ADD CONSTRAINT RefCOMPONENT_TYPE532 
    FOREIGN KEY (APP_SID, CHILD_COMPONENT_TYPE_ID)
    REFERENCES COMPONENT_TYPE(APP_SID, COMPONENT_TYPE_ID)
;

ALTER TABLE COMPONENT_TYPE_CONTAINMENT ADD CONSTRAINT RefCOMPONENT_TYPE533 
    FOREIGN KEY (APP_SID, CONTAINER_COMPONENT_TYPE_ID)
    REFERENCES COMPONENT_TYPE(APP_SID, COMPONENT_TYPE_ID)
;

ALTER TABLE COMPONENT_TYPE ADD (
	EDITOR_CARD_GROUP_ID    NUMBER(10, 0)
);
 
ALTER TABLE COMPONENT_TYPE ADD CONSTRAINT RefCARD_GROUP536 
    FOREIGN KEY (EDITOR_CARD_GROUP_ID)
    REFERENCES CARD_GROUP(CARD_GROUP_ID)
;

INSERT INTO card_group
(card_group_id, name, description, require_all_cards)
VALUES
(12, 'Product Builder', 'Used to build the component tree from the base component', 0);

INSERT INTO card_group
(card_group_id, name, description, require_all_cards)
VALUES
(13, 'Wood Source Wizard', 'Used by Rainforest Alliance to capture accreditation details for wood', 0);

INSERT INTO card_group
(card_group_id, name, description, require_all_cards)
VALUES
(14, 'Logical Component Wizard', 'Used to build a single logical component', 0);

INSERT INTO card_group
(card_group_id, name, description, require_all_cards)
VALUES
(15, 'Purchased Component Wizard', 'Used to build a single logical component', 0);
